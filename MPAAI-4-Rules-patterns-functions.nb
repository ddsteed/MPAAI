(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[   1311118,      33542]
NotebookOptionsPosition[   1042113,      28159]
NotebookOutlinePosition[   1046858,      28288]
CellTagsIndexPosition[   1046176,      28262]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox["Leonid Shifrin",
  FontFamily->"FZLanTingHei-DB-GBK",
  FontSize->12,
  FontWeight->"Regular",
  FontColor->RGBColor[
   0.8488288700694285, 0.3848325322346838, 0.1479972533760586]],
 StyleBox["\[LineSeparator]",
  FontSize->12,
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["\n",
  FontSize->12,
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["Mathematica programming: an advanced introduction                  \
           ",
  FontFamily->"Arial Unicode MS",
  FontSize->17.5,
  FontWeight->"Regular",
  FontColor->RGBColor[
   0.9866483558403907, 0.9388876173037308, 0.6336003662165255]],
 StyleBox[ButtonBox["<",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-3-Lists.nb", CharacterEncoding -> "UTF-8"], 
    None},
  ButtonNote->"/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-3-Lists.nb"],
  FontFamily->"Arial Unicode MS",
  FontSize->17.5,
  FontWeight->"Regular",
  FontColor->RGBColor[
   0.9866483558403907, 0.9388876173037308, 0.6336003662165255]],
 StyleBox[" ",
  FontFamily->"Arial Unicode MS",
  FontSize->17.5,
  FontWeight->"Regular",
  FontColor->RGBColor[
   0.9866483558403907, 0.9388876173037308, 0.6336003662165255]],
 StyleBox[ButtonBox[">",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{"."}, "MPAAI-5-Functions-on-lists.nb", 
     CharacterEncoding -> "UTF-8"], None},
  ButtonNote->"./MPAAI-5-Functions-on-lists.nb"],
  FontFamily->"Arial Unicode MS",
  FontSize->17.5,
  FontWeight->"Regular",
  FontColor->RGBColor[
   0.9866483558403907, 0.9388876173037308, 0.6336003662165255]],
 StyleBox["    ",
  FontFamily->"Arial Unicode MS",
  FontSize->17.5,
  FontWeight->"Regular",
  FontColor->RGBColor[
   0.9866483558403907, 0.9388876173037308, 0.6336003662165255]],
 StyleBox[ButtonBox["\[CapitalXi]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "contents.nb", CharacterEncoding -> "UTF-8"], None},
  
  ButtonNote->"/Users/fengh/Documents/RDS/EDITED/MPAAI/contents.nb"],
  FontFamily->"Arial Unicode MS",
  FontSize->17.5,
  FontWeight->"Regular",
  FontColor->RGBColor[
   0.9866483558403907, 0.9388876173037308, 0.6336003662165255]],
 StyleBox["\[LineSeparator]\[LineSeparator]",
  FontSize->12,
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["Edited by Hao Feng",
  FontFamily->"Futura",
  FontSize->12,
  FontWeight->"Medium",
  FontSlant->"Italic",
  FontColor->RGBColor[
   0.8488288700694285, 0.3848325322346838, 0.1479972533760586]]
}], "Text",
 CellMargins->{{66, -45}, {4, 12}},
 CellChangeTimes->{{3.9397640484222183`*^9, 3.939764052679113*^9}, 
   3.9397641564677134`*^9, 3.939764214184162*^9, {3.939774845841297*^9, 
   3.9397748486786137`*^9}, 3.9397769383984737`*^9, 3.939777524212697*^9, {
   3.939777679887363*^9, 3.9397776986053457`*^9}, 3.939777748637487*^9, 
   3.939777854556375*^9, {3.939778004745451*^9, 3.939778004752576*^9}, {
   3.939778088573533*^9, 3.9397780885805683`*^9}, {3.939778770540833*^9, 
   3.939778770547792*^9}, {3.939778812983697*^9, 3.939778812991013*^9}, {
   3.939784062731017*^9, 3.939784071968027*^9}, 3.939947092367667*^9, 
   3.939948554140592*^9, 3.9400176814916286`*^9, {3.9403030181350803`*^9, 
   3.9403030467631407`*^9}, {3.940303284153158*^9, 3.940303284161087*^9}, {
   3.940741272491625*^9, 3.940741286837905*^9}, 3.9407413605879097`*^9},
 LineSpacing->{0.6999999999999997, 3},
 Background->RGBColor[
  0.13066300450141147`, 0.12460517280842298`, 0.4353551537346456],
 CellID->912160115,ExpressionUUID->"64288676-95ba-4280-aaf9-09f63422eff0"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 StyleBox[" | ", "SectionBar"],
 "Rules, patters and functions"
}], "Section",
 CellChangeTimes->{
  3.652728456208679*^9, 3.652728527108994*^9, {3.939778509509762*^9, 
   3.9397785210312233`*^9}},
 CounterAssignments->{{"Section", 3}},
 CellID->190225811,ExpressionUUID->"ab1e0e41-9b8d-48e3-9e22-95ddddf79b73"],

Cell[CellGroupData[{

Cell["Introduction", "Subsection",
 CellChangeTimes->{3.939844627865171*^9},
 CellID->613245002,ExpressionUUID->"cd559798-99c6-4816-9623-4454de32afeb"],

Cell[TextData[{
 "In this chapter we will introduce the notion of functions in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", and also consider numerous examples of functions. Since the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " programming language is to a large extent a functional programming \
language, functions are the central objects here. Also, since lists are used \
as universal building blocks for data structures, and any complex data \
structure can be built with lists and modified \[OpenCurlyDoubleQuote]on the \
fly\[CloseCurlyDoubleQuote], the emphasis is shifted more towards functions, \
as compared say to OO  programming languages."
}], "Text",
 CellChangeTimes->{{3.939844635846973*^9, 3.9398446597128077`*^9}},
 CellID->1034726661,ExpressionUUID->"bd9910e4-ac85-46fa-83fc-231aab57c2d3"],

Cell[TextData[{
 "Another important aspect of functions and functional programming in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is that this \[OpenCurlyDoubleQuote]layer\[CloseCurlyDoubleQuote] of \
programming is built upon a (in my view, more fundamental in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ") rule-based engine. This results in the notion of function which is wider \
than, and also significantly different from that in most other programming \
languages. Thus, one will not have a complete grasp of functions in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " without the understanding of rules and rule-based programming techniques. \
We will discuss them here as well."
}], "Text",
 CellChangeTimes->{{3.939844667038677*^9, 3.939844686479781*^9}},
 CellID->1623209971,ExpressionUUID->"60eb83ac-8927-423a-9d60-35c1ea1a41df"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rules and patterns", "Subsection",
 CellChangeTimes->{3.939844692508231*^9},
 CellID->260322594,ExpressionUUID->"257fd94d-9b99-490d-949c-a17523e36c35"],

Cell[TextData[{
 "To better understand functions in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", we need a good understanding of patterns and rule substitution. These two \
topics are just two facets of a single one, since it is the form of the \
pattern which determines when (on which class of objects) the associated rule \
will apply."
}], "Text",
 CellChangeTimes->{{3.9398446985398417`*^9, 3.939844706010521*^9}},
 CellID->817648419,ExpressionUUID->"999380dc-ac25-4e97-9c50-4a67e50de65f"],

Cell[CellGroupData[{

Cell["Rule, RuleDelayed, Replace and ReplaceAll", "Subsubsection",
 CellChangeTimes->{
  3.939844713777505*^9, {3.9405437315372*^9, 3.9405437330797787`*^9}},
 CellID->469120980,ExpressionUUID->"9d0a99ef-df5a-433a-8673-b893c38c619e"],

Cell["Basic rules and the Rule head (function)", "ItemNumbered",
 CellChangeTimes->{3.939844722614626*^9},
 CellID->1103842723,ExpressionUUID->"d7026aa1-bab4-408a-b342-3e44b6ef1315"],

Cell[TextData[{
 "It is very easy to organize a rewrite rule in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". For example, the following rule will replace a to b"
}], "Text",
 CellChangeTimes->{3.939844731389267*^9},
 CellID->173419028,ExpressionUUID->"0945d691-df00-4b20-bdb0-29b6f51bfc6f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b", ",", "ourrule"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ourrule", "=", 
  RowBox[{"a", "->", "b"}]}]}], "Input",
 CellChangeTimes->{{3.939844732951688*^9, 3.939844740933275*^9}},
 CellLabel->"In[401]:=",
 CellID->783955687,ExpressionUUID->"8a63e485-0665-416c-97e8-4794fca069af"],

Cell[BoxData[
 RowBox[{"a", "\[Rule]", "b"}]], "Output",
 CellChangeTimes->{3.939844741617275*^9},
 CellLabel->"Out[402]=",
 CellID->365669455,ExpressionUUID->"7bea6169-6335-4bd2-aa04-ced1e9c0ccb4"]
}, Open  ]],

Cell["\<\
The literal equivalent to the arrow (which represents the rule) is the Rule \
command. If we look at the FullForm of <ourrule> variable, we see that Rule \
is used:\
\>", "Text",
 CellChangeTimes->{{3.9398447492244587`*^9, 3.939844752513557*^9}, 
   3.939931387744967*^9, 3.939947092392503*^9, 3.940017717254451*^9},
 CellID->1855816118,ExpressionUUID->"f19d24d3-3ca4-4e20-8acb-0ccdfb5ec82e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", "ourrule", "]"}]], "Input",
 CellChangeTimes->{{3.939844759459588*^9, 3.93984476310667*^9}},
 CellLabel->"In[403]:=",
 CellID->1666717469,ExpressionUUID->"d0c9c555-8bf6-47a3-bf3a-50616f724105"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Rule", "[", 
    RowBox[{"a", ",", "b"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.939844764002842*^9},
 CellLabel->"Out[403]//FullForm=",
 CellID->1212024352,ExpressionUUID->"c6927fe5-f9b9-4756-bb68-3f2fd6370cfe"]
}, Open  ]],

Cell["How to make the rule apply: ReplaceAll function", "ItemNumbered",
 CellChangeTimes->{3.9398447803962917`*^9},
 CellID->1610892269,ExpressionUUID->"3a2cd8ed-7edc-4367-b19e-15c7fd484782"],

Cell[TextData[{
 "By itself, any rule that we define does not do anything useful. The command \
Rule by itself is just a named container of the left and right hand sides of \
the rule. It becomes useful when combined with another command, which \
actually performs the rule substitution in an expression. This command has a \
format ReplaceAll[expr, rules], and a shorthand notation: <expr/.rules>. \
There can be more than one rule being applied, in which case they should \
normally be placed into a simple (not nested) list - we will see such \
examples later. If the rules are placed in a nested list, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " interprets them differently - see ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Help for details, and also below."
}], "Text",
 CellChangeTimes->{{3.9398447871457663`*^9, 3.9398448122131243`*^9}, 
   3.940740643781074*^9},
 CellID->940027354,ExpressionUUID->"ee843cab-2a29-4092-89ee-f211ab8c6a62"],

Cell["\<\
This is, for instance, how our rule will work on some test expression:\
\>", "Text",
 CellChangeTimes->{3.939845932934883*^9, 3.939931387768322*^9},
 CellID->1845373151,ExpressionUUID->"24b1dde5-6de5-4d06-88ae-1460266bd00b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "a", ",", "b"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "a", "]"}], "/.", "ourrule"}]}], "Input",
 CellChangeTimes->{{3.939845938329541*^9, 3.939845945998619*^9}},
 CellLabel->"In[404]:=",
 CellID->1248386205,ExpressionUUID->"f354e459-3670-4c44-a8c8-de0686f71768"],

Cell[BoxData[
 RowBox[{"f", "[", "b", "]"}]], "Output",
 CellChangeTimes->{3.9398459463150043`*^9},
 CellLabel->"Out[405]=",
 CellID->1953383652,ExpressionUUID->"d5e264bf-0947-401d-b267-4065417b0b1e"]
}, Open  ]],

Cell["or, which is the same,", "Text",
 CellChangeTimes->{{3.9398459493380632`*^9, 3.939845952233262*^9}},
 CellID->1936527475,ExpressionUUID->"064aa654-492e-4838-b298-ee2ff80886fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "a", "]"}], "/.", 
  RowBox[{"a", "->", "b"}]}]], "Input",
 CellChangeTimes->{{3.939845953641382*^9, 3.939845956236356*^9}},
 CellLabel->"In[406]:=",
 CellID->1965422758,ExpressionUUID->"9196156d-ca5e-4694-ba28-b7174917e486"],

Cell[BoxData[
 RowBox[{"f", "[", "b", "]"}]], "Output",
 CellChangeTimes->{3.939845957042438*^9},
 CellLabel->"Out[406]=",
 CellID->804685652,ExpressionUUID->"449f638a-ab55-480c-9e5c-bd2af34e5780"]
}, Open  ]],

Cell["\<\
If we have a more complicated expression, where <a> happens places (when we \
use /., or ReplaceAll command):\
\>", "Text",
 CellChangeTimes->{3.939845965578134*^9, 3.939947092416609*^9, 
  3.9400177039756603`*^9},
 CellID->1647228005,ExpressionUUID->"65cca574-082e-4c6b-9512-af0f3cf04944"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "g", ",", "h"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"a", ",", 
    RowBox[{"g", "[", 
     RowBox[{"a", ",", 
      RowBox[{"h", "[", "a", "]"}]}], "]"}]}], "]"}], "/.", 
  RowBox[{"a", "->", "b"}]}]}], "Input",
 CellChangeTimes->{{3.939845977630093*^9, 3.939845986268897*^9}},
 CellLabel->"In[407]:=",
 CellID->741269229,ExpressionUUID->"b5b360bc-74c5-4d44-b73d-7026b1e5eac1"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"b", ",", 
   RowBox[{"g", "[", 
    RowBox[{"b", ",", 
     RowBox[{"h", "[", "b", "]"}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.93984598666951*^9},
 CellLabel->"Out[408]=",
 CellID->885914829,ExpressionUUID->"6365770b-f68a-42bd-8aa6-b9168172d846"]
}, Open  ]],

Cell["\<\
The order in which ReplaceAll tries rules on parts of expressions\
\>", "ItemNumbered",
 CellChangeTimes->{3.9398462330917997`*^9},
 CellID->1066406352,ExpressionUUID->"1720e2d7-071d-4d51-8fc6-782f828c2d02"],

Cell["\<\
Although this is not immediately obvious, often the rule application starts \
from the larger expression, and if it matches as a whole, then the \
subexpressions are not checked for further matches. This is so when the \
pattern (see discussion on patterns below) looks like h[x_] or similar. For \
example, in this case:\
\>", "Text",
 CellChangeTimes->{{3.939846244116638*^9, 3.939846255474474*^9}},
 CellID->193040202,ExpressionUUID->"d5f2001f-2d29-44e9-811b-d51bf55e5efe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "q"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"{", "a", "}"}], "}"}], "}"}], "/.", 
  RowBox[{
   RowBox[{"{", "x_", "}"}], ":>", 
   RowBox[{"q", "[", "x", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.939846258780306*^9, 3.939846271677849*^9}},
 CellLabel->"In[409]:=",
 CellID->244446558,ExpressionUUID->"854d4e8a-daa5-4b38-9271-bf20c8e01378"],

Cell[BoxData[
 RowBox[{"q", "[", 
  RowBox[{"{", 
   RowBox[{"{", "a", "}"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.9398462721856413`*^9},
 CellLabel->"Out[410]=",
 CellID->1229409285,ExpressionUUID->"bc109720-b275-4707-92fc-36ed154b6383"]
}, Open  ]],

Cell["\<\
we will need to apply the rule several times to replace all the list braces \
with <q> - s:\
\>", "Text",
 CellChangeTimes->{3.93984628821387*^9, 3.9399313877901087`*^9},
 CellID->1741685208,ExpressionUUID->"0f43708d-6791-4394-82ba-db255ecab17f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"{", "a", "}"}], "}"}], "}"}], "/.", 
   RowBox[{
    RowBox[{"{", "x_", "}"}], ":>", 
    RowBox[{"q", "[", "x", "]"}]}]}], "/.", 
  RowBox[{
   RowBox[{"{", "x_", "}"}], ":>", 
   RowBox[{"q", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.939846298481818*^9, 3.9398463105521307`*^9}},
 CellLabel->"In[411]:=",
 CellID->1617406220,ExpressionUUID->"afd5bf82-9625-450b-9b2e-913f2d840cd1"],

Cell[BoxData[
 RowBox[{"q", "[", 
  RowBox[{"q", "[", 
   RowBox[{"{", "a", "}"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{3.939846311059165*^9},
 CellLabel->"Out[411]=",
 CellID->402335347,ExpressionUUID->"7c58c3ca-a8bd-4ccd-aeaa-cca7dca9cd8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"{", "a", "}"}], "}"}], "}"}], "/.", 
    RowBox[{
     RowBox[{"{", "x_", "}"}], ":>", 
     RowBox[{"q", "[", "x", "]"}]}]}], "/.", 
   RowBox[{
    RowBox[{"{", "x_", "}"}], ":>", 
    RowBox[{"q", "[", "x", "]"}]}]}], "/.", 
  RowBox[{
   RowBox[{"{", "x_", "}"}], ":>", 
   RowBox[{"q", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.939846320242367*^9, 3.9398463243110933`*^9}},
 CellLabel->"In[412]:=",
 CellID->1771656273,ExpressionUUID->"77857337-afc3-4fed-8915-dfd06e2c41c3"],

Cell[BoxData[
 RowBox[{"q", "[", 
  RowBox[{"q", "[", 
   RowBox[{"q", "[", "a", "]"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{3.939846324641869*^9},
 CellLabel->"Out[412]=",
 CellID->861387633,ExpressionUUID->"e2775010-a068-40e7-a851-42b5a1599aba"]
}, Open  ]],

Cell["\<\
But not in this case - here the pattern is just a symbol List:\
\>", "Text",
 CellChangeTimes->{3.9398463367599163`*^9, 3.939931387811536*^9},
 CellID->1154683404,ExpressionUUID->"18d176dd-8b2e-4015-8b9b-3f366f0799eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"{", "a", "}"}], "}"}], "}"}], "/.", 
  RowBox[{"List", "->", "q"}]}]], "Input",
 CellChangeTimes->{{3.939846344473418*^9, 3.9398463477447577`*^9}},
 CellLabel->"In[413]:=",
 CellID->1100967017,ExpressionUUID->"8266c11f-119b-4d55-bfb6-1d49f69a6927"],

Cell[BoxData[
 RowBox[{"q", "[", 
  RowBox[{"q", "[", 
   RowBox[{"q", "[", "a", "]"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{3.939846348084158*^9},
 CellLabel->"Out[413]=",
 CellID->2014661462,ExpressionUUID->"bae07d91-c2ba-4bf3-98c9-aa8335e0942f"]
}, Open  ]],

Cell["\<\
This behavior is rather logical, but in cases when a different order of rule \
substitution is desired, techniques are available to change it. We will \
discuss them later (see section 5.2.4.2).\
\>", "Text",
 CellChangeTimes->{{3.9398463566127157`*^9, 3.9398463664760303`*^9}},
 CellID->1040529585,ExpressionUUID->"04822d15-2dc9-4651-856c-a62c6ab8aef3"],

Cell["Associativity of rules", "ItemNumbered",
 CellChangeTimes->{3.9398463758006277`*^9},
 CellID->924495873,ExpressionUUID->"305902d1-8cb8-4527-ae6a-ee600bc3b71f"],

Cell["\<\
As the previous example may have suggested, the application of rules is \
left-associative, meaning that in the expression <expr /. rule1 /. rule2> is \
legitimate, and first the rule (or rules if this is a list of rules, see \
below) <rule1> will be applied to <expr>, and then the rule (s) <rule2> will \
be applied to the result.\
\>", "Text",
 CellChangeTimes->{{3.939846383213669*^9, 3.9398464010338573`*^9}, {
  3.939947092440529*^9, 3.939947092508816*^9}, {3.940017703999957*^9, 
  3.940017704057273*^9}},
 CellID->957951466,ExpressionUUID->"c21759d6-44c3-4294-92eb-25dadbbb6bed"],

Cell["Locality of rules", "ItemNumbered",
 CellChangeTimes->{3.9398464212799273`*^9},
 CellID->1989216831,ExpressionUUID->"8c839261-241e-4e99-a2e0-59f913bc7c20"],

Cell["\<\
It is very important that the rules like the one above are local. This means \
that when the rule rewrites an object to which it applies into something \
else, it changes the copy of it, while the initial object remains unchanged. \
In particular, in the above example, an expression f[a] taken separately, did \
not change:\
\>", "Text",
 CellChangeTimes->{{3.939846571040082*^9, 3.939846579776998*^9}, 
   3.93993138783298*^9},
 CellID->2066943831,ExpressionUUID->"fa97e36f-3ad7-4d6a-855e-d10edd1813df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.9398465836062927`*^9, 3.9398465838442783`*^9}},
 CellLabel->"In[414]:=",
 CellID->905434699,ExpressionUUID->"46b1c630-1df4-4e79-a207-96f3d5299870"],

Cell[BoxData[
 RowBox[{"f", "[", "a", "]"}]], "Output",
 CellChangeTimes->{3.9398465843373938`*^9},
 CellLabel->"Out[414]=",
 CellID->2075026260,ExpressionUUID->"40deb34a-9378-4bad-99d5-7949f5233ac6"]
}, Open  ]],

Cell[TextData[{
 "This is the main difference between the rule and the function which \
performs a similar transformation - in the latter case a similar rule is \
defined globally (which means that it will be automatically tried by the \
kernel on any expression entered interactively or being otherwise evaluated). \
Essentially, this is the only fundamental difference between functions and \
lists of rules in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". For example, we can easily simulate the squaring function by a local rule:"
}], "Text",
 CellChangeTimes->{{3.939846596843202*^9, 3.939846615158173*^9}},
 CellID->1979408187,ExpressionUUID->"3207b285-7e97-4f4f-8b28-ba5fbfd7f1a1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"f", "[", "y", "]"}], ",", 
    RowBox[{"f", "[", "elephant", "]"}], ",", 
    RowBox[{"f", "[", "3", "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"f", "[", "z_", "]"}], ":>", 
   SuperscriptBox["z", "2"]}]}]}], "Input",
 CellChangeTimes->{{3.93984662454125*^9, 3.939846641214321*^9}},
 CellLabel->"In[415]:=",
 CellID->1964810583,ExpressionUUID->"2c74769c-aa03-4479-9a65-5cf306900adf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   SuperscriptBox["y", "2"], ",", 
   SuperscriptBox["elephant", "2"], ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.9398466419936028`*^9},
 CellLabel->"Out[416]=",
 CellID->995969878,ExpressionUUID->"fb1f63c2-745c-4a6a-b803-fb07550074c4"]
}, Open  ]],

Cell["Delayed rules - the RuleDelayed function", "ItemNumbered",
 CellChangeTimes->{3.939846651595203*^9},
 CellID->1778194828,ExpressionUUID->"1568178b-d732-4141-b802-6785d9ab0b65"],

Cell["\<\
I used this example to introduce two new ideas. First, we now have patterns \
on the left hand side of the rule - they are used to widen the class of \
objects to which the rule will apply. Second, we have used a new kind of rule \
(there are only two, and one we already considered before) - the one which \
uses the:> (colon - greater) sign instead of -> one. The literal equivalent \
of this is RuleDelayed[lhs,rhs] command:\
\>", "Text",
 CellChangeTimes->{{3.939846660045293*^9, 3.939846676362338*^9}, 
   3.939931387854114*^9},
 CellID->1738042544,ExpressionUUID->"7ee9e121-dbd2-4f17-9ca5-6a218d103118"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RuleDelayed", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.939846701929596*^9, 3.939846704365279*^9}},
 CellLabel->"In[417]:=",
 CellID->510766461,ExpressionUUID->"212cf736-c82f-4d5b-a3d6-0a3bc85f015b"],

Cell[BoxData[
 RowBox[{"a", "\[RuleDelayed]", "b"}]], "Output",
 CellChangeTimes->{3.939846704757451*^9},
 CellLabel->"Out[417]=",
 CellID->302401712,ExpressionUUID->"7dcabb77-6c79-4d64-941d-d25fd4d4a5b2"]
}, Open  ]],

Cell[TextData[{
 "As we can guess by the name, this corresponds to a delayed rule \
substitution - that is, the r.h.s. of the rule is evaluated only after the \
rule substitution takes place. Later we will consider cases where Rule or \
RuleDelayed are more appropriate, in more detail, but in general the \
situation here is similar with the one with Set and SetDelayed assignment \
operators. This similarity is not accidental, but once again reflects the \
fact the assignment operators in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " are just operators which create global rules."
}], "Text",
 CellChangeTimes->{{3.939846776424807*^9, 3.9398467966452723`*^9}},
 CellID->1519264782,ExpressionUUID->"7d00578a-6c39-4090-988d-00d82381487f"],

Cell["The difference between Rule and RuleDelayed", "ItemNumbered",
 CellChangeTimes->{3.9398468420210342`*^9},
 CellID->1483804732,ExpressionUUID->"be79d5e2-efb1-4c0d-bfa6-3b731f3bf97e"],

Cell["\<\
To illustrate a difference between Rule and RuleDelayed on one particular \
example, consider a model problem: given a list of elements, substitute every \
occurrence of the symbol <a> by a random number. Here is our sample list\
\>", "Text",
 CellChangeTimes->{{3.939846847599435*^9, 3.939846852433029*^9}, 
   3.939931387876123*^9, 3.939947092532569*^9, 3.9400177040755587`*^9},
 CellID->1726021760,ExpressionUUID->"3ab97639-c7a2-4bb6-8ffe-166e562db291"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "sample", ",", "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", 
    "g", ",", "h"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sample", "=", 
  RowBox[{"{", 
   RowBox[{
   "d", ",", "e", ",", "a", ",", "c", ",", "a", ",", "b", ",", "f", ",", "a", 
    ",", "a", ",", "e", ",", "g", ",", "a"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.93984685549821*^9, 3.939846871395896*^9}},
 CellLabel->"In[418]:=",
 CellID->331095680,ExpressionUUID->"00426472-004b-4c37-b22c-833a3d4b89a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "d", ",", "e", ",", "a", ",", "c", ",", "a", ",", "b", ",", "f", ",", "a", 
   ",", "a", ",", "e", ",", "g", ",", "a"}], "}"}]], "Output",
 CellChangeTimes->{3.939846872592392*^9},
 CellLabel->"Out[419]=",
 CellID->425089268,ExpressionUUID->"0e7dcfc3-3b16-4b59-9812-4dc043b03338"]
}, Open  ]],

Cell["Now, here is the rule-based solution using Rule:", "Text",
 CellChangeTimes->{{3.939846879124381*^9, 3.939846900361022*^9}, 
   3.939931387897706*^9},
 CellID->1944717354,ExpressionUUID->"e84a9e5f-fd65-46a2-85f0-cb64ca9a5f9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sample", "/.", 
  RowBox[{"a", "->", 
   RowBox[{"Random", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.93984690269829*^9, 3.939846907034924*^9}},
 CellLabel->"In[420]:=",
 CellID->1009224625,ExpressionUUID->"266b35ad-ba59-4fa5-b616-fc8c3136008f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "d", ",", "e", ",", "0.24532184004816618`", ",", "c", ",", 
   "0.24532184004816618`", ",", "b", ",", "f", ",", "0.24532184004816618`", 
   ",", "0.24532184004816618`", ",", "e", ",", "g", ",", 
   "0.24532184004816618`"}], "}"}]], "Output",
 CellChangeTimes->{3.939846907358163*^9},
 CellLabel->"Out[420]=",
 CellID->833145771,ExpressionUUID->"f679fb68-bbeb-421a-8ef1-74edde0e61bd"]
}, Open  ]],

Cell["And here is the same using RuleDelayed:", "Text",
 CellChangeTimes->{3.939846921790258*^9, 3.9399313879192457`*^9},
 CellID->1087594757,ExpressionUUID->"a93c01b1-ec58-4338-a7dd-93954eba8249"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sample", "/.", 
  RowBox[{"a", ":>", 
   RowBox[{"Random", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9398469243484783`*^9, 3.939846930553425*^9}},
 CellLabel->"In[421]:=",
 CellID->1571709717,ExpressionUUID->"d5880860-db86-435c-9f04-823c0a96d725"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "d", ",", "e", ",", "0.9178762358245655`", ",", "c", ",", 
   "0.9584185695126587`", ",", "b", ",", "f", ",", "0.1423850612205608`", ",",
    "0.16345112201704176`", ",", "e", ",", "g", ",", "0.32627601326122774`"}],
   "}"}]], "Output",
 CellChangeTimes->{3.939846931057472*^9},
 CellLabel->"Out[421]=",
 CellID->915900519,ExpressionUUID->"3ea8a512-5f12-48fb-8cf3-dadbf4ecd055"]
}, Open  ]],

Cell["\<\
We see that the numbers are the same in the first case and different in the \
second. This is because, in the first case, the r.h.s. of the rule has been \
evaluated before it was applied, once and for all. In the second case, the \
r.h.s. of the rule was re-evaluated every time the rule was applied. As a \
variation on the theme, suppose we want to substitute each <a> in the list by \
a list {a,num}, where <num> will be counting the
occurrences of <a> in the list. Here is our attempt with Rule:\
\>", "Text",
 CellChangeTimes->{{3.939846950099381*^9, 3.939846967169186*^9}},
 CellID->541170187,ExpressionUUID->"c8997912-3b02-47f9-b0f0-7fd6b494e179"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sample", "/.", 
  RowBox[{"a", "->", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"n", "++"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.9398469711784678`*^9, 3.93984698247134*^9}},
 CellLabel->"In[422]:=",
 CellID->1069053895,ExpressionUUID->"92acb975-7519-453b-acc2-760d4673375e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"d", ",", "e", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1"}], "}"}], ",", "c", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1"}], "}"}], ",", "b", ",", "f", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1"}], "}"}], ",", "e", ",", "g", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939846982824767*^9},
 CellLabel->"Out[423]=",
 CellID->544282384,ExpressionUUID->"e5cb0716-8ba2-4a81-9728-66c1e65da083"]
}, Open  ]],

Cell["\<\
Obviously this did not work as intended. And now with RuleDelayed:\
\>", "Text",
 CellChangeTimes->{3.939846992472949*^9, 3.939931387940638*^9},
 CellID->1621175315,ExpressionUUID->"bfc6ca09-8b99-4a5a-96fb-fc36a837189b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sample", "/.", 
  RowBox[{"a", ":>", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"n", "++"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.939847001970133*^9, 3.93984700967857*^9}},
 CellLabel->"In[424]:=",
 CellID->273591130,ExpressionUUID->"9b6f13f7-9294-41d5-8eaf-fc3016bc3e4f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"d", ",", "e", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1"}], "}"}], ",", "c", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2"}], "}"}], ",", "b", ",", "f", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "4"}], "}"}], ",", "e", ",", "g", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939847009891889*^9},
 CellLabel->"Out[425]=",
 CellID->1237461622,ExpressionUUID->"d14874c8-2964-480c-b01b-8ef54449eb11"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"sample", ",", "n"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.939847013130015*^9, 3.9398470169265347`*^9}},
 CellLabel->"In[426]:=",
 CellID->1624618637,ExpressionUUID->"e82393e4-58a3-4928-a9d8-d8ef935f6bb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rule substitution is not commutative", "Subsubsection",
 CellChangeTimes->{3.939847023550803*^9},
 CellTags->"4.2.2",
 CellID->1695924821,ExpressionUUID->"95d18353-1193-4fb7-aab0-865ccb031450"],

Cell["Lists of rules", "ItemNumbered",
 CellChangeTimes->{3.939847031433391*^9},
 CellID->2005503563,ExpressionUUID->"2c773615-30f4-4286-955f-d4c12b37bdf2"],

Cell["\<\
When we have more than just one rule to be tried on an expression, we place \
the rules in a list. For example:\
\>", "Text",
 CellChangeTimes->{{3.939847038266282*^9, 3.939847042692503*^9}},
 CellID->1742543676,ExpressionUUID->"dd12b4c4-d7fa-4465-87a1-45e761fd8421"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "->", "1"}], ",", 
    RowBox[{"b", "->", "2"}], ",", 
    RowBox[{"d", "->", "4"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9398470455132847`*^9, 3.939847053495655*^9}},
 CellLabel->"In[427]:=",
 CellID->1889296566,ExpressionUUID->"cbfa7006-8840-4be2-affa-ff8c51bab3a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "c", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.9398470538579817`*^9},
 CellLabel->"Out[427]=",
 CellID->501083776,ExpressionUUID->"0b0f0b3d-797b-4dbe-ae22-287c3828c295"]
}, Open  ]],

Cell["\<\
For all the rules to be tried on an expression, the list of rules has to be a \
flat list, that is, all the list elements should have a head Rule or \
RuleDelayed. Supplying a nested list of rules to Replace or ReplaceAll is not \
an error, but is interpreted as if we want to try all the sublists of rules \
separately on several copies of our original expression:\
\>", "Text",
 CellChangeTimes->{{3.939847060798135*^9, 3.9398470771499653`*^9}},
 CellID->110763387,ExpressionUUID->"dd036a86-9947-420e-874c-8257427726ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "->", "1"}], ",", 
      RowBox[{"b", "->", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "->", "3"}], ",", 
      RowBox[{"d", "->", "4"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.939847085102775*^9, 3.93984710022132*^9}},
 CellLabel->"In[428]:=",
 CellID->198563597,ExpressionUUID->"c651149d-8fa0-49cf-a2d1-7e15de50926a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "c", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939847102043469*^9},
 CellLabel->"Out[428]=",
 CellID->1773625814,ExpressionUUID->"afb96748-63df-4363-8310-d40f5aa1e71f"]
}, Open  ]],

Cell[TextData[{
 "As a side note, there is nothing special about lists of rules with respect \
to lists of other ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " objects:"
}], "Text",
 CellChangeTimes->{{3.939847257302997*^9, 3.939847261980586*^9}},
 CellID->108551891,ExpressionUUID->"0494c20f-b64e-4a06-b877-6b24cd04b570"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "->", "5"}], ",", 
    RowBox[{"a", "->", "6"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.939847270397315*^9, 3.9398472805797873`*^9}},
 CellLabel->"In[429]:=",
 CellID->1232516301,ExpressionUUID->"8f2d8cab-0eeb-4af9-b6bd-a9315d53e00f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"Rule", "[", 
      RowBox[{"a", ",", "5"}], "]"}], ",", 
     RowBox[{"Rule", "[", 
      RowBox[{"a", ",", "6"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.939847281114053*^9},
 CellLabel->"Out[429]//FullForm=",
 CellID->1226501675,ExpressionUUID->"41ea17f6-9acf-4957-a34f-7c4da9374812"]
}, Open  ]],

Cell["Non-commutativity", "ItemNumbered",
 CellChangeTimes->{3.9398472891125317`*^9},
 CellID->1260142100,ExpressionUUID->"21aac87b-b40a-4ba0-9a20-d0d927436d01"],

Cell["\<\
The result of the rule substitution depends in general on the order in which \
the rules are stored in the list, as the following example illustrates.\
\>", "Text",
 CellChangeTimes->{{3.9398472953095303`*^9, 3.9398472995401154`*^9}},
 CellID->724547986,ExpressionUUID->"45fd23b3-e913-446f-8d71-160f54737ca1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "f"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "a", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "->", "5"}], ",", 
    RowBox[{"a", "->", "6"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "a", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "->", "6"}], ",", 
    RowBox[{"a", "->", "5"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.93984730261724*^9, 3.939847321326767*^9}},
 CellLabel->"In[430]:=",
 CellID->874653820,ExpressionUUID->"96152578-a168-4f94-b1d5-8233bafa904c"],

Cell[BoxData[
 RowBox[{"f", "[", "5", "]"}]], "Output",
 CellChangeTimes->{3.939847321808783*^9},
 CellLabel->"Out[431]=",
 CellID->1474931173,ExpressionUUID->"4e200fd9-8634-4dc7-9639-f911496a865c"],

Cell[BoxData[
 RowBox[{"f", "[", "6", "]"}]], "Output",
 CellChangeTimes->{3.939847321820991*^9},
 CellLabel->"Out[432]=",
 CellID->764487290,ExpressionUUID->"abbc43a3-d28e-4a5b-aad0-cd6fb70b609a"]
}, Open  ]],

Cell["\<\
The reason for this is that once some rule has been applied to a given part \
of an expression, ReplaceAll goes to the next part of an expression and tries \
the rules on that next part. But even if we run ReplaceAll several times \
(there is a special command ReplaceRepeated related to this, which we will \
discuss shortly), the results will still be generally different for different \
orderings of rules in a list. This is because once a rule applies to a (part \
of) expression, this part is generally rewritten so that (some of) the rules \
in our list of rules which applied before will no longer apply, and vice \
versa.\
\>", "Text",
 CellChangeTimes->{{3.93984733749063*^9, 3.939847358162774*^9}},
 CellID->343223029,ExpressionUUID->"e9e4f19c-660e-47a4-a303-968aec4c7910"],

Cell["\<\
In any case, our final conclusion is that the rule application is not \
commutative, and the order of rules in the rule list does matter in general. \
For an extreme example of this, we will soon consider a rule-based factorial \
function, where different rule ordering will result in infinite iteration.\
\>", "Text",
 CellChangeTimes->{{3.9398473663933897`*^9, 3.9398473798126383`*^9}},
 CellID->186228647,ExpressionUUID->"61051632-0503-4315-b770-94d512d212ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell["An interplay between rules and evaluation process", "Subsubsection",
 CellChangeTimes->{3.939847387948743*^9},
 CellID->1104827655,ExpressionUUID->"949ae218-618e-4980-b5b6-577dbcfb6c33"],

Cell[TextData[{
 "When working in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", it is important to remember that we never actually start from scratch, \
but always with a large built-in system of rules which connect together the \
built-in functions. This gives great flexibility in using these functions, \
since these system rules can be manipulated or overridden with the \
user-defined ones. On the other hand, one has to be more careful, because the \
rules (or function definitions and variable assignments, which are global \
rules) newly defined by the user, immediately start to interact with the \
built-in ones. The mentioned above non-commutativity of rules can make this \
interaction quite non-trivial. This often results in some unexpected or \
\[OpenCurlyDoubleQuote]erroneous\[CloseCurlyDoubleQuote] behavior, which many \
",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " users immediately proclaim as bugs, but which can be avoided just by \
getting a better understanding of how the system works."
}], "Text",
 CellChangeTimes->{{3.939847397234644*^9, 3.939847441936821*^9}},
 CellID->1694785623,ExpressionUUID->"194232c8-1d6d-41c8-a9ac-f2b2cd7b19d3"],

Cell["When the rule applies, expression is evaluated", "ItemNumbered",
 CellChangeTimes->{3.9398474542356777`*^9},
 CellID->1887012361,ExpressionUUID->"a9dbbff1-fcd5-4bbe-8ded-f96bfa140612"],

Cell["\<\
As one example, consider a gamma-function of the symbolic argument:\
\>", "Text",
 CellChangeTimes->{3.93984745964003*^9},
 CellID->978252431,ExpressionUUID->"3009f4ba-be1b-4065-9c63-49f3c3496e86"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Gamma", "[", "a", "]"}]}], "Input",
 CellChangeTimes->{{3.939847465117363*^9, 3.9398474691138153`*^9}},
 CellLabel->"In[433]:=",
 CellID->41694152,ExpressionUUID->"71916712-d6a8-4b63-ac8e-b827385d0368"],

Cell[BoxData[
 RowBox[{"Gamma", "[", "a", "]"}]], "Output",
 CellChangeTimes->{3.939847469647222*^9},
 CellLabel->"Out[434]=",
 CellID->1843852653,ExpressionUUID->"977a0ea7-2332-40b4-9766-b66816718f1e"]
}, Open  ]],

Cell["\<\
Since the system does not know what <a> is, no one of the rules associated \
with the gamma-function applies, and the input is just returned back. Let us \
now use the following rewrite rule:\
\>", "Text",
 CellChangeTimes->{{3.939847476942416*^9, 3.93984748696773*^9}, 
   3.9399313879619923`*^9, 3.9399470925564833`*^9, 3.940017704094027*^9},
 CellID->1442512761,ExpressionUUID->"404e76b5-eabc-4c7a-ad3f-1c89efc3e30d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Gamma", "[", "a", "]"}], "/.", 
  RowBox[{"a", "->", "5"}]}]], "Input",
 CellChangeTimes->{{3.939847500753215*^9, 3.939847504081807*^9}},
 CellLabel->"In[435]:=",
 CellID->161495159,ExpressionUUID->"1c366dc3-b0e7-4001-913f-fe003947e401"],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{3.939847504471755*^9},
 CellLabel->"Out[435]=",
 CellID->1666395349,ExpressionUUID->"7e49a6de-ea79-48cd-9d5c-2c47b4ad44cc"]
}, Open  ]],

Cell[TextData[{
 "We see that as soon as the numerical (integer) value has been substituted, \
one of the built-in rules applied, producing the result. At the same time, \
for a number p (for instance), there is no rule which forces ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to compute the numerical value, and thus we have:"
}], "Text",
 CellChangeTimes->{{3.9398475120894403`*^9, 3.939847522214058*^9}, 
   3.9399313879830427`*^9},
 CellID->1772390116,ExpressionUUID->"a242ccc4-d25c-4f26-88c0-944c0474a1d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Gamma", "[", "a", "]"}], "/.", 
  RowBox[{"a", "->", "\[Pi]"}]}]], "Input",
 CellChangeTimes->{{3.939847531740306*^9, 3.93984753777227*^9}},
 CellLabel->"In[436]:=",
 CellID->1123601208,ExpressionUUID->"38b20822-ce6c-4192-9765-4a719ee61857"],

Cell[BoxData[
 RowBox[{"Gamma", "[", "\[Pi]", "]"}]], "Output",
 CellChangeTimes->{3.939847538533256*^9},
 CellLabel->"Out[436]=",
 CellID->2016606488,ExpressionUUID->"d7ad9b29-07cd-4c37-99ca-7e7a2ec5ae13"]
}, Open  ]],

Cell["\<\
If we want to compute a numerical value in this case, we can either do this:\
\>", "Text",
 CellChangeTimes->{3.939847545438361*^9, 3.939931388005115*^9},
 CellID->1518326862,ExpressionUUID->"7eb2aefe-7924-4720-b43e-92f6e6664d83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Gamma", "[", "a", "]"}], "/.", 
  RowBox[{"a", "->", 
   RowBox[{"N", "[", "\[Pi]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.939847551070815*^9, 3.939847561189777*^9}},
 CellLabel->"In[438]:=",
 CellID->227277659,ExpressionUUID->"b31e94d1-149e-420f-8bfd-aff6e635e04f"],

Cell[BoxData["2.288037795340032`"], "Output",
 CellChangeTimes->{{3.939847556718631*^9, 3.939847562024317*^9}},
 CellLabel->"Out[438]=",
 CellID->330932192,ExpressionUUID->"d13be0fb-2115-4a0e-9e92-298b69f5679f"]
}, Open  ]],

Cell["\<\
Or, which is equivalent (with some tiny differences unimportant now), this:\
\>", "Text",
 CellChangeTimes->{3.9398476023620567`*^9, 3.9399313880268097`*^9},
 CellID->1291135160,ExpressionUUID->"c74338b3-fb1b-4dd8-9229-fc071f31bf1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Gamma", "[", "a", "]"}], "/.", 
   RowBox[{"a", "->", "\[Pi]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.93984760892029*^9, 3.9398476167147923`*^9}},
 CellLabel->"In[439]:=",
 CellID->301234079,ExpressionUUID->"5f2bd4e1-cad1-4d66-8bf3-f3d8872e21c1"],

Cell[BoxData["2.288037795340032`"], "Output",
 CellChangeTimes->{3.939847617279467*^9},
 CellLabel->"Out[439]=",
 CellID->360109348,ExpressionUUID->"530410b2-103e-452d-b1c4-ac38aa43d0fe"]
}, Open  ]],

Cell[TextData[{
 "(the N function computes a numerical value of its argument). What I want to \
stress is that the decision whether to keep say Gamma[5] as it is here or to \
substitute it by its numerical (well, integer) value is rather arbitrary in \
the sense that it is defined by certain (very sensible) ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " conventions but there is no first principle which tells which form of the \
answer is advantageous. In fact, in some cases I may wish to keep a Gamma[5] \
function in its unevaluated form. More generally, the whole advantage in \
using rule-based approach is that we don\[CloseCurlyQuote]t need a first \
principle to add rules for a new situation that we want to describe."
}], "Text",
 CellChangeTimes->{{3.939847628164835*^9, 3.939847654311488*^9}},
 CellID->1074294726,ExpressionUUID->"e261b5f8-a009-4ae6-814e-9abf92ac31a4"],

Cell[TextData[{
 "This means not that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is unpredictable, but that the programs we write should not depend on \
features that are defined purely by conventions. In particular, in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " one should always assume that all expressions may evaluate to something \
else. Thus, if some expression has to be kept unevaluated for some time, the \
programmer has to take care of it. On the other hand, if some expression must \
be\nevaluated completely (say, to a numerical value), once again the \
programmer has to ensure it."
}], "Text",
 CellChangeTimes->{{3.9398476613396482`*^9, 3.9398476805492897`*^9}},
 CellID->2145590180,ExpressionUUID->"abb46f55-c112-4ae3-ba93-1cedeadd92bb"],

Cell["Evaluation affects applicability of rules", "ItemNumbered",
 CellChangeTimes->{3.939847691958385*^9},
 CellID->181250411,ExpressionUUID->"5d4ac652-d8d9-48e7-9e97-a4107bd65d7a"],

Cell["Consider now a different example:", "Text",
 CellChangeTimes->{3.939847698406719*^9},
 CellID->1143846231,ExpressionUUID->"019d87f7-d9b0-4d3f-a5ec-004d148b4342"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "\[Pi]", "]"}], ",", 
   RowBox[{"Sin", "[", "\[Pi]", "]"}], ",", 
   RowBox[{"\[Pi]", "^", "2"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "\[Pi]", "]"}], ",", 
    RowBox[{"Sin", "[", "\[Pi]", "]"}], ",", 
    RowBox[{"\[Pi]", "^", "2"}]}], "}"}], "/.", 
  RowBox[{"\[Pi]", "->", "a"}]}]}], "Input",
 CellChangeTimes->{{3.9398477151832447`*^9, 3.939847734484272*^9}},
 CellLabel->"In[440]:=",
 CellID->1967802410,ExpressionUUID->"14999f72-d226-40c7-ac89-1083909e2dca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "\[Pi]", "]"}], ",", "0", ",", 
   SuperscriptBox["\[Pi]", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.9398477348285217`*^9},
 CellLabel->"Out[440]=",
 CellID->1781514677,ExpressionUUID->"5416e4bd-2041-436c-a6bb-fb1fa3619c10"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", "0", ",", 
   SuperscriptBox["a", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.93984773484236*^9},
 CellLabel->"Out[441]=",
 CellID->1700169865,ExpressionUUID->"fd7890c5-cd89-4040-8e7a-9e4c6c246d76"]
}, Open  ]],

Cell["\<\
Note that in the second input in the list, we will naively expect Sin[a] \
instead of 0 as an output, in the case when we apply the rule Pi -> a. The \
reason for this result being as it is can be understood easily, once we \
recall that the sign /. is just an abbreviation, and equivalently we can \
write the last input as\
\>", "Text",
 CellChangeTimes->{{3.939847746592051*^9, 3.939847756520832*^9}},
 CellID->1714464374,ExpressionUUID->"5357b159-fdf2-4f3c-8588-9dd5a01c4379"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplaceAll", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "\[Pi]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Pi]", "]"}], ",", 
     RowBox[{"\[Pi]", "^", "2"}]}], "}"}], ",", 
   RowBox[{"\[Pi]", "->", "a"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939847762600162*^9, 3.939847782815612*^9}},
 CellLabel->"In[442]:=",
 CellID->672492875,ExpressionUUID->"0fe8b636-2b36-40be-8d2b-a22c4a4f6ad0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", "0", ",", 
   SuperscriptBox["a", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.939847783869183*^9},
 CellLabel->"Out[442]=",
 CellID->2125502753,ExpressionUUID->"aefde231-c206-4487-bc89-b9a0e4844e70"]
}, Open  ]],

Cell[TextData[{
 "Now we recall the general evaluation strategy in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", where the subexpressions are normally evaluated before the expression \
itself. This means that once the evaluation process reached ReplaceAll \
command, our expression has been already transformed to the same form as the \
output of the first input (without rule substitution). Sin[Pi] evaluated to \
0, and since 0 does not contain <Pi> any more and thus does not match the \
rule, no further substitution took place for this part of our expression. \
Once again, we can see the evaluation dynamics by using the Trace command:"
}], "Text",
 CellChangeTimes->{{3.9398478077767363`*^9, 3.939847829629341*^9}, 
   3.939947092580284*^9, 3.940017704112753*^9},
 CellID->1002916967,ExpressionUUID->"4569d75a-c9b3-4849-b3fe-2531fb9daa64"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "\[Pi]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Pi]", "]"}], ",", 
     RowBox[{"\[Pi]", "^", "2"}]}], "}"}], "/.", 
   RowBox[{"\[Pi]", "->", "a"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939847834521274*^9, 3.939847845356791*^9}},
 CellLabel->"In[443]:=",
 CellID->1734117627,ExpressionUUID->"e6a76dba-380d-4497-b034-eb59613a466e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TagBox[
        RowBox[{"Sin", "[", "\[Pi]", "]"}],
        HoldForm], ",", 
       TagBox["0",
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f", "[", "\[Pi]", "]"}], ",", "0", ",", 
        SuperscriptBox["\[Pi]", "2"]}], "}"}],
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"\[Pi]", "\[Rule]", "a"}],
      HoldForm], ",", 
     TagBox[
      RowBox[{"\[Pi]", "\[Rule]", "a"}],
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", "\[Pi]", "]"}], ",", "0", ",", 
       SuperscriptBox["\[Pi]", "2"]}], "}"}], "/.", "\[VeryThinSpace]", 
     RowBox[{"\[Pi]", "\[Rule]", "a"}]}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "a", "]"}], ",", "0", ",", 
      SuperscriptBox["a", "2"]}], "}"}],
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.939847846337021*^9},
 CellLabel->"Out[443]=",
 CellID->685079184,ExpressionUUID->"0954eeb6-643a-4b25-9408-ccaa6c725279"]
}, Open  ]],

Cell[TextData[{
 "These examples may give an impression that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is unstable with respect to bugs related to rule orderings. While it is \
true that many non-trivial bugs in the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " programs are related to this issue, there are also ways to avoid them. As \
long as the rule or list of rules are always correct in the sense that either \
they represent exact identities (say, mathematical identities), or one can \
otherwise be sure that in no actual situation they, taken separately, will \
lead to an incorrect result, it should be fine."
}], "Text",
 CellChangeTimes->{{3.9398478814153337`*^9, 3.93984791663126*^9}},
 CellID->1192777813,ExpressionUUID->"720f39c8-a219-4be7-963a-83cf48886936"],

Cell["\<\
Bugs happen when rules considered \[OpenCurlyDoubleQuote]correct\
\[CloseCurlyDoubleQuote] give incorrect results in certain unforeseen \
situations, but this is also true for programs written within more \
traditional programming paradigms. Perhaps, the real difference is that for \
more traditional programming techniques it is usually easier to restrict the \
program to
\[OpenCurlyDoubleQuote]stay\[CloseCurlyDoubleQuote] in those \
\[OpenCurlyDoubleQuote]corners\[CloseCurlyDoubleQuote] of the problem \
parameter space where correct performance can be predicted or sometimes \
proven. I personally view the complications arising due to rule orderings as \
a (possibly inevitable) price to pay for having a very general approach to \
evaluation available.\
\>", "Text",
 CellChangeTimes->{{3.939847926181723*^9, 3.939847953411758*^9}},
 CellID->869041763,ExpressionUUID->"25cd6226-7885-4862-8ec1-e9bd6f3c7ab1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rules and simple (unrestricted) patterns", "Subsubsection",
 CellChangeTimes->{3.9398479619437943`*^9},
 CellID->810450313,ExpressionUUID->"9894d69c-8880-4842-a90c-ac2960d417f5"],

Cell["\<\
Let us give some examples of how rules work with the simplest patterns.\
\>", "Text",
 CellChangeTimes->{3.93984796815239*^9},
 CellID->1897121317,ExpressionUUID->"bd951b4a-60f4-4469-b6d0-fa58e744ff91"],

Cell["A simplest pattern and general pattern-matching strategy", \
"ItemNumbered",
 CellChangeTimes->{3.9398479763871937`*^9},
 CellID->1228267810,ExpressionUUID->"e2a321b1-62f1-4d25-9cd2-f809cb6d2fc6"],

Cell["\<\
The simplest pattern of all, which we have already seen before, is just a \
single underscore <_>, and has a literal representation Blank[]:\
\>", "Text",
 CellChangeTimes->{{3.9398479846422167`*^9, 3.93984799779622*^9}},
 CellID->1884267706,ExpressionUUID->"279671ae-59da-4f27-b247-a0e19312e911"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Blank", "[", "]"}]], "Input",
 CellChangeTimes->{{3.9398480007692957`*^9, 3.939848004141452*^9}},
 CellLabel->"In[444]:=",
 CellID->201490109,ExpressionUUID->"4329564c-bc90-498b-8b5e-53434c07c065"],

Cell[BoxData["_"], "Output",
 CellChangeTimes->{3.939848004524681*^9},
 CellLabel->"Out[444]=",
 CellID->1444053053,ExpressionUUID->"3ad708ae-7e4c-4de8-895e-0c453ddcaf4f"]
}, Open  ]],

Cell[TextData[{
 "This pattern represents any ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expression. Let us take some sample ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expression:"
}], "Text",
 CellChangeTimes->{3.939848011821087*^9},
 CellID->1486967024,ExpressionUUID->"866407ea-5eae-4c46-a4c3-72b2e0257302"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "^", "y"}], "*", 
  RowBox[{"Sin", "[", "z", "]"}]}]], "Input",
 CellChangeTimes->{{3.939848021887227*^9, 3.939848025647945*^9}},
 CellID->813437585,ExpressionUUID->"3aced900-e258-4890-864c-f77ed1d392c6"],

Cell["\<\
Now we will use our simplest pattern to replace any element by, say, a symbol \
<a>:\
\>", "Text",
 CellChangeTimes->{3.939848032743841*^9, 3.939947092603856*^9, 
  3.9400177041310663`*^9},
 CellID->205753232,ExpressionUUID->"992c7a9e-1258-4f25-aa72-479f78f40c10"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "x", ",", "y", ",", "z", ",", "g", ",", "h"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{"_", "->", "a"}]}]}], "Input",
 CellChangeTimes->{{3.939848038963602*^9, 3.939848073380827*^9}},
 CellLabel->"In[445]:=",
 CellID->87161493,ExpressionUUID->"93fe054b-c630-4041-8a0d-39df637dd557"],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.9398480740746727`*^9},
 CellLabel->"Out[446]=",
 CellID->1442539574,ExpressionUUID->"c1af3864-8eb7-4c46-93f8-92d6eb23038f"]
}, Open  ]],

Cell[TextData[{
 "This is not very exciting. What happened is that our entire expression \
(list) matched this pattern and then got replaced by <a>. Before we move \
forward, let me explain a bit how patterns work and why the substitution \
based on patterns is possible. The main ingredient for this is the uniform \
representation of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expressions by symbolic trees. Basically, when we try to match some \
(however complex) pattern with some expression, we are matching two trees. \
The tree that represents the pattern is also a legal ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expression (patterns are as good ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expressions as anything else), but with some branches or leaves replaced \
by special symbols like  Blank[] (the underscore). For example:"
}], "Text",
 CellChangeTimes->{{3.93984808492898*^9, 3.939848125228818*^9}, 
   3.939947092628014*^9, 3.940017704149604*^9, 3.940740643805574*^9},
 CellID->1819729235,ExpressionUUID->"eb92e2e1-41e3-4c0d-bc58-c3c458b23d2c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"_", "^", "_"}], ")"}], "*", 
   RowBox[{"Sin", "[", "_", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939848129799616*^9, 3.939848141840231*^9}},
 CellLabel->"In[447]:=",
 CellID->1272523969,ExpressionUUID->"86d4c877-2f88-4dc3-8e7e-dd6429ac42de"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Times", "[", 
    RowBox[{
     RowBox[{"Power", "[", 
      RowBox[{
       RowBox[{"Blank", "[", "]"}], ",", 
       RowBox[{"Blank", "[", "]"}]}], "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"Blank", "[", "]"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.9398481427966557`*^9},
 CellLabel->"Out[447]//FullForm=",
 CellID->1463420360,ExpressionUUID->"4ad8214a-a15d-431b-92b5-62048eda731b"]
}, Open  ]],

Cell["\<\
This pattern tree (or, just pattern) will match some expression <expr> if \
they are identical modulo some parts of <expr> which can be \
\[OpenCurlyDoubleQuote]fit\[CloseCurlyDoubleQuote] in the placeholders such \
as Blank[], present in this pattern. In particular, the pattern above will \
match any expression which is a product of something to a power of something \
else, and a Sine of something.\
\>", "Text",
 CellChangeTimes->{{3.939848156582725*^9, 3.939848176567727*^9}, {
  3.9399470926516027`*^9, 3.939947092674181*^9}, {3.940017704168494*^9, 
  3.940017704187086*^9}},
 CellID->575781429,ExpressionUUID->"8ba60038-ef95-4630-9f31-bd4e3d156318"],

Cell["Does the pattern match? The MatchQ function", "ItemNumbered",
 CellChangeTimes->{3.9398481996127653`*^9},
 CellID->794401766,ExpressionUUID->"28fbdcbe-ef03-4d8a-8e03-93813e9fdd0f"],

Cell["\<\
There is a very useful command that allows one to check whether or not there \
is a match between a given expression and a given pattern: MatchQ. It takes \
as arguments an expression and a pattern and returns True when pattern \
matches and False otherwise. For example:\
\>", "Text",
 CellChangeTimes->{{3.9398482079574013`*^9, 3.939848220923942*^9}},
 CellID->604647763,ExpressionUUID->"c0b4ea5a-14c5-4e97-8140-15ac80b9ff5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "y"}], "*", 
    RowBox[{"Sin", "[", "z", "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"_", "^", "_"}], ")"}], "*", 
    RowBox[{"Sin", "[", "_", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939848224927834*^9, 3.939848250627149*^9}},
 CellLabel->"In[448]:=",
 CellID->1411675357,ExpressionUUID->"2ff68d43-7f89-42df-8007-3517fa18e9f3"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.93984825090987*^9},
 CellLabel->"Out[448]=",
 CellID->1975192977,ExpressionUUID->"181ac691-eb1e-40d8-a039-32de7d9e017f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       RowBox[{"x", "^", "2"}]}], "]"}], "^", "2"}], "*", 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"x", "-", "y"}], "]"}], "^", "2"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"_", "^", "_"}], ")"}], "*", 
    RowBox[{"Sin", "[", "_", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9398482561730013`*^9, 3.939848282159624*^9}},
 CellLabel->"In[449]:=",
 CellID->235832741,ExpressionUUID->"c0628537-d301-4009-9a39-5e6183891c21"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9398482832409067`*^9},
 CellLabel->"Out[449]=",
 CellID->2112175220,ExpressionUUID->"234dfe71-1f15-4c82-a782-52da93aa5bf4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"x", "*", 
    RowBox[{"Sin", "[", "z", "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"_", "^", "_"}], ")"}], "*", 
    RowBox[{"Sin", "[", "_", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939848289430911*^9, 3.939848301697558*^9}},
 CellLabel->"In[450]:=",
 CellID->1910918468,ExpressionUUID->"4fe21316-0612-4484-ad3a-a9bb347baf13"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.939848301907332*^9},
 CellLabel->"Out[450]=",
 CellID->192151648,ExpressionUUID->"540b7131-6394-4df3-bd80-edc4a81c1c72"]
}, Open  ]],

Cell["\<\
It is important to understand that the pattern-matching (for simple, or \
unrestricted, patterns) is based completely on syntax, and not semantics, of \
the expressions being matched.\
\>", "Text",
 CellChangeTimes->{{3.939848311039577*^9, 3.939848321874793*^9}},
 CellID->1824826495,ExpressionUUID->"e7d589b6-1ed9-4d90-99f1-e656bbf8f25e"],

Cell["Pattern tags(names) and expression destructuring", "ItemNumbered",
 CellChangeTimes->{3.9398483325993147`*^9},
 CellID->1927037175,ExpressionUUID->"94fd4f4b-7d63-4ea8-a721-71f7a2c2ace4"],

Cell["\<\
Now, while there is some value in just establishing the fact that some \
expression matches certain pattern, it becomes much more useful when we get \
access to the parts of this expression which match certain parts of the \
pattern, so that we can further process these parts. This is called \
expression destructuring, and is a very powerful pattern-related capability. \
For instance, in the above example we may wish to know which expressions were \
the base, the power and the argument of Sine. But to be able to do such \
destructuring, we need to somehow label the parts of the pattern. This is \
possible through the mechanism of pattern tags (or names): we attach some \
symbol to the pattern part, and then this symbol stores the corresponding \
part of the actual expression matched, ready for further processing. This is \
how, for example, we can insert tags in our pattern:\
\>", "Text",
 CellChangeTimes->{{3.939848343694147*^9, 3.93984838403227*^9}, 
   3.939931388048667*^9},
 CellID->706355772,ExpressionUUID->"793b819e-830d-4531-9915-25aafbcc766f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"base_", "^", "pwr_"}], ")"}], "*", 
  RowBox[{"Sin", "[", "sinarg_", "]"}]}]], "Input",
 CellChangeTimes->{{3.9398484339683037`*^9, 3.939848442941134*^9}},
 CellID->19227498,ExpressionUUID->"6885d734-cc77-423f-b528-d73ec25bb307"],

Cell["\<\
The pattern tags can not be composite expressions - only true symbols (with \
the head Symbol).\
\>", "Text",
 CellChangeTimes->{3.939848451784519*^9},
 CellID->2034951729,ExpressionUUID->"cdd301ab-837b-47cc-a9a3-c3f4a2f21b57"],

Cell["\<\
The presence of pattern tags does not change the matching in any way, it just \
gives us additional information. We will not obtain this information through \
MatchQ, however, since MatchQ just establishes the fact of the match. We will \
need a real rule application for that, since the rule will tell us what to do \
with these matched (sub) expressions. For example, here we will simply \
collect them in a list:\
\>", "Text",
 CellChangeTimes->{{3.9398484716898527`*^9, 3.939848498930738*^9}, 
   3.939931388070153*^9},
 CellID->609147181,ExpressionUUID->"b2157fd8-079a-4e7b-9dd8-a34450fce858"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "y"}], "*", 
     RowBox[{"Sin", "[", "z", "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        RowBox[{"x", "^", "2"}]}], "]"}], "^", "2"}], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "y"}], "]"}], "^", "2"}], "]"}]}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"base_", "^", "pwr_"}], ")"}], "*", 
    RowBox[{"Sin", "[", "sinarg_", "]"}]}], "->", 
   RowBox[{"{", 
    RowBox[{"base", ",", "pwr", ",", "sinarg"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.939848604215724*^9, 3.9398486526431417`*^9}},
 CellLabel->"In[451]:=",
 CellID->1457721033,ExpressionUUID->"06aa0a91-50dc-4426-855e-e535b8cc45e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ExponentialE]", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SuperscriptBox["x", "2"]}], ",", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"x", "-", "y"}], "]"}], "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9398486588325*^9},
 CellLabel->"Out[451]=",
 CellID->1763894734,ExpressionUUID->"41bf2047-7105-4d53-9568-11312e4f79c8"]
}, Open  ]],

Cell["\<\
What we just did is exactly a special case of destructuring. The parts that \
we tagged are now available for whatever operations we would like to perform.\
\
\>", "Text",
 CellChangeTimes->{{3.939848687322319*^9, 3.939848690968123*^9}},
 CellID->1722695126,ExpressionUUID->"f8715cc9-51ca-4e8b-a31c-0ff679218ada"],

Cell["\<\
So, to summarize: whenever a pattern contains a part which is a special \
symbol like Blank[] (there are a few more like it, we will cover them \
shortly), possibly with a pattern tag attached, this means that the actual \
expression matched can contain in this place a rather arbitrary subexpression \
(how arbitrary, depends on the particular special symbol used). However, the \
parts which do not contain these symbols (multiplication, Power and Sin in \
our example above), have to be present in exactly the same way in both \
pattern and the expression, for them to match.\
\>", "Text",
 CellChangeTimes->{{3.939848698902952*^9, 3.939848719273663*^9}},
 CellID->1114657992,ExpressionUUID->"4b753e27-0179-4722-98ac-6d93ac121358"],

Cell["\<\
One more important point about pattern tags is that the two identical pattern \
tags (symbols) in different parts of a pattern can not stand for different \
corresponding subexpressions in the expression we try to match. For example:\
\>", "Text",
 CellChangeTimes->{{3.9398487266561203`*^9, 3.939848733912656*^9}, 
   3.9399313880914516`*^9},
 CellID->1508940567,ExpressionUUID->"a7ebbec1-c62d-44a1-b64d-9a92a7f30459"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"a", "^", "a"}], ",", 
   RowBox[{"b_", "^", "b_"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9398487526225557`*^9, 3.9398487599225283`*^9}},
 CellLabel->"In[452]:=",
 CellID->543799706,ExpressionUUID->"dfdaa1da-e057-4463-b4f2-4fff0c14e90b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9398487603719893`*^9},
 CellLabel->"Out[452]=",
 CellID->1194608334,ExpressionUUID->"e61bff02-907c-44b9-9391-3b0be03948b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"a", "^", "c"}], ",", 
   RowBox[{"b_", "^", "b_"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939848762176495*^9, 3.939848767080743*^9}},
 CellLabel->"In[453]:=",
 CellID->2043873527,ExpressionUUID->"49a0c796-a11d-452d-af24-67133e3af6ae"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.93984876834767*^9},
 CellLabel->"Out[453]=",
 CellID->765377747,ExpressionUUID->"42fa4b63-e0cd-494c-a3d9-654f32f04ffe"]
}, Open  ]],

Cell["Example: any function of a single fixed argument", "ItemNumbered",
 CellChangeTimes->{3.939848778280649*^9},
 CellID->276748299,ExpressionUUID->"ff4175e8-b9aa-48bc-9d44-1c304c10bebe"],

Cell["\<\
The following pattern will work on every function, but of the argument which \
has to literally be <x>:\
\>", "Text",
 CellChangeTimes->{3.939848787309897*^9},
 CellID->2006565538,ExpressionUUID->"8c4e9d11-672c-4e59-8bb1-dc75188d19fe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f_", "[", "x", "]"}]}], "Input",
 CellChangeTimes->{{3.939848796662672*^9, 3.939848802132392*^9}},
 CellLabel->"In[454]:=",
 CellID->1104809157,ExpressionUUID->"a0249c14-6901-4a03-943c-3635499b0c94"],

Cell[BoxData[
 RowBox[{"f_", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.939848802456524*^9},
 CellLabel->"Out[455]=",
 CellID->617065477,ExpressionUUID->"8ffcf688-c8f2-4efd-bcc4-0e03b7ba16dd"]
}, Open  ]],

Cell["\<\
It can be used for instance when we need to substitute the literal <x> by \
some value (say, 10) at every place where it appears as a single argument of \
some function. Consider now some list of expressions which we will use \
throughout this section to illustrate the construction of various patterns:\
\>", "Text",
 CellChangeTimes->{{3.939848829303872*^9, 3.939848842364058*^9}, 
   3.939931388112718*^9, 3.939947092698023*^9, 3.940017704205591*^9},
 CellID->809109756,ExpressionUUID->"777c598f-09bd-45f0-9452-74411fcba834"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y", ",", "z", ",", "g", ",", "h", ",", "a"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"x", "*", "y"}], ",", 
   RowBox[{"x", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "x"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.939848849419311*^9, 3.9398488724111557`*^9}},
 CellLabel->"In[456]:=",
 CellID->708561936,ExpressionUUID->"3f05ce58-e23a-4993-9b8f-b2a1d08b7351"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"x", " ", "y"}], ",", 
   RowBox[{"x", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "x"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9398488742916822`*^9},
 CellLabel->"Out[457]=",
 CellID->1479227713,ExpressionUUID->"d4476b44-a3f7-4b6f-a943-c060a5568195"]
}, Open  ]],

Cell["We now use our pattern:", "Text",
 CellChangeTimes->{3.939848881189114*^9, 3.939931388133995*^9},
 CellID->1134073910,ExpressionUUID->"a4b1d5d8-2693-41c9-8abe-1fca4eb2dc6b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f_", "[", "x", "]"}], "->", 
    RowBox[{"f", "[", "10", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.939848890034707*^9, 3.939848895858974*^9}},
 CellLabel->"In[458]:=",
 CellID->1462838245,ExpressionUUID->"808a22d5-d73a-49a6-acd9-27e45f823171"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"Sin", "[", "10", "]"}], ",", 
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"x", " ", "y"}], ",", 
   RowBox[{"x", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "x"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939848896426139*^9},
 CellLabel->"Out[458]=",
 CellID->524304089,ExpressionUUID->"b3e623ed-4ff8-4a42-888d-62041000c9f5"]
}, Open  ]],

Cell[TextData[{
 "The replacement happened only in the second element of the list. To \
understand this, we have to recall the tree-like nature of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expressions and also that the rules application is based on expression \
syntax rather than semantics. Let us look at the FullForm of these \
expressions:"
}], "Text",
 CellChangeTimes->{{3.939848924584394*^9, 3.93984893949002*^9}},
 CellID->1388757868,ExpressionUUID->"7cbae145-7866-4da7-999a-eeeec28e9af3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9398489514062433`*^9, 3.939848953963579*^9}},
 CellLabel->"In[459]:=",
 CellID->1683656172,ExpressionUUID->"e0bb1b8e-d407-4570-978e-c2e07a2dcd10"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"x", ",", 
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"x", ",", "2"}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"Plus", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"y", ",", "x"}], "]"}], ",", 
     RowBox[{"h", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{"Cos", "[", "y", "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.939848954523101*^9},
 CellLabel->"Out[459]//FullForm=",
 CellID->1438943120,ExpressionUUID->"02da1f91-ce6a-466b-8e1a-45c6d5eb9568"]
}, Open  ]],

Cell["\<\
We see that only the second list element contains <x> as a single argument, \
the next four have 2 arguments (and thus the pattern does not match), the \
next one has 3 arguments, and the last one has a single argument, but <y> \
instead of <x>.\
\>", "Text",
 CellChangeTimes->{{3.9398489766687517`*^9, 3.939848986429282*^9}, {
   3.9399470927218857`*^9, 3.9399470927668533`*^9}, {3.940017704224474*^9, 
   3.940017704261272*^9}, 3.940740643826334*^9},
 CellID->1735008647,ExpressionUUID->"958f69e7-069a-4c61-98d2-579c063bbf53"],

Cell["Any function of 2 arguments, but with the first fixed", "ItemNumbered",
 CellChangeTimes->{3.9398489945195513`*^9},
 CellID->1562516982,ExpressionUUID->"d0727b7b-efdf-4abc-9b9e-ff82fa0838e4"],

Cell["\<\
Let us now develop other rules which will work selectively on different \
groups of these elements. First, let us build a rule which will work on \
elements with 2 arguments - this is easy:\
\>", "Text",
 CellChangeTimes->{{3.939849005143667*^9, 3.939849007606414*^9}, 
   3.939931388155431*^9},
 CellID->5461895,ExpressionUUID->"9decd79e-d64f-4355-bff6-c386fcc63b81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f_", "[", 
     RowBox[{"x", ",", "z_"}], "]"}], "->", 
    RowBox[{"f", "[", 
     RowBox[{"10", ",", "z"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.939849024315074*^9, 3.9398490363945513`*^9}},
 CellLabel->"In[460]:=",
 CellID->1261367940,ExpressionUUID->"d9eda942-845d-4ae9-ab47-1e081a947286"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"Sin", "[", "x", "]"}], ",", "100", ",", 
   RowBox[{"10", " ", "y"}], ",", 
   RowBox[{"10", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "x"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939849036838895*^9},
 CellLabel->"Out[460]=",
 CellID->1005708470,ExpressionUUID->"263909a8-7265-4aba-9120-5c7d271b625a"]
}, Open  ]],

Cell["\<\
We see that a new pattern is f_[x, z_], which means any function of two \
arguments, with an arbitrary second argument, but the first argument fixed to \
literal <x>. Notice that no substitution was performed for g[y,x], since here \
<x> is the second argument, while in the pattern it is the first one. In \
general, for simple patterns, the way to determine whether or not a given \
pattern will match a given expression is to
consider the FullForm of both the pattern and the expression, and see whether \
the pattern expression has blanks in all places where it is different from \
the expression it has to match. The FullForm of the above pattern is\
\>", "Text",
 CellChangeTimes->{{3.939849065569787*^9, 3.9398490952427053`*^9}, 
   3.939947092790184*^9, 3.9400177042797823`*^9, 3.9407406438456497`*^9},
 CellID->437913719,ExpressionUUID->"23fc8942-5287-4f51-9de7-5c5e63b860ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"f_", "[", 
   RowBox[{"x", ",", "z"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.939849105082673*^9, 3.939849108908592*^9}},
 CellLabel->"In[461]:=",
 CellID->1062488351,ExpressionUUID->"fbf806be-befe-4b06-b93a-e690b9e01b0f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{
    RowBox[{"Pattern", "[", 
     RowBox[{"f", ",", 
      RowBox[{"Blank", "[", "]"}]}], "]"}], "[", 
    RowBox[{"x", ",", "z"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.9398491093726892`*^9},
 CellLabel->"Out[461]//FullForm=",
 CellID->1218274705,ExpressionUUID->"0f212cb4-28cc-41e4-b167-234cdbe4c813"]
}, Open  ]],

Cell["\<\
To get a better idea of how the above pattern matched the expressions in our \
list, we may construct a different rule, which will show us which parts were \
matched:\
\>", "Text",
 CellChangeTimes->{{3.9398491344727297`*^9, 3.939849175294057*^9}},
 CellID->1433876437,ExpressionUUID->"ac427c4f-8c2a-4269-91c8-370f0df42790"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f_", "[", 
     RowBox[{"x", ",", "z_"}], "]"}], "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<f now\>\"", ",", "f"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<z now\>\"", ",", "z"}], "}"}]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.939849179627846*^9, 3.939849213726502*^9}},
 CellLabel->"In[463]:=",
 CellID->973363256,ExpressionUUID->"4f819a3a-4854-40e6-b8ae-3a255430cfd0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"f now\"\>", ",", "Power"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"z now\"\>", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"f now\"\>", ",", "Times"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"z now\"\>", ",", "y"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"f now\"\>", ",", "Plus"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"z now\"\>", ",", "y"}], "}"}]}], "}"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "x"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.939849197611479*^9, 3.9398492140422087`*^9}},
 CellLabel->"Out[463]=",
 CellID->1597423910,ExpressionUUID->"e6782c01-fffe-4459-b3a8-b799bf4e4f26"]
}, Open  ]],

Cell["\<\
Returning to our previous rule for functions of 2 arguments, let us first fix \
the problem with the g[y, x] term so that it also matches. Our solution will \
be to add another rule, thus making a list of replacement rules:\
\>", "Text",
 CellChangeTimes->{{3.939849265253955*^9, 3.9398492714149446`*^9}, 
   3.939931388177002*^9},
 CellID->1821942861,ExpressionUUID->"eecb3068-ce34-49ad-a6b1-4fe658086a6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"f_", "[", 
      RowBox[{"x", ",", "z_"}], "]"}], "->", 
     RowBox[{"f", "[", 
      RowBox[{"10", ",", "z"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"f_", "[", 
      RowBox[{"z_", ",", "x"}], "]"}], "->", 
     RowBox[{"f", "[", 
      RowBox[{"z", ",", "10"}], "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.93984928181047*^9, 3.939849299449194*^9}},
 CellLabel->"In[464]:=",
 CellID->1191073087,ExpressionUUID->"04a673ba-182c-4196-addb-43f9fda22eb6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"Sin", "[", "x", "]"}], ",", "100", ",", 
   RowBox[{"10", " ", "y"}], ",", 
   RowBox[{"10", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "10"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939849299922599*^9},
 CellLabel->"Out[464]=",
 CellID->1570960580,ExpressionUUID->"9a0af1e2-c6a8-43ac-9fd2-c9eec2699930"]
}, Open  ]],

Cell["Combining 1, 2 and 3-argument cases together", "ItemNumbered",
 CellChangeTimes->{3.939849309770091*^9},
 CellID->1970511842,ExpressionUUID->"615f4b9c-5cd3-46ab-81f7-6ff1ac000e20"],

Cell["\<\
Now, let us change our rules such that in the Sin[x] the replacement will \
also take place - that is, now we want <x> to be replaced in functions of \
either one or two arguments. For this, we combine our very first rule with \
the last two:\
\>", "Text",
 CellChangeTimes->{{3.9398493178656597`*^9, 3.939849323527863*^9}, 
   3.939947092814117*^9, 3.940017704298566*^9},
 CellID->2047208107,ExpressionUUID->"f570c891-eec2-45c4-80b6-b1ccd2748b03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"f_", "[", "x", "]"}], ":>", 
     RowBox[{"f", "[", "10", "]"}]}], ",", 
    RowBox[{
     RowBox[{"f_", "[", 
      RowBox[{"x", ",", "y_"}], "]"}], ":>", 
     RowBox[{"f", "[", 
      RowBox[{"10", ",", "y"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"f_", "[", 
      RowBox[{"z_", ",", "x"}], "]"}], "->", 
     RowBox[{"f", "[", 
      RowBox[{"z", ",", "10"}], "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9398493387642384`*^9, 3.939849371362262*^9}},
 CellLabel->"In[465]:=",
 CellID->622811184,ExpressionUUID->"09e60a08-ebb3-4e16-a31d-38f9aafc664b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"Sin", "[", "10", "]"}], ",", "100", ",", 
   RowBox[{"10", " ", "y"}], ",", 
   RowBox[{"10", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "10"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939849371940387*^9},
 CellLabel->"Out[465]=",
 CellID->1024031273,ExpressionUUID->"ccbc3b9c-7e65-4a6e-b4f3-47bc2ad4898c"]
}, Open  ]],

Cell["\<\
Finally, we would like to add a rule to include a function of 3 variables:\
\>", "Text",
 CellChangeTimes->{3.939849401571171*^9, 3.939931388198451*^9},
 CellID->457823318,ExpressionUUID->"bfaf5605-551d-457b-97c9-ccf275456036"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"f_", "[", "x", "]"}], "->", 
     RowBox[{"f", "[", "10", "]"}]}], ",", 
    RowBox[{
     RowBox[{"f_", "[", 
      RowBox[{"x", ",", "y_"}], "]"}], "->", 
     RowBox[{"f", "[", 
      RowBox[{"10", ",", "y"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"f_", "[", 
      RowBox[{"z_", ",", "x"}], "]"}], "->", 
     RowBox[{"f", "[", 
      RowBox[{"z", ",", "10"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"f_", "[", 
      RowBox[{"x", ",", "y_", ",", "z_"}], "]"}], "->", 
     RowBox[{"f", "[", 
      RowBox[{"10", ",", "y", ",", "z"}], "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.939849408744522*^9, 3.939849437932095*^9}},
 CellLabel->"In[466]:=",
 CellID->1515670669,ExpressionUUID->"8a502053-7cee-4011-9149-5cd5d44f3a47"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"Sin", "[", "10", "]"}], ",", "100", ",", 
   RowBox[{"10", " ", "y"}], ",", 
   RowBox[{"10", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "10"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"10", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.93984943842421*^9},
 CellLabel->"Out[466]=",
 CellID->619736021,ExpressionUUID->"94b22418-4f18-4404-a16a-367ec8dfa699"]
}, Open  ]],

Cell["New pattern - building block - BlankSequence - and a caution", \
"ItemNumbered",
 CellChangeTimes->{3.939849450126453*^9},
 CellTags->"4.2.4.7",
 CellID->607616997,ExpressionUUID->"42e9bb2c-5815-4169-8f5c-0e3b76c1e99f"],

Cell["\<\
Let me now introduce another pattern-building block similar to Blank[], which \
simplifies the construction of many patterns. The literal command for this \
new pattern object is BlankSequence[]. Its literal equivalent is a double \
underscore sign <__>:\
\>", "Text",
 CellChangeTimes->{{3.93984946161338*^9, 3.939849474096798*^9}, 
   3.939931388219919*^9, 3.939947092837872*^9, 3.940017704316922*^9},
 CellID->1788811121,ExpressionUUID->"85b4e2ec-796b-4fa3-b0a2-7f7d0f17566e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BlankSequence", "[", "]"}]], "Input",
 CellChangeTimes->{{3.939849479079596*^9, 3.939849481975515*^9}},
 CellLabel->"In[467]:=",
 CellID->1358891586,ExpressionUUID->"2b74bdc1-9cff-4e9b-a98a-8aa16889677e"],

Cell[BoxData["__"], "Output",
 CellChangeTimes->{3.939849482329956*^9},
 CellLabel->"Out[467]=",
 CellID->1361051251,ExpressionUUID->"ace32a8c-af60-4e4e-9b61-af1567d436cf"]
}, Open  ]],

Cell["\<\
This pattern element is used to represent a sequence of one or more elements \
in an expression. For example:\
\>", "Text",
 CellChangeTimes->{{3.9398494888879137`*^9, 3.9398494944608307`*^9}, 
   3.93993138824122*^9},
 CellID->1773232413,ExpressionUUID->"89fdd994-9ba8-4561-b2e4-966a23c9062b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"p", ",", "q"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"g", "[", "t__", "]"}], "->", 
   RowBox[{"{", "t", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.939849497444983*^9, 3.939849513669403*^9}},
 CellLabel->"In[468]:=",
 CellID->2069583039,ExpressionUUID->"fd0c9417-1772-43d7-b476-a20d204dfd1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "q"}], "}"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9398495141215897`*^9},
 CellLabel->"Out[468]=",
 CellID->272145534,ExpressionUUID->"6a3e5550-400a-4e9a-b07e-f667c0d02368"]
}, Open  ]],

Cell["\<\
However, since this pattern-building block allows one to create patterns \
which match a much wider class of expressions, sometimes we get not what we \
would like to. Here, for instance, we want to add a literal <a> as an extra \
argument to all the functions in the list:\
\>", "Text",
 CellChangeTimes->{{3.939849525411721*^9, 3.9398495367988863`*^9}},
 CellID->1957305475,ExpressionUUID->"e3c52b2d-d940-4d5d-9f1a-cb8657d91af2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"f_", "[", "t__", "]"}], "->", 
   RowBox[{"f", "[", 
    RowBox[{"t", ",", "a"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.93984956365079*^9, 3.93984957752771*^9}},
 CellLabel->"In[469]:=",
 CellID->237695381,ExpressionUUID->"52d1c719-2d0b-4364-94e7-26d3ffe7aa27"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", "a"}], "}"}]], "Output",
 CellChangeTimes->{3.939849577874958*^9},
 CellLabel->"Out[469]=",
 CellID->562188985,ExpressionUUID->"7b67c872-7370-4f8d-99ed-6ddce21797c9"]
}, Open  ]],

Cell["\<\
Instead, <a> was added to the list itself. Why this happened is easy to see \
from the FullForm of our list:\
\>", "Text",
 CellChangeTimes->{3.939849591747527*^9, 3.939931388262569*^9, 
  3.939947092861329*^9, 3.94001770433541*^9},
 CellID->1929707742,ExpressionUUID->"3d965327-28f1-4d7f-beeb-c016ae53cc95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.939849599219019*^9, 3.939849601699938*^9}},
 CellLabel->"In[470]:=",
 CellID->312295022,ExpressionUUID->"ce7164f4-cb80-4f58-9eb1-5f3ebaa176da"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{"h", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.9398496021262503`*^9},
 CellLabel->"Out[470]//FullForm=",
 CellID->734701521,ExpressionUUID->"489c21ce-823d-44cb-8eee-dd51b1e7d025"]
}, Open  ]],

Cell["\<\
We see that the head List matches <f_> (which means any head), and t__ is \
matched by the interior of the list, since it is indeed a sequence of 2 \
elements-functions <g> and <h>. Thus, <a> has been added as a last argument \
to our list of functions, instead of being added to each function in the \
list. We see that our rule applied 1 level higher than we wanted - to the \
entire expression rather than parts. This is a common situation when \
ReplaceAll is used. In this case, the rules are first tried on the larger \
expressions, and if they match, the rules are applied to them, while \
subexpressions are not tried any more. There are several ways to change this \
behavior. One way is to create restricted patterns to make them more \
selective. Another way is to use the Replace command, which performs rule \
substitution in a different order.\
\>", "Text",
 CellChangeTimes->{{3.93984961496214*^9, 3.939849652246167*^9}, {
   3.93994709288454*^9, 3.939947092953299*^9}, {3.940017704354323*^9, 
   3.9400177044094753`*^9}, 3.940740643865057*^9},
 CellID->97493197,ExpressionUUID->"1e4d78a8-2595-440f-9482-fd3d97fa48e5"],

Cell["First look at conditional (restricted) patterns", "ItemNumbered",
 CellChangeTimes->{3.9398496672134647`*^9},
 CellID->253985566,ExpressionUUID->"a104b8e3-14bc-4aed-87a8-e52cea091680"],

Cell["\<\
If we choose the first way, we have to modify our pattern such that the head \
List will not match. The thing we would like to do is to impose a condition \
that <f> in the pattern <f> is not the same as List. This is how it is done \
(more details on restricted patterns later):\
\>", "Text",
 CellChangeTimes->{{3.939849678974798*^9, 3.939849690841462*^9}, 
   3.9399313882835913`*^9, {3.939947092976706*^9, 3.939947092999166*^9}, {
   3.940017704428029*^9, 3.94001770444665*^9}},
 CellID->754260115,ExpressionUUID->"cb411bf8-a35a-40a7-a742-a488c11fe330"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{
    RowBox[{"f_", "[", "t__", "]"}], "/;", 
    RowBox[{"f", "=!=", "List"}]}], "->", 
   RowBox[{"f", "[", 
    RowBox[{"t", ",", "a"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.939849703113057*^9, 3.939849718530154*^9}},
 CellLabel->"In[471]:=",
 CellID->890219357,ExpressionUUID->"f5e8d339-4e47-4d57-bc22-987c79bce45b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x", ",", "y", ",", "z", ",", "a"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "a"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939849718978258*^9},
 CellLabel->"Out[471]=",
 CellID->1918132560,ExpressionUUID->"8f8b0037-82b5-41cf-84a3-c2c52fd65396"]
}, Open  ]],

Cell["Now we see that it works as intended.", "Text",
 CellChangeTimes->{3.9398497859104767`*^9},
 CellID->29427156,ExpressionUUID->"0aef7beb-85bc-4a93-b7a1-4fe6a88205f7"],

Cell["Using Replace instead of ReplaceAll", "ItemNumbered",
 CellChangeTimes->{3.939849794339697*^9},
 CellID->660972082,ExpressionUUID->"cb23c1a4-a6ef-4783-b131-aee6559dd0b4"],

Cell["\<\
If we choose to use the Replace command, here is a way to do the same:\
\>", "Text",
 CellChangeTimes->{{3.939849805617837*^9, 3.939849809085472*^9}},
 CellID->24876243,ExpressionUUID->"52e71f80-93e0-4e77-8f4c-744fc63c7f15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Replace", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{"h", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"f_", "[", "t__", "]"}], "->", 
    RowBox[{"f", "[", 
     RowBox[{"t", ",", "a"}], "]"}]}], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.9398498397185802`*^9, 3.939849854085639*^9}},
 CellLabel->"In[473]:=",
 CellID->2107823752,ExpressionUUID->"bb1aab30-1e90-493a-a0f3-4342d8030241"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x", ",", "y", ",", "z", ",", "a"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "a"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.939849845292397*^9, 3.939849856330531*^9}},
 CellLabel->"Out[473]=",
 CellID->1886454439,ExpressionUUID->"0f90ebbe-6094-4e80-b252-f7ecf3f24b02"]
}, Open  ]],

Cell["\<\
The difference between Replace and ReplaceAll is that the former allows us to \
specify, in which level of expression the rules have to be applied. This \
gives a more detailed control over the application of rules.\
\>", "Text",
 CellChangeTimes->{{3.939849868473818*^9, 3.9398498721377897`*^9}},
 CellID->1668312395,ExpressionUUID->"6ad80f54-a992-420f-984c-493bb32b69ae"],

Cell["\<\
Here, for instance, we required that the rules be applied only at level 1, \
which means the level of list subexpressions - functions <g> and <h>.\
\>", "Text",
 CellChangeTimes->{{3.939849903045537*^9, 3.939849905014553*^9}, {
   3.939947093022942*^9, 3.939947093046191*^9}, {3.940017704465007*^9, 
   3.94001770448351*^9}, 3.940740643884223*^9},
 CellID->794844421,ExpressionUUID->"ab1fe00d-41a6-4b98-86b1-159f8008dfbb"],

Cell["\<\
Another difference is that even when we indicate that the rules have to be \
applied to the whole expression, which we can do by using Replace[expr, \
rules, Infinity], the order in which the rules will be applied is different \
from that of ReplaceAll: now the rules will be applied in the depth - first \
manner, from the smallest (inner) subexpressions to larger (outer) ones. This \
behavior is often preferred, and then one has to use Replace. We will use \
this observation in later chapters.\
\>", "Text",
 CellChangeTimes->{{3.939849916622772*^9, 3.9398499429336777`*^9}, 
   3.939931388304696*^9},
 CellID->120851010,ExpressionUUID->"e3d95ade-3830-45c9-8097-6162872a0582"],

Cell["\<\
Rule within a rule, and a better catchall solution for our example\
\>", "ItemNumbered",
 CellChangeTimes->{3.939849949890677*^9},
 CellID->1475107338,ExpressionUUID->"341c9ca0-4607-47e9-8a4d-d133a0afc088"],

Cell["\<\
Considering our initial problem, it is rather inconvenient to have so many \
rules for describing essentially some particular cases of a general \
situation: whenever literal <x> is an argument of some function, change it to \
<10> in that function. Let us see if we can write a more concise and general \
solution for this problem. The one that I suggest requires BlankSequence.\
\>", "Text",
 CellChangeTimes->{{3.939849964905692*^9, 3.939849980312149*^9}, 
   3.9399313883257837`*^9, {3.9399470930697947`*^9, 3.939947093092011*^9}, {
   3.9400177045021267`*^9, 3.940017704523427*^9}},
 CellID->1577808798,ExpressionUUID->"e8d431d2-6273-444e-9c39-19fed55fe46e"],

Cell[TextData[StyleBox["Illustrating expression deconstruction",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{3.9398499895383253`*^9},
 CellID->757372273,ExpressionUUID->"c88b22d6-3e14-4772-9396-c5ad114bf08a"],

Cell["\<\
To illustrate how it works here, we will now create a rule which will \
\[OpenCurlyDoubleQuote]deconstruct\[CloseCurlyDoubleQuote] our expressions \
according to this pattern:\
\>", "Text",
 CellChangeTimes->{{3.939849999450096*^9, 3.9398500063539457`*^9}, 
   3.939931388347287*^9},
 CellID->1020216542,ExpressionUUID->"ea02067a-14bc-42f2-8140-18e834dd8ee6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{
    RowBox[{"f_", "[", "t__", "]"}], "/;", 
    RowBox[{"f", "=!=", "List"}]}], "->", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<function\>\"", ",", "f"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<args\>\"", ",", 
       RowBox[{"{", "t", "}"}]}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.939850013869463*^9, 3.939850052598895*^9}},
 CellLabel->"In[474]:=",
 CellID->334271056,ExpressionUUID->"29fac91c-945c-464a-b6bc-b8ff7f72b019"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "Sin"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", "x", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "Power"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "2"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "Times"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "Plus"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "g"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "x"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "h"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "Cos"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", "y", "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939850054084422*^9},
 CellLabel->"Out[474]=",
 CellID->1143329225,ExpressionUUID->"435ad7d4-8c96-4774-8867-1d9af617f4e4"]
}, Open  ]],

Cell["\<\
The reason that I used a restricted pattern with a condition f =!= List is \
that otherwise the whole list will match, since its elements match the \
pattern __:\
\>", "Text",
 CellChangeTimes->{{3.939850085282445*^9, 3.9398500918003263`*^9}, 
   3.939931388368971*^9},
 CellID->250611219,ExpressionUUID->"c5db1aff-1e3d-4f19-a6b0-19a57dbeb3ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"f_", "[", "t__", "]"}], "->", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<function\>\"", ",", "f"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<args\>\"", ",", 
       RowBox[{"{", "t", "}"}]}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{3.9398501241061897`*^9},
 CellLabel->"In[475]:=",
 CellID->925828816,ExpressionUUID->"f5ed6854-0c66-41f2-9824-23dea3f51843"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"function\"\>", ",", "List"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"args\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"Sin", "[", "x", "]"}], ",", 
       SuperscriptBox["x", "2"], ",", 
       RowBox[{"x", " ", "y"}], ",", 
       RowBox[{"x", "+", "y"}], ",", 
       RowBox[{"g", "[", 
        RowBox[{"y", ",", "x"}], "]"}], ",", 
       RowBox[{"h", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
       RowBox[{"Cos", "[", "y", "]"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939850125416079*^9},
 CellLabel->"Out[475]=",
 CellID->1324781660,ExpressionUUID->"11823bb5-4cc8-4c41-85ef-5c8c973d2531"]
}, Open  ]],

Cell["\<\
Restricted patterns we will cover later, for now just think of it as a \
pattern with a certain condition attached. At the same time, this example by \
itself shows that one has to be careful when defining patterns since the can \
match in more cases than we expect.\
\>", "Text",
 CellChangeTimes->{{3.9398501365612507`*^9, 3.939850147567402*^9}},
 CellID->721504762,ExpressionUUID->"9ff3bcc5-afed-40e1-9c50-52914e66b165"],

Cell[TextData[StyleBox["The solution to our problem",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{3.93985015833317*^9},
 CellID->1332728949,ExpressionUUID->"c3415523-80f5-464c-a7ea-0b54eb9996c3"],

Cell["Returning to our initial problem, here is a solution:", "Text",
 CellChangeTimes->{3.93985016631432*^9},
 CellID->921007633,ExpressionUUID->"1c495349-6fa9-4227-ba3b-1e2826f26118"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{
    RowBox[{"f_", "[", "t__", "]"}], "/;", 
    RowBox[{"f", "=!=", "List"}]}], ":>", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"f", "[", "t", "]"}], "/.", 
     RowBox[{"x", "->", "10"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.93985018781618*^9, 3.939850194831807*^9}},
 CellLabel->"In[476]:=",
 CellID->1342386202,ExpressionUUID->"12df8da8-667b-4ce8-99f3-91225763c2ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"Sin", "[", "10", "]"}], ",", "100", ",", 
   RowBox[{"10", " ", "y"}], ",", 
   RowBox[{"10", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "10"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"10", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939850195248879*^9},
 CellLabel->"Out[476]=",
 CellID->1005884226,ExpressionUUID->"159989ef-42ea-4d6a-b36c-168e66996002"]
}, Open  ]],

Cell[TextData[StyleBox["Explanation",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{3.9398502292276297`*^9},
 CellID->904917198,ExpressionUUID->"c4cb2a91-d335-43f6-8f58-e437c9742dc0"],

Cell["Use parentheses to impose the correct precedence", "SubitemNumbered",
 CellChangeTimes->{3.939850279688322*^9},
 CellID->520760660,ExpressionUUID->"bfbf1e6a-59bb-4b0f-b413-8a53e256ed9b"],

Cell["\<\
This solution is remarkable in several aspects. First of all, we have used a \
rule within a rule, and the inner rule we used in parentheses. The meaning of \
this is: once we found anything that matches the pattern of the \
\[OpenCurlyDoubleQuote]first\[CloseCurlyDoubleQuote] (or \
\[OpenCurlyDoubleQuote]outer\[CloseCurlyDoubleQuote]) rule, make a \
replacement in this expression according to the \[OpenCurlyDoubleQuote]second\
\[CloseCurlyDoubleQuote], or \[OpenCurlyDoubleQuote]inner\
\[CloseCurlyDoubleQuote] rule. The first (\[OpenCurlyDoubleQuote]outer\
\[CloseCurlyDoubleQuote]) rule acts here essentially as a filter for a second \
(\[OpenCurlyDoubleQuote]inner\[CloseCurlyDoubleQuote]) one. Should we omit \
the parentheses, and we would not get the desired result:\
\>", "Text",
 CellChangeTimes->{{3.939850290350935*^9, 3.939850306643804*^9}, {
  3.939931388390512*^9, 3.9399313884109898`*^9}},
 CellID->879485865,ExpressionUUID->"30e6714f-257b-4292-ac83-29eab8913eee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"x", "^", "2"}], ",", 
     RowBox[{"x", "*", "y"}], ",", 
     RowBox[{"x", "+", "y"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"y", ",", "x"}], "]"}], ",", 
     RowBox[{"h", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
   RowBox[{
    RowBox[{
     RowBox[{"f_", "[", "t__", "]"}], "/;", 
     RowBox[{"f", "=!=", "List"}]}], ":>", 
    RowBox[{"f", "[", "t", "]"}]}]}], "/.", 
  RowBox[{"x", "->", "10"}]}]], "Input",
 CellChangeTimes->{{3.93985035971716*^9, 3.939850362300592*^9}},
 CellLabel->"In[477]:=",
 CellID->608482746,ExpressionUUID->"4d2f7729-4718-4cdc-a614-e94827ea4b4a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", 
   RowBox[{"Sin", "[", "10", "]"}], ",", "100", ",", 
   RowBox[{"10", " ", "y"}], ",", 
   RowBox[{"10", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "10"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"10", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939850363183433*^9},
 CellLabel->"Out[477]=",
 CellID->555568285,ExpressionUUID->"df9cacd1-7b77-4a02-b180-a373928dcbc6"]
}, Open  ]],

Cell["\<\
The reason this happened is that the rule application is left-associative. \
Thus, the first rule applied first, and was essentially idle, because it says \
by itself just f_[t__] /; f =!= List:> f[t], that is, replace an expression \
of this form by itself:\
\>", "Text",
 CellChangeTimes->{{3.939850423856439*^9, 3.939850435914999*^9}, {
  3.939931388432334*^9, 3.939931388452832*^9}},
 CellID->1359985507,ExpressionUUID->"821f2f97-98b5-4b80-b2b9-c370984cfe47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"step1", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"x", "^", "2"}], ",", 
     RowBox[{"x", "*", "y"}], ",", 
     RowBox[{"x", "+", "y"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"y", ",", "x"}], "]"}], ",", 
     RowBox[{"h", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
   RowBox[{
    RowBox[{
     RowBox[{"f_", "[", "t__", "]"}], "/;", 
     RowBox[{"f", "=!=", "List"}]}], ":>", 
    RowBox[{"f", "[", "t", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.939850458439104*^9, 3.9398504606879053`*^9}},
 CellLabel->"In[478]:=",
 CellID->1041483023,ExpressionUUID->"2ea6cfb6-1c34-4048-a597-429df14cbf2b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"x", " ", "y"}], ",", 
   RowBox[{"x", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "x"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939850466981894*^9},
 CellLabel->"Out[478]=",
 CellID->566398151,ExpressionUUID->"3d06c936-2983-4908-9997-0e1ad2181a6b"]
}, Open  ]],

Cell["\<\
The second rule then applied to <step1>, and it says: replace <x> by <10> \
whenever <x> occurs. Thus, for example, the first element of the list, which \
is just <x> and is not an argument of any function, also got replaced.\
\>", "Text",
 CellChangeTimes->{{3.9398504856825953`*^9, 3.9398504926800213`*^9}, 
   3.93993138847402*^9, {3.939947093116181*^9, 3.939947093206854*^9}, {
   3.940017704544973*^9, 3.940017704619257*^9}},
 CellID->887671738,ExpressionUUID->"7ab75447-a9f9-4d86-bd33-616a9d6cb3fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"step1", "/.", 
  RowBox[{"x", "->", "10"}]}]], "Input",
 CellChangeTimes->{{3.9398505028516283`*^9, 3.939850505984466*^9}},
 CellLabel->"In[479]:=",
 CellID->512509600,ExpressionUUID->"fed03ad4-e170-40fc-9f9d-30d9a489fc01"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", 
   RowBox[{"Sin", "[", "10", "]"}], ",", "100", ",", 
   RowBox[{"10", " ", "y"}], ",", 
   RowBox[{"10", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "10"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"10", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939850506279216*^9},
 CellLabel->"Out[479]=",
 CellID->721126482,ExpressionUUID->"4412f982-f33d-4f0b-b0fd-d51273083409"]
}, Open  ]],

Cell["\<\
However, if we use the parentheses, we ensure that the second rule is \
actually applied to the results \[OpenCurlyDoubleQuote]filtered\
\[CloseCurlyDoubleQuote] by the first rule.\
\>", "Text",
 CellChangeTimes->{{3.939850541455019*^9, 3.939850543587332*^9}},
 CellID->220746024,ExpressionUUID->"f1f097aa-eda8-4358-b442-01e246561867"],

Cell["\<\
Use RuleDelayed to supply correct arguments to the inner rule\
\>", "SubitemNumbered",
 CellChangeTimes->{3.93985055598442*^9},
 CellID->1585612355,ExpressionUUID->"c5ade085-7c23-4876-aa48-90574cf0b9c6"],

Cell["\<\
The second subtlety here is that we used RuleDelayed instead of Rule for the \
first (outer) rule. It is easy to see that if we don\[CloseCurlyQuote] t, we \
will not get a desired result:\
\>", "Text",
 CellChangeTimes->{{3.939850562699431*^9, 3.939850571886479*^9}, 
   3.939931388495185*^9},
 CellID->1262274862,ExpressionUUID->"a607a83b-03fc-478a-85a1-268fb351a6d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{
    RowBox[{"f_", "[", "t__", "]"}], "/;", 
    RowBox[{"f", "=!=", "List"}]}], "->", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"f", "[", "t", "]"}], "/.", 
     RowBox[{"x", "->", "10"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.9398505968855963`*^9, 3.939850598909292*^9}},
 CellLabel->"In[480]:=",
 CellID->2006835554,ExpressionUUID->"88f89441-8efb-4be7-bff0-dc4425babb62"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"x", " ", "y"}], ",", 
   RowBox[{"x", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "x"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939850599347452*^9},
 CellLabel->"Out[480]=",
 CellID->299601972,ExpressionUUID->"25a94646-dff8-4dda-9d13-ec36478eeabc"]
}, Open  ]],

Cell[TextData[{
 "The reason is that in the case of Rule, the r.h.s. of the rule is evaluated \
before the rule is substituted. Recalling the general strategy of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " evaluation, the inner rule will be evaluated before the outer one (this is \
what parentheses ensure). But by that time, the literal <t> in the outer rule \
has yet no relation to the matched parts of the list whatsoever, and just \
remains the literal <t>. Thus, the rule <f[t] /. x ->\n10> is completely idle \
and evaluates to f[t]. This results then in just the first rule f_[t__] /; f \
=!= List -> f[t], which again is idle."
}], "Text",
 CellChangeTimes->{{3.939850622350443*^9, 3.939850664463427*^9}, {
   3.939947093230628*^9, 3.939947093275469*^9}, {3.940017704637743*^9, 
   3.940017704674972*^9}, 3.940740643903502*^9},
 CellID->2030828202,ExpressionUUID->"db8c2ddc-7e3e-4628-9805-556881cf5ae1"],

Cell["Confirmation: use Trace command", "SubitemNumbered",
 CellChangeTimes->{3.939850678030121*^9, 3.9399313885164223`*^9},
 CellID->2096217178,ExpressionUUID->"16d12801-d50a-45f6-9587-70299cc6be64"],

Cell["This description can be confirmed with the Trace command:", "Text",
 CellChangeTimes->{3.93985068341218*^9},
 CellID->1652881611,ExpressionUUID->"d4151167-01c3-4919-bd0f-6d38951b0133"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"x", "^", "2"}], ",", 
     RowBox[{"x", "*", "y"}], ",", 
     RowBox[{"x", "+", "y"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"y", ",", "x"}], "]"}], ",", 
     RowBox[{"h", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
   RowBox[{
    RowBox[{
     RowBox[{"f_", "[", "t__", "]"}], "/;", 
     RowBox[{"f", "=!=", "List"}]}], "->", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"f", "[", "t", "]"}], "/.", 
      RowBox[{"x", "->", "10"}]}], ")"}]}]}], "//", "Trace"}]], "Input",
 CellChangeTimes->{{3.939850695000107*^9, 3.939850696391605*^9}},
 CellLabel->"In[481]:=",
 CellID->132778485,ExpressionUUID->"ca0507cf-b29d-4d02-89e8-2cdac3e436cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"x", "\[Rule]", "10"}],
          HoldForm], ",", 
         TagBox[
          RowBox[{"x", "\[Rule]", "10"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{
         RowBox[{"f", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
         RowBox[{"x", "\[Rule]", "10"}]}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"f", "[", "t", "]"}],
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{
       RowBox[{
        RowBox[{"f_", "[", "t__", "]"}], "/;", 
        RowBox[{"f", "=!=", "List"}]}], "\[Rule]", 
       RowBox[{"f", "[", "t", "]"}]}],
      HoldForm], ",", 
     TagBox[
      RowBox[{
       RowBox[{
        RowBox[{"f_", "[", "t__", "]"}], "/;", 
        RowBox[{"f", "=!=", "List"}]}], "\[Rule]", 
       RowBox[{"f", "[", "t", "]"}]}],
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"Sin", "[", "x", "]"}], ",", 
       SuperscriptBox["x", "2"], ",", 
       RowBox[{"x", " ", "y"}], ",", 
       RowBox[{"x", "+", "y"}], ",", 
       RowBox[{"g", "[", 
        RowBox[{"y", ",", "x"}], "]"}], ",", 
       RowBox[{"h", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
       RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", "\[VeryThinSpace]", 
     RowBox[{
      RowBox[{
       RowBox[{"f_", "[", "t__", "]"}], "/;", 
       RowBox[{"f", "=!=", "List"}]}], "\[Rule]", 
      RowBox[{"f", "[", "t", "]"}]}]}],
    HoldForm], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"List", "=!=", "List"}],
      HoldForm], ",", 
     TagBox["False",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"Sin", "=!=", "List"}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"Power", "=!=", "List"}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"Times", "=!=", "List"}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"Plus", "=!=", "List"}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"g", "=!=", "List"}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"h", "=!=", "List"}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"Cos", "=!=", "List"}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"Sin", "[", "x", "]"}], ",", 
      SuperscriptBox["x", "2"], ",", 
      RowBox[{"x", " ", "y"}], ",", 
      RowBox[{"x", "+", "y"}], ",", 
      RowBox[{"g", "[", 
       RowBox[{"y", ",", "x"}], "]"}], ",", 
      RowBox[{"h", "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
      RowBox[{"Cos", "[", "y", "]"}]}], "}"}],
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.9398506967202682`*^9},
 CellLabel->"Out[481]=",
 CellID->2077431279,ExpressionUUID->"9db6ae33-c20e-4bd8-b905-91c0ff666af7"]
}, Open  ]],

Cell["\<\
If we use RuleDelayed however, the r.h.s of the outer rule (which includes \
the inner rule) will not be evaluated until some match has been found for the \
outer rule. This will allow the inner rule to operate on expressions matched \
by the outer rule.\
\>", "Text",
 CellChangeTimes->{{3.9398509854836893`*^9, 3.939850992617326*^9}},
 CellID->499341597,ExpressionUUID->"938cb5ca-cf60-4b33-a538-0787e55b733e"],

Cell["Rule vs. RuleDelayed - when which one is appropriate", "ItemNumbered",
 CellChangeTimes->{3.939850999870557*^9},
 CellID->615398885,ExpressionUUID->"e9290740-6c29-4f13-aeaa-a9758f4cab1b"],

Cell[TextData[StyleBox["When RuleDelayed is better",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{3.9398510072090597`*^9},
 CellID->727816243,ExpressionUUID->"87c4c47d-9f2c-4ac0-9ecd-9acbe6ead9e3"],

Cell["\<\
In general, it is usually safer to use RuleDelayed in cases when the r.h.s. \
of the rule is not constant. For instance, all our replacements just \
discussed would have been totally spoiled had the parts of the pattern \
definition tags (such as f in f_, t in t__, etc) have any global values. This \
is, for instance, one of the rules we used above, but with some pattern tags \
having some global values before the application of rule:\
\>", "Text",
 CellChangeTimes->{{3.939851015770808*^9, 3.939851031031549*^9}},
 CellID->340742789,ExpressionUUID->"a97bfeaf-9364-4200-b781-1f7ea834ae0f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", "\"\<Global function\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", "\"\<global value\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{
    RowBox[{"f_", "[", "t__", "]"}], "/;", 
    RowBox[{"f", "=!=", "List"}]}], "->", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<function\>\"", ",", "f"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<args\>\"", ",", 
       RowBox[{"{", "t", "}"}]}], "}"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.9398510392210283`*^9, 3.93985107663174*^9}},
 CellLabel->"In[482]:=",
 CellID->780927452,ExpressionUUID->"6736b916-a640-4b52-9508-b4c349aaa3c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "\<\"Global function\"\>"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", "\<\"global value\"\>", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "\<\"Global function\"\>"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", "\<\"global value\"\>", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "\<\"Global function\"\>"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", "\<\"global value\"\>", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "\<\"Global function\"\>"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", "\<\"global value\"\>", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "\<\"Global function\"\>"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", "\<\"global value\"\>", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "\<\"Global function\"\>"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", "\<\"global value\"\>", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "\<\"Global function\"\>"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", "\<\"global value\"\>", "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9398510774212923`*^9},
 CellLabel->"Out[484]=",
 CellID->377225784,ExpressionUUID->"bb0f148b-c792-47fa-9be7-03e068d811c2"]
}, Open  ]],

Cell["\<\
Once again, this is because the r.h.s. of the rule has been evaluated before \
any match could have taken place. To be safe, use RuleDelayed:\
\>", "Text",
 CellChangeTimes->{{3.93985109653502*^9, 3.93985109941569*^9}, 
   3.939931388537085*^9},
 CellID->127977162,ExpressionUUID->"858bb96e-cc29-45c6-b91c-090cd9a1bf94"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", "\"\<Global function\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", "\"\<global value\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{
    RowBox[{"f_", "[", "t__", "]"}], "/;", 
    RowBox[{"f", "=!=", "List"}]}], ":>", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<function\>\"", ",", "f"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<args\>\"", ",", 
       RowBox[{"{", "t", "}"}]}], "}"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.93985111150663*^9, 3.93985111723771*^9}},
 CellLabel->"In[487]:=",
 CellID->1765918034,ExpressionUUID->"0bd12580-aeb8-4f44-ae17-4134d2dfc79c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "Sin"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", "x", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "Power"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "2"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "Times"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "Plus"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "g"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "x"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "h"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"function\"\>", ",", "Cos"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"args\"\>", ",", 
       RowBox[{"{", "y", "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939851117784285*^9},
 CellLabel->"Out[489]=",
 CellID->974711517,ExpressionUUID->"1c9afac9-8dcb-4b73-a89f-b14a7266bf56"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "t"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.939851154303378*^9, 3.9398511566128674`*^9}},
 CellLabel->"In[490]:=",
 CellID->51217874,ExpressionUUID->"c914395f-19df-4592-94f8-000ecd1c6e41"],

Cell[TextData[StyleBox["When Rule is better",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{3.939851164169961*^9},
 CellID->78484454,ExpressionUUID->"3abe4567-95cd-426c-8395-80b6ee337d95"],

Cell["\<\
There are of course cases when Rule has to be used instead - this is when the \
r.h.s. of the rule is a constant. For example, say we want to substitute \
every even number in a list by the value of the integral of the gaussian over \
the half-line. This is how long it takes with Rule (for this size of the list)\
\>", "Text",
 CellChangeTimes->{{3.939851172987945*^9, 3.9398511849923077`*^9}},
 CellID->533259120,ExpressionUUID->"01c93d96-dcae-4322-8d71-9d2fe72d729a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Range", "[", "50", "]"}], "/.", 
    RowBox[{
     RowBox[{"_", "?", "EvenQ"}], "->", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"x", "^", "2"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]}], "//", 
   "Short"}], "//", "Timing"}]], "Input",
 CellChangeTimes->{{3.939851189102705*^9, 3.9398512145997467`*^9}},
 CellLabel->"In[491]:=",
 CellID->388780197,ExpressionUUID->"0dd53bb3-3d6b-4601-a940-68ff0e2519f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.151423`", ",", 
   TagBox[
    RowBox[{"{", 
     RowBox[{"1", ",", 
      FractionBox[
       SqrtBox["\[Pi]"], "2"], ",", "3", ",", 
      FractionBox[
       SqrtBox["\[Pi]"], "2"], ",", "5", ",", 
      RowBox[{"\[LeftSkeleton]", "41", "\[RightSkeleton]"}], ",", "47", ",", 
      FractionBox[
       SqrtBox["\[Pi]"], "2"], ",", "49", ",", 
      FractionBox[
       SqrtBox["\[Pi]"], "2"]}], "}"}],
    Short]}], "}"}]], "Output",
 CellChangeTimes->{3.939851215564761*^9},
 CellLabel->"Out[491]=",
 CellID->1668058186,ExpressionUUID->"0e6c40f4-873c-4e89-80ea-92b118acd7ea"]
}, Open  ]],

Cell["And now with RuleDelayed:", "Text",
 CellChangeTimes->{3.939851251231338*^9, 3.939931388557616*^9},
 CellID->139349159,ExpressionUUID->"a34a5b6a-30b7-4b29-ad49-9632e4e66091"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Range", "[", "50", "]"}], "/.", 
    RowBox[{
     RowBox[{"_", "?", "EvenQ"}], ":>", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"x", "^", "2"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]}], "//", 
   "Short"}], "//", "Timing"}]], "Input",
 CellChangeTimes->{{3.93985126086049*^9, 3.939851263485648*^9}},
 CellLabel->"In[492]:=",
 CellID->1284140083,ExpressionUUID->"250cb1bf-7599-4f88-ab21-33530f7559d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.233774`", ",", 
   TagBox[
    RowBox[{"{", 
     RowBox[{"1", ",", 
      FractionBox[
       SqrtBox["\[Pi]"], "2"], ",", "3", ",", 
      FractionBox[
       SqrtBox["\[Pi]"], "2"], ",", "5", ",", 
      RowBox[{"\[LeftSkeleton]", "41", "\[RightSkeleton]"}], ",", "47", ",", 
      FractionBox[
       SqrtBox["\[Pi]"], "2"], ",", "49", ",", 
      FractionBox[
       SqrtBox["\[Pi]"], "2"]}], "}"}],
    Short]}], "}"}]], "Output",
 CellChangeTimes->{3.939851265198547*^9},
 CellLabel->"Out[492]=",
 CellID->1328219837,ExpressionUUID->"2958b386-3846-4c7f-92d6-6f0755c740c2"]
}, Open  ]],

Cell["\<\
What happens here is that in one case, the integral is computed exactly once, \
while in the other it is recomputed over and over again. Once again, the \
situation here is very similar to the one with immediate and delayed \
assignments Set and SetDelayed.\
\>", "Text",
 CellChangeTimes->{{3.939851276399507*^9, 3.939851284983692*^9}},
 CellID->298289894,ExpressionUUID->"885278d5-2504-47d8-99d2-88792eccd983"],

Cell["Patterns testing heads of expressions", "ItemNumbered",
 CellChangeTimes->{3.939851292540782*^9},
 CellID->1894551982,ExpressionUUID->"565020ac-4501-4fd6-bc77-d2e5debaa37d"],

Cell["\<\
Let us again return to our original list of expressions. We can also \
construct more stringent rules which will operate only on certain functions, \
for example:\
\>", "Text",
 CellChangeTimes->{{3.939851301044169*^9, 3.9398513041659117`*^9}, 
   3.939931388578178*^9},
 CellID->995127405,ExpressionUUID->"c9b6f47c-092d-405f-b3ad-b0b9845458da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{"f_Sin", ":>", 
   RowBox[{"(", 
    RowBox[{"f", "/.", 
     RowBox[{"x", "->", "10"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.9398513219872427`*^9, 3.939851329113242*^9}},
 CellLabel->"In[493]:=",
 CellID->1662901366,ExpressionUUID->"56182143-6fc0-4543-822b-6ee825aa330b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"Sin", "[", "10", "]"}], ",", 
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"x", " ", "y"}], ",", 
   RowBox[{"x", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "x"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939851330068256*^9},
 CellLabel->"Out[493]=",
 CellID->998120560,ExpressionUUID->"8fa4e93a-d1db-432d-bdbe-6e7ed6f6edd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{"f_Plus", ":>", 
   RowBox[{"(", 
    RowBox[{"f", "/.", 
     RowBox[{"x", "->", "10"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.939851341549459*^9, 3.93985134508634*^9}},
 CellLabel->"In[494]:=",
 CellID->1637710650,ExpressionUUID->"7da10cc7-a13a-416e-8eb3-0b431406a8cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"x", " ", "y"}], ",", 
   RowBox[{"10", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "x"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939851345668229*^9},
 CellLabel->"Out[494]=",
 CellID->169290767,ExpressionUUID->"53fd9a26-d291-4f51-ba23-910f79671a16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{"f_Power", ":>", 
   RowBox[{"(", 
    RowBox[{"f", "/.", 
     RowBox[{"x", "->", "10"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.939851355514534*^9, 3.9398513561569443`*^9}},
 CellLabel->"In[495]:=",
 CellID->1167542403,ExpressionUUID->"6c5e40cc-27c4-4563-8392-ad6924a1ef47"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"Sin", "[", "x", "]"}], ",", "100", ",", 
   RowBox[{"x", " ", "y"}], ",", 
   RowBox[{"x", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "x"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939851356568622*^9},
 CellLabel->"Out[495]=",
 CellID->1813231560,ExpressionUUID->"70c45393-2415-4237-92d2-6d16d84237a9"]
}, Open  ]],

Cell["\<\
We have introduced another useful part of the pattern - the part which checks \
the Head. Although strictly speaking such patterns should be already \
considered restricted patterns and this topic we did not cover yet, this \
construction is purely syntactic and thus still appropriate for our present \
discussion. The idea is that the pattern x_head will match any single \
expression with the Head <head>.\
\>", "Text",
 CellChangeTimes->{{3.939851365618875*^9, 3.939851383803125*^9}, 
   3.9399470932998323`*^9, 3.9400177046935663`*^9, 3.940740643922825*^9},
 CellID->231934081,ExpressionUUID->"5c3706b2-9fe3-4ef0-8279-d0ea8ab91969"],

Cell["On one pitfall of pattern-building", "ItemNumbered",
 CellChangeTimes->{{3.9398515047911158`*^9, 3.9398515068815937`*^9}},
 CellID->1941757593,ExpressionUUID->"a86df6c9-1767-4780-a215-ee159c064f53"],

Cell["\<\
n the first case, by writing the pattern as above, we did not save much:\
\>", "Text",
 CellChangeTimes->{3.939851518109961*^9},
 CellID->1958365739,ExpressionUUID->"a3f8e578-c5fb-4a7d-9df7-d5974e9e9ff4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"Plus", "[", "t__", "]"}], ":>", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Plus", "[", "t", "]"}], "/.", 
     RowBox[{"x", "->", "10"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.9398515295878687`*^9, 3.939851540868163*^9}},
 CellLabel->"In[496]:=",
 CellID->1918601451,ExpressionUUID->"d142f23f-c789-4b9a-94d6-cce32fa97dcd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", 
   RowBox[{"Sin", "[", "10", "]"}], ",", "100", ",", 
   RowBox[{"10", " ", "y"}], ",", 
   RowBox[{"10", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "10"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"10", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9398515425130167`*^9},
 CellLabel->"Out[496]=",
 CellID->1741357684,ExpressionUUID->"8af72c81-b72d-4326-8b34-ff98f2d03075"]
}, Open  ]],

Cell["\<\
What happened? This kind of behavior creates nightmares for those starting to \
fool around with rules and patterns. This is generally beyond the scope of \
the present discussion, but what happened here is that pattern itself \
evaluated before it had any chance to match in its original form:\
\>", "Text",
 CellChangeTimes->{{3.9398515672389317`*^9, 3.9398515778281097`*^9}},
 CellID->1091453672,ExpressionUUID->"22cddb9c-18e0-48a4-a05b-1cd27fab0f18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plus", "[", "t__", "]"}]], "Input",
 CellChangeTimes->{{3.939851580551751*^9, 3.9398515832476883`*^9}},
 CellLabel->"In[497]:=",
 CellID->1398297786,ExpressionUUID->"80e604e3-2e0e-4966-8861-2480d3df8bb2"],

Cell[BoxData["t__"], "Output",
 CellChangeTimes->{3.939851583595457*^9},
 CellLabel->"Out[497]=",
 CellID->1528244771,ExpressionUUID->"c3a0dbc2-2efa-41b0-a0d5-418494ec1c51"]
}, Open  ]],

Cell["\<\
The real pattern that was matched then was not Plus[t__] but just t__, with \
the above result (RuleDelayed does not evaluate the r.h.s. of the rule, but \
it of course does evaluate the l.h.s). The solution in such cases is to use \
the HoldPattern command:\
\>", "Text",
 CellChangeTimes->{{3.939851597956229*^9, 3.939851611834476*^9}},
 CellID->1305448077,ExpressionUUID->"3be4f758-c918-4a67-914d-78441fcbcbb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"Plus", "[", "t__", "]"}], "]"}], ":>", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Plus", "[", "t", "]"}], "/.", 
     RowBox[{"x", "->", "10"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.939851625274487*^9, 3.939851633300352*^9}},
 CellLabel->"In[498]:=",
 CellID->1578965662,ExpressionUUID->"81270da5-f0a4-4377-a776-db0198951541"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"x", " ", "y"}], ",", 
   RowBox[{"10", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "x"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939851633782167*^9},
 CellLabel->"Out[498]=",
 CellID->828349579,ExpressionUUID->"294aa88a-6111-4211-abbe-1afbb9fc9118"]
}, Open  ]],

Cell["\<\
Now it works as intended. The same problem is with the Power function, which \
also evaluates to its argument given a single argument:\
\>", "Text",
 CellChangeTimes->{{3.939851662351392*^9, 3.939851665353261*^9}},
 CellID->76205940,ExpressionUUID->"f8db10f9-c5f8-4c97-9c64-0f376f0b03a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"Power", "[", "t__", "]"}], ":>", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Power", "[", "t", "]"}], "/.", 
     RowBox[{"x", "->", "10"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.9398516764170732`*^9, 3.939851680237935*^9}},
 CellLabel->"In[499]:=",
 CellID->1698596940,ExpressionUUID->"d479c408-a549-4022-b2cd-b8851b9a1288"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", 
   RowBox[{"Sin", "[", "10", "]"}], ",", "100", ",", 
   RowBox[{"10", " ", "y"}], ",", 
   RowBox[{"10", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "10"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"10", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939851680652021*^9},
 CellLabel->"Out[499]=",
 CellID->327501962,ExpressionUUID->"9410831a-b1c1-4a7d-a822-caea1131800e"]
}, Open  ]],

Cell["The correct way:", "Text",
 CellChangeTimes->{3.9398516970921793`*^9, 3.9399313885987387`*^9},
 CellID->1109208651,ExpressionUUID->"055f0d77-b133-4391-9c40-5f344608fc54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"x", "*", "y"}], ",", 
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"y", ",", "x"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"Cos", "[", "y", "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"Power", "[", "t__", "]"}], "]"}], ":>", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Power", "[", "t", "]"}], "/.", 
     RowBox[{"x", "->", "10"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.939851707953804*^9, 3.939851720584195*^9}},
 CellLabel->"In[500]:=",
 CellID->164257750,ExpressionUUID->"3e24ead3-66b4-4c6f-a2a4-75a350501413"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"Sin", "[", "x", "]"}], ",", "100", ",", 
   RowBox[{"x", " ", "y"}], ",", 
   RowBox[{"x", "+", "y"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"y", ",", "x"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Cos", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939851720846786*^9},
 CellLabel->"Out[500]=",
 CellID->231466176,ExpressionUUID->"a1a1d8ea-00c8-4dae-9f35-82a1cfb3f5c5"]
}, Open  ]],

Cell["\<\
The uses of HoldPattern and related things will be covered systematically \
later. Returning to our current topic, we see that the forms x_head and \
head[x__] are similar but not entirely equivalent.\
\>", "Text",
 CellChangeTimes->{{3.939851755805155*^9, 3.939851757713703*^9}},
 CellID->472534114,ExpressionUUID->"8ef674c2-c741-418c-8723-371d530b7289"],

Cell["\<\
Matching expressions with any number of elements - BlankNullSequence\
\>", "ItemNumbered",
 CellChangeTimes->{3.939851775680893*^9},
 CellID->381716862,ExpressionUUID->"c0f0e43a-dbbc-4de5-b864-0e785caa4b81"],

Cell["\<\
The other source of inequivalence between these two forms can be seen on the \
following example:\
\>", "Text",
 CellChangeTimes->{3.9398517866746683`*^9, 3.939931388619197*^9},
 CellID->981646045,ExpressionUUID->"fe2d3f0e-1b89-4632-8ef7-ebf89ea5c550"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"g", "[", "x", "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"Sin", "[", 
     RowBox[{"x", "+", "y"}], "]"}], ",", 
    RowBox[{"f", "[", "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "t__", "]"}], ":>", 
    RowBox[{"a", "*", 
     RowBox[{"f", "[", "t", "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.939851797768847*^9, 3.9398518253667917`*^9}},
 CellLabel->"In[501]:=",
 CellID->244179813,ExpressionUUID->"6f617126-d3fb-485e-823e-4ba726d0b1e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"f", "[", "x", "]"}]}], ",", 
   RowBox[{"g", "[", "x", "]"}], ",", 
   RowBox[{"a", " ", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"x", "+", "y"}], "]"}], ",", 
   RowBox[{"f", "[", "]"}], ",", 
   RowBox[{"a", " ", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.939851826954619*^9},
 CellLabel->"Out[501]=",
 CellID->856240989,ExpressionUUID->"64726729-7390-46b3-8729-fc0a2ec4ff51"]
}, Open  ]],

Cell["\<\
Here, we multiplied by <a> all expressions with head <f>. However, the one \
with no arguments was missed. This does not happen for the <x_f> variant \
below - here all occurrences of <f> are incorporated, with or without \
arguments.\
\>", "Text",
 CellChangeTimes->{{3.939851835708476*^9, 3.939851842510199*^9}, {
   3.939947093323114*^9, 3.939947093345598*^9}, {3.9400177047124577`*^9, 
   3.940017704731015*^9}, 3.940740643942024*^9},
 CellID->554383576,ExpressionUUID->"c91a576d-206f-4e8a-b8a2-cab046936569"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"g", "[", "x", "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"Sin", "[", 
     RowBox[{"x", "+", "y"}], "]"}], ",", 
    RowBox[{"f", "[", "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "}"}], "/.", 
  RowBox[{"x_f", ":>", 
   RowBox[{"a", "*", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.939851854539176*^9, 3.9398518572543077`*^9}},
 CellLabel->"In[502]:=",
 CellID->1209279588,ExpressionUUID->"7f904884-6ca2-4f58-9b37-084674831a48"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"f", "[", "x", "]"}]}], ",", 
   RowBox[{"g", "[", "x", "]"}], ",", 
   RowBox[{"a", " ", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"x", "+", "y"}], "]"}], ",", 
   RowBox[{"a", " ", 
    RowBox[{"f", "[", "]"}]}], ",", 
   RowBox[{"a", " ", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9398518575246143`*^9},
 CellLabel->"Out[502]=",
 CellID->965948,ExpressionUUID->"894431ba-5c4d-473a-8470-be7a3bf627e1"]
}, Open  ]],

Cell["\<\
Notice by the way that the <x> in the pattern <x_f> has nothing to do with \
the global <x> (present for example in the expressions in the list), but \
rather has to be treated as a local variable whose scope is limited to the \
rule. Other pattern tags are usually local for RuleDelayed but global for \
Rule, as we already discussed.\
\>", "Text",
 CellChangeTimes->{{3.939851872596487*^9, 3.93985188080485*^9}, 
   3.93994709336908*^9, 3.940017704749455*^9},
 CellID->1202302507,ExpressionUUID->"ff22546e-988d-492d-aaed-dc1a5136091c"],

Cell["\<\
To make a structural pattern f[t__] \[OpenCurlyDoubleQuote]catch up\
\[CloseCurlyDoubleQuote] with the <x_f> one, we need to introduce another \
(last in this category) pattern-building block: <BlankNullSequence>, which \
has a triple underscore as abbreviation:\
\>", "Text",
 CellChangeTimes->{{3.939851888409988*^9, 3.939851901881681*^9}},
 CellID->960878265,ExpressionUUID->"129bd1ce-1345-4e06-adb3-626cc3ee3f68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BlankNullSequence", "[", "]"}]], "Input",
 CellChangeTimes->{{3.93985190422285*^9, 3.9398519084191523`*^9}},
 CellLabel->"In[503]:=",
 CellID->1575068124,ExpressionUUID->"edd53d2a-73bc-4e7b-9bb0-7f5cd8504ed6"],

Cell[BoxData["___"], "Output",
 CellChangeTimes->{3.939851908737053*^9},
 CellLabel->"Out[503]=",
 CellID->1400852069,ExpressionUUID->"65457e59-4d41-4380-9808-1c1927ac7bff"]
}, Open  ]],

Cell["\<\
Its purpose is to match a sequence of zero or more expressions. Check now:\
\>", "Text",
 CellChangeTimes->{3.939851916472642*^9, 3.939931388639504*^9},
 CellID->1257501622,ExpressionUUID->"020f4ee7-92ee-4ce1-ae5c-269d8c94f1d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"g", "[", "x", "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"Sin", "[", 
     RowBox[{"x", "+", "y"}], "]"}], ",", 
    RowBox[{"f", "[", "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"f", "[", "t___", "]"}], ":>", 
   RowBox[{"a", "*", 
    RowBox[{"f", "[", "t", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.939851932333624*^9, 3.939851942065771*^9}},
 CellLabel->"In[504]:=",
 CellID->1443190827,ExpressionUUID->"43bb397d-f30f-467f-8f22-8683d9f98a44"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"f", "[", "x", "]"}]}], ",", 
   RowBox[{"g", "[", "x", "]"}], ",", 
   RowBox[{"a", " ", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"x", "+", "y"}], "]"}], ",", 
   RowBox[{"a", " ", 
    RowBox[{"f", "[", "]"}]}], ",", 
   RowBox[{"a", " ", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.939851943032237*^9},
 CellLabel->"Out[504]=",
 CellID->1389370231,ExpressionUUID->"6c1dac7b-67e8-4b0f-90d3-c2efe81b913b"]
}, Open  ]],

Cell["\<\
Now the results of the rule substitutions for this input are the same.\
\>", "Text",
 CellChangeTimes->{3.939851957040846*^9},
 CellID->1586267165,ExpressionUUID->"d664c5e7-e92a-4527-9fbd-ff70fc68440c"],

Cell["A bit more useful example", "ItemNumbered",
 CellChangeTimes->{3.93985196667867*^9},
 CellID->1530248297,ExpressionUUID->"b04b3eee-bcd8-40eb-af95-f81d8b9185bc"],

Cell["\<\
To conclude this section, let us consider a bit more useful example of rule \
application: we will consider some polynomial of a single variable <x>, break \
it into a list of terms, and then replace all even powers of <x> by some \
object, say a literal <a>. Consider for example:\
\>", "Text",
 CellChangeTimes->{{3.939851972293784*^9, 3.939851983391776*^9}, {
   3.939931388659992*^9, 3.9399313886795797`*^9}, {3.93994709339362*^9, 
   3.9399470934388514`*^9}, {3.940017704768257*^9, 3.940017704805251*^9}, 
   3.940740643961179*^9},
 CellID->618971207,ExpressionUUID->"f56e858f-e687-4109-8b33-d4bff672cdac"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"testexpr", ",", "x", ",", "a"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"testexpr", "=", 
  RowBox[{"Expand", "[", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "10"], "]"}]}]}], "Input",
 CellChangeTimes->{{3.939851989571797*^9, 3.939852004001409*^9}},
 CellLabel->"In[505]:=",
 CellID->1604957631,ExpressionUUID->"4f7ebdbd-a4fb-4b71-b87e-c8c8dfd9b1cf"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"10", " ", "x"}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox["x", "4"]}], "+", 
  RowBox[{"252", " ", 
   SuperscriptBox["x", "5"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox["x", "6"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox["x", "8"]}], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox["x", "9"]}], "+", 
  SuperscriptBox["x", "10"]}]], "Output",
 CellChangeTimes->{3.9398520047875633`*^9},
 CellLabel->"Out[506]=",
 CellID->190372218,ExpressionUUID->"74fde1ca-cf68-4ab3-a592-d5e196ab1984"]
}, Open  ]],

Cell["\<\
It is very easy to get a list of individual terms - let us look at the \
FullForm of this expression:\
\>", "Text",
 CellChangeTimes->{3.939852018781361*^9, 3.939931388701089*^9},
 CellID->255278047,ExpressionUUID->"414dd231-0b43-4bf4-a377-7eefddc7ee4e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", "testexpr", "]"}]], "Input",
 CellChangeTimes->{{3.939852026404955*^9, 3.9398520305100594`*^9}},
 CellLabel->"In[507]:=",
 CellID->1872957697,ExpressionUUID->"29cb9cf5-6186-4fea-90a2-7726ed1be2c1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Times", "[", 
      RowBox[{"10", ",", "x"}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"45", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "2"}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"120", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "3"}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"210", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "4"}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"252", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "5"}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"210", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "6"}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"120", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "7"}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"45", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "8"}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"10", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "9"}], "]"}]}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"x", ",", "10"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.939852030817192*^9},
 CellLabel->"Out[507]//FullForm=",
 CellID->526329663,ExpressionUUID->"4bcb9652-19d6-4a07-9fbc-31a7021ac183"]
}, Open  ]],

Cell["\<\
All that is needed in this particular case (but keep in mind that this is not \
a general solution, since it exploits the absence of any sums inside the \
terms) is to Replace the head Plus by head List:\
\>", "Text",
 CellChangeTimes->{{3.939852072593544*^9, 3.939852075519574*^9}, 
   3.939931388721714*^9},
 CellID->537504048,ExpressionUUID->"cbd91a19-5b71-4723-b432-1957c9980b21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testexpr", "/.", 
  RowBox[{"Plus", "->", "List"}]}]], "Input",
 CellChangeTimes->{{3.939852095121928*^9, 3.939852100901216*^9}},
 CellLabel->"In[508]:=",
 CellID->794943911,ExpressionUUID->"45e01fe0-61aa-4d5e-8975-0abdddc723c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"10", " ", "x"}], ",", 
   RowBox[{"45", " ", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"120", " ", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"210", " ", 
    SuperscriptBox["x", "4"]}], ",", 
   RowBox[{"252", " ", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"210", " ", 
    SuperscriptBox["x", "6"]}], ",", 
   RowBox[{"120", " ", 
    SuperscriptBox["x", "7"]}], ",", 
   RowBox[{"45", " ", 
    SuperscriptBox["x", "8"]}], ",", 
   RowBox[{"10", " ", 
    SuperscriptBox["x", "9"]}], ",", 
   SuperscriptBox["x", "10"]}], "}"}]], "Output",
 CellChangeTimes->{3.939852101310739*^9},
 CellLabel->"Out[508]=",
 CellID->1521715091,ExpressionUUID->"754ffb95-2ff2-4ecc-bab1-b7e8b47f3519"]
}, Open  ]],

Cell["\<\
Now we replace all even powers of <x> by <a>. Here we will go a little ahead \
of time and use a restricted pattern x^_?EvenQ. For now, let me just say that \
the pattern x^_ would mean any power of x (except perhaps just x, as it is \
represented differently), and x^_?EvenQ means any even power.\
\>", "Text",
 CellChangeTimes->{{3.939852110033662*^9, 3.9398521220067577`*^9}, {
  3.939947093462739*^9, 3.939947093485668*^9}, {3.9400177048236637`*^9, 
  3.94001770484231*^9}},
 CellID->1340243056,ExpressionUUID->"d8cc46de-3d29-48d3-a48f-966fc9295451"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"testexpr", "/.", 
   RowBox[{"Plus", "->", "List"}]}], "/.", 
  RowBox[{
   RowBox[{"x", "^", 
    RowBox[{"(", 
     RowBox[{"_", "?", "EvenQ"}], ")"}]}], "->", "a"}]}]], "Input",
 CellChangeTimes->{{3.939852128444394*^9, 3.939852144735667*^9}},
 CellLabel->"In[509]:=",
 CellID->953239710,ExpressionUUID->"0f634e83-6ec2-46d7-95fc-509f4cf8adc4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"10", " ", "x"}], ",", 
   RowBox[{"45", " ", "a"}], ",", 
   RowBox[{"120", " ", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"210", " ", "a"}], ",", 
   RowBox[{"252", " ", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"210", " ", "a"}], ",", 
   RowBox[{"120", " ", 
    SuperscriptBox["x", "7"]}], ",", 
   RowBox[{"45", " ", "a"}], ",", 
   RowBox[{"10", " ", 
    SuperscriptBox["x", "9"]}], ",", "a"}], "}"}]], "Output",
 CellChangeTimes->{3.939852153004767*^9},
 CellLabel->"Out[509]=",
 CellID->1358070797,ExpressionUUID->"ec6cbbbc-7ae2-46d5-b924-33483d17ab36"]
}, Open  ]],

Cell["\<\
We can also, for instance, apply some function <f> to these even powers:\
\>", "Text",
 CellChangeTimes->{3.939852165221191*^9, 3.93993138874203*^9, 
  3.939947093509191*^9, 3.9400177048608027`*^9},
 CellID->1673334137,ExpressionUUID->"5dca89e2-4f9c-4985-8fba-a39a504026a1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testexpr", "/.", 
  RowBox[{
   RowBox[{"x", "^", 
    RowBox[{"(", 
     RowBox[{"y_", "?", "EvenQ"}], ")"}]}], ":>", 
   RowBox[{"f", "[", 
    RowBox[{"x", "^", "y"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.9398521781257257`*^9, 3.939852194893735*^9}},
 CellLabel->"In[510]:=",
 CellID->1475452612,ExpressionUUID->"1260f789-cfa4-4be0-9b48-198b964587d0"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"10", " ", "x"}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"252", " ", 
   SuperscriptBox["x", "5"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox["x", "9"]}], "+", 
  RowBox[{"45", " ", 
   RowBox[{"f", "[", 
    SuperscriptBox["x", "2"], "]"}]}], "+", 
  RowBox[{"210", " ", 
   RowBox[{"f", "[", 
    SuperscriptBox["x", "4"], "]"}]}], "+", 
  RowBox[{"210", " ", 
   RowBox[{"f", "[", 
    SuperscriptBox["x", "6"], "]"}]}], "+", 
  RowBox[{"45", " ", 
   RowBox[{"f", "[", 
    SuperscriptBox["x", "8"], "]"}]}], "+", 
  RowBox[{"f", "[", 
   SuperscriptBox["x", "10"], "]"}]}]], "Output",
 CellChangeTimes->{3.9398521959252996`*^9},
 CellLabel->"Out[511]=",
 CellID->588656271,ExpressionUUID->"cfedcd1d-b891-4d3d-935b-32fb19423c72"]
}, Open  ]],

Cell["\<\
The zero-th power (which is, the x-independent term) was missed. To account \
for it is not completely trivial. Here is the solution for this particular \
case - it contains too many details not covered yet so I will postpone the \
explanation.\
\>", "Text",
 CellChangeTimes->{{3.939852229421505*^9, 3.93985224542936*^9}},
 CellID->88784968,ExpressionUUID->"afc13f9c-116d-4567-b861-d874db3ba853"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "x", ",", "y", ",", "a", ",", "b", ",", "newexpr"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"newexpr", "=", 
  RowBox[{"Replace", "[", 
   RowBox[{"testexpr", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", ":", "_", ":", "1"}], ")"}], "*", 
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"y_", "?", "EvenQ"}], ")"}]}]}], ":>", 
       RowBox[{"a", "*", 
        RowBox[{"f", "[", 
         RowBox[{"x", "^", "y"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"a_", "/;", 
        RowBox[{"FreeQ", "[", 
         RowBox[{"a", ",", "x"}], "]"}]}], ":>", 
       RowBox[{"f", "[", "a", "]"}]}]}], "}"}], ",", "1"}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.9398522578064127`*^9, 3.939852309320516*^9}, 
   3.9398537269570427`*^9},
 CellLabel->"In[515]:=",
 CellID->1405997541,ExpressionUUID->"c4599e42-c71e-4e05-b584-8ce780f6fad8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"10", " ", "x"}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"252", " ", 
   SuperscriptBox["x", "5"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox["x", "9"]}], "+", 
  RowBox[{"f", "[", "1", "]"}], "+", 
  RowBox[{"45", " ", 
   RowBox[{"f", "[", 
    SuperscriptBox["x", "2"], "]"}]}], "+", 
  RowBox[{"210", " ", 
   RowBox[{"f", "[", 
    SuperscriptBox["x", "4"], "]"}]}], "+", 
  RowBox[{"210", " ", 
   RowBox[{"f", "[", 
    SuperscriptBox["x", "6"], "]"}]}], "+", 
  RowBox[{"45", " ", 
   RowBox[{"f", "[", 
    SuperscriptBox["x", "8"], "]"}]}], "+", 
  RowBox[{"f", "[", 
   SuperscriptBox["x", "10"], "]"}]}]], "Output",
 CellChangeTimes->{3.939852309852161*^9, 3.9398537280794573`*^9},
 CellLabel->"Out[516]=",
 CellID->1133823831,ExpressionUUID->"b18ad989-005c-4034-863d-f09653089ff9"]
}, Open  ]],

Cell["\<\
The function <f> can of course be anything. For instance, we may consider a \
shift by a constant <b>:\
\>", "Text",
 CellChangeTimes->{
  3.9398523629677267`*^9, 3.939931388762876*^9, {3.9399470935330067`*^9, 
   3.939947093555648*^9}, {3.940017704879518*^9, 3.940017704897773*^9}},
 CellID->2009441282,ExpressionUUID->"98586c3d-7dee-4ad8-822f-d2cb857c77f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newexpr", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"z_", "^", "k_"}], "]"}], ":>", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"z", "-", "b"}], ")"}], "^", "k"}]}], ",", 
    RowBox[{
     RowBox[{"f", "[", "1", "]"}], "->", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.939852390500618*^9, 3.939852416354991*^9}},
 CellLabel->"In[517]:=",
 CellID->175503233,ExpressionUUID->"bd999d88-3c3e-491d-a9c1-982a8ab8e0b4"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"10", " ", "x"}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"252", " ", 
   SuperscriptBox["x", "5"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox["x", "9"]}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "b"}], "+", "x"}], ")"}], "2"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "b"}], "+", "x"}], ")"}], "4"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "b"}], "+", "x"}], ")"}], "6"]}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "b"}], "+", "x"}], ")"}], "8"]}], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "b"}], "+", "x"}], ")"}], "10"]}]], "Output",
 CellChangeTimes->{3.939852417134842*^9, 3.939853732778496*^9},
 CellLabel->"Out[517]=",
 CellID->1430440295,ExpressionUUID->"91f18f45-e5ab-48c4-afd8-875802d004b7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"testexpr", ",", "newexpr"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.939853744768749*^9, 3.9398537507541122`*^9}},
 CellLabel->"In[518]:=",
 CellID->1020394511,ExpressionUUID->"da0626db-2c9a-4e6d-a25f-d3ba1d6fe2ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applying rules repeatedly - ReplaceRepeated", "Subsubsection",
 CellChangeTimes->{
  3.9398537604713507`*^9, {3.9405437791342897`*^9, 3.940543783078187*^9}},
 CellTags->"4.2.5",
 CellID->723417659,ExpressionUUID->"2ed84018-8d1a-4b31-b3a3-cd025bc9cb02"],

Cell[TextData[{
 "Since any given rule or a list of rules are normally tried on any element \
of expression just once, they don\[CloseCurlyQuote] t \
\[OpenCurlyDoubleQuote]keep track\[CloseCurlyDoubleQuote] of changes in an \
expression caused by their own actions. One may create more interesting \
constructs by repeatedly applying a rule or list of rules to an expression \
until it stops changing. By doing so, one in fact can imitate locally (and in \
a very oversimplified manner) the global evaluation process that\n",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " goes through in evaluating expressions. There exists a special built-in \
function performing such repeated rule application - ReplaceRepeated. Its \
symbolic equivalent is //. (slash-slash-dot). Let us give some examples:"
}], "Text",
 CellChangeTimes->{{3.939853769261434*^9, 3.939853795526582*^9}},
 CellID->1575669146,ExpressionUUID->"1190430e-6ae1-4842-8dbc-8ac49118c590"],

Cell["Example: sorting a list of numbers", "ItemNumbered",
 CellChangeTimes->{3.939853844082006*^9},
 CellID->1454782552,ExpressionUUID->"2e30b7a1-b508-417a-89a5-22ef1d8c9550"],

Cell["Let us generate some list of random integer numbers:", "Text",
 CellChangeTimes->{3.939853851365171*^9, 3.9399313887833567`*^9},
 CellID->1429030369,ExpressionUUID->"e8f00a66-6966-473a-bcf3-f029fcacdbdd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "testlist", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testlist", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "20"}], "}"}], "]"}], ",", 
    RowBox[{"{", "15", "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.939853858230979*^9, 3.9398538758699636`*^9}},
 CellLabel->"In[519]:=",
 CellID->1992161910,ExpressionUUID->"6cd73bf1-7d0d-40e8-82bf-73b159546ed4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11", ",", "15", ",", "5", ",", "13", ",", "2", ",", "20", ",", "19", ",", 
   "11", ",", "9", ",", "16", ",", "1", ",", "15", ",", "11", ",", "2", ",", 
   "6"}], "}"}]], "Output",
 CellChangeTimes->{3.9398538768578053`*^9},
 CellLabel->"Out[520]=",
 CellID->737808046,ExpressionUUID->"52accb52-7f65-4082-b163-7378f8550153"]
}, Open  ]],

Cell["This is the rule we need:", "Text",
 CellChangeTimes->{3.939853885329884*^9, 3.939931388803916*^9},
 CellID->769251344,ExpressionUUID->"1529b607-cb20-48eb-9d51-d01fb4d8166d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sortrule", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x___", ",", "y_", ",", "z_", ",", "t___"}], "}"}], "/;", 
    RowBox[{"y", ">", "z"}]}], ":>", 
   RowBox[{"{", 
    RowBox[{"x", ",", "z", ",", "y", ",", "t"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.939853887779264*^9, 3.93985390468851*^9}},
 CellLabel->"In[521]:=",
 CellID->678428516,ExpressionUUID->"0e0c3778-4093-4ac5-ac47-6b3f57aab729"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x___", ",", "y_", ",", "z_", ",", "t___"}], "}"}], "/;", 
   RowBox[{"y", ">", "z"}]}], "\[RuleDelayed]", 
  RowBox[{"{", 
   RowBox[{"x", ",", "z", ",", "y", ",", "t"}], "}"}]}]], "Output",
 CellChangeTimes->{3.9398539059170856`*^9},
 CellLabel->"Out[521]=",
 CellID->1777564916,ExpressionUUID->"2b06f6f3-ec13-4d4f-ad74-2d2a7b00f5ff"]
}, Open  ]],

Cell["\<\
What it does is clear from its form: it exchanges adjacent elements if the \
one to the right is smaller. Let us apply it:\
\>", "Text",
 CellChangeTimes->{{3.939853914311716*^9, 3.93985391612103*^9}},
 CellID->1888529795,ExpressionUUID->"8cc65787-8281-436f-a8f6-1cb50a4ce031"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "/.", "sortrule"}]], "Input",
 CellChangeTimes->{{3.939853924574398*^9, 3.9398539299919577`*^9}},
 CellLabel->"In[522]:=",
 CellID->485105927,ExpressionUUID->"ed140cd5-a985-4b63-8738-2baf689d0fff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11", ",", "5", ",", "15", ",", "13", ",", "2", ",", "20", ",", "19", ",", 
   "11", ",", "9", ",", "16", ",", "1", ",", "15", ",", "11", ",", "2", ",", 
   "6"}], "}"}]], "Output",
 CellChangeTimes->{3.9398539304322844`*^9},
 CellLabel->"Out[522]=",
 CellID->575402752,ExpressionUUID->"fcd546ec-f324-4a5e-887b-18d5de125610"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"testlist", "/.", "sortrule"}], "/.", "sortrule"}]], "Input",
 CellChangeTimes->{{3.939853962839848*^9, 3.939853965723071*^9}},
 CellLabel->"In[523]:=",
 CellID->675190423,ExpressionUUID->"51e53eaa-2d8e-4677-8ca2-448ef73b960e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "11", ",", "15", ",", "13", ",", "2", ",", "20", ",", "19", ",", 
   "11", ",", "9", ",", "16", ",", "1", ",", "15", ",", "11", ",", "2", ",", 
   "6"}], "}"}]], "Output",
 CellChangeTimes->{3.939853966037635*^9},
 CellLabel->"Out[523]=",
 CellID->1159532695,ExpressionUUID->"d62aecd8-31ce-4f6b-a152-d0c48bb50a90"]
}, Open  ]],

Cell["It is clear that this is a case for ReplaceRepeated:", "Text",
 CellChangeTimes->{3.9398539799642487`*^9, 3.939931388824503*^9},
 CellID->1999391987,ExpressionUUID->"5a9130fb-5b2d-4893-9695-a1525409dc45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "//.", "sortrule"}]], "Input",
 CellChangeTimes->{{3.9398539826377487`*^9, 3.939853987137471*^9}},
 CellLabel->"In[524]:=",
 CellID->1290960210,ExpressionUUID->"f1243037-c675-44b8-bbac-4038533f91d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "2", ",", "5", ",", "6", ",", "9", ",", "11", ",", "11",
    ",", "11", ",", "13", ",", "15", ",", "15", ",", "16", ",", "19", ",", 
   "20"}], "}"}]], "Output",
 CellChangeTimes->{3.939853987517383*^9},
 CellLabel->"Out[524]=",
 CellID->1343236646,ExpressionUUID->"faea7af4-5740-42af-8e21-d663567f1304"]
}, Open  ]],

Cell["\<\
We have just obtained a rule-based realization of the exchange sort.\
\>", "Text",
 CellChangeTimes->{3.9398604967210503`*^9},
 CellID->1430212058,ExpressionUUID->"b9f8cdb3-be92-41a9-b02f-ef70b37fd3f4"],

Cell["Example: deleting duplicate elements", "ItemNumbered",
 CellChangeTimes->{3.939860504866736*^9},
 CellID->789597935,ExpressionUUID->"559266ea-0828-4252-bb9d-647e50b42fcd"],

Cell["Let us again generate a list:", "Text",
 CellChangeTimes->{3.939860510080694*^9},
 CellID->1471038732,ExpressionUUID->"cf013fd9-cbdf-40bf-9c8b-0e28dd777a7c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "testlist", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testlist", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], "]"}], ",", 
    RowBox[{"{", "15", "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9398605138326597`*^9, 3.9398605277539387`*^9}},
 CellLabel->"In[525]:=",
 CellID->172245161,ExpressionUUID->"a3f82e70-6c70-4c5f-b3a7-fa0d9a916ed0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "5", ",", "2", ",", "2", ",", "3", ",", "1", ",", "5", ",", "4", 
   ",", "2", ",", "5", ",", "2", ",", "1", ",", "2", ",", "4", ",", "3"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.93986052827509*^9},
 CellLabel->"Out[526]=",
 CellID->1288573259,ExpressionUUID->"801a1c77-e39f-4834-83b5-da154b2c7cfa"]
}, Open  ]],

Cell["\<\
Suppose that we have to delete duplicate elements. This is the rule we need:\
\>", "Text",
 CellChangeTimes->{3.9398605374424963`*^9},
 CellID->1825667665,ExpressionUUID->"15fcf467-8b12-48fb-b15f-68f61de50873"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"delrule", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x___", ",", "y_", ",", "z___", ",", "y_", ",", "t___"}], "}"}], ":>", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.939860540505826*^9, 3.93986055767806*^9}},
 CellLabel->"In[527]:=",
 CellID->1156632543,ExpressionUUID->"2f6c68b5-9884-4862-b0c6-90e57b17d6e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x___", ",", "y_", ",", "z___", ",", "y_", ",", "t___"}], "}"}], 
  "\[RuleDelayed]", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "}"}]}]], "Output",
 CellChangeTimes->{3.939860559014292*^9},
 CellLabel->"Out[527]=",
 CellID->2016336698,ExpressionUUID->"8b99cdf6-746a-496a-bc2d-48789933d91a"]
}, Open  ]],

Cell["Let us run it a few times:", "Text",
 CellChangeTimes->{3.9398605651921597`*^9},
 CellID->1278933626,ExpressionUUID->"63e1d4fa-8ba8-4bf6-a3b9-546d6c0a2954"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "/.", "delrule"}]], "Input",
 CellChangeTimes->{{3.9398605671598*^9, 3.939860570522875*^9}},
 CellLabel->"In[528]:=",
 CellID->742942174,ExpressionUUID->"ce465d4c-6848-407e-a6cc-e0285d401aec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "2", ",", "2", ",", "3", ",", "1", ",", "5", ",", "4", ",", "2", 
   ",", "5", ",", "2", ",", "1", ",", "2", ",", "4", ",", "3"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.939860570870504*^9},
 CellLabel->"Out[528]=",
 CellID->1041760144,ExpressionUUID->"e8548aed-0d27-4646-a8d2-c494bfa0bbb2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "//.", "delrule"}]], "Input",
 CellChangeTimes->{{3.93986057826073*^9, 3.939860581997272*^9}},
 CellLabel->"In[529]:=",
 CellID->252257081,ExpressionUUID->"b345d757-a7fb-4ebd-9fff-f4515d3a0d1f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "2", ",", "3", ",", "1", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.9398605823544207`*^9},
 CellLabel->"Out[529]=",
 CellID->1866475176,ExpressionUUID->"71ab2b47-c71e-43a5-a819-7436c2895700"]
}, Open  ]],

Cell["Example - a rule-based factorial", "ItemNumbered",
 CellChangeTimes->{3.939860593301713*^9},
 CellID->1554651303,ExpressionUUID->"45f2c759-2595-485c-85ea-dc8cd2977982"],

Cell["Here we will have the following rules:", "Text",
 CellChangeTimes->{3.939860599897051*^9},
 CellID->590916472,ExpressionUUID->"fcf87c3d-d06d-404e-940d-7155608d0492"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "fact", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frules", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"fact", "[", "1", "]"}], "->", "1"}], ",", 
     RowBox[{
      RowBox[{"fact", "[", "n_Integer", "]"}], ":>", 
      RowBox[{"n", "*", 
       RowBox[{"fact", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.93986060178087*^9, 3.939860620887164*^9}},
 CellLabel->"In[530]:=",
 CellID->1512350813,ExpressionUUID->"2a1ea21e-dcbd-47b3-9081-e7da7d364667"],

Cell["Let us check:", "Text",
 CellChangeTimes->{{3.939860624554492*^9, 3.9398606269208593`*^9}},
 CellID->404080913,ExpressionUUID->"ec539d6e-9e29-4fe6-942f-fab48ee4e442"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fact", "[", "5", "]"}], "/.", "frules"}]], "Input",
 CellChangeTimes->{{3.939860645011025*^9, 3.9398606503067303`*^9}},
 CellLabel->"In[532]:=",
 CellID->241902147,ExpressionUUID->"91bcbfd4-cc9f-44e0-a8db-4b80e7ad4a90"],

Cell[BoxData[
 RowBox[{"5", " ", 
  RowBox[{"fact", "[", "4", "]"}]}]], "Output",
 CellChangeTimes->{3.9398606506491957`*^9},
 CellLabel->"Out[532]=",
 CellID->2074496097,ExpressionUUID->"359fb66d-14bd-4e84-897b-b28c3cd0288f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fact", "[", "5", "]"}], "//.", "frules"}]], "Input",
 CellChangeTimes->{{3.939860653259284*^9, 3.939860657705719*^9}},
 CellLabel->"In[533]:=",
 CellID->238394837,ExpressionUUID->"dc235547-f879-49d2-bb8e-41054e14b894"],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{3.939860658019142*^9},
 CellLabel->"Out[533]=",
 CellID->1213246863,ExpressionUUID->"a886c380-79e5-40a8-85b0-6dbb22185c36"]
}, Open  ]],

Cell["\<\
Note that the rules are local. In particular, the expression fact[5] by \
itself does not have any value neither before, not after the application of \
rules:\
\>", "Text",
 CellChangeTimes->{{3.939860665824726*^9, 3.939860670660034*^9}},
 CellID->682798176,ExpressionUUID->"baebe0ad-51aa-4e06-8aa1-1f7dc9845f9b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fact", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.939860678579206*^9, 3.939860679753034*^9}},
 CellLabel->"In[534]:=",
 CellID->1654981903,ExpressionUUID->"c960f43d-f693-469a-84be-c58c3a6c0722"],

Cell[BoxData[
 RowBox[{"fact", "[", "5", "]"}]], "Output",
 CellChangeTimes->{3.9398606802828207`*^9},
 CellLabel->"Out[534]=",
 CellID->928865543,ExpressionUUID->"d216e5d2-0be6-498f-ab59-7190b674e78b"]
}, Open  ]],

Cell["\<\
Note also that had we placed the rules in a different order, and we would \
have entered an infinite loop, since the first rule would always apply and \
thus the second (fact[1]->1) would have no chance to apply. You can try this \
if you wish, but be sure to save your session and be ready to rerun the \
kernel.\
\>", "Text",
 CellChangeTimes->{{3.939860688743112*^9, 3.9398606985881557`*^9}},
 CellID->1384551158,ExpressionUUID->"e72d8346-b642-42ac-a574-f7974a62114e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "frules", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.9398607017563257`*^9, 3.93986070601234*^9}},
 CellLabel->"In[535]:=",
 CellID->582965527,ExpressionUUID->"50fea5ac-a103-45bc-bf5f-c49cd65cbaee"],

Cell["Efficiency issues", "ItemNumbered",
 CellChangeTimes->{3.9398607126393337`*^9},
 CellID->772310137,ExpressionUUID->"f153fe81-788a-4936-8635-8c5e47f2bdd8"],

Cell["\<\
There are many other non-trivial examples of this technique. However, often \
it turns out to be not the most efficient one, since it is quite easy to \
build inefficient rules and patterns. For instance, our first example with \
list sorting has a terrible performance and is completely impractical for any \
realistic sizes of a list, since the pattern-matcher needs roughly linear (in \
the list size) time to find a first match for exchange, and
then it only does a single exchange and starts all over! The number of \
exchanges needed is of the order of the square of the list size, and thus we \
conclude that our realization has roughly cubic complexity.\
\>", "Text",
 CellChangeTimes->{{3.939860718777978*^9, 3.939860745794004*^9}},
 CellID->825310091,ExpressionUUID->"baf6966f-24d7-4d57-a14f-d94a8629634a"],

Cell["Let us do some performance measurements:", "Text",
 CellChangeTimes->{3.939860756230578*^9},
 CellID->409001111,ExpressionUUID->"456848cc-d372-448a-89f4-c591f011ff82"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "testlist", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "500"}], "}"}], "]"}], ",", 
     RowBox[{"{", "25", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939860758138142*^9, 3.93986077961649*^9}},
 CellLabel->"In[536]:=",
 CellID->1050200292,ExpressionUUID->"6b330841-75ae-4e55-bd65-73382de30d8e"],

Cell["This is the rule we need:", "Text",
 CellChangeTimes->{3.939860787897503*^9, 3.939931388845126*^9},
 CellID->545314814,ExpressionUUID->"002b3aad-7946-422d-9952-e4b99d2599cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"testlist", "//.", "sortrule"}], ";"}], "//", "Timing"}]], "Input",\

 CellChangeTimes->{{3.939860789836094*^9, 3.939860799284679*^9}},
 CellLabel->"In[538]:=",
 CellID->1020617598,ExpressionUUID->"7a4bdc8e-9ff5-4776-9af5-1800174a8ac7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000782`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.939860800042308*^9},
 CellLabel->"Out[538]=",
 CellID->975491865,ExpressionUUID->"989be727-8154-4463-88a6-ebe361304f81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "500"}], "}"}], "]"}], ",", 
     RowBox[{"{", "50", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testlist", "//.", "sortrule"}], ";"}], "//", "Timing"}]}], "Input",\

 CellChangeTimes->{{3.939860813382197*^9, 3.939860821933617*^9}},
 CellLabel->"In[539]:=",
 CellID->1201613857,ExpressionUUID->"ff7875fd-9ea3-448a-a465-cc527299357a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.007269`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.939860822349697*^9},
 CellLabel->"Out[540]=",
 CellID->1073962810,ExpressionUUID->"dbe304fd-3e0f-42c4-b7a7-c9f669a62360"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "500"}], "}"}], "]"}], ",", 
     RowBox[{"{", "100", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testlist", "//.", "sortrule"}], ";"}], "//", "Timing"}]}], "Input",\

 CellChangeTimes->{{3.939860831550529*^9, 3.939860840802373*^9}},
 CellLabel->"In[543]:=",
 CellID->492894635,ExpressionUUID->"966300f2-aa75-4d3c-b6da-bd8d7021a9c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.066007`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.939860838039935*^9, 3.9398608413264923`*^9}},
 CellLabel->"Out[544]=",
 CellID->1679004104,ExpressionUUID->"3ccaa118-09fc-40aa-8da3-164f7a166a17"]
}, Open  ]],

Cell["\<\
These timing results confirm our expectations. While this shows that our \
rule-based realization is completely inefficient since it adds another power \
of the list size to the standard complexity of the exchange sort algorithm, \
it is a good news that we can understand why this happens. Because it turns \
out that in many cases, the structures on which patterns are tried plus \
patterns themselves can be organized in such a
way that the pattern is usually matched very soon after the beginning. In \
fact, as was demonstrated for instance by David Wagner in his book [7] in the \
context of the mergesort algorithm, this technique allows to make the \
rule-based solution the most efficient of all.\
\>", "Text",
 CellChangeTimes->{{3.939860850550741*^9, 3.9398608946218023`*^9}},
 CellID->973592604,ExpressionUUID->"afefe2b5-7cd4-494a-ab7a-2e1f39de90ac"],

Cell["\<\
So, to put it simple: organize your data such as to ensure that the pattern \
matcher wastes as little time on a-priory doomed matching attempts as \
possible, and you will get an efficient rule-based solution.\
\>", "Text",
 CellChangeTimes->{{3.939860902966074*^9, 3.939860924205537*^9}},
 CellID->333502563,ExpressionUUID->"119b7957-f6cd-47ce-88f8-590cb9c43a1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conditional (restricted) patterns", "Subsubsection",
 CellChangeTimes->{3.939860933934466*^9},
 CellTags->"4.2.6",
 CellID->1220810882,ExpressionUUID->"09784536-1a61-4611-8aec-f64e489a6923"],

Cell["\<\
All simple patterns are completely syntax-based. In many cases, we would like \
to make a decision - whether or not for the pattern to match - not just on \
the basis of its syntax but also checking certain conditions that the matched \
(sub) expressions must satisfy. This is when restricted or conditional \
patterns come handy.\
\>", "Text",
 CellChangeTimes->{{3.9398609401105556`*^9, 3.939860957586381*^9}},
 CellID->1109730336,ExpressionUUID->"cc5a53fc-6e29-4c23-aa15-52a2a7164bc8"],

Cell["\<\
Conditional patterns are just normal patterns, but with some condition \
attached to them. There are three main forms of conditional patterns - \
patterns of the form <x_
f> which check the head of expression (we have already encountered those), \
patterns of the form x_?Predicate and patterns of the form x/;condition. We \
will now consider each type in more detail.\
\>", "Text",
 CellChangeTimes->{{3.939860965842804*^9, 3.939860983997477*^9}},
 CellID->177988772,ExpressionUUID->"05b1e328-8ea3-4717-be21-9ef4b3c60393"],

Cell["Patterns which check the head of an expression", "ItemNumbered",
 CellChangeTimes->{3.939860993294389*^9},
 CellID->1601231868,ExpressionUUID->"9f2fa61a-272c-4bab-8407-19c187772b80"],

Cell["\<\
Since I already described these, let us just consider a few more examples.\
\>", "Text",
 CellChangeTimes->{3.939860999696795*^9},
 CellID->1786424919,ExpressionUUID->"a830eef0-2e34-47be-aaa6-ce6f47bd8ad8"],

Cell["Example 1", "Subitem",
 CellChangeTimes->{{3.939861016171424*^9, 3.939861017553492*^9}},
 CellID->1655038174,ExpressionUUID->"0ba0c518-d2bf-4869-ae9d-e5344972a72a"],

Cell["Here is a list:", "Text",
 CellChangeTimes->{3.939861026198564*^9},
 CellID->1607776685,ExpressionUUID->"9a7be66e-7851-4543-8a34-2647fdbb6f81"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"testlist", ",", "a", ",", "x"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"testlist", "=", 
  RowBox[{"{", 
   RowBox[{"Pi", ",", "1.5", ",", 
    RowBox[{"3", "/", "2"}], ",", "10", ",", 
    RowBox[{"y", "^", "2"}], ",", "ABC", ",", 
    RowBox[{"Sin", "[", "x", "]"}], ",", "15", ",", 
    RowBox[{"Cos", "[", 
     RowBox[{"Exp", "[", 
      RowBox[{"Tan", "[", "2", "]"}], "]"}], "]"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.939861028951571*^9, 3.9398610525919867`*^9}},
 CellLabel->"In[545]:=",
 CellID->2089613529,ExpressionUUID->"10837d03-e71f-4400-8b1b-2e750ce6040e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Pi]", ",", "1.5`", ",", 
   FractionBox["3", "2"], ",", "10", ",", 
   SuperscriptBox["y", "2"], ",", "ABC", ",", 
   RowBox[{"Sin", "[", "x", "]"}], ",", "15", ",", 
   RowBox[{"Cos", "[", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"Tan", "[", "2", "]"}]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939861054103067*^9},
 CellLabel->"Out[546]=",
 CellID->392390973,ExpressionUUID->"68808b3a-02f6-41db-a68b-cea8c747da9c"]
}, Open  ]],

Cell["\<\
We will now replace all integer numbers here by some object <a> (this can be \
anything):\
\>", "Text",
 CellChangeTimes->{3.9398610634664593`*^9, 3.939931388865671*^9, 
  3.939947093580009*^9, 3.940017704916576*^9},
 CellID->1142505597,ExpressionUUID->"515aa297-2d36-4a9d-81e4-09f6e2f91406"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "/.", 
  RowBox[{"_Integer", ":>", "a"}]}]], "Input",
 CellChangeTimes->{{3.939861068949765*^9, 3.939861075138825*^9}},
 CellLabel->"In[547]:=",
 CellID->366291280,ExpressionUUID->"244ede59-f59a-4ac2-bdd4-1a26ab60c80a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Pi]", ",", "1.5`", ",", 
   FractionBox["3", "2"], ",", "a", ",", 
   SuperscriptBox["y", "a"], ",", "ABC", ",", 
   RowBox[{"Sin", "[", "x", "]"}], ",", "a", ",", 
   RowBox[{"Cos", "[", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"Tan", "[", "a", "]"}]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939861075891457*^9},
 CellLabel->"Out[547]=",
 CellID->1182504481,ExpressionUUID->"8e86f4b9-1505-4646-8f7c-cd9146538cb5"]
}, Open  ]],

Cell["\<\
Or, we can apply some function to these objects, but then we will need a tag \
for the pattern:\
\>", "Text",
 CellChangeTimes->{3.939861090873678*^9},
 CellID->1020311376,ExpressionUUID->"06537a21-9412-45e4-a3a3-fdb1d7dc236a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "/.", 
  RowBox[{"x_Integer", ":>", 
   RowBox[{"f", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.939861094537079*^9, 3.9398611024131603`*^9}},
 CellLabel->"In[548]:=",
 CellID->1323602477,ExpressionUUID->"0f69d54e-3909-49f9-be1c-b4c5ffd08e87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Pi]", ",", "1.5`", ",", 
   FractionBox["3", "2"], ",", 
   RowBox[{"f", "[", "10", "]"}], ",", 
   SuperscriptBox["y", 
    RowBox[{"f", "[", "2", "]"}]], ",", "ABC", ",", 
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", "15", "]"}], ",", 
   RowBox[{"Cos", "[", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"Tan", "[", 
      RowBox[{"f", "[", "2", "]"}], "]"}]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939861103128076*^9},
 CellLabel->"Out[548]=",
 CellID->1408712066,ExpressionUUID->"35915d61-e45f-43d8-bedf-73d42967bca9"]
}, Open  ]],

Cell["Example 2", "Subitem",
 CellChangeTimes->{{3.9398611123134327`*^9, 3.939861113989216*^9}},
 CellID->1095132720,ExpressionUUID->"591bc252-7369-4afc-a9fb-1018ba0da95a"],

Cell["\<\
We want to create a rule which will reverse the string. There is a built-in \
StringReverse function, so our first attempt is:\
\>", "Text",
 CellChangeTimes->{{3.939861128555265*^9, 3.939861133450523*^9}, 
   3.939931388886121*^9},
 CellID->763024792,ExpressionUUID->"8792e9a2-899b-439f-9dc5-6caedf3b97ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "1", ",", "ABC", ",", "\"\<never\>\"", ",", "Pi"}], 
   "}"}], "/.", 
  RowBox[{"s_", ":>", 
   RowBox[{"StringReverse", "[", "s", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.939861142990612*^9, 3.9398611700699863`*^9}},
 CellLabel->"In[550]:=",
 CellID->1098786749,ExpressionUUID->"787bd512-9b1a-4d92-91ff-89774bf6feb5"],

Cell[BoxData[
 TemplateBox[{
  "StringReverse", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"StringReverse\\\", \\\"[\\\", \\\"x\\\", \\\"]\\\"}]\\).\
\"", 2, 550, 33, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9398611706097116`*^9},
 CellLabel->"During evaluation of In[550]:=",
 CellID->1763802500,ExpressionUUID->"f0f31085-27be-4890-af58-5d331248c321"],

Cell[BoxData[
 TemplateBox[{
  "StringReverse", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"StringReverse\\\", \\\"[\\\", \\\"1\\\", \\\"]\\\"}]\\).\
\"", 2, 550, 34, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9398611706316643`*^9},
 CellLabel->"During evaluation of In[550]:=",
 CellID->364354312,ExpressionUUID->"5e9c0258-9165-4f9f-8d0e-e8e6c7943872"],

Cell[BoxData[
 TemplateBox[{
  "StringReverse", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"StringReverse\\\", \\\"[\\\", \\\"ABC\\\", \
\\\"]\\\"}]\\).\"", 2, 550, 35, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9398611706429787`*^9},
 CellLabel->"During evaluation of In[550]:=",
 CellID->1227044187,ExpressionUUID->"715d710c-2943-42d7-af5f-a35d5e76f1c9"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringReverse\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 550, 36, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.93986117065129*^9},
 CellLabel->"During evaluation of In[550]:=",
 CellID->646188768,ExpressionUUID->"9607f9b3-9111-4cfc-a05b-d6904c39bf46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"StringReverse", "[", "x", "]"}], ",", 
   RowBox[{"StringReverse", "[", "1", "]"}], ",", 
   RowBox[{"StringReverse", "[", "ABC", "]"}], ",", "\<\"reven\"\>", ",", 
   RowBox[{"StringReverse", "[", "\[Pi]", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.939861162024094*^9, 3.939861170660309*^9}},
 CellLabel->"Out[550]=",
 CellID->669820897,ExpressionUUID->"68a33b32-1ed8-4266-a31b-6f5012f7e1a1"]
}, Open  ]],

Cell[TextData[{
 "We see that we have to restrict the pattern to work only on real strings. \
We recall that all strings are atoms and have a head String (see section ",
 ButtonBox["1.1.5",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-1-Introduction.nb", CharacterEncoding -> 
     "UTF-8"], "1.1.5"},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-1-Introduction.nb"],
 "). Thus, we write:"
}], "Text",
 CellChangeTimes->{{3.9398611923962183`*^9, 3.939861194124826*^9}, {
   3.939861255350172*^9, 3.939861255357696*^9}, 3.939931388908576*^9},
 CellID->1483162083,ExpressionUUID->"119a9643-30b5-4b39-8888-9f08e1b6e096"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "1", ",", "ABC", ",", "\"\<never\>\"", ",", "Pi"}], 
   "}"}], "/.", 
  RowBox[{"s_String", ":>", 
   RowBox[{"StringReverse", "[", "s", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9398612881269484`*^9, 3.939861289104547*^9}},
 CellLabel->"In[551]:=",
 CellID->1376176265,ExpressionUUID->"149583c5-b799-45b1-90b2-666421bbf611"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "1", ",", "ABC", ",", "\<\"reven\"\>", ",", "\[Pi]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9398612918805113`*^9},
 CellLabel->"Out[551]=",
 CellID->1314588865,ExpressionUUID->"d56e4a13-75c7-4303-bf71-547bafcd84d2"]
}, Open  ]],

Cell["Example 3", "Subitem",
 CellChangeTimes->{{3.939861298510852*^9, 3.939861300128798*^9}},
 CellID->507596004,ExpressionUUID->"afe9ed66-abe4-44d5-a532-1e6a992862c5"],

Cell["\<\
We now want to apply a Sine function to all expressions which are of the form \
<f[something]>, where f is a fixed symbol. For example, for this list of \
expressions:\
\>", "Text",
 CellChangeTimes->{{3.9398613084488688`*^9, 3.939861312059372*^9}},
 CellID->1876623582,ExpressionUUID->"a3127c69-c8b6-4ed0-8087-83cc3706ea96"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"testlist", ",", "f", ",", "g"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"testlist", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"g", "[", "x", "]"}], ",", 
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"Cos", "[", 
     RowBox[{"x", "*", 
      RowBox[{"Tan", "[", "y", "]"}]}], "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"z", "*", 
      RowBox[{"Tan", "[", 
       RowBox[{"x", "+", "y"}], "]"}]}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"x", "-", "y"}], "]"}], "]"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.939861314922613*^9, 3.939861350709588*^9}},
 CellLabel->"In[552]:=",
 CellID->678405884,ExpressionUUID->"5c8554ac-20fc-4c52-859e-3402f7f07513"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", "x", "]"}], ",", 
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"x", " ", 
     RowBox[{"Tan", "[", "y", "]"}]}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"z", " ", 
     RowBox[{"Tan", "[", 
      RowBox[{"x", "+", "y"}], "]"}]}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"ArcSin", "[", 
     RowBox[{"x", "-", "y"}], "]"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.93986135165186*^9},
 CellLabel->"Out[553]=",
 CellID->542943180,ExpressionUUID->"1d0a0ea1-0a7f-4162-ae1b-cef17a9c8e6a"]
}, Open  ]],

Cell["\<\
This may be done in many ways, but the simplest is just this:\
\>", "Text",
 CellChangeTimes->{3.9398613621957407`*^9, 3.9399313889291897`*^9},
 CellID->1136819129,ExpressionUUID->"743c8e3c-5c88-424d-9893-28ea3c6a1849"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "/.", 
  RowBox[{"x_f", "->", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.93986136375907*^9, 3.939861370762048*^9}},
 CellLabel->"In[554]:=",
 CellID->1605245690,ExpressionUUID->"7a01ed55-f8bf-45ed-b830-5ffbbcd816c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", "x", "]"}], ",", 
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"f", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"x", " ", 
     RowBox[{"Tan", "[", "y", "]"}]}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"f", "[", 
     RowBox[{"z", " ", 
      RowBox[{"Tan", "[", 
       RowBox[{"x", "+", "y"}], "]"}]}], "]"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"f", "[", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"x", "-", "y"}], "]"}], "]"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939861371186592*^9},
 CellLabel->"Out[554]=",
 CellID->337515367,ExpressionUUID->"65565560-6214-4eeb-8b74-c63d2d46155e"]
}, Open  ]],

Cell["Example 4", "Subitem",
 CellChangeTimes->{{3.939861438823715*^9, 3.939861440710516*^9}},
 CellID->282494594,ExpressionUUID->"1e41f949-6570-438f-8537-6b34167d7b8f"],

Cell["\<\
The last example on this topic: say we have a function <f>, which has to be \
defined so that any of its powers is equal to itself: f[f[f[f[...f[x]]]]] = \
f[x]. This is the rule to do it:\
\>", "Text",
 CellChangeTimes->{{3.939861448901209*^9, 3.939861453927574*^9}},
 CellID->309859911,ExpressionUUID->"4a13ffe7-e754-4cae-a26a-1c999b9e16c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_f", "]"}], ":>", "x"}]], "Input",
 CellChangeTimes->{{3.9398614603636436`*^9, 3.9398614630431337`*^9}},
 CellLabel->"In[555]:=",
 CellID->1903699844,ExpressionUUID->"6eaf9465-6c33-4b8a-a174-344220af43ad"],

Cell["\<\
This rule though has to be used with ReplaceRepeated ( //. ) rather than with \
ReplaceAll:\
\>", "Text",
 CellChangeTimes->{3.939861472224093*^9, 3.9399313889496803`*^9},
 CellID->631891846,ExpressionUUID->"26d6bf2d-5278-4c50-9d55-f508e26137b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "=", 
  RowBox[{"NestList", "[", 
   RowBox[{"f", ",", "x", ",", "5"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.939861482861215*^9, 3.939861488536787*^9}},
 CellLabel->"In[556]:=",
 CellID->1136559802,ExpressionUUID->"ce079675-0275-4d32-91ee-f5058dfffeac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", 
       RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9398614893407497`*^9},
 CellLabel->"Out[556]=",
 CellID->675237074,ExpressionUUID->"17374af1-d410-426b-b5e2-61546d24216c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "/.", 
  RowBox[{
   RowBox[{"f", "[", "x_f", "]"}], ":>", "x"}]}]], "Input",
 CellChangeTimes->{{3.93986149274825*^9, 3.939861498146964*^9}},
 CellLabel->"In[557]:=",
 CellID->399911849,ExpressionUUID->"0e2f30d6-7d93-433f-91d7-8e7eb84808bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9398615013393993`*^9},
 CellLabel->"Out[557]=",
 CellID->1601730685,ExpressionUUID->"a952310a-2a32-4392-b70b-c406523b1f64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "//.", 
  RowBox[{
   RowBox[{"f", "[", "x_f", "]"}], ":>", "x"}]}]], "Input",
 CellChangeTimes->{{3.9398615177070227`*^9, 3.939861522704221*^9}},
 CellLabel->"In[558]:=",
 CellID->1086494748,ExpressionUUID->"ed26c8c0-cffe-4ce3-b436-1098bfa2b0f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", "x", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939861523376218*^9},
 CellLabel->"Out[558]=",
 CellID->691515309,ExpressionUUID->"ee68297d-9dc2-4d57-9e7f-0e3ca17d90d3"]
}, Open  ]],

Cell["\<\
Such properties are characteristic to say projectors, and by defining rules \
like this, we may eliminate a lot of unnecessary work, in the case when these \
symbolic transformations are carried out before any specific representation \
of a projector (say, a matrix or a kernel of an integral operator) is used.\
\>", "Text",
 CellChangeTimes->{{3.939861533423017*^9, 3.939861544722705*^9}},
 CellID->116300799,ExpressionUUID->"d482399f-4ec9-484a-83c8-bf4cb2027d8a"],

Cell["\<\
The checks of this type (head checks) are most frequently used to implement \
type-checks in function definitions, since they allow us to trivially narrow \
down the sets of objects on which this or that function has to be defined (if \
these sets can be identified with a certain head). For example, a pattern \
<x_List> will match only lists, <x_String> - only strings, etc. Moreover, one \
can define a new data type by considering a \[OpenCurlyDoubleQuote]container\
\[CloseCurlyDoubleQuote] of the form <newdata[data definitions]>. Then, it is \
trivial to arrange that the functions defined on this data type will only \
work on the proper object - one just has to use patterns like <x_newdata>. \
And since this check is entirely syntactic, there is no performance overhead \
induced by this procedure.\
\>", "Text",
 CellChangeTimes->{{3.9398615564026737`*^9, 3.9398615896173353`*^9}, 
   3.939947093607432*^9, 3.940017704936722*^9, 3.940740643983273*^9},
 CellID->1726904470,ExpressionUUID->"466f04d2-1dda-43fb-86c0-b52e372ba027"],

Cell["\<\
Patterns which check some condition - commands Condition and PatternTest\
\>", "ItemNumbered",
 CellChangeTimes->{3.939861599799221*^9},
 CellID->336267753,ExpressionUUID->"98b68ae4-5709-4dd6-b2dc-650c2a1a4ecb"],

Cell["\<\
This is a more general type of patterns. If the simple pattern were <x_>, \
then the conditional pattern may look like <x_?ftest> or <x_/;ftest[x]>. In \
both cases, <ftest> stands for a name of a predicate function which checks \
certain condition and returns True or False. In the first case, the question \
mark is a short hand notation for the built-in command PatternTest:\
\>", "Text",
 CellChangeTimes->{{3.9398616095994473`*^9, 3.939861627301199*^9}},
 CellID->1622649414,ExpressionUUID->"138a873b-9e27-4d06-96fc-e37ca0ee1d13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PatternTest", "[", 
  RowBox[{"x_", ",", "ftest"}], "]"}]], "Input",
 CellChangeTimes->{{3.9398616320672483`*^9, 3.939861639339878*^9}},
 CellLabel->"In[559]:=",
 CellID->1853460764,ExpressionUUID->"25e10cfd-f633-4073-ab81-6849b5cd01d7"],

Cell[BoxData[
 RowBox[{"x_", "?", "ftest"}]], "Output",
 CellChangeTimes->{3.939861639968855*^9},
 CellLabel->"Out[559]=",
 CellID->759187083,ExpressionUUID->"4bf50d4e-da51-4324-9548-3aaa6c56e040"]
}, Open  ]],

Cell["\<\
In the second case, the combination </;> (slash - semicolon) is a short-hand \
notation for the built-in function Condition:\
\>", "Text",
 CellChangeTimes->{{3.93986165124564*^9, 3.939861661139743*^9}, 
   3.939947093631282*^9, 3.9400177049556303`*^9},
 CellID->1456957154,ExpressionUUID->"ade6e1c4-e34d-4de7-aebe-0fc3e205e9c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Condition", "[", 
  RowBox[{"x_", ",", 
   RowBox[{"ftest", "[", "x", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.93986166627171*^9, 3.939861671020042*^9}},
 CellLabel->"In[560]:=",
 CellID->1658992629,ExpressionUUID->"7ce492e3-decb-4791-ae71-4f34ecfc2be9"],

Cell[BoxData[
 RowBox[{"x_", "/;", 
  RowBox[{"ftest", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.9398616715879602`*^9},
 CellLabel->"Out[560]=",
 CellID->1086743711,ExpressionUUID->"203f7c77-2eb0-4c18-9462-f0413ddd36fe"]
}, Open  ]],

Cell["\<\
We will see that the PatternTest is less general than Condition. In \
particular, when the pattern contains more than one pattern tag, PatternTest \
usually can not be used, but Condition can, and we can impose conditions \
which depend on several pattern tags.\
\>", "Text",
 CellChangeTimes->{{3.939861687820367*^9, 3.939861695562481*^9}},
 CellID->553133042,ExpressionUUID->"057fb315-132e-418c-b79a-4da7d3156bfe"],

Cell["\<\
One important point about conditional pattern-matching is that the \
\[OpenCurlyDoubleQuote]presumption of guiltiness\[CloseCurlyDoubleQuote] is \
in effect here: if the condition (implemented either through Condition or \
PatternTest) evaluates to neither True nor False, the pattern does not match \
(as if we were using TrueQ). This requires extra care in pattern \
construction, especially in cases such as when the pattern is used to match \
elements which have to be deleted from a list if pattern does not match. This \
property can also sometimes be used to one\[CloseCurlyQuote]s advantage. One \
such non-trivial application of this behavior is found in implementing \
function\[CloseCurlyQuote]s error messages when writing packages.\
\>", "Text",
 CellChangeTimes->{{3.9398617050828133`*^9, 3.939861733947852*^9}, 
   3.939931388970428*^9},
 CellID->1452646491,ExpressionUUID->"c8bf49a1-2c1d-4668-9498-2df28e3df73b"],

Cell["Now consider some examples.", "Text",
 CellChangeTimes->{3.939861739930513*^9},
 CellID->968668434,ExpressionUUID->"e8d9c72d-6165-4dc3-bb11-f7134bb8991e"],

Cell["Example 1", "Subitem",
 CellChangeTimes->{{3.93986174719431*^9, 3.939861748540106*^9}},
 CellID->336842331,ExpressionUUID->"4b21fe62-8449-45be-9b99-b17f5b28c672"],

Cell["\<\
Here we will take a rather arbitrary list of numbers and raise all integer \
numbers in it to the cubic power.\
\>", "Text",
 CellChangeTimes->{3.939861757524466*^9},
 CellID->1131580228,ExpressionUUID->"514d35f7-d3ae-4199-bbd4-99933a043608"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "testlist", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testlist", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}], "/", "2"}], ",", 
    RowBox[{"{", "15", "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.939861764640397*^9, 3.939861783467046*^9}},
 CellLabel->"In[561]:=",
 CellID->2108383503,ExpressionUUID->"c61aaea6-1692-47b2-8645-d35e8dc669d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["3", "2"]}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", 
    FractionBox["1", "2"]}], ",", "2", ",", 
   RowBox[{"-", "2"}], ",", "4", ",", 
   FractionBox["9", "2"], ",", 
   RowBox[{"-", 
    FractionBox["9", "2"]}], ",", 
   RowBox[{"-", "5"}], ",", "0", ",", "4", ",", "1", ",", 
   RowBox[{"-", 
    FractionBox["3", "2"]}], ",", 
   RowBox[{"-", 
    FractionBox["5", "2"]}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9398617840886717`*^9},
 CellLabel->"Out[562]=",
 CellID->128455942,ExpressionUUID->"7cd52e13-4220-4de1-b9cd-51b88338eb49"]
}, Open  ]],

Cell["This is the solution:", "Text",
 CellChangeTimes->{3.939861793452174*^9},
 CellID->920813046,ExpressionUUID->"0757feaf-0470-4fdc-af24-6e0a0b45d70a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "/.", 
  RowBox[{
   RowBox[{"x_Integer", "?", "Positive"}], ":>", 
   RowBox[{"x", "^", "3"}]}]}]], "Input",
 CellChangeTimes->{{3.93986179471424*^9, 3.9398618092579527`*^9}},
 CellLabel->"In[563]:=",
 CellID->782138437,ExpressionUUID->"dda77dc5-e5fc-420c-81f7-b395f3bcd4e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["3", "2"]}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", 
    FractionBox["1", "2"]}], ",", "8", ",", 
   RowBox[{"-", "2"}], ",", "64", ",", 
   FractionBox["9", "2"], ",", 
   RowBox[{"-", 
    FractionBox["9", "2"]}], ",", 
   RowBox[{"-", "5"}], ",", "0", ",", "64", ",", "1", ",", 
   RowBox[{"-", 
    FractionBox["3", "2"]}], ",", 
   RowBox[{"-", 
    FractionBox["5", "2"]}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939861810822125*^9},
 CellLabel->"Out[563]=",
 CellID->1568019166,ExpressionUUID->"c3523b4e-04fc-4fe5-8e95-0e328b0000b7"]
}, Open  ]],

Cell["Or:", "Text",
 CellChangeTimes->{{3.9398618158785152`*^9, 3.939861816328126*^9}},
 CellID->739586769,ExpressionUUID->"009a6d1c-c2a4-4c1e-be40-04f59cf7d761"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "/.", 
  RowBox[{
   RowBox[{"x_Integer", "/;", 
    RowBox[{"Positive", "[", "x", "]"}]}], ":>", 
   RowBox[{"x", "^", "3"}]}]}]], "Input",
 CellChangeTimes->{{3.93986181747104*^9, 3.939861831736125*^9}},
 CellLabel->"In[564]:=",
 CellID->1152639968,ExpressionUUID->"9e1f9c9f-fc8d-4e6a-86c7-9968b02bc5d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["3", "2"]}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", 
    FractionBox["1", "2"]}], ",", "8", ",", 
   RowBox[{"-", "2"}], ",", "64", ",", 
   FractionBox["9", "2"], ",", 
   RowBox[{"-", 
    FractionBox["9", "2"]}], ",", 
   RowBox[{"-", "5"}], ",", "0", ",", "64", ",", "1", ",", 
   RowBox[{"-", 
    FractionBox["3", "2"]}], ",", 
   RowBox[{"-", 
    FractionBox["5", "2"]}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9398618321377287`*^9},
 CellLabel->"Out[564]=",
 CellID->333589677,ExpressionUUID->"715025b3-e294-4fde-8c5a-95acfb2897a8"]
}, Open  ]],

Cell["Or:", "Text",
 CellChangeTimes->{{3.93986183807755*^9, 3.9398618385287237`*^9}},
 CellID->1709382669,ExpressionUUID->"12845b92-6797-455c-8299-dbd2e3dec730"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "/.", 
  RowBox[{
   RowBox[{"x_", "/;", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"IntegerQ", "[", "x", "]"}], "&&", 
      RowBox[{"Positive", "[", "x", "]"}]}], ")"}]}], ":>", 
   RowBox[{"x", "^", "3"}]}]}]], "Input",
 CellChangeTimes->{{3.9398618396988487`*^9, 3.939861862393771*^9}},
 CellLabel->"In[565]:=",
 CellID->1310601475,ExpressionUUID->"4a14f869-efc1-4a97-b372-b6e1d1cd52af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["3", "2"]}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", 
    FractionBox["1", "2"]}], ",", "8", ",", 
   RowBox[{"-", "2"}], ",", "64", ",", 
   FractionBox["9", "2"], ",", 
   RowBox[{"-", 
    FractionBox["9", "2"]}], ",", 
   RowBox[{"-", "5"}], ",", "0", ",", "64", ",", "1", ",", 
   RowBox[{"-", 
    FractionBox["3", "2"]}], ",", 
   RowBox[{"-", 
    FractionBox["5", "2"]}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939861862751206*^9},
 CellLabel->"Out[565]=",
 CellID->1706469783,ExpressionUUID->"eefbcb93-7da9-4bcd-a11c-46e35dc9a74e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "testlist", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.9398618654905033`*^9, 3.93986186817017*^9}},
 CellLabel->"In[566]:=",
 CellID->1694297747,ExpressionUUID->"23b5d7d3-c59a-4de9-841a-bc4dd8925c9b"],

Cell["Example 2", "Subitem",
 CellChangeTimes->{{3.9398618763202887`*^9, 3.939861879056665*^9}},
 CellID->735533086,ExpressionUUID->"4d52822b-13b0-4769-ae26-008c1bdbf0ae"],

Cell["\<\
Here we will choose from the list of integers only those numbers which are \
equal to 2 modulo 5, or, rather, eliminate all other numbers from the list. \
Here we will go a little ahead of time and define our own predicate function:\
\
\>", "Text",
 CellChangeTimes->{{3.939861885881978*^9, 3.9398618981861553`*^9}, 
   3.939931388991111*^9},
 CellID->873822635,ExpressionUUID->"7df36a0a-6020-4170-86af-310d299d4f63"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ourtest", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ourtest", "[", "x_Integer", "]"}], ":=", 
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{"x", ",", "5"}], "]"}], "=!=", "2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939861899715461*^9, 3.9398619178368053`*^9}},
 CellLabel->"In[567]:=",
 CellID->1761894528,ExpressionUUID->"c0d4e3b9-321a-4374-aecb-aa470fdbb3be"],

Cell["Now we generate a list:", "Text",
 CellChangeTimes->{3.939861927162043*^9, 3.939931389012362*^9},
 CellID->132685100,ExpressionUUID->"b437fa9f-e685-4915-a1da-a1a2895453c4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"testlist", ",", "a", ",", "x"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"testlist", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "20"}], "}"}], "]"}], ",", 
    RowBox[{"{", "15", "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.939861928502905*^9, 3.939861947176003*^9}},
 CellLabel->"In[572]:=",
 CellID->1231699612,ExpressionUUID->"a355d50a-f0d1-44ff-851d-d655ee42b1b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "14", ",", "20", ",", "15", ",", "20", ",", "3", ",", "7", ",", 
   "12", ",", "6", ",", "10", ",", "16", ",", "13", ",", "16", ",", "5", ",", 
   "7"}], "}"}]], "Output",
 CellChangeTimes->{3.939861947820505*^9, 3.939862001417572*^9},
 CellLabel->"Out[573]=",
 CellID->2003825507,ExpressionUUID->"435a9149-40b8-4f4e-ac0b-dd58b610762f"]
}, Open  ]],

Cell["\<\
With the tools we have now, we can do it with ReplaceRepeated and the \
following pattern:\
\>", "Text",
 CellChangeTimes->{3.9398619558262053`*^9, 3.93993138903321*^9},
 CellID->606337282,ExpressionUUID->"9eb46a5a-800e-4d14-be04-611f33642d64"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "//.", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x___", ",", 
     RowBox[{"y_Integer", "/;", 
      RowBox[{"ourtest", "[", "y", "]"}]}], ",", "z___"}], "}"}], ":>", 
   RowBox[{"{", 
    RowBox[{"x", ",", "z"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.939861959662607*^9, 3.939861977008189*^9}},
 CellLabel->"In[574]:=",
 CellID->2025118410,ExpressionUUID->"96460f26-01e7-483c-963f-7ca91ccba152"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "12", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{{3.939861978086245*^9, 3.939862003485539*^9}},
 CellLabel->"Out[574]=",
 CellID->1802513612,ExpressionUUID->"b1150ca0-2aec-44d4-860e-bae61d1bacfc"]
}, Open  ]],

Cell["\<\
However, this is terribly inefficient, since to delete a single element, the \
whole run of the pattern-matcher through the list is required (in general, \
the match will happen somewhere in the middle of the list). There is a better \
rule-based solution:\
\>", "Text",
 CellChangeTimes->{{3.939862195815013*^9, 3.9398622082067633`*^9}, 
   3.939931389054244*^9},
 CellID->1194415610,ExpressionUUID->"2cc6f2e7-2eea-49ed-8c82-608896d63b84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "/.", 
  RowBox[{
   RowBox[{"x_", "/;", 
    RowBox[{"ourtest", "[", "x", "]"}]}], ":>", 
   RowBox[{"Sequence", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.939862214543928*^9, 3.939862224766094*^9}},
 CellLabel->"In[575]:=",
 CellID->2089590359,ExpressionUUID->"9427bf95-0d03-4d89-bf4a-cdd8793d2a84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "12", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.9398622294178534`*^9},
 CellLabel->"Out[575]=",
 CellID->1457702041,ExpressionUUID->"f260d5b1-9a4e-4201-97b1-6af9a6e6ca7e"]
}, Open  ]],

Cell["Or, which is the same, but even more concise", "Text",
 CellChangeTimes->{3.939862252102571*^9},
 CellID->120299844,ExpressionUUID->"b144dbcb-fd59-40de-aa24-b452e5c39675"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "/.", 
  RowBox[{
   RowBox[{"x_", "?", "ourtest"}], ":>", 
   RowBox[{"Sequence", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9398622536318502`*^9, 3.9398622633663692`*^9}},
 CellLabel->"In[576]:=",
 CellID->845524331,ExpressionUUID->"ad5b5877-a1ed-4d4e-aa83-4e1a26aef7de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "12", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.939862263732924*^9},
 CellLabel->"Out[576]=",
 CellID->54234589,ExpressionUUID->"c27dc5dc-ba86-4cb2-b671-726fe7a16c15"]
}, Open  ]],

Cell["\<\
What happens here is that every element in a list is tried in a single run of \
the pattern-matcher, and if it has to be eliminated, it is replaced by \
Sequence[]. The reason that we don\[CloseCurlyQuote]t see Sequence[] objects \
in our resulting list is that the Sequence[] means \
\[OpenCurlyDoubleQuote]emptiness\[CloseCurlyDoubleQuote], or \
\[OpenCurlyDoubleQuote]absence of any elements\[CloseCurlyDoubleQuote], and \
it usually disappears inside any other head.\
\>", "Text",
 CellChangeTimes->{{3.93986227201993*^9, 3.939862298094247*^9}},
 CellID->858272015,ExpressionUUID->"c7c3988a-ca42-4a2c-ad1f-52fb8c66205e"],

Cell["We can package this into a function:", "Text",
 CellChangeTimes->{3.9398623060862083`*^9, 3.939931389076027*^9},
 CellID->1945522786,ExpressionUUID->"4cd996f1-7685-4490-bcfc-21519249f12b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "deleteIf", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"deleteIf", "[", 
    RowBox[{"lst_List", ",", "test_"}], "]"}], ":=", 
   RowBox[{"lst", "/.", 
    RowBox[{
     RowBox[{"x_", "?", "test"}], ":>", 
     RowBox[{"Sequence", "[", "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939862307724018*^9, 3.939862331290903*^9}},
 CellLabel->"In[577]:=",
 CellID->112894406,ExpressionUUID->"b61f2fb8-73bd-4c56-a045-e45b4470c30c"],

Cell["Check:", "Text",
 CellChangeTimes->{{3.939862333749134*^9, 3.9398623348923883`*^9}},
 CellID->1312704461,ExpressionUUID->"de135f87-3044-4f9c-99f3-3b5e0d9dcd1b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deleteIf", "[", 
  RowBox[{"testlist", ",", "ourtest"}], "]"}]], "Input",
 CellChangeTimes->{{3.9398623358797407`*^9, 3.939862341386112*^9}},
 CellLabel->"In[579]:=",
 CellID->1983643951,ExpressionUUID->"1b1af147-f01f-46a7-8773-60eed2b27bdf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "12", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.9398623417809677`*^9},
 CellLabel->"Out[579]=",
 CellID->1919442609,ExpressionUUID->"dedc23c5-465e-4681-b358-c319f0187932"]
}, Open  ]],

Cell[TextData[{
 "A few comments: first, the pattern tag <x> above is considered a local \
variable since RuleDelayed is used. Second, we have in fact written a \
higher-order function, that is, a function which takes another function as \
one of its arguments. Notice that in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " this is completely effortless and does not require any particular syntax."
}], "Text",
 CellChangeTimes->{{3.939862350277677*^9, 3.939862371863052*^9}, 
   3.939947093654971*^9, 3.940017704974516*^9},
 CellID->572584229,ExpressionUUID->"77910239-c016-4d4a-885c-70fd2e05a910"],

Cell[TextData[StyleBox["Efficiency analysis and a procedural version",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{3.939862381489311*^9},
 CellID->1902964616,ExpressionUUID->"5a034509-8512-44f5-bb06-5c3109f07961"],

Cell["\<\
The speed of the latter two realizations will be roughly the same(PatternTest \
may be slightly faster), but very different from the first version:\
\>", "Text",
 CellChangeTimes->{{3.939862388830079*^9, 3.9398623937080793`*^9}},
 CellID->652346341,ExpressionUUID->"e7fe1b82-c76c-4cde-a7e3-c3dbbad05181"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "20"}], "}"}], "]"}], ",", 
     RowBox[{"{", "2000", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testlist", "//.", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x___", ",", 
       RowBox[{"y_Integer", "/;", 
        RowBox[{"ourtest", "[", "y", "]"}]}], ",", "z___"}], "}"}], ":>", 
     RowBox[{"{", 
      RowBox[{"x", ",", "z"}], "}"}]}]}], ";"}], "//", 
  "Timing"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testlist", "/.", 
    RowBox[{
     RowBox[{"x_", "/;", 
      RowBox[{"ourtest", "[", "x", "]"}]}], ":>", 
     RowBox[{"Sequence", "[", "]"}]}]}], ";"}], "//", 
  "Timing"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testlist", "/.", 
    RowBox[{
     RowBox[{"x_", "?", "ourtest"}], ":>", 
     RowBox[{"Sequence", "[", "]"}]}]}], ";"}], "//", "Timing"}]}], "Input",
 CellChangeTimes->{{3.939862405779476*^9, 3.939862472024335*^9}},
 CellLabel->"In[584]:=",
 CellID->373782444,ExpressionUUID->"e54ffbea-6f60-4407-be69-e82be7f9636b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.804574`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.939862473680554*^9, 3.9398624827779093`*^9}},
 CellLabel->"Out[585]=",
 CellID->849438994,ExpressionUUID->"b3523b7a-f6d6-4c03-96e8-269eb1390e2a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.001059`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.939862473680554*^9, 3.939862482790194*^9}},
 CellLabel->"Out[586]=",
 CellID->49886902,ExpressionUUID->"7d51fe1f-3e9c-4164-b27e-3d9a92ce5a3c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00116`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.939862473680554*^9, 3.939862482802517*^9}},
 CellLabel->"Out[587]=",
 CellID->930539584,ExpressionUUID->"86b085e4-f660-40a7-b2cc-fd578350be5a"]
}, Open  ]],

Cell["\<\
This is by the way the analogous procedural code needed to get the same \
result.\
\>", "Text",
 CellChangeTimes->{3.9398639008379908`*^9},
 CellID->1415239070,ExpressionUUID->"394a3448-5d8c-4317-a84c-8314120e1fc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j", ",", "newlist"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", 
          RowBox[{"j", "=", "1"}]}], ";", 
         RowBox[{"newlist", "=", "testlist"}]}], ",", 
        RowBox[{"i", "<=", 
         RowBox[{"Length", "[", "testlist", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"ourtest", "[", 
            RowBox[{"testlist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"newlist", "[", 
            RowBox[{"[", 
             RowBox[{"j", "++"}], "]"}], "]"}], "=", 
           RowBox[{"testlist", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newlist", "=", 
       RowBox[{"Take", "[", 
        RowBox[{"newlist", ",", 
         RowBox[{"j", "-", "1"}]}], "]"}]}], ";", "newlist"}]}], "]"}], ";"}],
   "//", "Timing"}]], "Input",
 CellChangeTimes->{{3.939863909784008*^9, 3.9398639844960403`*^9}},
 CellLabel->"In[588]:=",
 CellID->2065002278,ExpressionUUID->"0e46934d-d959-4535-b1f8-f54e62716f95"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.004249`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.93986398489229*^9},
 CellLabel->"Out[588]=",
 CellID->254712638,ExpressionUUID->"ac1cc7e8-33a3-4a9f-a4f3-6d1272fa8dfc"]
}, Open  ]],

Cell["\<\
Not only it is much clumsier and needs an introduction of auxiliary \
variables, but it is also a factor of 5 - 7 slower than our best rule-based \
solution. I give here this comparison to show that the rule-based programming \
is not necessarily slow, but may in fact be the fastest way to obtain a \
result.\
\>", "Text",
 CellChangeTimes->{{3.939863996989004*^9, 3.939864009289886*^9}},
 CellID->1020398395,ExpressionUUID->"828ab468-a268-48dc-884e-56219f2c5848"],

Cell[TextData[{
 "So, the moral of this example is the following: in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", the rule-based approach has a potential to outperform procedural approach \
by a wide margin, and also to be much more concise and intuitive. But it also \
can be misused badly if inefficient patterns are used. The pattern is almost \
certainly inefficient if the\npattern-matcher is able to match and transform \
only one or few items in a large collection (list) of them, in a single run \
through this list. For efficient programs, the patterns like \
{x___,a_,y___,b_,z___) in conjunction with ReplaceRepeated should be \
avoided."
}], "Text",
 CellChangeTimes->{{3.939864019040093*^9, 3.9398640429811077`*^9}},
 CellID->45676509,ExpressionUUID->"195f343e-2fcf-4e9d-a440-ba1caa2ab9e4"],

Cell[TextData[{
 "In some sense, a statement like \[OpenCurlyDoubleQuote]rule-based \
programming is slow in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote] does not make any sense since all programming in \
",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is rule-based to some extent."
}], "Text",
 CellChangeTimes->{{3.939864053043105*^9, 3.939864061763908*^9}},
 CellID->751228912,ExpressionUUID->"adceb201-0ba7-47c8-8240-71d8985619b3"],

Cell["Example 3", "Subitem",
 CellChangeTimes->{{3.9398640680195837`*^9, 3.9398640697563677`*^9}},
 CellID->201829668,ExpressionUUID->"c4b3a3fd-d99e-4543-8d8d-abd688b2b21c"],

Cell["\<\
Suppose we now want to perform some actions (say, take a square root) only on \
those elements in a list of integers, which are the full squares. First thing \
that comes to mind is to try a pattern x_^2:\
\>", "Text",
 CellChangeTimes->{{3.939864078544033*^9, 3.93986408471031*^9}},
 CellID->1993379669,ExpressionUUID->"c93f95d5-bd7a-46d8-be46-62ad7969f327"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "testlist", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testlist", "=", 
  RowBox[{"Range", "[", "30", "]"}]}]}], "Input",
 CellChangeTimes->{{3.9398640922336197`*^9, 3.939864102844316*^9}},
 CellLabel->"In[589]:=",
 CellID->1069155629,ExpressionUUID->"543ebf26-0829-4ab5-98dd-74dd28f35a88"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", 
   "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", "28", 
   ",", "29", ",", "30"}], "}"}]], "Output",
 CellChangeTimes->{3.939864103109586*^9},
 CellLabel->"Out[590]=",
 CellID->1279508168,ExpressionUUID->"936601d0-8848-4313-8667-817c0076356c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "/.", 
  RowBox[{
   RowBox[{"x_", "^", "2"}], "->", 
   RowBox[{"Sqrt", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.939864104585466*^9, 3.939864114604999*^9}},
 CellLabel->"In[591]:=",
 CellID->708314754,ExpressionUUID->"e5b936cf-cc05-480a-8c63-aae5244ed187"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", 
   "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", "28", 
   ",", "29", ",", "30"}], "}"}]], "Output",
 CellChangeTimes->{3.939864115058527*^9},
 CellLabel->"Out[591]=",
 CellID->882926569,ExpressionUUID->"436888d6-c0c6-44e3-9cab-b5a489cda6f1"]
}, Open  ]],

Cell["\<\
Nothing happened. The reason is that even if a number is a full square, its \
internal form is not a^2. Since the pattern-matching for simple patterns is \
based on syntax only, no matches occurred. This is what we have to use \
instead:\
\>", "Text",
 CellChangeTimes->{{3.939864135783803*^9, 3.939864145908617*^9}, 
   3.9399313890977497`*^9},
 CellID->752840013,ExpressionUUID->"fe0b92bc-4fd9-42f2-8612-89976fd0d4fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "/.", 
  RowBox[{
   RowBox[{"x_", "/;", 
    RowBox[{"IntegerQ", "[", 
     RowBox[{"Sqrt", "[", "x", "]"}], "]"}]}], "->", 
   RowBox[{"{", 
    RowBox[{"Sqrt", "[", "x", "]"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.939864148355982*^9, 3.939864161269107*^9}},
 CellLabel->"In[592]:=",
 CellID->1463958844,ExpressionUUID->"be59b614-ceb9-4c2a-9406-26d75ffccd51"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", "2", ",", "3", ",", 
   RowBox[{"{", "2", "}"}], ",", "5", ",", "6", ",", "7", ",", "8", ",", 
   RowBox[{"{", "3", "}"}], ",", "10", ",", "11", ",", "12", ",", "13", ",", 
   "14", ",", "15", ",", 
   RowBox[{"{", "4", "}"}], ",", "17", ",", "18", ",", "19", ",", "20", ",", 
   "21", ",", "22", ",", "23", ",", "24", ",", 
   RowBox[{"{", "5", "}"}], ",", "26", ",", "27", ",", "28", ",", "29", ",", 
   "30"}], "}"}]], "Output",
 CellChangeTimes->{3.939864162792729*^9},
 CellLabel->"Out[592]=",
 CellID->941312758,ExpressionUUID->"29c61f20-b1ab-4f72-942e-278d7cbf780c"]
}, Open  ]],

Cell["\<\
I placed the transformed numbers into extra list braces to make them visible.\
\
\>", "Text",
 CellChangeTimes->{3.9398641890177717`*^9},
 CellID->1369935424,ExpressionUUID->"9bc34cf2-bde1-4e5a-921d-22f89fcb82fa"],

Cell["Example 4", "Subitem",
 CellChangeTimes->{{3.93986419578683*^9, 3.939864197480698*^9}},
 CellID->1332491681,ExpressionUUID->"ea39b3e6-1c40-4a66-95d2-1396cd7f9110"],

Cell[TextData[{
 "There is a built-in predicate PrimeQ in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", which checks if a number is a prime. We can use it to collect say all the \
primes in the first 1000 natural numbers:"
}], "Text",
 CellChangeTimes->{{3.939864207211986*^9, 3.9398642147435303`*^9}},
 CellID->1622961247,ExpressionUUID->"0e8cb4a9-d483-4d5e-b200-aa90c94f93a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Range", "[", "1000", "]"}], "/.", 
   RowBox[{
    RowBox[{"x_Integer", "/;", 
     RowBox[{"Not", "[", 
      RowBox[{"PrimeQ", "[", "x", "]"}], "]"}]}], ":>", 
    RowBox[{"Sequence", "[", "]"}]}]}], "//", "Short"}]], "Input",
 CellChangeTimes->{{3.939864220431707*^9, 3.939864238518035*^9}},
 CellLabel->"In[593]:=",
 CellID->2039009746,ExpressionUUID->"e8edf965-e3b6-4fd6-a477-6486e1f60b60"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "5", ",", "7", ",", "11", ",", 
    RowBox[{"\[LeftSkeleton]", "158", "\[RightSkeleton]"}], ",", "971", ",", 
    "977", ",", "983", ",", "991", ",", "997"}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.939864239582224*^9},
 CellLabel->"Out[593]//Short=",
 CellID->154214974,ExpressionUUID->"a777c967-0720-4df3-af76-408d2a867bda"]
}, Open  ]],

Cell["\<\
This is not the absolutely fastest way to do it (which perhaps will be using \
the Select function if we are willing to sweep through every number and use \
PrimeQ), but not the worst either.\
\>", "Text",
 CellChangeTimes->{{3.939864251000731*^9, 3.9398642544650784`*^9}},
 CellID->1429299625,ExpressionUUID->"3b2b7889-1d61-4329-88cd-71743b308ffe"],

Cell["Example 5", "Subitem",
 CellChangeTimes->{{3.939864262880126*^9, 3.9398642647858477`*^9}},
 CellID->571997208,ExpressionUUID->"926b4e32-a97a-4e46-8cd3-dfa46fb7d19d"],

Cell["\<\
One can impose more complicated conditions, and on more complicated patterns. \
Let us now create a list of lists of 2 random integers:\
\>", "Text",
 CellChangeTimes->{{3.939864272880583*^9, 3.93986427591565*^9}},
 CellID->1315031362,ExpressionUUID->"4ce17b90-147e-47b7-bc25-3b1727ff61cc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "testlist", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testlist", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "20"}], "}"}], "]"}], ",", 
      RowBox[{"{", "20", "}"}]}], "]"}], ",", "2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.939864278512186*^9, 3.9398642936447573`*^9}},
 CellLabel->"In[599]:=",
 CellID->2105786761,ExpressionUUID->"ae7c4f01-5928-4f28-b07d-10173b8153c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "12"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9398642946231613`*^9, 3.9398643608511677`*^9},
 CellLabel->"Out[600]=",
 CellID->1122329786,ExpressionUUID->"365c27a1-55ed-47be-a3e8-cc1bb5f92dc8"]
}, Open  ]],

Cell["\<\
Note that we used the Partition command. We could instead use Table with 2 \
iterators. Now, we would like to exchange the numbers in any small sublist \
where the first number is even and the second is odd. Here is the rule we \
need:\
\>", "Text",
 CellChangeTimes->{{3.939864309573502*^9, 3.939864319311235*^9}},
 CellID->1773250672,ExpressionUUID->"6ed46d8e-b604-429d-90e6-f29011bcc5f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"exchangerule", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], "/;", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"EvenQ", "[", "x", "]"}], "&&", 
       RowBox[{"OddQ", "[", "y", "]"}]}], ")"}]}], ":>", 
    RowBox[{"{", 
     RowBox[{"y", ",", "x"}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.939864321202154*^9, 3.9398643422600803`*^9}},
 CellLabel->"In[596]:=",
 CellID->679291209,ExpressionUUID->"6c479077-aa7b-4dbe-8ea0-19c18c818e35"],

Cell["Check:", "Text",
 CellChangeTimes->{{3.9398643443799543`*^9, 3.9398643455477467`*^9}},
 CellID->1845070393,ExpressionUUID->"fcd1d49a-6afc-4cca-9695-c1844a4ee1e4"],

Cell[CellGroupData[{

Cell[BoxData[{"testlist", "\[IndentingNewLine]", 
 RowBox[{"testlist", "/.", "exchangerule"}]}], "Input",
 CellChangeTimes->{{3.9398643468504763`*^9, 3.939864352224081*^9}},
 CellLabel->"In[601]:=",
 CellID->1783552704,ExpressionUUID->"5dc507e7-f4f1-4c9e-8ce3-de2fa61bed62"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "12"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.939864352621861*^9, 3.939864364162047*^9}},
 CellLabel->"Out[601]=",
 CellID->1201759105,ExpressionUUID->"625b7db5-9708-4241-9cf0-4eb2a8964574"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "12"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.939864352621861*^9, 3.9398643641793222`*^9}},
 CellLabel->"Out[602]=",
 CellID->881577700,ExpressionUUID->"e2613448-fa06-4576-bba0-0b24c99c826e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"testlist", ",", "delrule", ",", "exchangerule"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.939864398766721*^9, 3.939864406176834*^9}},
 CellLabel->"In[603]:=",
 CellID->1576982640,ExpressionUUID->"cb182cab-0982-4910-9099-834c6c3bff93"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Alternative patterns", "Subsubsection",
 CellChangeTimes->{3.939864414183426*^9},
 CellID->1773852468,ExpressionUUID->"2e0a85f0-8c16-48a4-b30b-7578a7662ad6"],

Cell["\<\
Often the same type of transformations have to be carried out with different \
expressions. This means, that for expressions of different types, we would \
normally need several rules which are essentially different only in their \
left hand side.\
\>", "Text",
 CellChangeTimes->{{3.9398644207835817`*^9, 3.939864431676104*^9}},
 CellID->1770442022,ExpressionUUID->"5d3f8cc7-a6e2-4d64-a301-f59026f58e7d"],

Cell["\<\
As an example, say we need to apply some rule to either integer or rational \
numbers, and let this transformation be to take a square root of these \
numbers. For the following test list of expressions:\
\>", "Text",
 CellChangeTimes->{{3.939864439158187*^9, 3.93986444545991*^9}},
 CellID->2046805974,ExpressionUUID->"a7e064e3-b9e4-4627-bf86-035397fbd20f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "2", ",", "Pi", ",", 
   RowBox[{"3", "/", "2"}], ",", 
   RowBox[{"2", "/", "5"}], ",", "4", ",", 
   RowBox[{"Sin", "[", "y", "]"}], ",", "8", ",", 
   RowBox[{"Cos", "[", "z", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939864449095573*^9, 3.9398644622771807`*^9}},
 CellID->51311546,ExpressionUUID->"78d7edef-6d62-4d09-a842-b829e46771de"],

Cell["We could use conditional patterns to do this:", "Text",
 CellChangeTimes->{3.939864471865026*^9, 3.939931389118414*^9},
 CellID->168001231,ExpressionUUID->"e055998c-1f05-4440-9efb-012aae695082"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "2", ",", "Pi", ",", 
    RowBox[{"3", "/", "2"}], ",", 
    RowBox[{"2", "/", "5"}], ",", "4", ",", 
    RowBox[{"Sin", "[", "y", "]"}], ",", "8", ",", 
    RowBox[{"Cos", "[", "z", "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "x", "]"}], "===", "Integer"}], "||", 
     RowBox[{
      RowBox[{"Head", "[", "x", "]"}], "===", "Rational"}]}]}], ":>", 
   RowBox[{"Sqrt", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9398644790028677`*^9, 3.939864495669364*^9}},
 CellLabel->"In[604]:=",
 CellID->1803177259,ExpressionUUID->"88d6c941-5ce3-4565-bcd6-6eab23344666"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   SqrtBox["2"], ",", "\[Pi]", ",", 
   SqrtBox[
    FractionBox["3", "2"]], ",", 
   SqrtBox[
    FractionBox["2", "5"]], ",", "2", ",", 
   RowBox[{"Sin", "[", "y", "]"}], ",", 
   RowBox[{"2", " ", 
    SqrtBox["2"]}], ",", 
   RowBox[{"Cos", "[", "z", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9398644962335463`*^9},
 CellLabel->"Out[604]=",
 CellID->557771357,ExpressionUUID->"ef0443ec-329f-4eb2-b84f-2cff486c4817"]
}, Open  ]],

Cell[TextData[{
 "However, this solution is not the most elegant and concise, and more \
importantly, not the most efficient. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " provides a mechanism to group different patterns together and form so \
called alternative patterns. The built-in command which does this has a \
literal equivalent Alternatives and a short-hand notation |:"
}], "Text",
 CellChangeTimes->{{3.939864509631289*^9, 3.9398645266677437`*^9}, 
   3.939931389138949*^9},
 CellID->1265710423,ExpressionUUID->"fa729007-1b98-419a-b3a5-22f21dc72c67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Alternatives", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.939864536974984*^9, 3.9398645393174*^9}},
 CellLabel->"In[605]:=",
 CellID->913750275,ExpressionUUID->"3e93fab1-1a4e-4da2-a043-864542f2a345"],

Cell[BoxData[
 RowBox[{"a", "|", "b"}]], "Output",
 CellChangeTimes->{3.939864539663075*^9},
 CellLabel->"Out[605]=",
 CellID->1554530224,ExpressionUUID->"01a5a628-fc70-4cc0-9b42-ba2c540b921a"]
}, Open  ]],

Cell["With it, we can solve our problem like this:", "Text",
 CellChangeTimes->{3.9398645469495363`*^9, 3.939931389159582*^9},
 CellID->703425366,ExpressionUUID->"6bbaae14-825d-4f0b-930b-94a4665466de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "2", ",", "Pi", ",", 
    RowBox[{"3", "/", "2"}], ",", 
    RowBox[{"2", "/", "5"}], ",", "4", ",", 
    RowBox[{"Sin", "[", "y", "]"}], ",", "8", ",", 
    RowBox[{"Cos", "[", "z", "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"x_Integer", "|", "x_Rational"}], ":>", 
   RowBox[{"Sqrt", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.939864553869079*^9, 3.939864564435679*^9}},
 CellLabel->"In[606]:=",
 CellID->572649627,ExpressionUUID->"498e4c43-a324-4759-a5e7-f0880c1dd7f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   SqrtBox["2"], ",", "\[Pi]", ",", 
   SqrtBox[
    FractionBox["3", "2"]], ",", 
   SqrtBox[
    FractionBox["2", "5"]], ",", "2", ",", 
   RowBox[{"Sin", "[", "y", "]"}], ",", 
   RowBox[{"2", " ", 
    SqrtBox["2"]}], ",", 
   RowBox[{"Cos", "[", "z", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9398645647717543`*^9},
 CellLabel->"Out[606]=",
 CellID->1990331648,ExpressionUUID->"e01039c9-8fcf-4f1d-b093-5d5020ccd51e"]
}, Open  ]],

Cell["\<\
Alternative patterns are quite often used. Some especially sleek applications \
of them usually employ a mixture of rule-based and functional programming. We \
will see many examples of them in later chapters.\
\>", "Text",
 CellChangeTimes->{{3.939864573608944*^9, 3.939864581659417*^9}},
 CellID->347916962,ExpressionUUID->"967a3415-a7e8-4802-b140-24262cd58943"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Giving names to entire patterns", "Subsubsection",
 CellChangeTimes->{
  3.9398645899351254`*^9, {3.940543789078361*^9, 3.940543791866839*^9}, 
   3.9405438302648363`*^9},
 CellTags->"4.2.8",
 CellID->1489440234,ExpressionUUID->"ccba9749-6a1a-4e5d-84c0-1671f02fb3f0"],

Cell["\<\
It is possible and often quite useful to give names to entire patterns. To do \
this, one should just use the built-in Pattern command, which has a \
short-hand notation <:> (colon). This is how the previous problem can be \
solved by using Pattern: \
\>", "Text",
 CellChangeTimes->{{3.939864598801738*^9, 3.9398646541128683`*^9}},
 CellID->1952623406,ExpressionUUID->"c5732be3-f100-4bc2-a74c-0937e834c3db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "2", ",", "Pi", ",", 
    RowBox[{"3", "/", "2"}], ",", 
    RowBox[{"2", "/", "5"}], ",", "4", ",", 
    RowBox[{"Sin", "[", "y", "]"}], ",", "8", ",", 
    RowBox[{"Cos", "[", "z", "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"x", ":", 
    RowBox[{"(", 
     RowBox[{"_Integer", "|", "_Rational"}], ")"}]}], ":>", 
   RowBox[{"Sqrt", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.939864687668858*^9, 3.9398646990828123`*^9}},
 CellLabel->"In[608]:=",
 CellID->1232575608,ExpressionUUID->"65e1c889-5e68-421a-9d31-76ec71bd7a8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   SqrtBox["2"], ",", "\[Pi]", ",", 
   SqrtBox[
    FractionBox["3", "2"]], ",", 
   SqrtBox[
    FractionBox["2", "5"]], ",", "2", ",", 
   RowBox[{"Sin", "[", "y", "]"}], ",", 
   RowBox[{"2", " ", 
    SqrtBox["2"]}], ",", 
   RowBox[{"Cos", "[", "z", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939864699416759*^9},
 CellLabel->"Out[608]=",
 CellID->419941670,ExpressionUUID->"ef6847a2-bd4a-4a04-a2e2-7709cfa75d4e"]
}, Open  ]],

Cell["We will frequently use this form in later chapters.", "Text",
 CellChangeTimes->{3.9398649098520117`*^9},
 CellID->383717135,ExpressionUUID->"3bdd3b9e-ec66-468a-a85f-b4814f932998"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Optional patterns", "Subsubsection",
 CellChangeTimes->{3.939864915155652*^9},
 CellTags->"4.2.9",
 CellID->240496004,ExpressionUUID->"bcca35df-190a-491d-898b-87e231cbb5a4"],

Cell["\<\
The default pattern is a construction which allows to modify a given pattern \
to match not just what it normally matches, but also certain expressions in \
which some parts of the pattern will be missing altogether, but then the \
pattern \[OpenCurlyDoubleQuote]knows\[CloseCurlyDoubleQuote] what to \
substitute for them. This is often useful for defining functions with some \
special cases (default values for some input parameters).\
\>", "Text",
 CellChangeTimes->{{3.9398649224634733`*^9, 3.939864938583972*^9}},
 CellID->452115574,ExpressionUUID->"fb9620b0-140e-47ba-bb23-96713dbac660"],

Cell["\<\
The default pattern is built with the Optional keyword, and with a colon as a \
short-hand notation. The way it is used is <pattern:defvalue>, where the \
<defvalue> is substituted if this particular piece of the pattern is absent \
in an expression, which otherwise matches the pattern.\
\>", "Text",
 CellChangeTimes->{{3.939864946745573*^9, 3.939864959528243*^9}},
 CellID->1424688115,ExpressionUUID->"29480310-d004-4315-863c-16c8075b88ea"],

Cell["\<\
Here, for example, we want to replace all sequences of arguments in <f> by \
their sum, and for a single argument, add 1.\
\>", "Text",
 CellChangeTimes->{{3.939864967999172*^9, 3.9398649713531933`*^9}, 
   3.9399470936795197`*^9, 3.940017704993372*^9},
 CellID->347912861,ExpressionUUID->"fa5b90fb-3c4e-424a-88c9-fe3cdf8c4164"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"{", "a", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9398649764796877`*^9, 3.939864981864253*^9}},
 CellID->927070430,ExpressionUUID->"3ed4348b-588f-4368-afb5-4df72005002c"],

Cell["We can do this by two separate rules:", "Text",
 CellChangeTimes->{3.9398649912234993`*^9, 3.939931389180148*^9},
 CellID->1210220889,ExpressionUUID->"dcbbde7c-d78f-4d62-90a3-6e46833203d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"{", "x_", "}"}], ":>", 
     RowBox[{"{", 
      RowBox[{"x", "+", "1"}], "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", "x__", "}"}], ":>", 
     RowBox[{"{", 
      RowBox[{"Plus", "[", "x", "]"}], "}"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.939864998351906*^9, 3.939865014852281*^9}},
 CellLabel->"In[609]:=",
 CellID->1364860686,ExpressionUUID->"b99f55f8-53ce-41cc-8491-4ac9e5c02e01"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", "+", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", "+", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", "+", "b", "+", "c"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.939865016238387*^9},
 CellLabel->"Out[609]=",
 CellID->479107668,ExpressionUUID->"39f2caea-a529-4b54-8dc0-23f891148dcd"]
}, Open  ]],

Cell["\<\
However, first, we needed 2 rules, and second, we would get a bug if we did \
not think of the right order of the rules and interchange them, since the \
more general pattern also matches on a single argument:\
\>", "Text",
 CellChangeTimes->{{3.939865027253619*^9, 3.939865030181966*^9}, 
   3.939931389200839*^9},
 CellID->1446383473,ExpressionUUID->"40132725-8745-4f87-b890-f2cf363fb893"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"{", "x_", "}"}], ":>", 
     RowBox[{"{", 
      RowBox[{"Plus", "[", "x", "]"}], "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", "x_", "}"}], ":>", 
     RowBox[{"{", 
      RowBox[{"x", "+", "1"}], "}"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9398650516011868`*^9, 3.939865062432288*^9}},
 CellLabel->"In[610]:=",
 CellID->1815162723,ExpressionUUID->"c47cd30a-fb49-497e-805d-662031c12c5e"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"{", "a", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.9398650628806877`*^9},
 CellLabel->"Out[610]=",
 CellID->688872624,ExpressionUUID->"2e784519-2829-4bc5-a59f-0dcce12a92c6"]
}, Open  ]],

Cell["Here is the solution with an optional pattern:", "Text",
 CellChangeTimes->{3.939865071876335*^9, 3.939931389221253*^9},
 CellID->797850591,ExpressionUUID->"f771403a-9e6e-4fd6-af0c-cbd554c6b243"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], "/.", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x__", ",", 
     RowBox[{"y_", ":", "1"}]}], "}"}], ":>", 
   RowBox[{"{", 
    RowBox[{"x", "+", "y"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.9398650803540688`*^9, 3.9398650878699636`*^9}},
 CellLabel->"In[611]:=",
 CellID->586991069,ExpressionUUID->"dd4fed94-e20e-4548-91aa-92e8a22f08d2"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", "+", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", "+", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", "+", "b", "+", "c"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.939865088331704*^9},
 CellLabel->"Out[611]=",
 CellID->1300912563,ExpressionUUID->"6e4b379c-98b6-4727-93f3-e84c61c2a9b2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Repeated patterns", "Subsubsection",
 CellChangeTimes->{3.9398651622841673`*^9},
 CellTags->"4.2.10",
 CellID->906436234,ExpressionUUID->"e4c2778c-62e3-446b-8d1a-648aa8804d05"],

Cell["\<\
These patterns are useful in cases when we have to match a sequence of \
expressions each of which is matched by a given pattern, but we don\
\[CloseCurlyQuote]t know how many terms there will be in a sequence.\
\>", "Text",
 CellChangeTimes->{{3.939865185875556*^9, 3.939865196293969*^9}},
 CellID->224793020,ExpressionUUID->"aed4986f-9d8c-467a-afb0-79917642bb64"],

Cell["\<\
Here we make a repeated pattern which matches any sequence of rational or \
integer numbers, mixed in any way\
\>", "Text",
 CellChangeTimes->{{3.939865185875556*^9, 3.939865198485878*^9}},
 CellID->598011004,ExpressionUUID->"9da0f9d1-0b9c-426b-86a5-e44d8ed509ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"3", "/", "5"}], ",", "4", ",", "5", ",", 
    RowBox[{"2", "/", "3"}]}], "]"}], "/.", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ":", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"_Integer", "|", "_Rational"}], ")"}], ".."}]}], "]"}], ":>", 
   RowBox[{"{", "x", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.939865216244275*^9, 3.9398652411566772`*^9}},
 CellLabel->"In[612]:=",
 CellID->1827689794,ExpressionUUID->"48e78747-00f5-4ac9-8b50-32c886b9a609"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["3", "5"], ",", "4", ",", "5", ",", 
   FractionBox["2", "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.939865241783154*^9},
 CellLabel->"Out[612]=",
 CellID->1209203589,ExpressionUUID->"15ef7bdb-44a4-4b22-aa78-13c50c29aa55"]
}, Open  ]],

Cell["\<\
Here we convert to numbers all lists which represent binary digits - that is, \
all lists which contain any number of ones and zeros mixed arbitrarily.\
\>", "Text",
 CellChangeTimes->{{3.939865271171013*^9, 3.939865275314014*^9}},
 CellID->1446968762,ExpressionUUID->"c880070e-c95f-43b8-afaa-9fab70c89301"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "3"}], "}"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"x", ":", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "|", "0"}], ")"}], ".."}], "}"}]}], ":>", 
   RowBox[{"FromDigits", "[", 
    RowBox[{"x", ",", "2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.939865283235795*^9, 3.9398653166686707`*^9}},
 CellLabel->"In[613]:=",
 CellID->1246421185,ExpressionUUID->"6f2ef044-f1d2-4aa4-86e5-1e3dd9c3aec1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "2", ",", "7", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "1"}], "}"}], ",", "2", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9398653182490463`*^9},
 CellLabel->"Out[613]=",
 CellID->99045026,ExpressionUUID->"96db1962-1fd1-4ba3-b189-4a39c531083e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Built-in functions that use patterns", "Subsection",
 CellChangeTimes->{3.9398653533858013`*^9},
 CellID->349925557,ExpressionUUID->"43e48320-95a9-4e24-98d7-c4968cba4e22"],

Cell["\<\
Let us look at some highly useful built-in functions which take patterns as \
some of their arguments. One such function - MatchQ - we already discussed.\
\>", "Text",
 CellChangeTimes->{{3.939865360697358*^9, 3.939865364503511*^9}},
 CellID->1388611013,ExpressionUUID->"613ed713-f6e8-4703-b7c3-0bf27722c980"],

Cell[CellGroupData[{

Cell["Cases", "Subsubsection",
 CellChangeTimes->{3.9398653714588213`*^9},
 CellID->518105050,ExpressionUUID->"aa02dc52-d979-450c-aa2f-c73e8bfdad8c"],

Cell["\<\
This function is used for expression destructuring. More precisely, it is \
used to search for subexpressions inside an expression, which match certain \
pattern. Cases[expr, pattern] returns all elements of <expr> on the level 1, \
which match the pattern <pattern>. As an optional third argument Cases takes \
a level specification, which can be an integer (positive or negative, \
including Infinity), an integer in list braces, or a pair of integers in a \
list. In the first case, Cases performs search on all levels up to and \
including the indicated number (from the top or from the bottom of the \
expression tree, depending on its sign), in the second case it only searches \
on the indicated level only, and in the third case it searches in the range \
of levels given by the two numbers in the list. As an optional fourth \
argument, it accepts an integer indicating how many
results have to be found until Cases stops. If it is not given, Cases will \
produce all the results on given level(s) of expression.\
\>", "Text",
 CellChangeTimes->{{3.939865379787221*^9, 3.939865431000193*^9}},
 CellID->1892870412,ExpressionUUID->"42b7f4df-9620-479c-ae17-0d57108f7831"],

Cell["Now some examples:", "Text",
 CellChangeTimes->{3.939865438475518*^9, 3.939931389242051*^9},
 CellID->1258569927,ExpressionUUID->"ab440671-2c35-4ee1-ab76-17178587cd0b"],

Cell["Example: choosing integers from the list", "ItemNumbered",
 CellChangeTimes->{3.939865446008648*^9},
 CellID->70840139,ExpressionUUID->"8030a750-fa15-4761-ab8c-2ab5097dd877"],

Cell["\<\
The simplest example: let us choose all integer numbers from a simple \
(1-dimensional) list:\
\>", "Text",
 CellChangeTimes->{3.939865452161563*^9},
 CellID->904275735,ExpressionUUID->"bd1a0410-d63f-4c38-95eb-a78ca686c099"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "testlist", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testlist", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "/", "2"}], ",", "Pi", ",", "3", ",", "1.4142135", ",", 
      "10", ",", "99.99", ",", "15", ",", "25"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Cases", "[", 
  RowBox[{"testlist", ",", "_Integer"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9398654618568783`*^9, 3.939865491871677*^9}},
 CellLabel->"In[614]:=",
 CellID->328401935,ExpressionUUID->"cb9a94dd-e0d7-4607-9f0e-29f65e18bb7e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "10", ",", "15", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{3.9398654925414257`*^9},
 CellLabel->"Out[616]=",
 CellID->981599561,ExpressionUUID->"51ecc349-111e-471e-ae37-9ea588643575"]
}, Open  ]],

Cell["\<\
Notice that here we don\[CloseCurlyQuote]t even need to attach a tag to the \
pattern, since we don\[CloseCurlyQuote]t need to perform any transformations \
on the results.\
\>", "Text",
 CellChangeTimes->{{3.9398655031921043`*^9, 3.939865507738171*^9}},
 CellID->774445473,ExpressionUUID->"ccf1487c-52c2-426f-90bc-971622afaa42"],

Cell["Example: filtering data", "ItemNumbered",
 CellChangeTimes->{3.939865513976405*^9},
 CellID->1193803709,ExpressionUUID->"b0baf3c2-63ce-400c-a291-93cbcafd9d65"],

Cell["\<\
Let us consider a bit more practical example: suppose we have a set of data \
and need to remove all the data points with values smaller than a given \
cutoff <eps> \
\>", "Text",
 CellChangeTimes->{{3.939865520742256*^9, 3.939865535955141*^9}, 
   3.939947093703043*^9, 3.940017705011935*^9},
 CellID->319223242,ExpressionUUID->"ed7f219a-2ac5-41c6-ad6c-cf880c44f0b4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eps", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"data", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Random", "[", "]"}], ",", 
    RowBox[{"{", "10", "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.939865539706072*^9, 3.9398655532024527`*^9}},
 CellLabel->"In[617]:=",
 CellID->514130564,ExpressionUUID->"8e000a2e-0383-4881-a88d-83797928dea3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.24135904576026287`", ",", "0.04810145227276756`", ",", 
   "0.377130874483594`", ",", "0.2307253775797552`", ",", 
   "0.5335835700957173`", ",", "0.97453487359554`", ",", 
   "0.8951143455607296`", ",", "0.49575880203247613`", ",", 
   "0.14811719746072816`", ",", "0.24303541731729006`"}], "}"}]], "Output",
 CellChangeTimes->{3.939865554149358*^9},
 CellLabel->"Out[618]=",
 CellID->1260920020,ExpressionUUID->"17a900e1-72fa-4ea2-9bfd-7267d7af9453"]
}, Open  ]],

Cell["This is how one does this with Cases:", "Text",
 CellChangeTimes->{3.9398655610203123`*^9, 3.939931389262845*^9},
 CellID->914147544,ExpressionUUID->"13ccca85-dd7a-40bf-a739-5112b4db1fe7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"data", ",", 
   RowBox[{"x_", "/;", 
    RowBox[{"x", ">", "eps"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939865563675907*^9, 3.939865569198367*^9}},
 CellLabel->"In[619]:=",
 CellID->2092224041,ExpressionUUID->"7892e0af-7727-45ab-9ec4-93b5f4db2619"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.377130874483594`", ",", "0.5335835700957173`", ",", "0.97453487359554`", 
   ",", "0.8951143455607296`", ",", "0.49575880203247613`"}], "}"}]], "Output",\

 CellChangeTimes->{3.939865570104793*^9},
 CellLabel->"Out[619]=",
 CellID->1691006867,ExpressionUUID->"a74a5e19-9a53-4cc7-8c24-b91b093af15d"]
}, Open  ]],

Cell["Extended functionality", "ItemNumbered",
 CellChangeTimes->{3.93986558000077*^9},
 CellID->1446401735,ExpressionUUID->"cf52efb2-1b25-426b-b80a-85a1a8757dfd"],

Cell["\<\
One more capability that Cases has is to immediately perform some \
transformation on the result found. The syntax is Cases[expr, rule, levespec, \
n], with the last two arguments optional as before, and we see that where we \
had a pattern now is a rule, with a pattern being its l.h.s. For example, now \
we want to supply each found number with either True or False depending on \
whether or not a number is divisible by 5:\
\>", "Text",
 CellChangeTimes->{{3.939865585677767*^9, 3.939865598901511*^9}},
 CellID->159076105,ExpressionUUID->"d2a69f33-3343-4984-942a-e5e65e648216"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"testlist", ",", 
   RowBox[{"x_Integer", ":>", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"x", ",", "5"}], "]"}], "==", "0"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.939865603938923*^9, 3.939865620554582*^9}},
 CellLabel->"In[620]:=",
 CellID->1106043982,ExpressionUUID->"0e6cd92f-6397-4129-bd2e-58058c9ca821"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "True"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9398656226985292`*^9},
 CellLabel->"Out[620]=",
 CellID->1489636325,ExpressionUUID->"1a603bad-26ee-4773-90ff-19e265fc6980"]
}, Open  ]],

Cell["\<\
So, notice that Cases generates a list as a result of its execution. This \
kind of list generation we may call a dynamic list generation rather than the \
\[OpenCurlyDoubleQuote]static\[CloseCurlyDoubleQuote] one we have described \
in the previous chapter.\
\>", "Text",
 CellChangeTimes->{{3.939865640563655*^9, 3.939865645623251*^9}},
 CellID->953357549,ExpressionUUID->"b6303b32-02dc-476e-a565-2761248a7c54"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "testlist", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.93986566209157*^9, 3.939865665469105*^9}},
 CellLabel->"In[621]:=",
 CellID->2102842138,ExpressionUUID->"9fd99ba6-1a18-445c-aa4e-dbff5acd7f30"],

Cell["Example: selecting positive numbers in a list", "ItemNumbered",
 CellChangeTimes->{{3.93986567410277*^9, 3.939865675515814*^9}},
 CellID->244529761,ExpressionUUID->"a506ffa8-13c2-4b99-9a88-d8e40d101f56"],

Cell["\<\
Let us now generate a list of positive and negative random integers:\
\>", "Text",
 CellChangeTimes->{3.9398656825051117`*^9},
 CellID->1675476416,ExpressionUUID->"1c89e709-be57-4fd8-8b8d-35d380a784d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}], ",", 
    RowBox[{"{", "15", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.939865685856874*^9, 3.939865697614118*^9}},
 CellLabel->"In[622]:=",
 CellID->1818230317,ExpressionUUID->"a7282b52-780a-42c8-bcd8-c4e92f69e960"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", 
   RowBox[{"-", "8"}], ",", 
   RowBox[{"-", "2"}], ",", "8", ",", 
   RowBox[{"-", "9"}], ",", "7", ",", 
   RowBox[{"-", "8"}], ",", "7", ",", 
   RowBox[{"-", "3"}], ",", "4", ",", "4", ",", "3", ",", "10", ",", "2", ",",
    "1"}], "}"}]], "Output",
 CellChangeTimes->{3.939865697994896*^9},
 CellLabel->"Out[622]=",
 CellID->797890478,ExpressionUUID->"1de7cfaf-b023-4a4a-a7f9-c60cf823c409"]
}, Open  ]],

Cell["\<\
Let us select only positive ones - the pattern we need is _?Positive\
\>", "Text",
 CellChangeTimes->{3.939865705602951*^9},
 CellID->1257371878,ExpressionUUID->"c8bc83c4-c121-4d75-b4b1-b6a9b23af072"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"testlist", ",", 
   RowBox[{"_", "?", "Positive"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939865710123598*^9, 3.939865715738274*^9}},
 CellLabel->"In[623]:=",
 CellID->1515133617,ExpressionUUID->"b36513c6-0b78-4467-a50f-dce541629c3b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "7", ",", "8", ",", "7", ",", "7", ",", "4", ",", "4", ",", "3", ",", "10", 
   ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.939865716077189*^9},
 CellLabel->"Out[623]=",
 CellID->1225162324,ExpressionUUID->"2e5f2eb0-6334-4898-a9ea-d8dbc11e3ca9"]
}, Open  ]],

Cell["Now only those that are larger than 5:", "Text",
 CellChangeTimes->{3.939865724507518*^9},
 CellID->1229972032,ExpressionUUID->"e44b838a-f179-4138-a3b4-93841b733b3b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"testlist", ",", 
   RowBox[{"x_", "/;", 
    RowBox[{"x", ">", "5"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939865725830843*^9, 3.939865735192522*^9}},
 CellLabel->"In[624]:=",
 CellID->1218129368,ExpressionUUID->"d1c9d98e-ed5e-46d4-b5e6-df63b7b9ef54"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "8", ",", "7", ",", "7", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.939865735952495*^9},
 CellLabel->"Out[624]=",
 CellID->800793016,ExpressionUUID->"715fceef-e3d2-4d20-a475-69bff94ae795"]
}, Open  ]],

Cell["Or those which are divisible by 3:", "Text",
 CellChangeTimes->{3.939865744324237*^9},
 CellID->648204163,ExpressionUUID->"efbdd74b-d9cf-4cce-a2f8-45b71b84192a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"testlist", ",", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"x", ",", "3"}], "]"}], "==", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939865745824794*^9, 3.9398657538229437`*^9}},
 CellLabel->"In[625]:=",
 CellID->1860176960,ExpressionUUID->"15cd4c15-64f4-49d1-8798-5e2375628102"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "9"}], ",", 
   RowBox[{"-", "3"}], ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.939865754074542*^9},
 CellLabel->"Out[625]=",
 CellID->578182414,ExpressionUUID->"943e35b6-68d0-476e-8b5c-dc2ad7ce4b95"]
}, Open  ]],

Cell["In the last 2 cases we have used the conditional patterns.", "Text",
 CellChangeTimes->{3.9398657619996443`*^9},
 CellID->148329423,ExpressionUUID->"4a58cc2a-3a99-4f7c-99ef-0f9c1f713990"],

Cell["Example: nested list", "ItemNumbered",
 CellChangeTimes->{3.939865767606926*^9},
 CellID->1891581841,ExpressionUUID->"22ebe13c-4a87-45e3-87e2-52882098fa11"],

Cell["Let us now consider a more complex 2-level list:", "Text",
 CellChangeTimes->{3.939865774073442*^9},
 CellID->468091499,ExpressionUUID->"317fd639-6603-4dec-9669-a0279e0190a9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "testlist", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testlist", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "+", "j"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.939865778245431*^9, 3.9398657899289417`*^9}},
 CellLabel->"In[626]:=",
 CellID->917145411,ExpressionUUID->"68bddef2-d30b-4c72-bd32-0b82d24c7e7e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939865790354535*^9},
 CellLabel->"Out[627]=",
 CellID->1631050232,ExpressionUUID->"14d35aa6-9e34-4382-a2d1-e480a953b73e"]
}, Open  ]],

Cell["Now say we would like to find all even numbers. Let us try:", "Text",
 CellChangeTimes->{3.939865797517929*^9},
 CellID->1415112247,ExpressionUUID->"d2e11206-e147-4e6b-988c-8706fff45409"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"testlist", ",", 
   RowBox[{"x_", "?", "EvenQ"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9398658010609818`*^9, 3.939865806791192*^9}},
 CellLabel->"In[628]:=",
 CellID->2028697605,ExpressionUUID->"5e313921-ebb1-43fb-8e4b-f2bc617eb973"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.939865807107522*^9},
 CellLabel->"Out[628]=",
 CellID->1339916304,ExpressionUUID->"70d8dcba-fdc0-4b31-90a6-7d605088af01"]
}, Open  ]],

Cell["\<\
It did not work... This is because by default, Cases only looks at the first \
level of an expression, where there are no numbers, just sublists.\
\>", "Text",
 CellChangeTimes->{{3.939865820364984*^9, 3.93986582273932*^9}, 
   3.940740644002833*^9},
 CellID->1284835362,ExpressionUUID->"50c8e683-8299-454e-baf9-e3c426cb81da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", "testlist", "]"}]], "Input",
 CellChangeTimes->{{3.939865828917108*^9, 3.939865832221561*^9}},
 CellLabel->"In[629]:=",
 CellID->262892965,ExpressionUUID->"190d9329-caa3-466b-8f77-2ac41e472b70"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"List", "[", 
      RowBox[{"2", ",", "3", ",", "4"}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{"3", ",", "4", ",", "5"}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{"4", ",", "5", ",", "6"}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{"5", ",", "6", ",", "7"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.939865832471504*^9},
 CellLabel->"Out[629]//FullForm=",
 CellID->1155324758,ExpressionUUID->"fb3a08cc-6be5-49ef-b433-9a65e91bf7e5"]
}, Open  ]],

Cell["This is how we should search:", "Text",
 CellChangeTimes->{3.939865841228546*^9, 3.939931389283691*^9},
 CellID->2143555179,ExpressionUUID->"20580d8e-2572-4636-bb9c-9c0e1329a03b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"testlist", ",", 
   RowBox[{"x_", "?", "EvenQ"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.9398658426268473`*^9, 3.939865848823183*^9}},
 CellLabel->"In[630]:=",
 CellID->18229542,ExpressionUUID->"68c70bdb-f402-43e6-b734-bb8c3a3d3302"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "4", ",", "4", ",", "6", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.939865849157016*^9},
 CellLabel->"Out[630]=",
 CellID->840595769,ExpressionUUID->"688fa5a9-66fb-4f00-8fdf-0c0aea5631e7"]
}, Open  ]],

Cell["\<\
The argument <2> here instructs Cases to search on all levels up to level 2 \
inclusive, on the first and second levels in this case. Should we wish to \
search only on a level 2, we would have to place it in a curly braces (list):\
\
\>", "Text",
 CellChangeTimes->{{3.939865857702672*^9, 3.9398658663278112`*^9}, 
   3.939931389304081*^9, 3.939947093727216*^9, 3.940017705030704*^9},
 CellID->1745659617,ExpressionUUID->"39c8140a-c466-4029-a6bb-67174f62e258"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"testlist", ",", 
   RowBox[{"x_", "?", "EvenQ"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9398658749505444`*^9, 3.9398658755931177`*^9}},
 CellLabel->"In[631]:=",
 CellID->743337082,ExpressionUUID->"11f87743-6ef4-42f5-b38c-2a052803c447"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "4", ",", "4", ",", "6", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.93986587592207*^9},
 CellLabel->"Out[631]=",
 CellID->1590611079,ExpressionUUID->"9139f838-2dfb-43a2-80a1-3be4761ecd61"]
}, Open  ]],

Cell["\<\
In this case it did not matter, but say now we want to find not numbers but \
sublists. We could do it like this:\
\>", "Text",
 CellChangeTimes->{{3.939865886156001*^9, 3.939865888661121*^9}, 
   3.939931389324671*^9},
 CellID->764546380,ExpressionUUID->"ceaab182-1a7a-4ccc-9d54-39d270a2ac5d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"testlist", ",", "_List"}], "]"}]], "Input",
 CellChangeTimes->{{3.9398658961027117`*^9, 3.939865900592556*^9}},
 CellLabel->"In[632]:=",
 CellID->1702839229,ExpressionUUID->"964a5fe1-47ac-4719-80c5-addbdd3e10c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939865900973493*^9},
 CellLabel->"Out[632]=",
 CellID->904802157,ExpressionUUID->"5786e2fd-9761-4291-8df8-2d7f6423fea7"]
}, Open  ]],

Cell["\<\
This looks just like the initial list, but really it is a list of found \
sublists, which in this case indeed coincides with the initial list. This is \
easy to check by transforming the results:\
\>", "Text",
 CellChangeTimes->{{3.93986591204055*^9, 3.9398659154244833`*^9}},
 CellID->678148292,ExpressionUUID->"9fb55e6e-bb99-4719-9c1b-684906c8e229"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "found", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Cases", "[", 
  RowBox[{"testlist", ",", 
   RowBox[{"x_List", ":>", 
    RowBox[{"found", "[", "x", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.939865919234119*^9, 3.939865932506341*^9}},
 CellLabel->"In[633]:=",
 CellID->1444550990,ExpressionUUID->"bdad0466-bfe3-4875-8594-0dd7ad03ce9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"found", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}], "]"}], ",", 
   RowBox[{"found", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4", ",", "5"}], "}"}], "]"}], ",", 
   RowBox[{"found", "[", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}], "]"}], ",", 
   RowBox[{"found", "[", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7"}], "}"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.93986593408617*^9},
 CellLabel->"Out[634]=",
 CellID->1252931869,ExpressionUUID->"0b7a4946-9934-4a27-8569-16faeb9e6066"]
}, Open  ]],

Cell["\<\
We can impose some conditions on the sublists - for example, to find only \
those which contain number 4:\
\>", "Text",
 CellChangeTimes->{3.939865946303356*^9, 3.9399313893454533`*^9},
 CellID->1813124110,ExpressionUUID->"d03e3712-979b-4b3d-b8b8-b0e81cf3bb93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"testlist", ",", 
   RowBox[{"x_List", "/;", 
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{"x", ",", "4"}], "]"}], "=!=", 
     RowBox[{"{", "}"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939865957678149*^9, 3.9398659774155073`*^9}},
 CellLabel->"In[635]:=",
 CellID->125513645,ExpressionUUID->"7c0f6bb2-c65b-4aa2-a590-3e6fc1ebe464"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9398659823019876`*^9},
 CellLabel->"Out[635]=",
 CellID->425785916,ExpressionUUID->"171aabaf-d3c3-4065-b6bb-10b849834447"]
}, Open  ]],

Cell["\<\
This illustrates a possibility to use nested Cases like this (however, there \
are more efficient solutions for the present case, such as using the MemberQ \
function - see below).\
\>", "Text",
 CellChangeTimes->{{3.939865993403809*^9, 3.939865996995379*^9}},
 CellID->768378408,ExpressionUUID->"423c3002-30af-4267-9734-0cb4c3f292f2"],

Cell["If we now restrict ourselves to search only on the level 2,", "Text",
 CellChangeTimes->{3.939866007855818*^9},
 CellID->526750580,ExpressionUUID->"f0652d75-311b-4d73-ba2e-f7199671d1ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"testlist", ",", "_List", ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939866010342761*^9, 3.93986601537109*^9}},
 CellLabel->"In[636]:=",
 CellID->421615338,ExpressionUUID->"62ab0431-87ff-4552-9fbf-2cc8ef905312"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.939866015697618*^9},
 CellLabel->"Out[636]=",
 CellID->674827156,ExpressionUUID->"1c8e4195-2c32-4f0f-8977-c322f504d8ad"]
}, Open  ]],

Cell["\<\
then we find nothing, since there are no (sub)lists on level 2, just numbers.\
\
\>", "Text",
 CellChangeTimes->{3.9398660251455383`*^9},
 CellID->958871085,ExpressionUUID->"ca6a9b04-58f6-4315-a08c-9146a550ccea"],

Cell["\<\
Example: an elegant solution of the problem of odd sublists from chapter 3\
\>", "ItemNumbered",
 CellChangeTimes->{3.939866032539679*^9},
 CellID->1029038507,ExpressionUUID->"4717691e-080f-43a2-bcba-a0900d3bbd3f"],

Cell[TextData[{
 "As an example of combined use of Cases and conditional patterns, we can \
revisit a problem of extracting from a list all sublists which contain odd \
number of odd elements. Before we considered procedural, structural and \
functional implementations (see section ",
 ButtonBox["3.6.8.4",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-3-Lists.nb", CharacterEncoding -> "UTF-8"], 
    "3.6.8.4"},
  ButtonNote->"/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-3-Lists.nb"],
 "). Our present solution will be completely\npattern-based."
}], "Text",
 CellChangeTimes->{{3.939866054320586*^9, 3.9398660662349577`*^9}, {
  3.939866161563862*^9, 3.939866161571504*^9}},
 CellID->1364377858,ExpressionUUID->"f29bb700-ec73-40af-a291-06964a7b3d73"],

Cell["Here is our list:", "Text",
 CellChangeTimes->{3.9398661769045277`*^9},
 CellID->1008166631,ExpressionUUID->"1e225de3-76d1-464d-8d9f-af35ac40fa90"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "testlist", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testlist", "=", 
  RowBox[{"Range", "/@", 
   RowBox[{"Range", "[", "6", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.939866179201056*^9, 3.9398661876149263`*^9}},
 CellLabel->"In[637]:=",
 CellID->1549382943,ExpressionUUID->"c14d4154-53c1-414b-92be-75164c52c6d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.939866188089816*^9},
 CellLabel->"Out[638]=",
 CellID->1655331753,ExpressionUUID->"f8620740-755a-4160-b17e-9191bcbc27d5"]
}, Open  ]],

Cell["And here is the solution:", "Text",
 CellChangeTimes->{3.939866197936165*^9},
 CellID->510125786,ExpressionUUID->"c2fb318a-897b-4622-b8da-b382c78f478e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"testlist", ",", 
   RowBox[{"x_List", "/;", 
    RowBox[{"OddQ", "[", 
     RowBox[{"Count", "[", 
      RowBox[{"x", ",", 
       RowBox[{"_", "?", "OddQ"}]}], "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939866199646882*^9, 3.939866222580469*^9}},
 CellLabel->"In[640]:=",
 CellID->1213831115,ExpressionUUID->"ce78ba6f-02a7-45d6-982c-43fffe2569f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.939866213128562*^9, 3.939866223068459*^9}},
 CellLabel->"Out[640]=",
 CellID->416129783,ExpressionUUID->"de3244e8-5f0f-4119-8a1a-eb5db993e8ad"]
}, Open  ]],

Cell["\<\
In my opinion, this is the more elegant way to solve this problem. Also, it \
is very transparent what is being done: in each list we count the number of \
odd elements with a command Count[x,_?OddQ] (the Count command we will cover \
shortly), then we check whether or not the resulting number is odd. I remind \
that /; symbol is a short-hand for Condition operator.\
\>", "Text",
 CellChangeTimes->{{3.9398684227447653`*^9, 3.939868439594245*^9}},
 CellID->1891949389,ExpressionUUID->"aef94870-8a38-4956-a15c-c153c920c703"],

Cell["\<\
As a modification, we may do the same but for each found sublist return it \
together with the number of even elements in it:\
\>", "Text",
 CellChangeTimes->{{3.939868447955647*^9, 3.939868452697089*^9}},
 CellID->811511310,ExpressionUUID->"b118bff9-ff90-44e5-9ec2-3c24d7c72455"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"testlist", ",", 
   RowBox[{
    RowBox[{"x_List", "/;", 
     RowBox[{"OddQ", "[", 
      RowBox[{"Count", "[", 
       RowBox[{"x", ",", 
        RowBox[{"_", "?", "OddQ"}]}], "]"}], "]"}]}], ":>", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{"x", ",", 
        RowBox[{"_", "?", "EvenQ"}]}], "]"}], ",", "x"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.939868457608901*^9, 3.9398684825638323`*^9}},
 CellLabel->"In[642]:=",
 CellID->626028769,ExpressionUUID->"e4c2ae19-c808-4ecd-99f4-31531ea08f27"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"{", "1", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939868483783296*^9},
 CellLabel->"Out[642]=",
 CellID->607361473,ExpressionUUID->"47146df1-29e4-460f-a6f5-adf1590754ff"]
}, Open  ]],

Cell["Example: first n prime numbers in a list", "ItemNumbered",
 CellChangeTimes->{3.939868519566626*^9},
 CellID->934502520,ExpressionUUID->"74b30298-5197-4abf-9959-c79f508f10b9"],

Cell["\<\
Say we want to get a first given number of primes in a list of numbers. This \
is our list:\
\>", "Text",
 CellChangeTimes->{3.939868528106208*^9},
 CellID->1635943129,ExpressionUUID->"24abb249-cddc-4555-9cc4-74cdd49ef6cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "100"}], "}"}], "]"}], ",", 
    RowBox[{"{", "30", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9398685305837183`*^9, 3.939868538814142*^9}},
 CellLabel->"In[643]:=",
 CellID->1539038141,ExpressionUUID->"264ba3e9-d538-4027-90cf-2be113cc95fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "55", ",", "41", ",", "65", ",", "62", ",", "85", ",", "67", ",", "68", ",",
    "55", ",", "75", ",", "42", ",", "39", ",", "85", ",", "60", ",", "6", 
   ",", "24", ",", "16", ",", "58", ",", "28", ",", "61", ",", "17", ",", 
   "60", ",", "43", ",", "18", ",", "5", ",", "21", ",", "88", ",", "14", ",",
    "73", ",", "70", ",", "79"}], "}"}]], "Output",
 CellChangeTimes->{3.939868539065135*^9},
 CellLabel->"Out[643]=",
 CellID->1060469894,ExpressionUUID->"40607509-6e16-4be8-b01a-60f9e6d34059"]
}, Open  ]],

Cell["This will pick the first 3 primes:", "Text",
 CellChangeTimes->{3.939868546370852*^9, 3.939931389366222*^9},
 CellID->1683511820,ExpressionUUID->"6f873a1e-21d6-401c-bd9c-16bc0062e996"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"testlist", ",", 
   RowBox[{"_", "?", "PrimeQ"}], ",", "1", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.9398685478804007`*^9, 3.939868556064035*^9}},
 CellLabel->"In[644]:=",
 CellID->248412793,ExpressionUUID->"29a9be26-ac9d-4350-b53d-760c5fbc69d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"41", ",", "67", ",", "61"}], "}"}]], "Output",
 CellChangeTimes->{3.939868559405013*^9},
 CellLabel->"Out[644]=",
 CellID->402283409,ExpressionUUID->"4cbd8bbf-3bed-46ea-b21d-e85aa98dd1b2"]
}, Open  ]],

Cell["\<\
Notice that here we still had to provide the third argument (level \
specification), even though it is normally unnecessary for simple lists (it \
is 1 by default). This is because otherwise the argument <3> would be \
interpreted as a level specification, and as a result, we would get all \
primes (why?)\
\>", "Text",
 CellChangeTimes->{{3.939868575919325*^9, 3.9398685855396023`*^9}},
 CellID->898734307,ExpressionUUID->"8f400743-0997-431a-bec3-2b875f59d762"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"testlist", ",", 
   RowBox[{"_", "?", "PrimeQ"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.9398685943476067`*^9, 3.939868600540371*^9}},
 CellLabel->"In[645]:=",
 CellID->1008629630,ExpressionUUID->"512f46cd-5c57-4518-bdcd-3c3e1609a3f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "41", ",", "67", ",", "61", ",", "17", ",", "43", ",", "5", ",", "73", ",", 
   "79"}], "}"}]], "Output",
 CellChangeTimes->{3.93986860089156*^9},
 CellLabel->"Out[645]=",
 CellID->1791308027,ExpressionUUID->"5e911815-4212-4845-a517-05b0dcac1481"]
}, Open  ]],

Cell["Why not use loops?", "ItemNumbered",
 CellChangeTimes->{3.9398686091052637`*^9},
 CellID->940762496,ExpressionUUID->"bfe8311d-f822-412e-a629-5a6f6f612989"],

Cell["\<\
One may think that in all the examples given above using loops will give the \
same effect. But this is not so at least for 3 reasons:\
\>", "Text",
 CellChangeTimes->{{3.939868615896449*^9, 3.939868621045039*^9}},
 CellID->1620661058,ExpressionUUID->"7c873138-8cfc-4eb6-bb45-aac7a7368337"],

Cell[TextData[{
 "1. Cases is optimized in terms of generation of lists of results - this \
list is generated internally. As we have seen in section ",
 ButtonBox["3.4.5.3",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-3-Lists.nb", CharacterEncoding -> "UTF-8"], 
    "3.4.5.3"},
  ButtonNote->"/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-3-Lists.nb"],
 ", generating a list in a loop is quite inefficient."
}], "Text",
 CellChangeTimes->{{3.939868629773774*^9, 3.939868632582209*^9}, {
  3.939868732466733*^9, 3.939868732474535*^9}},
 CellID->1930767452,ExpressionUUID->"16cd3e4e-ebe4-4251-a1da-ca032297f5db"],

Cell["\<\
2. Cases works on patterns, and selects elements based on pattern-matching \
rather than a simple comparison. Of course, in the case when we simply look \
for a fixed object (not containing a pattern), pattern-matching reduced to \
the sameness comparison.\
\>", "Text",
 CellChangeTimes->{{3.9398687581009912`*^9, 3.9398687673434134`*^9}},
 CellID->2064240397,ExpressionUUID->"cd5b567d-7704-46eb-a552-22196e5ebe9b"],

Cell[TextData[{
 "3. Cases works on general ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expressions (trees), and we can specify on which levels of the trees the \
search has to be performed. This would require nested loops in the procedural \
approach."
}], "Text",
 CellChangeTimes->{{3.939868775694304*^9, 3.9398687791782303`*^9}},
 CellID->1426550719,ExpressionUUID->"5a27bf0b-ab55-40c2-a758-0ed9418a29d5"],

Cell["Example: collecting terms in a polynomial of 2 variables", \
"ItemNumbered",
 CellChangeTimes->{3.939868787635807*^9},
 CellID->539670109,ExpressionUUID->"d330751e-63a6-415a-a7ee-ae22dd3ae383"],

Cell[TextData[{
 "We could have given many more examples. What is important to remember is \
that Cases is a universal and versatile command, which works on general ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expressions (trees), and on lists in particular. To illustrate the \
generality of Cases, let us now use it to select from the polynomial \
(1+x)^10*(1+y)^10 all terms with an even power of <y> and odd power of <x>:"
}], "Text",
 CellChangeTimes->{{3.939868797260211*^9, 3.9398688131103067`*^9}},
 CellID->1412080682,ExpressionUUID->"1487fe4c-dbd6-4672-afaf-4a04d9439bb5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "x"}], ")"}], "10"], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "y"}], ")"}], "10"]}], "]"}], ",", 
   RowBox[{"a_", "*", 
    RowBox[{"x", "^", 
     RowBox[{"_", "?", "OddQ"}]}], "*", 
    RowBox[{"y", "^", 
     RowBox[{"_", "?", "EvenQ"}]}]}], ",", "Infinity"}], "]"}]}], "Input",
 CellChangeTimes->{{3.939868851749758*^9, 3.939868904627557*^9}},
 CellLabel->"In[650]:=",
 CellID->279811955,ExpressionUUID->"8c8f5071-4124-4737-bb65-d9c359550e27"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"5400", " ", 
    SuperscriptBox["x", "3"], " ", 
    SuperscriptBox["y", "2"]}], ",", 
   RowBox[{"11340", " ", 
    SuperscriptBox["x", "5"], " ", 
    SuperscriptBox["y", "2"]}], ",", 
   RowBox[{"5400", " ", 
    SuperscriptBox["x", "7"], " ", 
    SuperscriptBox["y", "2"]}], ",", 
   RowBox[{"450", " ", 
    SuperscriptBox["x", "9"], " ", 
    SuperscriptBox["y", "2"]}], ",", 
   RowBox[{"25200", " ", 
    SuperscriptBox["x", "3"], " ", 
    SuperscriptBox["y", "4"]}], ",", 
   RowBox[{"52920", " ", 
    SuperscriptBox["x", "5"], " ", 
    SuperscriptBox["y", "4"]}], ",", 
   RowBox[{"25200", " ", 
    SuperscriptBox["x", "7"], " ", 
    SuperscriptBox["y", "4"]}], ",", 
   RowBox[{"2100", " ", 
    SuperscriptBox["x", "9"], " ", 
    SuperscriptBox["y", "4"]}], ",", 
   RowBox[{"25200", " ", 
    SuperscriptBox["x", "3"], " ", 
    SuperscriptBox["y", "6"]}], ",", 
   RowBox[{"52920", " ", 
    SuperscriptBox["x", "5"], " ", 
    SuperscriptBox["y", "6"]}], ",", 
   RowBox[{"25200", " ", 
    SuperscriptBox["x", "7"], " ", 
    SuperscriptBox["y", "6"]}], ",", 
   RowBox[{"2100", " ", 
    SuperscriptBox["x", "9"], " ", 
    SuperscriptBox["y", "6"]}], ",", 
   RowBox[{"5400", " ", 
    SuperscriptBox["x", "3"], " ", 
    SuperscriptBox["y", "8"]}], ",", 
   RowBox[{"11340", " ", 
    SuperscriptBox["x", "5"], " ", 
    SuperscriptBox["y", "8"]}], ",", 
   RowBox[{"5400", " ", 
    SuperscriptBox["x", "7"], " ", 
    SuperscriptBox["y", "8"]}], ",", 
   RowBox[{"450", " ", 
    SuperscriptBox["x", "9"], " ", 
    SuperscriptBox["y", "8"]}], ",", 
   RowBox[{"120", " ", 
    SuperscriptBox["x", "3"], " ", 
    SuperscriptBox["y", "10"]}], ",", 
   RowBox[{"252", " ", 
    SuperscriptBox["x", "5"], " ", 
    SuperscriptBox["y", "10"]}], ",", 
   RowBox[{"120", " ", 
    SuperscriptBox["x", "7"], " ", 
    SuperscriptBox["y", "10"]}], ",", 
   RowBox[{"10", " ", 
    SuperscriptBox["x", "9"], " ", 
    SuperscriptBox["y", "10"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.93986889271627*^9, 3.939868905440255*^9}},
 CellLabel->"Out[651]=",
 CellID->1699148678,ExpressionUUID->"ec84c175-7d15-41bd-aacd-e2786db22cc1"]
}, Open  ]],

Cell["\<\
The last argument set to Infinity means that all levels of an expression \
should be searched.\
\>", "Text",
 CellChangeTimes->{3.939868963810379*^9},
 CellID->1783495896,ExpressionUUID->"1eb1e659-6c44-4191-90ec-81570da067c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["DeleteCases", "Subsubsection",
 CellChangeTimes->{3.939868969978611*^9},
 CellID->519231233,ExpressionUUID->"f1d97d10-165c-4ff7-8f9f-17c3dbccf6a7"],

Cell["\<\
As is it clear from the name of this function, it deletes from a list all the \
elements which match a given pattern. Its syntax is similar to that of Cases. \
The main and important difference is that Cases returns a list of found \
subexpressions, while DeleteCases returns the (copy of) original list with \
these subexpressions removed.\
\>", "Text",
 CellChangeTimes->{{3.939868976310845*^9, 3.939868984299683*^9}},
 CellID->1493275270,ExpressionUUID->"a458f0d3-dbbb-437f-a1f8-6335095ec4d8"],

Cell["Example: deleting odd numbers from a list", "ItemNumbered",
 CellChangeTimes->{3.939868992476248*^9},
 CellID->630954520,ExpressionUUID->"dce95d09-139c-4bd8-89ae-63a77ccd7df2"],

Cell["Here we will delete all odd numbers from a list.", "Text",
 CellChangeTimes->{3.939869000082144*^9},
 CellID->178368754,ExpressionUUID->"324a16dd-5855-494d-8c95-934bb40ff78a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testlist", "=", 
   RowBox[{"Range", "[", "15", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DeleteCases", "[", 
  RowBox[{"testlist", ",", 
   RowBox[{"_", "?", "OddQ"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9398690019923477`*^9, 3.9398690400946407`*^9}},
 CellLabel->"In[654]:=",
 CellID->805333289,ExpressionUUID->"ad632d6c-08c3-492a-9902-68ab7cc5275d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", "12", ",", "14"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9398690168617496`*^9, 3.9398690404280167`*^9}},
 CellLabel->"Out[655]=",
 CellID->1176931056,ExpressionUUID->"6fd41b1b-4e05-4709-a4c0-852c798479fb"]
}, Open  ]],

Cell["\<\
We have just removed all odd numbers from the list. But this does not mean \
that <testlist> itself changed in any way:\
\>", "Text",
 CellChangeTimes->{{3.939869026212216*^9, 3.939869029408884*^9}},
 CellID->547916908,ExpressionUUID->"25405883-2d94-4117-842a-f0b147afa6d4"],

Cell[CellGroupData[{

Cell[BoxData["testlist"], "Input",
 CellChangeTimes->{{3.9398690431667423`*^9, 3.9398690446690407`*^9}},
 CellLabel->"In[656]:=",
 CellID->213040000,ExpressionUUID->"adf18352-5f6e-4121-875a-e0f87abc0cc2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
   "15"}], "}"}]], "Output",
 CellChangeTimes->{3.939869045067021*^9},
 CellLabel->"Out[656]=",
 CellID->643025018,ExpressionUUID->"c06757b7-a8a7-40dd-9fef-8271f656d876"]
}, Open  ]],

Cell[TextData[{
 "In this respect, DeleteCases works the same as the majority of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " built-in commands, that is - without side-effects: the copy of the input \
variable is created and modified. Should we wish to change the content of \
<testlist>, we have to write:"
}], "Text",
 CellChangeTimes->{{3.939869054819682*^9, 3.939869064259041*^9}, 
   3.939931389387146*^9},
 CellID->721078521,ExpressionUUID->"be82bfae-da7f-4c92-bc78-accf179eff46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "=", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{"testlist", ",", 
    RowBox[{"_", "?", "OddQ"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.939869067465846*^9, 3.9398690751150503`*^9}},
 CellLabel->"In[657]:=",
 CellID->1683231392,ExpressionUUID->"84eb2eb6-5052-4332-a8b6-2a836df11ec2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", "12", ",", "14"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.939869076134741*^9},
 CellLabel->"Out[657]=",
 CellID->685996243,ExpressionUUID->"36702765-a904-4b91-92a1-afd2d0b9514b"]
}, Open  ]],

Cell["\<\
Let us perform a small timing measurement: measure the time it will take \
DeleteCases to remove from the list of first 100000 natural numbers those \
whose remainder of division by 5 is smaller than 2:\
\>", "Text",
 CellChangeTimes->{{3.9398690846214733`*^9, 3.939869091093821*^9}, 
   3.9399313894077997`*^9},
 CellID->2097048629,ExpressionUUID->"da1c87ae-fc1f-4a71-aca7-363a36c92386"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Short", "[", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Range", "[", "100000", "]"}], ",", 
     RowBox[{"x_", "/;", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"x", ",", "5"}], "]"}], "<=", "2"}]}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.939869100382856*^9, 3.939869121945414*^9}},
 CellLabel->"In[658]:=",
 CellID->2092073629,ExpressionUUID->"b015c4b4-c773-4ee5-aa02-5835e9564f11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.052059`", ",", 
   TagBox[
    RowBox[{"{", 
     RowBox[{"3", ",", "4", ",", "8", ",", 
      RowBox[{"\[LeftSkeleton]", "39994", "\[RightSkeleton]"}], ",", "99994", 
      ",", "99998", ",", "99999"}], "}"}],
    Short]}], "}"}]], "Output",
 CellChangeTimes->{3.9398691230496902`*^9},
 CellLabel->"Out[658]=",
 CellID->891200592,ExpressionUUID->"5cd1cedc-0b9f-4d0b-9c5f-f39e435c1721"]
}, Open  ]],

Cell["Here is a straightforward procedural realization:", "Text",
 CellChangeTimes->{{3.939869131843398*^9, 3.939869133561076*^9}},
 CellID->1204648637,ExpressionUUID->"baa5bec0-304c-461c-9e31-e00f913b7749"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j", ",", "result", ",", "starting"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", 
          RowBox[{"j", "=", "1"}]}], ";", 
         RowBox[{"starting", "=", 
          RowBox[{"result", "=", 
           RowBox[{"Range", "[", "100000", "]"}]}]}]}], ",", 
        RowBox[{"i", "<=", "100000"}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"starting", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "5"}], "]"}], "<=", "2"}], 
          ",", 
          RowBox[{
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"j", "++"}], "]"}], "]"}], "=", 
           RowBox[{"starting", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Take", "[", 
       RowBox[{"result", ",", 
        RowBox[{"j", "-", "1"}]}], "]"}]}]}], "]"}], "//", "Short"}], "//", 
  "Timing"}]], "Input",
 CellChangeTimes->{{3.9398691372802153`*^9, 3.939869200111458*^9}},
 CellLabel->"In[659]:=",
 CellID->430914014,ExpressionUUID->"434ae698-e2c0-479a-8365-568882e106d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.127682`", ",", 
   TagBox[
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "5", ",", 
      RowBox[{"\[LeftSkeleton]", "59994", "\[RightSkeleton]"}], ",", "99996", 
      ",", "99997", ",", "100000"}], "}"}],
    Short]}], "}"}]], "Output",
 CellChangeTimes->{3.939869200611041*^9},
 CellLabel->"Out[659]=",
 CellID->1228892736,ExpressionUUID->"83686b6f-811c-46c1-aae3-cdb737f1c2ef"]
}, Open  ]],

Cell[TextData[{
 "It requires extra auxiliary variables that I had to localize with Module \
(will cover that later), is 5 times longer and about as many times slower. \
This confirms once again the main rule of working with lists in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " - avoid breaking them into pieces."
}], "Text",
 CellChangeTimes->{{3.939869220238326*^9, 3.9398692323323793`*^9}},
 CellID->1649980753,ExpressionUUID->"ca8ba501-90a6-4168-8473-fc044a820105"],

Cell["Example: non-zero integer subsequences", "ItemNumbered",
 CellChangeTimes->{3.9398692421398087`*^9},
 CellID->1044038983,ExpressionUUID->"c4d5d3fd-92d2-4ea0-aeaa-ac7b14258c22"],

Cell["\<\
Consider a following problem: we are given a list of integers, some of which \
can be zero. The task is to extract from the list all subsequences of \
consecutive non-zero elements.\
\>", "Text",
 CellChangeTimes->{{3.9398692508084593`*^9, 3.9398692596317587`*^9}},
 CellID->74307644,ExpressionUUID->"fdd40d99-9a50-4eb7-8118-1d186a8d1b73"],

Cell["For example, this will be our test data set:", "Text",
 CellChangeTimes->{3.939869268945333*^9, 3.939931389428644*^9},
 CellID->287526195,ExpressionUUID->"79d83388-1848-408f-8923-da665a794226"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testdata", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], "]"}], ",", 
    RowBox[{"{", "20", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.939869270979738*^9, 3.939869283782395*^9}},
 CellLabel->"In[660]:=",
 CellID->1553748882,ExpressionUUID->"df7118b8-b230-4129-b1e4-d3c5e98f9b3c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "0", ",", "2", ",", "3", ",", "3", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "3", ",", "3", ",", "3", ",", "2", ",", 
   "2", ",", "3", ",", "3", ",", "0", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.939869284206093*^9},
 CellLabel->"Out[660]=",
 CellID->176700257,ExpressionUUID->"e19f22e2-dfcd-47f1-837e-53b1acc77816"]
}, Open  ]],

Cell[TextData[{
 "The first step in solving this problem will be to use Split (see section ",
 ButtonBox["3.10.3",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-3-Lists.nb", CharacterEncoding -> "UTF-8"], 
    "3.10.3"},
  ButtonNote->"/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-3-Lists.nb"],
 ") to split the elements into sublists whenever zero is encountered:"
}], "Text",
 CellChangeTimes->{{3.9398692920007143`*^9, 3.9398692948531733`*^9}, {
   3.939869363729347*^9, 3.939869363737192*^9}, 3.9399313894495707`*^9},
 CellID->2083293273,ExpressionUUID->"82ad94eb-822a-4c59-93ee-ca1e1d3cef2f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"step1", "=", 
  RowBox[{"Split", "[", 
   RowBox[{"testdata", ",", 
    RowBox[{
     RowBox[{"#1", "!=", "0"}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.939869298680635*^9, 3.939869309679162*^9}},
 CellLabel->"In[661]:=",
 CellID->1657664781,ExpressionUUID->"ed1fb2ea-38d2-49dc-be32-027e54673f11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "3", ",", "3", ",", "3", ",", "2", ",", "2", ",", "3", ",", "3", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939869310074006*^9},
 CellLabel->"Out[661]=",
 CellID->1233916921,ExpressionUUID->"49514b4a-61ec-4d6f-9627-356224df44b8"]
}, Open  ]],

Cell["\<\
We have however captured some zeros into our sublists, so we have to delete \
them (note the level specification):\
\>", "Text",
 CellChangeTimes->{{3.9398693803811502`*^9, 3.9398693832800283`*^9}, 
   3.939931389470316*^9},
 CellID->1823912269,ExpressionUUID->"d9bd5b7d-1c45-48e5-be4d-749fb7ead6da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"step2", "=", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{"step1", ",", "0", ",", 
    RowBox[{"{", "2", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.939869389327284*^9, 3.939869396011956*^9}},
 CellLabel->"In[662]:=",
 CellID->1445727038,ExpressionUUID->"d6fdce7d-3b2e-47db-8c93-0d486a148246"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "3", ",", "3", ",", "3", ",", "2", ",", "2", ",", "3", ",", "3"}], 
    "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939869396546986*^9},
 CellLabel->"Out[662]=",
 CellID->2126168509,ExpressionUUID->"4ce99d40-b4ff-4b6f-b796-c803d8e8b287"]
}, Open  ]],

Cell["\<\
Finally, the previous operation in general produces some number of empty \
lists from sublists containing a single zero (there can not be sublists \
containing several zeros - why?). We have now to delete them as well:\
\>", "Text",
 CellChangeTimes->{{3.939869407576219*^9, 3.939869412577087*^9}},
 CellID->633544080,ExpressionUUID->"a175f962-1451-483e-9e71-7ffc164be0cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"step3", "=", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{"step2", ",", 
    RowBox[{"{", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.939869428564891*^9, 3.939869434443479*^9}},
 CellLabel->"In[663]:=",
 CellID->211655334,ExpressionUUID->"ecfc5f1f-e7b2-4263-be6c-e15faaa29fa3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "3", ",", "3", ",", "3", ",", "2", ",", "2", ",", "3", ",", "3"}], 
    "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.93986943466757*^9},
 CellLabel->"Out[663]=",
 CellID->889514580,ExpressionUUID->"e1eaa8b9-1f1a-4f43-8a9b-a5ac60fd12a7"]
}, Open  ]],

Cell["We now package all the steps into a function:", "Text",
 CellChangeTimes->{3.9398694442192793`*^9, 3.939931389490779*^9},
 CellID->1437879293,ExpressionUUID->"aba84494-c179-4e75-9395-b00c8412a674"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "nonzeroSubsequences", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonzeroSubsequences", "[", 
   RowBox[{"x", ":", 
    RowBox[{"{", "__Integer", "}"}]}], "]"}], ":=", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"Split", "[", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{"#1", "!=", "0"}], "&"}]}], "]"}], ",", "0", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], ",", 
    RowBox[{"{", "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.939869446865759*^9, 3.939869494096785*^9}, {
  3.939869554462101*^9, 3.939869554811614*^9}},
 CellLabel->"In[667]:=",
 CellID->1756812690,ExpressionUUID->"83561493-09ba-44b8-9d23-21aabed7d82c"],

Cell["\<\
Note the use of a named pattern and BlankSequence, to better restrict the \
argument. Check:\
\>", "Text",
 CellChangeTimes->{3.9398695051405697`*^9, 3.9399313895111017`*^9},
 CellID->1610243174,ExpressionUUID->"fa015004-591a-4d40-8422-c280e170a48b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nonzeroSubsequences", "[", "testdata", "]"}]], "Input",
 CellChangeTimes->{{3.9398695399139357`*^9, 3.93986954321399*^9}},
 CellLabel->"In[669]:=",
 CellID->1032062551,ExpressionUUID->"88ac0ae0-4063-466d-bb21-87c6464ee2ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "3", ",", "3", ",", "3", ",", "2", ",", "2", ",", "3", ",", "3"}], 
    "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.93986954347396*^9, 3.939869557177721*^9}},
 CellLabel->"Out[669]=",
 CellID->1267048687,ExpressionUUID->"580327e2-c779-41c3-8cc4-9da7cc509041"]
}, Open  ]],

Cell["Cases and DeleteCases: similarities and differences", "ItemNumbered",
 CellChangeTimes->{3.939869723256166*^9},
 CellID->839438757,ExpressionUUID->"55a059b1-016e-44ab-a864-4b4386676d75"],

Cell[TextData[{
 "In terms of syntax, most operations with DeleteCases are very similar to \
those with Cases. Note however that they are usually used in logically very \
different situations. Cases is used when we need to extract some parts \
(subexpressions) from an expression, and we don\[CloseCurlyQuote]t really \
care \[OpenCurlyDoubleQuote]what will happen\[CloseCurlyDoubleQuote] to the \
expression itself afterwards. DeleteCases, in contrast, is used to perform \
structural changes of the expression itself (I remind that by expression \
itself I mean a copy of the input, created internally by DeleteCases - as \
usual in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", it does not introduce side effects and the original input is not modified \
in any way), when we don\[CloseCurlyQuote]t care what will happen with those \
pieces that we delete. In this sense, Cases and DeleteCases are\nexact \
opposites of each other."
}], "Text",
 CellChangeTimes->{{3.9398697313394947`*^9, 3.939869759062852*^9}},
 CellID->1627111756,ExpressionUUID->"fb8ccbc2-4e9d-4677-9737-36f9b303883c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "testlist", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.939869764703473*^9, 3.939869774045021*^9}},
 CellLabel->"In[670]:=",
 CellID->1181230401,ExpressionUUID->"dbddd32d-d345-4680-b7f3-4fd94db63995"]
}, Open  ]],

Cell[CellGroupData[{

Cell["MemberQ", "Subsubsection",
 CellChangeTimes->{3.939869780154456*^9},
 CellID->1202945745,ExpressionUUID->"854907db-69b8-444f-8ca4-342ec52e5eb1"],

Cell["\<\
This function finds out whether an object (in general, pattern) is a part of \
some expression. In the case of pattern, it determines whether there are \
subexpressions matching this pattern. The format is\
\>", "Text",
 CellChangeTimes->{{3.939869787529327*^9, 3.939869790204438*^9}},
 CellID->1498083357,ExpressionUUID->"5962d1f6-4d6a-45c9-862f-5759f520bb51"],

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{"expr", ",", "pattern", ",", "levspec"}], "]"}]], "Input",
 CellChangeTimes->{{3.939869799161565*^9, 3.939869806611402*^9}},
 CellID->1376541282,ExpressionUUID->"e1f71844-6bec-4dee-a110-5ab908ca13ff"],

Cell["\<\
where the third optional argument <levspec> determines, as usual, the level \
(s) on which to perform the search. Examples:\
\>", "Text",
 CellChangeTimes->{{3.939869815927884*^9, 3.9398698234605503`*^9}, 
   3.9399313895315733`*^9},
 CellID->1474293230,ExpressionUUID->"5f678770-57af-4595-8e77-c3a7ad2d2da2"],

Cell["Example: checking for presence of primes", "ItemNumbered",
 CellChangeTimes->{3.9398698320353737`*^9},
 CellID->1178204580,ExpressionUUID->"59f3e164-c56c-4c9d-9931-7ba3ad63b8e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "6", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
   RowBox[{"_", "?", "PrimeQ"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.93986983489541*^9, 3.939869843744197*^9}},
 CellLabel->"In[671]:=",
 CellID->930608092,ExpressionUUID->"65436d6e-2f52-4b1a-9275-e2a68cfeaa7b"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.939869844721237*^9},
 CellLabel->"Out[671]=",
 CellID->971752998,ExpressionUUID->"f64e5441-6ea9-44c2-b632-f9839c165391"]
}, Open  ]],

Cell["Since there were no primes here, the result is False.", "Text",
 CellChangeTimes->{3.939869854115535*^9},
 CellID->639501951,ExpressionUUID->"9e4cf00a-d701-4556-bda4-a6f1482dfe5b"],

Cell["Example: testing membership in a symbolic list", "ItemNumbered",
 CellChangeTimes->{3.939869862094159*^9},
 CellID->2101120869,ExpressionUUID->"57322ce0-29c5-4195-9f11-b06f70fe2979"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", "a"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.939869863678504*^9, 3.9398698746983747`*^9}},
 CellLabel->"In[672]:=",
 CellID->1567034604,ExpressionUUID->"1507e99a-1d5e-4411-b4e0-b4231b8b8b73"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.939869875026332*^9},
 CellLabel->"Out[673]=",
 CellID->1241810334,ExpressionUUID->"84a1a8e3-e18e-486c-adb8-e6d8d304be94"]
}, Open  ]],

Cell["Example: testing membership in nested lists", "ItemNumbered",
 CellChangeTimes->{3.939869883640514*^9},
 CellID->1860201992,ExpressionUUID->"264a605d-aea2-467c-9e4e-ddc88732178d"],

Cell["\<\
Consider now an example we already looked at, the one with nested lists:\
\>", "Text",
 CellChangeTimes->{3.939869889508161*^9},
 CellID->1347946518,ExpressionUUID->"7daf92fc-bc6b-4aaa-be16-7462a870b028"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "=", 
  RowBox[{"Range", "/@", 
   RowBox[{"Range", "[", "6", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.939869890915453*^9, 3.939869897468144*^9}},
 CellLabel->"In[674]:=",
 CellID->1101664741,ExpressionUUID->"a18a1085-031e-4ac9-931a-1d7cd07e825b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9398698980171547`*^9},
 CellLabel->"Out[674]=",
 CellID->506712790,ExpressionUUID->"bc9d5a4f-f2a3-48f9-adfd-1451b4599168"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{"testlist", ",", "_Integer"}], "]"}]], "Input",
 CellChangeTimes->{{3.9398698994798937`*^9, 3.939869904202383*^9}},
 CellLabel->"In[675]:=",
 CellID->622153169,ExpressionUUID->"5441b90e-9390-4624-b32f-b1f8299e6205"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.939869904752077*^9},
 CellLabel->"Out[675]=",
 CellID->358200158,ExpressionUUID->"6db662cd-d5a8-48aa-9c62-c978032f8821"]
}, Open  ]],

Cell["\<\
This happened because by default only the first level is considered. However,\
\
\>", "Text",
 CellChangeTimes->{3.939869913574171*^9},
 CellID->873392965,ExpressionUUID->"43cfc577-97dc-4cee-a410-1186e7746cb9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{"testlist", ",", "_List"}], "]"}]], "Input",
 CellChangeTimes->{{3.9398699159642878`*^9, 3.939869920419335*^9}},
 CellLabel->"In[676]:=",
 CellID->1709186119,ExpressionUUID->"62babc71-6812-4d71-8e36-b138546beb1e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.939869920818544*^9},
 CellLabel->"Out[676]=",
 CellID->1319941799,ExpressionUUID->"fee90bc8-1cb7-4f84-8d55-ba95629aaba6"]
}, Open  ]],

Cell["\<\
since the elements of the first level are sublists. When we look at the \
second level:\
\>", "Text",
 CellChangeTimes->{3.9398699300467978`*^9, 3.939931389551896*^9},
 CellID->755742283,ExpressionUUID->"95bcc582-967c-449e-8965-2dd0c9f3caa7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MemberQ", "[", 
    RowBox[{"testlist", ",", "_Integer", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}], ",", 
   RowBox[{"MemberQ", "[", 
    RowBox[{"testlist", ",", "_List", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939869934610507*^9, 3.9398699508564653`*^9}},
 CellLabel->"In[677]:=",
 CellID->521033182,ExpressionUUID->"3714e089-6a39-401e-bc36-a81ee4dc81d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.9398699512751713`*^9},
 CellLabel->"Out[677]=",
 CellID->1822776766,ExpressionUUID->"3dbee524-7201-4391-b2bd-5faf078d6b60"]
}, Open  ]],

Cell["\<\
the result is the opposite, since the second level is populated by numbers. \
If we look on both levels though, then both checks will produce True:\
\>", "Text",
 CellChangeTimes->{{3.939869962025631*^9, 3.939869964564796*^9}, 
   3.93993138957272*^9},
 CellID->1554881707,ExpressionUUID->"479aa2b8-4e5c-4b07-9fba-c21634d71a42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MemberQ", "[", 
    RowBox[{"testlist", ",", "_Integer", ",", "2"}], "]"}], ",", 
   RowBox[{"MemberQ", "[", 
    RowBox[{"testlist", ",", "_List", ",", "2"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.9398699755754023`*^9, 3.9398699777463207`*^9}},
 CellLabel->"In[678]:=",
 CellID->1209142143,ExpressionUUID->"171b7459-a0a4-4fa9-ba48-4648828b9f29"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.939869978550212*^9},
 CellLabel->"Out[678]=",
 CellID->353776597,ExpressionUUID->"53724ef9-b8f2-4057-be1d-6f64bb3a8782"]
}, Open  ]],

Cell["Example: Unsorted Intersection", "ItemNumbered",
 CellChangeTimes->{3.939869987263342*^9},
 CellTags->"4.3.3.4",
 CellID->142155476,ExpressionUUID->"c5b40dd0-b452-4d14-ba43-ca58f2861e0d"],

Cell["\<\
As we know, there exists a built-in Intersection command which finds an \
intersection (common part) of two lists. However, it removes the duplicate \
elements and sorts the result, which is not always the desired behavior. We \
can use a combination of Cases and MemberQ to write our version which will \
not sort the result and will not delete identical entries. So, to put it \
simple: given the two lists, we have to keep in the first list only those \
elements that are present also in the second one.\
\>", "Text",
 CellChangeTimes->{{3.939869994307876*^9, 3.939870013361188*^9}},
 CellID->800066200,ExpressionUUID->"be34d7c4-01c3-49cc-8c04-97b6a4362bdc"],

Cell["Here are our lists:", "Text",
 CellChangeTimes->{3.939870021589754*^9, 3.9399313895934687`*^9},
 CellID->698323671,ExpressionUUID->"9b4fcd80-6ed1-4fcd-8587-8d298d8f7ca3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"list1", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "30"}], "}"}], "]"}], ",", 
    RowBox[{"{", "20", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"list2", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "30"}], "}"}], "]"}], ",", 
    RowBox[{"{", "20", "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.93987002303328*^9, 3.9398700416795883`*^9}},
 CellLabel->"In[679]:=",
 CellID->907039929,ExpressionUUID->"ea9a14da-d183-496d-9fe2-9aea87429501"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "16", ",", "29", ",", "23", ",", "6", ",", "18", ",", "28", ",", "26", ",", 
   "29", ",", "12", ",", "28", ",", "23", ",", "23", ",", "14", ",", "24", 
   ",", "14", ",", "9", ",", "26", ",", "30", ",", "24", ",", "24"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9398700421988983`*^9},
 CellLabel->"Out[679]=",
 CellID->1818034661,ExpressionUUID->"7900e8f7-85c1-4257-af00-63979f0edfaa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "4", ",", "14", ",", "8", ",", "6", ",", "9", ",", "9", ",", "20",
    ",", "30", ",", "24", ",", "11", ",", "18", ",", "10", ",", "2", ",", "2",
    ",", "15", ",", "14", ",", "19", ",", "8", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.939870042212346*^9},
 CellLabel->"Out[680]=",
 CellID->1311217911,ExpressionUUID->"81a80b92-62fe-47f5-8473-c05ec640d950"]
}, Open  ]],

Cell["And this is a solution:", "Text",
 CellChangeTimes->{{3.939870051240901*^9, 3.9398700546249247`*^9}},
 CellID->162244663,ExpressionUUID->"54f2e597-7f21-467e-825d-07bea55f5041"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"list1", ",", 
   RowBox[{"x_", "/;", 
    RowBox[{"MemberQ", "[", 
     RowBox[{"list2", ",", "x"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939870056295911*^9, 3.939870067467183*^9}},
 CellLabel->"In[681]:=",
 CellID->851595863,ExpressionUUID->"c53967bf-5505-47d9-bccb-edee34af7a68"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6", ",", "18", ",", "14", ",", "24", ",", "14", ",", "9", ",", "30", ",", 
   "24", ",", "24"}], "}"}]], "Output",
 CellChangeTimes->{3.939870076265607*^9},
 CellLabel->"Out[681]=",
 CellID->943212304,ExpressionUUID->"7de468d5-aebb-4307-9f99-a27239e7915b"]
}, Open  ]],

Cell["\<\
Note that there exists and alternative version which does not involve \
MemberQ, but rather involves an alternative pattern:\
\>", "Text",
 CellChangeTimes->{{3.9398701011402884`*^9, 3.939870102987194*^9}},
 CellID->1992394821,ExpressionUUID->"d45c1801-ddca-4c94-9cf5-c751f1b0ab2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"list1", ",", 
   RowBox[{"Apply", "[", 
    RowBox[{"Alternatives", ",", "list2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939870110999414*^9, 3.939870118677166*^9}},
 CellLabel->"In[682]:=",
 CellID->1420389823,ExpressionUUID->"288e5644-0b74-4033-b31c-f8e8ee39ff11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6", ",", "18", ",", "14", ",", "24", ",", "14", ",", "9", ",", "30", ",", 
   "24", ",", "24"}], "}"}]], "Output",
 CellChangeTimes->{3.939870119101687*^9},
 CellLabel->"Out[682]=",
 CellID->481035277,ExpressionUUID->"88bdb301-2479-4eaa-b692-db4e9abcb15c"]
}, Open  ]],

Cell["\<\
The meaning of the Apply operation will be explained in chapter V, but \
basically here it is used to create a large alternative pattern from the list:\
\>", "Text",
 CellChangeTimes->{{3.939870132638516*^9, 3.939870135851317*^9}, 
   3.939931389614235*^9},
 CellID->998068916,ExpressionUUID->"34124692-c4eb-4778-90e5-058d99b9a7a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"Alternatives", ",", "list2"}], "]"}]], "Input",
 CellChangeTimes->{{3.939870140780059*^9, 3.939870144835054*^9}},
 CellLabel->"In[683]:=",
 CellID->266885787,ExpressionUUID->"aa23061e-bb75-4fd0-9d19-6dc88e6b80c9"],

Cell[BoxData[
 RowBox[{"4", "|", "4", "|", "14", "|", "8", "|", "6", "|", "9", "|", "9", 
  "|", "20", "|", "30", "|", "24", "|", "11", "|", "18", "|", "10", "|", "2", 
  "|", "2", "|", "15", "|", "14", "|", "19", "|", "8", "|", "20"}]], "Output",\

 CellChangeTimes->{3.939870145213147*^9},
 CellLabel->"Out[683]=",
 CellID->1835311877,ExpressionUUID->"14a60f3d-35d6-4175-9683-e9af5677ed45"]
}, Open  ]],

Cell["\<\
It turns out that the second solution is generally more efficient for large \
lists. Note however, that both of them have in general the complexity L1*L2, \
where L1 and L2 are the lengths of lists. This fact may be somewhat hidden \
because commands like Cases and MemberQ are optimized, and the above \
solutions are certainly faster than a nested loop. They work well as \
\[OpenCurlyDoubleQuote]scripting\[CloseCurlyDoubleQuote] solutions for small \
lists, but for large lists there are more efficient implementations. We will \
discuss this at length in chapter VI.\
\>", "Text",
 CellChangeTimes->{{3.939870170322994*^9, 3.939870191622628*^9}},
 CellID->1779094878,ExpressionUUID->"b946e0cb-ce07-4b6f-9ca5-a41927675935"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Position", "Subsubsection",
 CellChangeTimes->{3.939870202856414*^9, 3.9405438584799337`*^9},
 CellID->528710979,ExpressionUUID->"2dca1705-fe2d-438f-9109-035cbcc67a62"],

Cell["\<\
We have already discussed this command in the previous chapter on lists. \
However, since at the time we did not cover patterns, our discussion there \
was rather limited. In fact, Position is a much more general operation since \
it works on arbitrary patterns, and returns all the positions in expression \
where the pattern matches. Let us consider a few examples.\
\>", "Text",
 CellChangeTimes->{{3.939870209695372*^9, 3.939870219913316*^9}},
 CellID->1905576414,ExpressionUUID->"57cbd500-50a2-4550-91f6-34a44d752a63"],

Cell["Example: positions of numbers divisible by 3", "ItemNumbered",
 CellChangeTimes->{3.939870227862368*^9},
 CellID->1441634581,ExpressionUUID->"51153823-95f6-4af8-b968-2f3a1ce45f51"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Range", "[", "30", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"Range", "[", "30", "]"}], ",", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"x", ",", "3"}], "]"}], "==", "0"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.939870229964067*^9, 3.939870247278471*^9}},
 CellLabel->"In[684]:=",
 CellID->204956341,ExpressionUUID->"5cb9d693-e826-4ed2-863a-ec4396b19118"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", 
   "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", "28", 
   ",", "29", ",", "30"}], "}"}]], "Output",
 CellChangeTimes->{3.939870247707996*^9},
 CellLabel->"Out[684]=",
 CellID->1547201375,ExpressionUUID->"e2ef12c0-d0a6-4e63-838e-7ddee2fd7d52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "6", "}"}], ",", 
   RowBox[{"{", "9", "}"}], ",", 
   RowBox[{"{", "12", "}"}], ",", 
   RowBox[{"{", "15", "}"}], ",", 
   RowBox[{"{", "18", "}"}], ",", 
   RowBox[{"{", "21", "}"}], ",", 
   RowBox[{"{", "24", "}"}], ",", 
   RowBox[{"{", "27", "}"}], ",", 
   RowBox[{"{", "30", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939870247721775*^9},
 CellLabel->"Out[685]=",
 CellID->2081511749,ExpressionUUID->"2fe3c0e2-3398-4d1b-9250-cb6d228502ce"]
}, Open  ]],

Cell["An example with symbolic expression", "ItemNumbered",
 CellChangeTimes->{3.939870264955833*^9},
 CellID->1459355813,ExpressionUUID->"41e1b884-d5ad-4f31-a9cc-4ff8c46bf1fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "=", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "^", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.939870268771934*^9, 3.939870281531398*^9}},
 CellLabel->"In[686]:=",
 CellID->1623265992,ExpressionUUID->"c3c8dbf6-f44a-484c-afed-5203faadc31d"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"10", " ", "x"}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox["x", "4"]}], "+", 
  RowBox[{"252", " ", 
   SuperscriptBox["x", "5"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox["x", "6"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox["x", "8"]}], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox["x", "9"]}], "+", 
  SuperscriptBox["x", "10"]}]], "Output",
 CellChangeTimes->{3.939870282113618*^9},
 CellLabel->"Out[686]=",
 CellID->2127054460,ExpressionUUID->"e8ca0cd1-6790-4425-ab69-b4bb127253af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", "expr", "]"}]], "Input",
 CellChangeTimes->{{3.939870282763735*^9, 3.939870284941992*^9}},
 CellLabel->"In[687]:=",
 CellID->1993845954,ExpressionUUID->"f67cf311-33a0-46d7-b232-afee75adb8d9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Times", "[", 
      RowBox[{"10", ",", "x"}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"45", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "2"}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"120", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "3"}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"210", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "4"}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"252", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "5"}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"210", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "6"}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"120", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "7"}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"45", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "8"}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"10", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"x", ",", "9"}], "]"}]}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"x", ",", "10"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.939870285301456*^9},
 CellLabel->"Out[687]//FullForm=",
 CellID->1562833790,ExpressionUUID->"4b526beb-2d53-4033-915d-b0d017d545bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"expr", ",", 
   RowBox[{"x", "^", 
    RowBox[{"_", "?", "OddQ"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.93987028699599*^9, 3.939870302793724*^9}},
 CellLabel->"In[689]:=",
 CellID->2087357457,ExpressionUUID->"d713ca02-2d15-4dbb-97c4-8a4645187ce5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.939870295313665*^9, 3.939870303129822*^9}},
 CellLabel->"Out[689]=",
 CellID->1614612700,ExpressionUUID->"fe2bab68-1500-468e-a7e0-84f45b832d46"]
}, Open  ]],

Cell["\<\
Returned are the positions where odd powers of the variable <x> (excluding x \
itself) reside in an expression <expr>. We may use Extract to check this:\
\>", "Text",
 CellChangeTimes->{{3.939870348762244*^9, 3.9398703527115307`*^9}},
 CellID->866923097,ExpressionUUID->"6d23a509-6e6a-409c-bb61-1d265384901e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Extract", "[", 
  RowBox[{"expr", ",", 
   RowBox[{"Position", "[", 
    RowBox[{"expr", ",", 
     RowBox[{"x", "^", 
      RowBox[{"_", "?", "OddQ"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9398703570965853`*^9, 3.939870372436728*^9}},
 CellLabel->"In[691]:=",
 CellID->1437962691,ExpressionUUID->"eff603e8-c620-473e-8796-801cd508c25d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["x", "3"], ",", 
   SuperscriptBox["x", "5"], ",", 
   SuperscriptBox["x", "7"], ",", 
   SuperscriptBox["x", "9"]}], "}"}]], "Output",
 CellChangeTimes->{{3.939870369074876*^9, 3.939870372714373*^9}},
 CellLabel->"Out[691]=",
 CellID->2083003322,ExpressionUUID->"01594dc3-e415-4729-bb17-b06b42b71e39"]
}, Open  ]],

Cell["Equivalently, we could use Cases:", "Text",
 CellChangeTimes->{3.9398703862035*^9, 3.939931389634939*^9},
 CellID->1081964920,ExpressionUUID->"b7b49edb-980b-42af-ac59-081b309a9411"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"expr", ",", 
   RowBox[{"x", "^", 
    RowBox[{"_", "?", "OddQ"}]}], ",", "Infinity"}], "]"}]], "Input",
 CellChangeTimes->{{3.9398703875272427`*^9, 3.939870395224886*^9}},
 CellLabel->"In[692]:=",
 CellID->913320096,ExpressionUUID->"37bb8b96-e565-4e1c-9797-2af5c474fe1b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["x", "3"], ",", 
   SuperscriptBox["x", "5"], ",", 
   SuperscriptBox["x", "7"], ",", 
   SuperscriptBox["x", "9"]}], "}"}]], "Output",
 CellChangeTimes->{3.939870395453149*^9},
 CellLabel->"Out[692]=",
 CellID->464007414,ExpressionUUID->"06ed45d2-82f0-403b-8a67-caa7853b75ee"]
}, Open  ]],

Cell["\<\
With positions, however, we can do more. For instance, if we remove the last \
index from each position in the position list, we extract expressions which \
include these powers as their parts:\
\>", "Text",
 CellChangeTimes->{{3.939870402872328*^9, 3.939870405375709*^9}, 
   3.939931389655622*^9},
 CellID->1059484841,ExpressionUUID->"d905ee89-9e4e-4958-9e23-9f39204d0e21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Extract", "[", 
  RowBox[{"expr", ",", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"expr", ",", 
      RowBox[{"x", "^", 
       RowBox[{"_", "?", "OddQ"}]}]}], "]"}], "/.", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"y__Integer", ",", "z_Integer"}], "}"}], ":>", 
     RowBox[{"{", "y", "}"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939870412456751*^9, 3.9398704360101767`*^9}},
 CellLabel->"In[693]:=",
 CellID->1384178945,ExpressionUUID->"fdc9760e-e973-4516-8c34-69931027b6c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"120", " ", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"252", " ", 
    SuperscriptBox["x", "5"]}], ",", 
   RowBox[{"120", " ", 
    SuperscriptBox["x", "7"]}], ",", 
   RowBox[{"10", " ", 
    SuperscriptBox["x", "9"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.939870442074193*^9},
 CellLabel->"Out[693]=",
 CellID->1038135641,ExpressionUUID->"41c4409c-638f-49b0-8337-8eb8f17b9f68"]
}, Open  ]],

Cell["\<\
Be sure to understand what we just did. By the way, this code presents an \
example of an (alternative to the pure pattern-based ) mixed \
structural/pattern-based way to perform deconstruction of expressions.\
\>", "Text",
 CellChangeTimes->{{3.939870474298074*^9, 3.939870480780966*^9}},
 CellID->1788570059,ExpressionUUID->"daba1e19-1ec7-4dd1-9ebd-a09694c66b23"],

Cell["\<\
The Position command will be also used in the more complicated example at the \
end of this section.\
\>", "Text",
 CellChangeTimes->{3.939870491578105*^9},
 CellID->1501272722,ExpressionUUID->"f9c582fd-f53c-4ac7-b15b-927be1ffbf54"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Count", "Subsubsection",
 CellChangeTimes->{3.939870502349956*^9},
 CellID->1105270051,ExpressionUUID->"00e50bef-6904-425e-a1db-4d7719d6ff7d"],

Cell["\<\
The Count function Count[expr,pattern,levspec] counts occurrences of \
subexpressions in <expr> matching the pattern <pattern>, with a level \
specification given by an optional third argument <levspec>. Examples:\
\>", "Text",
 CellChangeTimes->{{3.939870508363055*^9, 3.939870512745062*^9}},
 CellID->540200607,ExpressionUUID->"17cd6620-e40f-4693-9ac1-e1862b4ed687"],

Cell["A simple example", "ItemNumbered",
 CellChangeTimes->{3.9398705258851347`*^9},
 CellID->2143995719,ExpressionUUID->"c6c2acd4-c9c1-4332-b210-33e3e3a9476f"],

Cell["\<\
This is a number of numbers divisible by 6, among the first 30 natural numbers\
\>", "Text",
 CellChangeTimes->{3.939870533544836*^9},
 CellID->1507936220,ExpressionUUID->"c34e99f0-d40f-4ccd-afd7-2cfe7db01768"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Range", "[", "30", "]"}], ",", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"x", ",", "6"}], "]"}], "==", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9398705436820593`*^9, 3.9398705535470133`*^9}},
 CellLabel->"In[694]:=",
 CellID->85398815,ExpressionUUID->"061f0951-ada2-40bf-a9a3-067dc74ddb5b"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.939870553962019*^9},
 CellLabel->"Out[694]=",
 CellID->864129985,ExpressionUUID->"f3d27b61-9291-4d55-b2f5-a80d97bb4791"]
}, Open  ]],

Cell["\<\
Example: number of times a given letter is present in a sentence\
\>", "ItemNumbered",
 CellChangeTimes->{3.9398705871391153`*^9},
 CellID->753234,ExpressionUUID->"b0269ad0-7872-46a6-a5b6-d79df3f586e4"],

Cell["A number of letters \[OpenCurlyDoubleQuote]s\[CloseCurlyDoubleQuote] in \
some phrase", "Text",
 CellChangeTimes->{3.939870597782728*^9},
 CellID->1298045851,ExpressionUUID->"247d5d16-33b2-4c34-a3b6-68bee5ef7cdf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"chars", "=", 
  RowBox[{
  "Characters", "[", "\"\<she sells sea shells on the sea shore\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.939870600527973*^9, 3.939870611023876*^9}},
 CellLabel->"In[695]:=",
 CellID->319876139,ExpressionUUID->"61db9568-d3a4-47d3-aa9d-80c7eb63a94b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"s\"\>", ",", "\<\"h\"\>", ",", "\<\"e\"\>", ",", "\<\" \"\>", 
   ",", "\<\"s\"\>", ",", "\<\"e\"\>", ",", "\<\"l\"\>", ",", "\<\"l\"\>", 
   ",", "\<\"s\"\>", ",", "\<\" \"\>", ",", "\<\"s\"\>", ",", "\<\"e\"\>", 
   ",", "\<\"a\"\>", ",", "\<\" \"\>", ",", "\<\"s\"\>", ",", "\<\"h\"\>", 
   ",", "\<\"e\"\>", ",", "\<\"l\"\>", ",", "\<\"l\"\>", ",", "\<\"s\"\>", 
   ",", "\<\" \"\>", ",", "\<\"o\"\>", ",", "\<\"n\"\>", ",", "\<\" \"\>", 
   ",", "\<\"t\"\>", ",", "\<\"h\"\>", ",", "\<\"e\"\>", ",", "\<\" \"\>", 
   ",", "\<\"s\"\>", ",", "\<\"e\"\>", ",", "\<\"a\"\>", ",", "\<\" \"\>", 
   ",", "\<\"s\"\>", ",", "\<\"h\"\>", ",", "\<\"o\"\>", ",", "\<\"r\"\>", 
   ",", "\<\"e\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.939870611743256*^9},
 CellLabel->"Out[695]=",
 CellID->825930150,ExpressionUUID->"d167cd38-f429-416f-a65c-cf2f9a21753c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{"chars", ",", "\"\<s\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.939870614315281*^9, 3.939870618994471*^9}},
 CellLabel->"In[696]:=",
 CellID->929341161,ExpressionUUID->"e0d45b0f-686c-4909-ac02-fd6d0c98bf4f"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.9398706193331203`*^9},
 CellLabel->"Out[696]=",
 CellID->38922178,ExpressionUUID->"e6515510-2a0a-43e8-bb4a-16c9fa8fb141"]
}, Open  ]],

Cell["\<\
Here are the unique characters in this phrase together with their frequencies:\
\>", "Text",
 CellChangeTimes->{3.939870627574095*^9},
 CellID->1330016958,ExpressionUUID->"65cb96f4-b315-4158-8117-4182ab4a8970"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"alphabet", "=", 
   RowBox[{"Union", "[", "chars", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"freqchars", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alphabet", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"Count", "[", 
       RowBox[{"chars", ",", 
        RowBox[{"alphabet", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "alphabet", "]"}]}], "}"}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.939870636081369*^9, 3.939870668991253*^9}},
 CellLabel->"In[697]:=",
 CellID->1821543806,ExpressionUUID->"c6762c88-38d3-47ee-b2b1-c104c076b74c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\" \"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"e\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"h\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"l\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"n\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"o\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"r\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"s\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"t\"\>", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939870669824461*^9},
 CellLabel->"Out[698]=",
 CellID->731971765,ExpressionUUID->"a772d0d6-5ecf-45f9-9790-4464f57c8c22"]
}, Open  ]],

Cell["\<\
We can sort this list in the order of increasing frequencies:\
\>", "Text",
 CellChangeTimes->{3.9398707043273067`*^9},
 CellID->1463124339,ExpressionUUID->"6c0db834-0182-4cf7-917e-ac12dddf046c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"freqchars", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"#1", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "<", 
     RowBox[{"#2", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939870713138156*^9, 3.939870725677356*^9}},
 CellLabel->"In[699]:=",
 CellID->709726478,ExpressionUUID->"637f21fb-6bb8-43d8-9a5b-8060f699f17c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"t\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"r\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"n\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"o\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"l\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"h\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"e\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\" \"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"s\"\>", ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9398707260245657`*^9},
 CellLabel->"Out[699]=",
 CellID->1001520639,ExpressionUUID->"ea96efee-50a8-4fef-98e0-6cd575f6f45b"]
}, Open  ]],

Cell["\<\
Notice the use of the custom sorting functions, which compares second \
elements of the sublists (frequencies). The pure function used here will be \
covered soon.\
\>", "Text",
 CellChangeTimes->{{3.93987073980686*^9, 3.939870744376638*^9}},
 CellID->580554487,ExpressionUUID->"9742ec5d-962e-49b3-824d-db1b25b52ce6"],

Cell[TextData[{
 "Recall also that we used Count before, in a problem with odd sublist \
extraction (section ",
 ButtonBox["3.6.8.4",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-3-Lists.nb", CharacterEncoding -> "UTF-8"], 
    "3.6.8.4"},
  ButtonNote->"/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-3-Lists.nb"],
 ")."
}], "Text",
 CellChangeTimes->{
  3.939870757067181*^9, {3.939870814585333*^9, 3.9398708145931463`*^9}},
 CellID->250333372,ExpressionUUID->"35189af2-1298-4325-b106-27721ed59e8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["FreeQ", "Subsubsection",
 CellChangeTimes->{3.939870829590597*^9},
 CellID->507595900,ExpressionUUID->"05605aca-b7ce-418b-b1a4-bdd72fc35bc6"],

Cell[TextData[{
 "This command is used to test whether a given expression is completely free \
of some symbol or subexpression - that is, does not contain it as a \
subexpression. The format is FreeQ[expr,pattern]. As its name suggests, FreeQ \
is a predicate returning True or False. It is quite useful in cases when new \
rules for some object have to be defined - a classic example being the \
user-defined derivative function (see ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Help). One particular property of FreeQ is that it tests also heads of \
(sub)expressions, since it has an option Heads set to True by default (see \
the note on Heads options below)."
}], "Text",
 CellChangeTimes->{{3.93987083560131*^9, 3.939870855878111*^9}},
 CellID->1359245416,ExpressionUUID->"7c21af09-a516-4a0e-842f-c520f1573eaf"],

Cell["\<\
As an example, imagine that we would like to define our own data type called \
Matrix, and a multiplication operation on it such that all the terms which do \
not contain <Matrix> head explicitly will be factored out, and commutative \
standard multiplication can be used on them, and inside our new \
multiplication command only the <Matrix> objects will remain. This is how we \
could do it:\
\>", "Text",
 CellChangeTimes->{{3.9398708639101257`*^9, 3.9398708772106028`*^9}, 
   3.939931389676188*^9, 3.939947093751568*^9, {3.94001770504991*^9, 
   3.940017705068204*^9}},
 CellID->531447905,ExpressionUUID->"42cdb1aa-229a-4644-9281-674f2a392745"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"ourTimes", ",", "Matrix"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ourTimes", "[", 
     RowBox[{"a__", ",", "x__Matrix", ",", "b___"}], "]"}], "/;", 
    RowBox[{"FreeQ", "[", 
     RowBox[{
      RowBox[{"{", "a", "}"}], ",", "Matrix"}], "]"}]}], ":=", 
   RowBox[{"Times", "[", 
    RowBox[{"a", ",", 
     RowBox[{"ourTimes", "[", 
      RowBox[{"x", ",", "b"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ourTimes", "[", 
     RowBox[{"a___", ",", "x__Matrix", ",", "b__", ",", "c___"}], "]"}], "/;", 
    RowBox[{"FreeQ", "[", 
     RowBox[{
      RowBox[{"{", "b", "}"}], ",", "Matrix"}], "]"}]}], ":=", 
   RowBox[{"Times", "[", 
    RowBox[{"b", ",", 
     RowBox[{"ourTimes", "[", 
      RowBox[{"a", ",", "x", ",", "c"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939870883388324*^9, 3.939870944576902*^9}},
 CellLabel->"In[700]:=",
 CellID->1586326293,ExpressionUUID->"6af0330f-3506-485c-9194-1db35198a3d9"],

Cell["For instance:", "Text",
 CellChangeTimes->{{3.939870947603402*^9, 3.939870949626934*^9}},
 CellID->947143250,ExpressionUUID->"59b52fc3-f1e1-4adb-baf2-33082d00ef6b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ourTimes", "[", 
  RowBox[{"a", ",", 
   RowBox[{"Matrix", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "]"}], ",", "b", ",", "c", ",", 
   RowBox[{"Matrix", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8"}], "}"}]}], "]"}], ",", "d", ",", 
   RowBox[{"Matrix", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"9", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "12"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939870950662426*^9, 3.93987098027274*^9}},
 CellLabel->"In[703]:=",
 CellID->230062855,ExpressionUUID->"249a1e1a-b34e-4f10-8922-2262a066186d"],

Cell[BoxData[
 RowBox[{"a", " ", "b", " ", "c", " ", "d", " ", 
  RowBox[{"ourTimes", "[", 
   RowBox[{
    RowBox[{"Matrix", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "]"}], ",", 
    RowBox[{"Matrix", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", ",", "8"}], "}"}]}], "]"}], ",", 
    RowBox[{"Matrix", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"9", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"11", ",", "12"}], "}"}]}], "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.939870980945386*^9},
 CellLabel->"Out[703]=",
 CellID->908096791,ExpressionUUID->"1832ba82-5f24-4142-b589-fe4fdf894736"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A note on the Heads option", "Subsubsection",
 CellChangeTimes->{3.939871023153399*^9},
 CellID->746960847,ExpressionUUID->"567c5a48-04f4-4c12-9b67-5ce0bcfd95b5"],

Cell[TextData[{
 "Many of the built-in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " functions, and in particular all of the functions we just described, have \
an option Heads, which can be set as either Heads ->True or Heads ->False. \
For most functions (Position and FreeQ being exceptions), the default is \
Heads ->False. In this case, heads of expressions are excluded from searches \
and manipulations - they become \[OpenCurlyDoubleQuote]transparent\
\[CloseCurlyDoubleQuote] for these functions. However, the Heads->True option \
makes them \[OpenCurlyDoubleQuote]visible\[CloseCurlyDoubleQuote] and then \
they are treated as any other expression. I will not go into further detail \
here, but let me just say that there are cases where this is important. Some \
examples can be found in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Help and ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Book."
}], "Text",
 CellChangeTimes->{{3.939871029962729*^9, 3.93987105875284*^9}, {
  3.939931455846491*^9, 3.939931473051696*^9}, {3.939931514514256*^9, 
  3.939931517779027*^9}},
 CellID->2129038814,ExpressionUUID->"e45ac8a6-6fe2-4712-8f26-5e6d2c34ee6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["A more complicated example - finding subsequences", "Subsubsection",
 CellChangeTimes->{3.939871067899426*^9},
 CellID->718926505,ExpressionUUID->"4da33684-ef88-4569-995d-7a04ef19e578"],

Cell["An example without an explicit pattern", "ItemNumbered",
 CellChangeTimes->{3.939871074155843*^9},
 CellID->1254771513,ExpressionUUID->"6686e084-d352-4587-bee6-e399912618e1"],

Cell["\<\
Consider a following problem: we would like to know, if a combination <123> \
is encountered somewhere within first 500 digits of \[Pi]. To solve this \
problem, we will resort to the RealDigits command. For example, the first 20 \
digits of p are given by\
\>", "Text",
 CellChangeTimes->{{3.939871080126411*^9, 3.939871099763605*^9}},
 CellID->655405451,ExpressionUUID->"501ad3d2-f3d4-4c35-953e-85b116191966"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RealDigits", "[", 
   RowBox[{"N", "[", 
    RowBox[{"\[Pi]", ",", "20"}], "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9398711070541487`*^9, 3.939871119577922*^9}},
 CellLabel->"In[704]:=",
 CellID->121715696,ExpressionUUID->"76ef8e9c-a8e1-4e5c-aaf9-6978c89e179d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "1", ",", "4", ",", "1", ",", "5", ",", "9", ",", "2", ",", "6", 
   ",", "5", ",", "3", ",", "5", ",", "8", ",", "9", ",", "7", ",", "9", ",", 
   "3", ",", "2", ",", "3", ",", "8", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.939871120159337*^9},
 CellLabel->"Out[704]=",
 CellID->1303255563,ExpressionUUID->"6b7012b1-1901-45d4-b777-25eccafdc1a6"]
}, Open  ]],

Cell["The solution to our problem then looks like this:", "Text",
 CellChangeTimes->{3.939871132388132*^9, 3.9399313896967897`*^9},
 CellID->1932561709,ExpressionUUID->"63bd3777-dc63-4e2c-ba79-70e759ea4efd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RealDigits", "[", 
      RowBox[{"N", "[", 
       RowBox[{"\[Pi]", ",", "500"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x___", ",", "1", ",", "2", ",", "3", ",", "y___"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.939871134345695*^9, 3.9398711613778067`*^9}},
 CellLabel->"In[705]:=",
 CellID->1400239417,ExpressionUUID->"e23b9a95-de56-487c-86ed-9be7769c1dd9"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.939871163660963*^9},
 CellLabel->"Out[705]=",
 CellID->1512215598,ExpressionUUID->"8869e2a7-a2cf-49dd-aa65-bc89ef78ae18"]
}, Open  ]],

Cell["How about the first thousand digits?", "Text",
 CellChangeTimes->{3.939871172174382*^9},
 CellID->338593341,ExpressionUUID->"04917ae1-aa62-4f00-a581-f70d57b6e94f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RealDigits", "[", 
      RowBox[{"N", "[", 
       RowBox[{"\[Pi]", ",", "1000"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x___", ",", "1", ",", "2", ",", "3", ",", "y___"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.939871178611517*^9, 3.939871178924576*^9}},
 CellLabel->"In[706]:=",
 CellID->2054101284,ExpressionUUID->"4faedbdd-f364-48bf-8884-06bc717b304c"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.939871179187023*^9},
 CellLabel->"Out[706]=",
 CellID->1227207814,ExpressionUUID->"a4d72c16-5fe7-4f1f-b0f0-1a6e74c58bc7"]
}, Open  ]],

Cell["First two thousands?", "Text",
 CellChangeTimes->{3.939871187069976*^9},
 CellID->878137080,ExpressionUUID->"042cea71-3391-449f-ab3c-e88a466e84c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RealDigits", "[", 
      RowBox[{"N", "[", 
       RowBox[{"\[Pi]", ",", "2000"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x___", ",", "1", ",", "2", ",", "3", ",", "y___"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.939871194453875*^9, 3.939871194538958*^9}},
 CellLabel->"In[707]:=",
 CellID->1342281376,ExpressionUUID->"84aa9a59-37b5-4419-b29e-bebb31d5366a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.93987119490266*^9},
 CellLabel->"Out[707]=",
 CellID->1959169733,ExpressionUUID->"1ea66dca-cd5d-43cc-bebf-bc710df4acb5"]
}, Open  ]],

Cell["\<\
The last answer is positive, but where exactly is this combination found? \
MemberQ does not answer this, and we need a bit more work:\
\>", "Text",
 CellChangeTimes->{{3.939871203583618*^9, 3.939871205581039*^9}, 
   3.939931389717359*^9},
 CellID->584002128,ExpressionUUID->"c44a540a-41c3-4370-bd38-7e765ef01e10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"RealDigits", "[", 
       RowBox[{"N", "[", 
        RowBox[{"\[Pi]", ",", "2000"}], "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "3", ",", "1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939871212558844*^9, 3.939871232355083*^9}},
 CellLabel->"In[708]:=",
 CellID->193327292,ExpressionUUID->"09533e44-c489-4866-8167-55926d988bb8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "1925", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9398712350868397`*^9},
 CellLabel->"Out[708]=",
 CellID->946552199,ExpressionUUID->"757c57c8-6e09-4a39-afa3-741f65295aa9"]
}, Open  ]],

Cell["\<\
To understand how it works, consider the following mini-example, cutting the \
list of digits to the first 20:\
\>", "Text",
 CellChangeTimes->{3.939871247216423*^9},
 CellID->143951617,ExpressionUUID->"b5519537-ee29-4761-b2df-8366f7575052"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RealDigits", "[", 
   RowBox[{"N", "[", 
    RowBox[{"\[Pi]", ",", "20"}], "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"RealDigits", "[", 
     RowBox[{"N", "[", 
      RowBox[{"\[Pi]", ",", "20"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "3", ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.939871255473661*^9, 3.939871273877945*^9}},
 CellLabel->"In[709]:=",
 CellID->643841814,ExpressionUUID->"feec0fb1-08cb-45a8-ad22-63b5babe410d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "1", ",", "4", ",", "1", ",", "5", ",", "9", ",", "2", ",", "6", 
   ",", "5", ",", "3", ",", "5", ",", "8", ",", "9", ",", "7", ",", "9", ",", 
   "3", ",", "2", ",", "3", ",", "8", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.939871274382365*^9},
 CellLabel->"Out[709]=",
 CellID->1988655490,ExpressionUUID->"239cbdf4-4b20-46bb-9ec9-df0f23e8335c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "9", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "9", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939871274396822*^9},
 CellLabel->"Out[710]=",
 CellID->2044822169,ExpressionUUID->"6bf61259-037f-46ee-a23a-d67dc80f2b0b"]
}, Open  ]],

Cell["\<\
We get a list of digits \[OpenCurlyDoubleQuote]sliced\[CloseCurlyDoubleQuote] \
in sublists of 3 with a shift of 1. Then, the Position command searches it \
for an element which is {1, 2, 3}, and returns its position. Obviously, the \
same position also is the position of <1> in 1, 2, 3 of the original list, \
since the \[OpenCurlyDoubleQuote]slicing\[CloseCurlyDoubleQuote] was done \
with just a unit shift (otherwise this would not be so). We can check this \
directly with Take:\
\>", "Text",
 CellChangeTimes->{{3.9398712914076443`*^9, 3.9398713054212503`*^9}, 
   3.9399313897380323`*^9},
 CellID->1145391442,ExpressionUUID->"8efb4a9d-fb8e-47ed-81c6-efc12c16710a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"digits", "=", 
   RowBox[{
    RowBox[{"RealDigits", "[", 
     RowBox[{"N", "[", 
      RowBox[{"\[Pi]", ",", "2000"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pos", "=", 
  RowBox[{"First", "[", 
   RowBox[{"First", "[", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{"digits", ",", "3", ",", "1"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.939871310012208*^9, 3.939871341825591*^9}},
 CellLabel->"In[711]:=",
 CellID->1775140983,ExpressionUUID->"9f9aa8e8-f486-4259-a852-2ebc9a0d37da"],

Cell[BoxData["1925"], "Output",
 CellChangeTimes->{3.9398713433720493`*^9},
 CellLabel->"Out[712]=",
 CellID->84761373,ExpressionUUID->"daadf87c-88ff-422d-aa60-1223ba61c7b4"]
}, Open  ]],

Cell["Now we take the numbers starting at this position:", "Text",
 CellChangeTimes->{3.939871363363195*^9, 3.939931389758443*^9},
 CellID->1950908776,ExpressionUUID->"0f459718-d9c9-4132-9180-f0400e3d2bcd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"digits", ",", 
   RowBox[{"{", 
    RowBox[{"pos", ",", 
     RowBox[{"pos", "+", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939871365047179*^9, 3.93987137171978*^9}},
 CellLabel->"In[713]:=",
 CellID->567218649,ExpressionUUID->"020d94b3-ceab-4a3b-b923-2ba09fc7740b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.93987137203367*^9},
 CellLabel->"Out[713]=",
 CellID->752990012,ExpressionUUID->"6182072b-1dcc-49db-9693-cb221433b66d"]
}, Open  ]],

Cell[TextData[{
 "Let me make a general comment. On this example, we just saw a typical way \
to write and test a function in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ": either before the function is written, or if the function has errors, the \
list with which it works is cut to a few first elements, and everything is \
\[OpenCurlyDoubleQuote]worked out\[CloseCurlyDoubleQuote] on this smaller \
list. What makes this non-trivial is that the list may be complex and nested \
( a tree) - this does not matter as long as the elements of the structure of \
the large real tree essential for the function operation are preserved in a \
small \[OpenCurlyDoubleQuote]test\[CloseCurlyDoubleQuote] tree."
}], "Text",
 CellChangeTimes->{{3.93987137948748*^9, 3.9398714134674997`*^9}},
 CellID->381999913,ExpressionUUID->"331340ec-18ca-47a3-8395-4b2bd5f88f04"],

Cell["Consider now 10000 digits:", "Text",
 CellChangeTimes->{3.93987142171204*^9},
 CellID->731645504,ExpressionUUID->"4fbcf920-57e5-4ac2-99ac-17184f015fc0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Position", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RealDigits", "[", 
        RowBox[{"N", "[", 
         RowBox[{"\[Pi]", ",", "10000"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "3", ",", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "//", 
  "Timing"}]], "Input",
 CellChangeTimes->{{3.9398714295538*^9, 3.939871451384809*^9}},
 CellLabel->"In[714]:=",
 CellID->1680336100,ExpressionUUID->"202e66b3-e98b-4a89-b1f5-57eb355d74ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.012595`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1925", "}"}], ",", 
     RowBox[{"{", "2939", "}"}], ",", 
     RowBox[{"{", "2977", "}"}], ",", 
     RowBox[{"{", "3893", "}"}], ",", 
     RowBox[{"{", "6549", "}"}], ",", 
     RowBox[{"{", "7146", "}"}], ",", 
     RowBox[{"{", "8157", "}"}], ",", 
     RowBox[{"{", "8773", "}"}], ",", 
     RowBox[{"{", "8832", "}"}], ",", 
     RowBox[{"{", "9451", "}"}], ",", 
     RowBox[{"{", "9658", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939871451741503*^9},
 CellLabel->"Out[714]=",
 CellID->776669104,ExpressionUUID->"4faf83d0-698b-4560-a4a8-fe5e2e6f57fa"]
}, Open  ]],

Cell["\<\
These are all positions where <123> combination is encountered within a first \
10000 digits of \[Pi].\
\>", "Text",
 CellChangeTimes->{{3.939871460248168*^9, 3.939871462563066*^9}, 
   3.9399470937753153`*^9, 3.940017705086886*^9},
 CellID->1072024462,ExpressionUUID->"e48a9f47-0169-4921-a5fb-6dd560060342"],

Cell["An analogous example with patterns", "ItemNumbered",
 CellChangeTimes->{3.939871481038579*^9},
 CellID->404599648,ExpressionUUID->"4185ede3-6951-478d-90c1-91f7eebcb737"],

Cell["\<\
As another example, let us find among the first 1000 digits of \[Pi] all \
combinations of 3 digits which start with <1> and end with <9>, but the \
middle digit can be any. The code is as follows:\
\>", "Text",
 CellChangeTimes->{{3.9398714871466084`*^9, 3.939871506349182*^9}, 
   3.939931389779022*^9, {3.939947093799223*^9, 3.939947093821939*^9}, {
   3.9400177051055202`*^9, 3.940017705124007*^9}},
 CellID->1173057534,ExpressionUUID->"39d21e3c-5c9c-4033-93c3-77aff41182dd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"digits", "=", 
   RowBox[{
    RowBox[{"RealDigits", "[", 
     RowBox[{"N", "[", 
      RowBox[{"\[Pi]", ",", "1000"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"partdigits", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{"digits", ",", "3", ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"pos", "=", 
  RowBox[{"Position", "[", 
   RowBox[{"partdigits", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "_", ",", "9"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Extract", "[", 
  RowBox[{"partdigits", ",", "pos"}], "]"}]}], "Input",
 CellChangeTimes->{{3.939871512560848*^9, 3.939871562189823*^9}},
 CellLabel->"In[715]:=",
 CellID->653117313,ExpressionUUID->"33c8832f-25c2-4d7b-bc9a-13dbde548351"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "41", "}"}], ",", 
   RowBox[{"{", "207", "}"}], ",", 
   RowBox[{"{", "439", "}"}], ",", 
   RowBox[{"{", "495", "}"}], ",", 
   RowBox[{"{", "500", "}"}], ",", 
   RowBox[{"{", "526", "}"}], ",", 
   RowBox[{"{", "548", "}"}], ",", 
   RowBox[{"{", "705", "}"}], ",", 
   RowBox[{"{", "713", "}"}], ",", 
   RowBox[{"{", "731", "}"}], ",", 
   RowBox[{"{", "923", "}"}], ",", 
   RowBox[{"{", "985", "}"}], ",", 
   RowBox[{"{", "998", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939871562877699*^9},
 CellLabel->"Out[717]=",
 CellID->1175216988,ExpressionUUID->"45c0c133-bd02-44d5-ace0-f694f82f8835"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939871562890926*^9},
 CellLabel->"Out[718]=",
 CellID->1464815857,ExpressionUUID->"047460ed-eb20-430a-be7e-9d8ab94e9322"]
}, Open  ]],

Cell["Or", "Text",
 CellChangeTimes->{{3.9398715804867153`*^9, 3.939871580644843*^9}},
 CellID->407579391,ExpressionUUID->"9bd39efe-40fb-4d44-a94c-760a12c43095"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"partdigits", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "_", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939871582324518*^9, 3.939871589936504*^9}},
 CellLabel->"In[719]:=",
 CellID->1755478955,ExpressionUUID->"394d228f-0a40-41a4-ab66-159678df66bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939871590887001*^9},
 CellLabel->"Out[719]=",
 CellID->527063228,ExpressionUUID->"6b3d9f4c-8464-4331-ab20-3e025de5f210"]
}, Open  ]],

Cell["\<\
It is more interesting to get all digit combinations together with their \
positions. The first thing that comes to mind is to combine together a list \
of digits and a list of their positions and then Transpose:\
\>", "Text",
 CellChangeTimes->{{3.939871605362791*^9, 3.939871610333518*^9}, 
   3.9399313897995577`*^9},
 CellID->2129112768,ExpressionUUID->"93e4c582-a498-4e09-bc29-b5e8b813676c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"indexedcombs", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Extract", "[", 
      RowBox[{"partdigits", ",", "pos"}], "]"}], ",", "pos"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9398716150405083`*^9, 3.939871628535771*^9}},
 CellLabel->"In[720]:=",
 CellID->116391531,ExpressionUUID->"cd3233b3-c04b-4730-859d-600719bfdb7e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
     RowBox[{"{", "4", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6", ",", "9"}], "}"}], ",", 
     RowBox[{"{", "41", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "9"}], "}"}], ",", 
     RowBox[{"{", "207", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "7", ",", "9"}], "}"}], ",", 
     RowBox[{"{", "439", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "9"}], "}"}], ",", 
     RowBox[{"{", "495", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "9"}], "}"}], ",", 
     RowBox[{"{", "500", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "9"}], "}"}], ",", 
     RowBox[{"{", "526", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "7", ",", "9"}], "}"}], ",", 
     RowBox[{"{", "548", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "9", ",", "9"}], "}"}], ",", 
     RowBox[{"{", "705", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "9"}], "}"}], ",", 
     RowBox[{"{", "713", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
     RowBox[{"{", "731", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
     RowBox[{"{", "923", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "9"}], "}"}], ",", 
     RowBox[{"{", "985", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "9", ",", "9"}], "}"}], ",", 
     RowBox[{"{", "998", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939871628940818*^9},
 CellLabel->"Out[720]=",
 CellID->2096243908,ExpressionUUID->"7fafff2f-2ba3-4d43-b1e2-1fae6b69453b"]
}, Open  ]],

Cell["\<\
If one needs to remove the curly braces around the positions, this can be \
done with a simple rule:\
\>", "Text",
 CellChangeTimes->{3.9398716623009243`*^9},
 CellID->1733554915,ExpressionUUID->"2cfa9726-d6f6-4590-8737-03efb81eab24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"indexedcombs", "/.", 
  RowBox[{
   RowBox[{"{", "x_Integer", "}"}], "->", "x"}]}]], "Input",
 CellChangeTimes->{{3.93987166950508*^9, 3.939871678906951*^9}},
 CellLabel->"In[721]:=",
 CellID->308839422,ExpressionUUID->"2dfd29df-4d1e-4ff3-8bb3-f03c683e1327"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6", ",", "9"}], "}"}], ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "9"}], "}"}], ",", "207"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "7", ",", "9"}], "}"}], ",", "439"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "9"}], "}"}], ",", "495"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "9"}], "}"}], ",", "500"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "9"}], "}"}], ",", "526"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "7", ",", "9"}], "}"}], ",", "548"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "9", ",", "9"}], "}"}], ",", "705"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "9"}], "}"}], ",", "713"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", "731"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", "923"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "9"}], "}"}], ",", "985"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "9", ",", "9"}], "}"}], ",", "998"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9398716792155533`*^9},
 CellLabel->"Out[721]=",
 CellID->1932968211,ExpressionUUID->"b6565028-54b7-4dba-af32-b14e73ef7cce"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions - starting examples and syntax", "Subsection",
 CellChangeTimes->{3.9398717170503693`*^9},
 CellID->1858458054,ExpressionUUID->"065cd662-2ab8-45eb-85be-ea5fb5bc4086"],

Cell[CellGroupData[{

Cell["A definition and a simple example", "Subsubsection",
 CellChangeTimes->{3.9398717233954*^9},
 CellID->2102351610,ExpressionUUID->"1a40e94a-ea90-44cf-81cf-fa5e953bd031"],

Cell[TextData[{
 "By function we will mean a pair: any normal (non-atomic) ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expression which contains patterns, and a rule in a global rule base, \
reflected by the DownValues command, which tells what should replace the \
first expression when it is encountered (we will ignore functions defined by \
SubValues, for the time being)."
}], "Text",
 CellChangeTimes->{{3.939871729543747*^9, 3.939871747923958*^9}},
 CellID->1675065179,ExpressionUUID->"b6aa0427-f1b3-4ebf-9f38-8b1f774a4ad5"],

Cell["For example, this defines a function:", "Text",
 CellChangeTimes->{3.939871766504521*^9},
 CellID->705934127,ExpressionUUID->"e6f0a1b3-d662-4b01-af3e-b4dd12f909c3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "^", "3"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939871768219205*^9, 3.939871774444256*^9}},
 CellLabel->"In[724]:=",
 CellID->1375156212,ExpressionUUID->"750b2af7-2971-43d1-b9f6-c507efbf364b"],

Cell[TextData[{
 "Here f[x_] is a normal expression (we see a Head <f> and single square \
brackets - the characteristics of the normal expression), the pattern is <x_> \
(we can see that it is a pattern by the presence of the underscore, which is \
one of the symbols that distinguish patterns; <x_> stands for exactly one \
argument), and one can check the presence of the global rule in a rule base \
by checking the DownValues command on a symbol <f> (see Chapter 1, section ",
 ButtonBox["1.2.3",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-1-Introduction.nb", CharacterEncoding -> 
     "UTF-8"], "1.2.3"},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-1-Introduction.nb"],
 "):"
}], "Text",
 CellChangeTimes->{{3.939871781866632*^9, 3.9398718081039057`*^9}, {
  3.939871855480666*^9, 3.939871855489018*^9}},
 CellID->275358048,ExpressionUUID->"dac19a14-1e6b-46b7-919c-aa986f441b94"],

Cell[BoxData[
 RowBox[{"DownValues", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.9398718698027*^9, 3.939871871374468*^9}},
 CellID->18894041,ExpressionUUID->"4dcf288e-40c7-499a-96fb-c3d13c264e87"],

Cell["We can now make sure that the function works as intended:", "Text",
 CellChangeTimes->{{3.939871881886244*^9, 3.939871884589489*^9}},
 CellID->2095253799,ExpressionUUID->"b921316e-76d0-4909-a43a-ad6de6f60482"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", "Pi", "]"}], ",", 
   RowBox[{"f", "[", "Einstein", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.93987188918432*^9, 3.939871896437666*^9}},
 CellLabel->"In[726]:=",
 CellID->1876390440,ExpressionUUID->"649b335e-f34b-4629-a766-f536b15ad2e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["a", "3"], ",", 
   SuperscriptBox["\[Pi]", "3"], ",", 
   SuperscriptBox["Einstein", "3"]}], "}"}]], "Output",
 CellChangeTimes->{{3.939871896903447*^9, 3.939871925517021*^9}},
 CellLabel->"Out[726]=",
 CellID->1109804409,ExpressionUUID->"22a5ed88-263e-4d6e-83ea-d542f0cd71b6"]
}, Open  ]],

Cell["\<\
We see that the function as defined above works on any single expression.\
\>", "Text",
 CellChangeTimes->{{3.9398719049299803`*^9, 3.939871908563312*^9}},
 CellID->112857035,ExpressionUUID->"86c47dab-85d7-4219-a49e-1cf43c0c9e88"],

Cell["\<\
By a single expression I mean single argument - for example <f> will not work \
in this situation:\
\>", "Text",
 CellChangeTimes->{3.9398719049299803`*^9},
 CellID->629537283,ExpressionUUID->"0894aa72-844f-4ff4-94f1-93a7c704be73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.939871916165979*^9, 3.939871917169652*^9}},
 CellLabel->"In[727]:=",
 CellID->1630967640,ExpressionUUID->"ce871d2d-7c7c-407d-8f29-dd511a68b3c6"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Output",
 CellChangeTimes->{{3.939871917478899*^9, 3.939871927188938*^9}},
 CellLabel->"Out[727]=",
 CellID->77123511,ExpressionUUID->"c535d179-d097-46e1-86eb-5cf7eeaa7b35"]
}, Open  ]],

Cell[TextData[{
 "This is not an error, but ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " simply does not know what to do with such an expression, and thus returns \
it back, in accordance with its general evaluation strategy."
}], "Text",
 CellChangeTimes->{{3.939871936561108*^9, 3.93987193880124*^9}},
 CellID->1282210236,ExpressionUUID->"72d349f8-3702-4ef8-88be-88f2bf5ce5af"],

Cell["\<\
Notice by the way, that all the ingredients needed to define a function we \
have already encountered before - patterns, assignment operator, etc. No new \
syntax is needed for function definitions - indeed because they are just some \
type of global rules, similar to variables. The non-trivial part here is in \
the action of an assignment operator (SetDelayed or sometimes Set): it \
decides whether or not the l.h.s. of the emerging global rule is legitimate, \
and if so, what type of global rule the new rule will be. When the l.h.s. \
contains patterns and the resulting global rule is stored in DownValues, we \
say that we have defined a function.\
\>", "Text",
 CellChangeTimes->{{3.939871952374054*^9, 3.939871986741098*^9}},
 CellID->811678358,ExpressionUUID->"2a99aac8-c4a6-4ad6-b1d8-87eae35afbeb"],

Cell[TextData[{
 "Often one needs to perform type or more general argument checks. They are \
very easy to implement in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " and we will discuss them in the section on conditional patterns."
}], "Text",
 CellChangeTimes->{{3.93987199341158*^9, 3.9398720014562073`*^9}},
 CellID->1807567640,ExpressionUUID->"1b5ef19f-dae2-4d17-8c3f-625383c74e6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More on function names and evaluation surprises", "Subsubsection",
 CellChangeTimes->{3.939872010927058*^9},
 CellID->319836502,ExpressionUUID->"54e60f1f-dff4-4512-aebb-8238383804f7"],

Cell["Consider a previous example:", "Text",
 CellChangeTimes->{3.939872018760851*^9},
 CellID->340520673,ExpressionUUID->"3443dd34-d958-4583-8e16-e0c9da04a6a2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "^", "3"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939872020316717*^9, 3.939872027718768*^9}},
 CellLabel->"In[728]:=",
 CellID->308040185,ExpressionUUID->"cbd44ae4-beb3-4b06-b8b5-99fec8a7d77b"],

Cell["\<\
Note that the straightforward attempt to check the Head (name of the function \
in this case) will give not what we would naively expect:\
\>", "Text",
 CellChangeTimes->{{3.9398720357264843`*^9, 3.939872038790345*^9}, 
   3.9399313898203983`*^9},
 CellID->1590071948,ExpressionUUID->"b6b783b2-bec1-4578-a9d7-c101a91e5212"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{"f", "[", "t", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.939872041492195*^9, 3.93987204338177*^9}},
 CellLabel->"In[730]:=",
 CellID->639994131,ExpressionUUID->"870b0986-6b62-43c4-a481-9250b7db3305"],

Cell[BoxData["Power"], "Output",
 CellChangeTimes->{3.939872043748206*^9},
 CellLabel->"Out[730]=",
 CellID->1436244052,ExpressionUUID->"d31d0dea-a481-415d-8e5b-087971795047"]
}, Open  ]],

Cell["\<\
It is very easy to understand what happened by using the tracing command \
Trace:\
\>", "Text",
 CellChangeTimes->{3.9398720511035337`*^9},
 CellID->1237589684,ExpressionUUID->"1ed3aad1-6f20-458b-907f-2055b29df1db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{"Head", "[", 
   RowBox[{"f", "[", "t", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.93987205274055*^9, 3.9398720557712193`*^9}},
 CellLabel->"In[731]:=",
 CellID->1421977893,ExpressionUUID->"00f96f9e-0c17-4cbe-892a-88ef952ba6ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"f", "[", "t", "]"}],
      HoldForm], ",", 
     TagBox[
      SuperscriptBox["t", "3"],
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{"Head", "[", 
     SuperscriptBox["t", "3"], "]"}],
    HoldForm], ",", 
   TagBox["Power",
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.939872056129058*^9},
 CellLabel->"Out[731]=",
 CellID->437376507,ExpressionUUID->"64e77969-b969-47c6-ba33-44d1698bebbd"]
}, Open  ]],

Cell[TextData[{
 "We see that since the expression f[t] matches the pattern f[x_], the rule \
applied. Recall that the evaluation process by default starts from the leaves \
of the nested expression (from inside out - see section ",
 ButtonBox["2.5.6",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-2-Elementary-operations.nb", 
     CharacterEncoding -> "UTF-8"], "2.5.6"},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-2-Elementary-operations.nb"],
 "). Thus, when the Head command started to evaluate, its \
\[OpenCurlyDoubleQuote]content\[CloseCurlyDoubleQuote] has already changed \
from f[t] to t^3. The full internal form of t^3 is:"
}], "Text",
 CellChangeTimes->{{3.939872070918798*^9, 3.939872081408736*^9}, {
  3.9398721251325283`*^9, 3.939872125140748*^9}},
 CellID->150429468,ExpressionUUID->"9b51cfd2-bc9c-4828-8513-3c1d848f98d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"t", "^", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.939872139201511*^9, 3.939872144365101*^9}},
 CellLabel->"In[732]:=",
 CellID->75482933,ExpressionUUID->"94b42046-e8b8-4f19-9df1-212d49da26b7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Power", "[", 
    RowBox[{"t", ",", "3"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.939872144714552*^9},
 CellLabel->"Out[732]//FullForm=",
 CellID->437238671,ExpressionUUID->"65f4d98b-2a1b-4235-b22d-37f0b01f5d07"]
}, Open  ]],

Cell[TextData[{
 "This explains the end result. Going ahead of time, let me mention that \
there is a way to force the evaluation process to start in the opposite \
direction, from \[OpenCurlyDoubleQuote]branches\[CloseCurlyDoubleQuote] to \
\[OpenCurlyDoubleQuote]leaves\[CloseCurlyDoubleQuote] (non-standard \
evaluation, section ",
 ButtonBox["2.5.6",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-2-Elementary-operations.nb", 
     CharacterEncoding -> "UTF-8"], "2.5.6"},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-2-Elementary-operations.nb"],
 "), which will lead to the expected result for a function name:"
}], "Text",
 CellChangeTimes->{{3.939872153015759*^9, 3.939872176139666*^9}},
 CellID->2128787110,ExpressionUUID->"9c808b03-7187-4e4c-b576-a29d35d0a63c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{"Unevaluated", "[", 
   RowBox[{"f", "[", "t", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.939872178651396*^9, 3.939872182550247*^9}},
 CellLabel->"In[733]:=",
 CellID->1360077831,ExpressionUUID->"ff1ddb6f-64f0-4739-995a-f1881d09096c"],

Cell[BoxData["f"], "Output",
 CellChangeTimes->{3.939872182919806*^9},
 CellLabel->"Out[733]=",
 CellID->1396231518,ExpressionUUID->"c76c72f9-7f2f-4946-bf33-238db7188ce3"]
}, Open  ]],

Cell[TextData[{
 "We have already discussed this construction in the section on variables \
(section ",
 ButtonBox["2.2.1",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-2-Elementary-operations.nb", 
     CharacterEncoding -> "UTF-8"], "2.2.1"},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-2-Elementary-operations.nb"],
 ")."
}], "Text",
 CellChangeTimes->{
  3.9398721942089643`*^9, {3.939872231679202*^9, 3.939872231687093*^9}},
 CellID->909312257,ExpressionUUID->"392cef6b-6405-4481-8f83-dff1977f003c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["On the necessity of patterns", "Subsubsection",
 CellChangeTimes->{3.939872242547103*^9},
 CellTags->"4.4.3",
 CellID->1848839429,ExpressionUUID->"cad912e4-7f59-448f-bc82-4017128aa018"],

Cell["\<\
So, the name of the function is its Head - the symbol outside the square \
brackets in its definition, which contains a pattern. We may ask if it is \
possible to define a function without a pattern. The answer is that it is \
possible but the object so defined will not be a function in the normal sense \
and will have a behavior different from what we probably want. Here is an \
example:\
\>", "Text",
 CellChangeTimes->{{3.939872249629483*^9, 3.939872263583681*^9}},
 CellID->1503394760,ExpressionUUID->"90ee1283-a304-49a8-8b4e-4496f0c74f12"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ":=", 
   RowBox[{"x", "^", "3"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939872268957109*^9, 3.939872278044196*^9}},
 CellLabel->"In[734]:=",
 CellID->815001549,ExpressionUUID->"fc8b253a-a30f-41fc-ac5e-f5a8f096930a"],

Cell["\<\
This definition does not contain a pattern (no underscore or other pattern \
ingredients). Let us check it:\
\>", "Text",
 CellChangeTimes->{{3.9398722861959333`*^9, 3.9398722906923122`*^9}},
 CellID->1569410423,ExpressionUUID->"3c4323b3-2613-49ec-976c-0e7ea2b2be43"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", "y", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939872292477466*^9, 3.9398722961051483`*^9}},
 CellLabel->"In[736]:=",
 CellID->1183234175,ExpressionUUID->"0d1e11c7-509f-4790-956b-3e3e67766563"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["x", "3"], ",", 
   RowBox[{"f", "[", "y", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939872296369481*^9},
 CellLabel->"Out[736]=",
 CellID->1365928174,ExpressionUUID->"f0d48150-7322-4be4-a26b-5296975be72c"]
}, Open  ]],

Cell["\<\
Since we did not have a pattern, the class of expressions on which the \
corresponding rule will match has been narrowed down to just literal f[x]. In \
particular, it will not work on any other parameters:\
\>", "Text",
 CellChangeTimes->{{3.939872303768643*^9, 3.939872309818465*^9}, 
   3.939931389840835*^9},
 CellID->554633988,ExpressionUUID->"694da292-15dd-452b-8d15-370be92d9e73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "Pi", "]"}], ",", 
   RowBox[{"f", "[", "x", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.9398723144078207`*^9, 3.939872321019993*^9}},
 CellLabel->"In[737]:=",
 CellID->225421151,ExpressionUUID->"a661ef3a-39aa-4711-943b-417f427b7130"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "\[Pi]", "]"}], ",", 
   SuperscriptBox["x", "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.939872321335183*^9},
 CellLabel->"Out[737]=",
 CellID->111308344,ExpressionUUID->"736b78c9-0736-4fd5-b49d-814afa7a9483"]
}, Open  ]],

Cell["\<\
Moreover, if we then define the global value for an <x> variable, it will not \
work on <x> either:\
\>", "Text",
 CellChangeTimes->{{3.939872329869307*^9, 3.9398723330829697`*^9}, {
  3.939947093846006*^9, 3.9399470938686037`*^9}, {3.940017705142736*^9, 
  3.940017705161415*^9}},
 CellID->301081071,ExpressionUUID->"c12fabae-ffc8-48a2-8cdf-ca2b801e42b8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "x", "]"}]}], "Input",
 CellChangeTimes->{{3.939872334602919*^9, 3.9398723364111223`*^9}},
 CellLabel->"In[738]:=",
 CellID->281568593,ExpressionUUID->"92900826-5195-4750-bc63-b1281e1a220f"],

Cell[BoxData[
 RowBox[{"f", "[", "5", "]"}]], "Output",
 CellChangeTimes->{3.939872336900494*^9},
 CellLabel->"Out[739]=",
 CellID->1112950166,ExpressionUUID->"acd3f8a5-e377-4cf1-b31b-e10e996c363a"]
}, Open  ]],

Cell["\<\
(We should already be able to understand the last result: x evaluated to 5 \
before f had any chance to \
\[OpenCurlyDoubleQuote]look\[CloseCurlyDoubleQuote] at it).\
\>", "Text",
 CellChangeTimes->{{3.939872347373726*^9, 3.939872349312067*^9}, 
   3.939931389861498*^9},
 CellID->770874592,ExpressionUUID->"e993df40-3c29-4c55-9ac3-792aa5cdc00a"],

Cell[TextData[{
 "The object f[x] here could be interpreted as an indexed variable (section \
",
 ButtonBox["2.2.4",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-2-Elementary-operations.nb", 
     CharacterEncoding -> "UTF-8"], "2.2.4"},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-2-Elementary-operations.nb"],
 ") rather than a function, but even in this interpretation, it is a very \
error-prone practice to use symbols as indices in indexed variables. In any \
case, it has nothing to do with the behavior of the real function."
}], "Text",
 CellChangeTimes->{{3.939872357121895*^9, 3.939872377753237*^9}, {
  3.9398724145110617`*^9, 3.9398724145192537`*^9}},
 CellID->913364793,ExpressionUUID->"f6b87f3a-3ce9-4e35-93ee-d50e9567c99d"],

Cell["\<\
This behavior explains why we need patterns to define functions: patterns \
widen the class of expressions on which the rule will match. In particular, \
when we write\
\>", "Text",
 CellChangeTimes->{{3.9398733237279654`*^9, 3.939873327168292*^9}},
 CellID->1644366425,ExpressionUUID->"dc0b1f21-5741-4e8e-b52f-24dbc4684152"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "^", "3"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.93987333010817*^9, 3.9398733370501537`*^9}},
 CellLabel->"In[773]:=",
 CellID->792034791,ExpressionUUID->"c779f02d-ff24-4346-b088-7917909fea3d"],

Cell["\<\
the pattern <x_> means \[OpenCurlyDoubleQuote]any expression\
\[CloseCurlyDoubleQuote] and <x> here becomes a name attached to a \
placeholder where the actual input parameter will be placed. When we later \
call the function, normally the input parameters are evaluated first, and \
then the action of the function is to replace them with whatever the action \
of the r.h.s. of the corresponding rule should be.\
\>", "Text",
 CellChangeTimes->{{3.9398733510141277`*^9, 3.939873368460404*^9}, {
  3.9399470938918533`*^9, 3.939947093914019*^9}, {3.9400177051800947`*^9, 
  3.9400177051986732`*^9}},
 CellID->1323818443,ExpressionUUID->"310bb5d7-ca15-4120-a9e1-69121828ef88"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More on the correct syntax of the function calls", "Subsubsection",
 CellChangeTimes->{3.939873381043542*^9},
 CellID->1263995082,ExpressionUUID->"b4fc0f32-2b3a-4291-aeba-a3482bf42c63"],

Cell["\<\
Calling a function by name without the square brackets, or with parentheses \
used instead, will not give a desired result (and is a logical mistake in \
most cases):\
\>", "Text",
 CellChangeTimes->{{3.9398733875032988`*^9, 3.939873389250386*^9}},
 CellID->1057107050,ExpressionUUID->"a67611c9-1f6f-44ac-afcd-538136958833"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Sin", ",", 
   RowBox[{"Sin", 
    RowBox[{"(", "Pi", ")"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939873396841649*^9, 3.939873400531218*^9}},
 CellLabel->"In[775]:=",
 CellID->2018008211,ExpressionUUID->"f835cfd4-9e82-463f-85cc-a5651d4fba7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Sin", ",", 
   RowBox[{"\[Pi]", " ", "Sin"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939873403532613*^9},
 CellLabel->"Out[775]=",
 CellID->1059433611,ExpressionUUID->"bff6f8b2-ab24-42a5-8eba-45ba85bcc056"]
}, Open  ]],

Cell[TextData[{
 "In both cases, Sin was interpreted by ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " not as a function, but just as some symbolic object. In the latter case, \
parentheses were interpreted as a multiplication, which is easy to see with \
the help of FullForm:"
}], "Text",
 CellChangeTimes->{{3.9398734150771713`*^9, 3.9398734201934443`*^9}, 
   3.939931389881905*^9},
 CellID->1113782800,ExpressionUUID->"38c2dc4a-3e84-4370-9f54-61d17cd6289d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"{", 
   RowBox[{"Sin", ",", 
    RowBox[{"Sin", 
     RowBox[{"(", "Pi", ")"}]}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9398734283001842`*^9, 3.939873430233626*^9}},
 CellLabel->"In[776]:=",
 CellID->330860084,ExpressionUUID->"324b9ea2-fce5-4756-b57e-72170a09485b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"Sin", ",", 
     RowBox[{"Times", "[", 
      RowBox[{"Pi", ",", "Sin"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.9398734306781607`*^9},
 CellLabel->"Out[776]//FullForm=",
 CellID->531906413,ExpressionUUID->"68df6010-690a-4b5e-9e38-7cf2f90ab9c7"]
}, Open  ]],

Cell[TextData[{
 "As we mentioned already, function calls are syntactically just a special \
case of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " normal expressions, and thus have to obey the standard syntax rules. Thus, \
the single square brackets."
}], "Text",
 CellChangeTimes->{{3.9398734383988037`*^9, 3.9398734403496523`*^9}},
 CellID->1924144477,ExpressionUUID->"8f24959d-2d3c-4fad-8d85-c81da6214fff"],

Cell[TextData[{
 "While just using a function name will not be a mistake in many languages \
(in C this will be a function pointer), in (strongly) typed languages this \
will lead to a type conflict and will probably cause a compiler warning or \
error message. Not so in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", which means that one has to be more careful. In version 6, the red \
highlighting will usually warn that the syntax may be wrong."
}], "Text",
 CellChangeTimes->{{3.939873450956255*^9, 3.939873474660293*^9}},
 CellID->1229368697,ExpressionUUID->"3e1159e7-d875-42ca-b123-fb8dc8043f77"]
}, Open  ]],

Cell[CellGroupData[{

Cell["On function definitions and assignment operators", "Subsubsection",
 CellChangeTimes->{3.939873482616005*^9},
 CellID->844332971,ExpressionUUID->"5e8adaa6-5baf-4d27-8e7a-cf2dfc7bd9a9"],

Cell["Use SetDelayed to define a function in most cases", "ItemNumbered",
 CellChangeTimes->{3.9398734906713943`*^9},
 CellID->132304221,ExpressionUUID->"1bfd57e3-6ac1-4259-8e3d-0ac5161771b0"],

Cell["\<\
What will happen, if we use the Set (=) command instead of SetDelayed (:=), \
when defining a function? This depends on the state of global variables \
present or defined in the system at the given moment. Here is an example:\
\>", "Text",
 CellChangeTimes->{{3.939873495904778*^9, 3.939873503126302*^9}},
 CellID->991467702,ExpressionUUID->"63f9b372-50d2-46c6-befd-beffa001ee42"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", 
   RowBox[{"x", "^", "2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939873504967985*^9, 3.9398735116268387`*^9}},
 CellLabel->"In[777]:=",
 CellID->687493492,ExpressionUUID->"988832aa-3571-4546-9491-86b9b7282561"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "Pi", "]"}], ",", 
   RowBox[{"f", "[", "y", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939873517150689*^9, 3.9398735232076693`*^9}},
 CellLabel->"In[779]:=",
 CellID->497205785,ExpressionUUID->"f0d20c83-aff8-4eb5-8a3f-bfe9bc40600a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", 
   SuperscriptBox["\[Pi]", "2"], ",", 
   SuperscriptBox["y", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.93987352357755*^9},
 CellLabel->"Out[779]=",
 CellID->1390011132,ExpressionUUID->"3bc09b36-9246-45f7-9046-7ccd856eb977"]
}, Open  ]],

Cell["\<\
The function works fine, but this is so only because by the moment of the \
definition, the variable <x> did not have any global value (no global rule \
was associated with it), and thus the r.h.s. x^2 evaluated trivially (to \
itself) and was recorded in the rule for function <f> in this way. This is \
what happens when <x> has a value at the moment of assignment:\
\>", "Text",
 CellChangeTimes->{{3.939873532249551*^9, 3.9398735456919203`*^9}, 
   3.939931389902598*^9, {3.9399470939380617`*^9, 3.939947093982971*^9}, {
   3.940017705217284*^9, 3.94001770525417*^9}},
 CellID->1589983458,ExpressionUUID->"2a97583e-a701-4ca8-ac51-aa6f11db5f80"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", 
   RowBox[{"x", "^", "2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939873554275627*^9, 3.9398735644122953`*^9}},
 CellLabel->"In[780]:=",
 CellID->965740122,ExpressionUUID->"22fc40ff-4b6b-4aa8-81b2-60c8d7e1b36d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "Pi", "]"}], ",", 
   RowBox[{"f", "[", "y", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939873565805017*^9, 3.939873572124318*^9}},
 CellLabel->"In[783]:=",
 CellID->1309034425,ExpressionUUID->"6518e0b8-f830-46ca-8d61-cd927d67adb6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25", ",", "25", ",", "25", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{3.939873572469709*^9},
 CellLabel->"Out[783]=",
 CellID->1322407666,ExpressionUUID->"b8c3158f-1fc5-4ab0-993c-5199e5a3007b"]
}, Open  ]],

Cell["\<\
To understand it better, we can look at DownValues of <f>, which reflect the \
way the definitions (rules) for <f> are stored in the system:\
\>", "Text",
 CellChangeTimes->{{3.9398735821418047`*^9, 3.9398735845297213`*^9}, 
   3.939931389923326*^9, {3.939947094006444*^9, 3.93994709402946*^9}, {
   3.94001770527262*^9, 3.940017705291119*^9}},
 CellID->1397379659,ExpressionUUID->"c7881c18-c4b4-4553-a2b8-e60e11e10613"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DownValues", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.939873586209237*^9, 3.93987358796392*^9}},
 CellLabel->"In[784]:=",
 CellID->1003907078,ExpressionUUID->"a316693c-6554-468e-b3cf-b8ed3723862d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"f", "[", "x_", "]"}], "]"}], "\[RuleDelayed]", "25"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9398735882891407`*^9},
 CellLabel->"Out[784]=",
 CellID->2128831291,ExpressionUUID->"cd56dccb-5e4f-4872-9e51-f8681d64ffbc"]
}, Open  ]],

Cell[TextData[{
 "We see that now any input expression, regardless of its structure, will be \
replaced by 25. This behavior is in full agreement with the principles of \
operation of Set ( = ) assignment operator. It allows the r.h.s. of the \
definition to evaluate. This evaluation happens as usual, using the values \
for all global variables or expressions which exist in the system at the \
moment of the definition. Then Set uses the result of this evaluation as a \
r.h.s for the new global rule, associated with the l.h.s. of the assignment \
(See chapter 2 section ",
 ButtonBox["2.4.1",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-2-Elementary-operations.nb", 
     CharacterEncoding -> "UTF-8"], "2.4.1"},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-2-Elementary-operations.nb"],
 "). Since <x> had a global value 5, it was used in the calculation of the \
r.h.s, which then became the r.h.s. of the global rule associated with \
function <f> (definition of f)."
}], "Text",
 CellChangeTimes->{{3.93987430347666*^9, 3.939874337454818*^9}, {
  3.9398743790523443`*^9, 3.939874379060957*^9}},
 CellID->42465170,ExpressionUUID->"ec396239-5fe9-4eb1-8bfc-37f3a9bdc69d"],

Cell["\<\
So, the conclusion is that in the majority of cases functions must be defined \
with SetDelayed (:=) rather than Set (=). Since SetDelayed does not evaluate \
the r.h.s of an assignment, we are safe in this case.\
\>", "Text",
 CellChangeTimes->{{3.9398743891440268`*^9, 3.939874395432548*^9}},
 CellID->568964059,ExpressionUUID->"8a578012-ffcf-4211-8af0-4bc13313203f"],

Cell["When Set is more appropriate", "ItemNumbered",
 CellChangeTimes->{3.939874403857512*^9},
 CellID->253593970,ExpressionUUID->"a6c2f861-c5bc-45a7-b3d5-e159645883ad"],

Cell["\<\
There are instances when Set operator is more appropriate do define a \
function however. In particular, this happens when a function may be \
symbolically precomputed so that it is stored in a form which allows a more \
efficient computation. Consider for instance a function defined as an \
indefinite integral, like the following one:\
\>", "Text",
 CellChangeTimes->{{3.9398744103397284`*^9, 3.939874424564313*^9}, 
   3.939931389944112*^9},
 CellID->1546298142,ExpressionUUID->"478e1070-2f45-484b-897d-bde273e1fe6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "+", 
     RowBox[{"z", "^", "2"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "x"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939874426498481*^9, 3.939874436379794*^9}},
 CellLabel->"In[785]:=",
 CellID->779187926,ExpressionUUID->"593ee59d-83c9-4668-ad31-20b1ebda4ddf"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"5", " ", 
     SqrtBox["26"]}], "+", 
    RowBox[{"ArcTanh", "[", 
     FractionBox["5", 
      SqrtBox["26"]], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.93987443791444*^9},
 CellLabel->"Out[785]=",
 CellID->1331237103,ExpressionUUID->"77951894-15af-4c45-adef-392aee53196f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "g", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "+", 
      RowBox[{"z", "^", "2"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "0", ",", "x"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.939874441405758*^9, 3.939874456104755*^9}},
 CellLabel->"In[786]:=",
 CellID->48825999,ExpressionUUID->"5820fd94-f48f-4f4b-afbe-3118f70f8b61"],

Cell["Let us compute it in a few points:", "Text",
 CellChangeTimes->{3.9398744661848173`*^9, 3.939931389964566*^9},
 CellID->760748736,ExpressionUUID->"1c0f35c0-dd5b-443c-b89b-7e9a905f3a7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"g", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "//", "Timing"}]], "Input",
 CellChangeTimes->{{3.939874468033242*^9, 3.9398744772962847`*^9}},
 CellLabel->"In[788]:=",
 CellID->142054982,ExpressionUUID->"70da07f8-cf66-4757-a3cb-4e331c3ea419"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.475974`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SqrtBox["2"], "+", 
        RowBox[{"ArcTanh", "[", 
         FractionBox["1", 
          SqrtBox["2"]], "]"}]}], ")"}]}], ",", 
     RowBox[{
      SqrtBox["5"], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"ArcTanh", "[", 
        FractionBox["2", 
         SqrtBox["5"]], "]"}]}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         SqrtBox["10"]}], "+", 
        RowBox[{"ArcTanh", "[", 
         FractionBox["3", 
          SqrtBox["10"]], "]"}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SqrtBox["17"]}], "+", 
        RowBox[{"ArcTanh", "[", 
         FractionBox["4", 
          SqrtBox["17"]], "]"}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", " ", 
         SqrtBox["26"]}], "+", 
        RowBox[{"ArcTanh", "[", 
         FractionBox["5", 
          SqrtBox["26"]], "]"}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"6", " ", 
         SqrtBox["37"]}], "+", 
        RowBox[{"ArcTanh", "[", 
         FractionBox["6", 
          SqrtBox["37"]], "]"}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"35", " ", 
         SqrtBox["2"]}], "+", 
        RowBox[{"ArcTanh", "[", 
         FractionBox["7", 
          RowBox[{"5", " ", 
           SqrtBox["2"]}]], "]"}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"8", " ", 
         SqrtBox["65"]}], "+", 
        RowBox[{"ArcTanh", "[", 
         FractionBox["8", 
          SqrtBox["65"]], "]"}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"9", " ", 
         SqrtBox["82"]}], "+", 
        RowBox[{"ArcTanh", "[", 
         FractionBox["9", 
          SqrtBox["82"]], "]"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"5", " ", 
       SqrtBox["101"]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"ArcTanh", "[", 
        FractionBox["10", 
         SqrtBox["101"]], "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939874479056528*^9},
 CellLabel->"Out[788]=",
 CellID->2075414899,ExpressionUUID->"10ea4607-c7b2-43c0-a812-1cf733f04585"]
}, Open  ]],

Cell["\<\
The point is, this integral can be computed in a closed form, and it \
absolutely makes sense to do it only once and then store the already computed \
definition. But with SetDelayed (as above), it will be recomputed every time \
afresh, according to a general rule of delayed evaluation. This is the case \
to use Set:\
\>", "Text",
 CellChangeTimes->{{3.9398745003213778`*^9, 3.939874509385982*^9}, 
   3.939931389985106*^9},
 CellID->2068812919,ExpressionUUID->"1c2f81b0-8198-40f5-87af-eee711d3cfdd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "g1"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g1", "[", "x_", "]"}], "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "+", 
       RowBox[{"z", "^", "2"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "x"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9398745126896067`*^9, 3.939874528615058*^9}},
 CellLabel->"In[789]:=",
 CellID->477261443,ExpressionUUID->"82909fa1-8e2c-4136-928e-4f41d089b8ae"],

Cell["\<\
The result is almost instantaneous this time ( I cheated a bit by not \
including the time it took to compute the integral, but for a large number of \
function calls it will be in most cases negligible):\
\>", "Text",
 CellChangeTimes->{{3.9398745366524076`*^9, 3.9398745387587967`*^9}},
 CellID->228136857,ExpressionUUID->"43c9250f-f939-4f54-ae28-dc64aa63bf01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"g1", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Short", "[", 
     RowBox[{"#", ",", "2"}], "]"}], "&"}]}], "//", "Timing"}]], "Input",
 CellChangeTimes->{{3.9398745465288343`*^9, 3.939874561665764*^9}},
 CellLabel->"In[791]:=",
 CellID->725950880,ExpressionUUID->"9019c79f-967a-4f6f-880e-405c8b6665d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000261`", ",", 
   TagBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox["2"], "+", 
         RowBox[{"ArcTanh", "[", 
          FractionBox["1", 
           SqrtBox["2"]], "]"}]}], ")"}]}], ",", 
      RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"10", " ", 
          SqrtBox["101"]}], "+", 
         RowBox[{"ArcTanh", "[", 
          FractionBox["10", 
           RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]], "]"}]}], 
        ")"}]}]}], "}"}],
    Short[#, 2]& ]}], "}"}]], "Output",
 CellChangeTimes->{3.93987456241146*^9},
 CellLabel->"Out[791]=",
 CellID->624689363,ExpressionUUID->"80e172ea-355a-4583-a684-caae5d521c03"]
}, Open  ]],

Cell["\<\
However, notice that we had to be careful and Clear the variable <x>. To be \
completely on the safe side, one can use one of the scoping constructs \
(discussed at the end of this chapter) to localize the variable:\
\>", "Text",
 CellChangeTimes->{{3.939874572378039*^9, 3.9398745784413033`*^9}, 
   3.939931390005602*^9, 3.9399470940531273`*^9, 3.940017705309731*^9, 
   3.94074064402287*^9},
 CellID->106573758,ExpressionUUID->"d2d6225a-86ee-4508-a453-82ffb81eca04"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "g2", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "x", "}"}], ",", 
    RowBox[{
     RowBox[{"g2", "[", "x_", "]"}], "=", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", 
         RowBox[{"z", "^", "2"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", "0", ",", "x"}], "}"}]}], "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"g2", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Short", "[", 
     RowBox[{"#", ",", "2"}], "]"}], "&"}]}], "//", "Timing"}]}], "Input",
 CellChangeTimes->{{3.939874600758918*^9, 3.939874642600245*^9}},
 CellLabel->"In[792]:=",
 CellID->1613029728,ExpressionUUID->"0695cb6e-ff63-4393-b199-83383ff1a609"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00008`", ",", 
   TagBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox["2"], "+", 
         RowBox[{"ArcTanh", "[", 
          FractionBox["1", 
           SqrtBox["2"]], "]"}]}], ")"}]}], ",", 
      RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"10", " ", 
          SqrtBox["101"]}], "+", 
         RowBox[{"ArcTanh", "[", 
          FractionBox["10", 
           RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]], "]"}]}], 
        ")"}]}]}], "}"}],
    Short[#, 2]& ]}], "}"}]], "Output",
 CellChangeTimes->{3.939874643183795*^9},
 CellLabel->"Out[794]=",
 CellID->428175696,ExpressionUUID->"5bb79393-75a3-4bb1-99ed-b455ab4ac357"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assigning values to function symbols (names)", "Subsubsection",
 CellChangeTimes->{3.939874653954239*^9},
 CellID->1572307210,ExpressionUUID->"5b8e87a2-b0af-4ebc-92ba-ac7eebd7d091"],

Cell["\<\
Since function symbols are just normal symbols, they can be used as variables \
and in particular can be assigned values. When the function is called on some \
argument, these values are computed before any other computation takes place. \
Consider an example:\
\>", "Text",
 CellChangeTimes->{{3.939874662042207*^9, 3.939874672783607*^9}},
 CellID->981002135,ExpressionUUID->"aa0c5e3c-793c-4a74-ab32-3d8ed95ebe23"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", "Sin"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "5", "]"}]}], "Input",
 CellChangeTimes->{{3.93987467738253*^9, 3.939874688127022*^9}},
 CellLabel->"In[795]:=",
 CellID->1363513404,ExpressionUUID->"b779f999-eee4-4961-a860-25c53b19be9b"],

Cell[BoxData[
 RowBox[{"Sin", "[", "5", "]"}]], "Output",
 CellChangeTimes->{3.939874688592599*^9},
 CellLabel->"Out[798]=",
 CellID->916783648,ExpressionUUID->"086f98d2-4e63-4a62-b049-815eef54815c"]
}, Open  ]],

Cell["\<\
Notice that this does not mean that the previous rule for <f> disappeared - \
it is still in the rule base, as can be checked with DownValues:\
\>", "Text",
 CellChangeTimes->{{3.939874700485482*^9, 3.9398747031146927`*^9}, 
   3.939931390026198*^9, 3.939947094076494*^9, 3.9400177053283653`*^9},
 CellID->187604711,ExpressionUUID->"c8bf8db7-4e65-487e-8424-6f1c6eeea8f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DownValues", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.939874704764256*^9, 3.939874705917612*^9}},
 CellLabel->"In[799]:=",
 CellID->215738557,ExpressionUUID->"ba0c4e7d-5101-407e-8247-561ddcee6451"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"f", "[", "x_", "]"}], "]"}], "\[RuleDelayed]", 
   SuperscriptBox["x", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.9398747062921667`*^9},
 CellLabel->"Out[799]=",
 CellID->1306583401,ExpressionUUID->"e30e1c24-8789-4437-94e5-9edc6cc41c1a"]
}, Open  ]],

Cell["\<\
It is just that <f> now has also OwnValue <Sin>, which is computed in this \
case before any arguments are considered, and then the DownValue rule has no \
chance to apply:\
\>", "Text",
 CellChangeTimes->{{3.939874716403544*^9, 3.939874719821656*^9}, 
   3.939931390046686*^9, {3.939947094100312*^9, 3.939947094123023*^9}, {
   3.940017705347045*^9, 3.940017705365561*^9}},
 CellID->1726930032,ExpressionUUID->"940372d7-88f7-46d0-a501-3cefc175ed95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OwnValues", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.9398747236816874`*^9, 3.9398747248920717`*^9}},
 CellLabel->"In[800]:=",
 CellID->510325955,ExpressionUUID->"1643ea34-ad96-44c8-bedf-e7eb9b246752"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"HoldPattern", "[", "f", "]"}], "\[RuleDelayed]", "Sin"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.939874726525462*^9},
 CellLabel->"Out[800]=",
 CellID->1616450627,ExpressionUUID->"8bdc21af-639b-4bc4-9077-f5e04fadb87c"]
}, Open  ]],

Cell["We can see what happens, with the help of the Trace command:", "Text",
 CellChangeTimes->{3.939874733904705*^9, 3.939931390067399*^9},
 CellID->2017553439,ExpressionUUID->"5068cbaa-be9a-4288-81a7-11b314e16fb9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{"f", "[", "5", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.939874735424334*^9, 3.9398747375475197`*^9}},
 CellLabel->"In[801]:=",
 CellID->1775321459,ExpressionUUID->"a2c385e5-730f-4f61-841b-9506c6c0dcf9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TagBox["f",
      HoldForm], ",", 
     TagBox["Sin",
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{"Sin", "[", "5", "]"}],
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.9398747379120407`*^9},
 CellLabel->"Out[801]=",
 CellID->1371479158,ExpressionUUID->"235b91a6-88ab-48a4-ae26-37f2701664fa"]
}, Open  ]],

Cell[TextData[{
 "To \[OpenCurlyDoubleQuote]restore\[CloseCurlyDoubleQuote] the function in \
this case, we obviously can not use Clear, since then also the DownValues of \
<f> will be cleared. In such a case, use Unset (section ",
 ButtonBox["2.2.6",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-2-Elementary-operations.nb", 
     CharacterEncoding -> "UTF-8"], "2.2.6"},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-2-Elementary-operations.nb"],
 "):"
}], "Text",
 CellChangeTimes->{{3.939874747423601*^9, 3.939874749646942*^9}, {
   3.939874784401662*^9, 3.939874784410296*^9}, 3.939931390088272*^9, 
   3.939947094147375*^9, 3.940017705384503*^9},
 CellID->1508225255,ExpressionUUID->"b3404f55-d580-4694-8c95-237c5c3f3dd1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "5", "]"}]}], "Input",
 CellChangeTimes->{{3.939874787383298*^9, 3.939874790067935*^9}},
 CellLabel->"In[802]:=",
 CellID->2025059235,ExpressionUUID->"bd1124bb-92fe-4224-8104-e925a098f1ac"],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{3.939874790408989*^9},
 CellLabel->"Out[803]=",
 CellID->1643072826,ExpressionUUID->"b3ebda49-6af2-47a4-853c-491ef0e36ba4"]
}, Open  ]],

Cell["\<\
In general, the above behavior means that one has to be careful and make sure \
that the symbol which is going to be used as a function name, does not have \
an OwnValue (unless this is what is desired, which is a rare case) - \
otherwise the newly defined function will not work properly.\
\>", "Text",
 CellChangeTimes->{{3.93987479798543*^9, 3.939874806629033*^9}},
 CellID->632769809,ExpressionUUID->"02cd8383-bc94-4641-9e53-8ba7b54910ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Advanced topic: parameter passing", "Subsubsection",
 CellChangeTimes->{3.939874819104101*^9},
 CellTags->"4.4.7",
 CellID->126177489,ExpressionUUID->"13c766c3-a4ef-4976-b20d-d241dc8532af"],

Cell["How parameters are passed", "ItemNumbered",
 CellChangeTimes->{3.9398748270244904`*^9},
 CellID->1098698034,ExpressionUUID->"ea814e00-27a2-4bfd-90e3-f015b037eab5"],

Cell[TextData[{
 "Let us look a bit closer at the way the parameters (which are the pattern \
tags and stand with blanks or other patterns on the l.h.s, such as x_) are \
passed to functions. The three main questions to address are these: what is \
the mechanism of parameter passing, is it possible to modify the passed \
parameters within a function such that the actual expressions being passed \
are modified after the function returns (pass-by-reference), and what are the \
rules for name collisions with the local variables. Since we did not \
systematically discuss the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " scoping constructs yet, we will postpone the third question until such a \
discussion (sections 4.8, 4.10), and deal with the first two."
}], "Text",
 CellChangeTimes->{{3.939874835907029*^9, 3.939874874219428*^9}},
 CellID->1753460532,ExpressionUUID->"5358cf09-dcc4-4d9b-b30a-7fc00c56b9d8"],

Cell["\<\
So, how are the parameters passed to the function? It turns out that the rule \
is very simple: their values (evaluated or not, depending on the presence of \
Hold attributes attached to the function) are textually substituted into the \
r.h.s of the function (before or after evaluation of the function itself \
takes place, again depending on the evaluation being standard or not). This \
happens somewhat similarly to the C preprocessor substitutions. What is \
important is that they never become local variables (in the sense of C), with \
the consequences we will describe in a second. We could say that the \
arguments are always passed by value, but the notion of value depends on \
whether or nor the function evaluates arguments in a standard way
(presence or absence of Hold attributes).\
\>", "Text",
 CellChangeTimes->{{3.939874890026264*^9, 3.93987492926827*^9}},
 CellID->1170190779,ExpressionUUID->"37acfc29-e03b-47f3-a133-b18e27f73bb1"],

Cell["\<\
The next question is whether or not the passed parameters can be modified \
inside a function. This depends on whether or not the passed object \
represents an L-value. The passed object will represent an L-value in 2 cases:\
\>", "Text",
 CellChangeTimes->{{3.939874940427142*^9, 3.939874950119514*^9}},
 CellID->2039689010,ExpressionUUID->"2387fe91-e045-4772-90e6-de349e57f865"],

Cell[TextData[{
 "1. The evaluation order is standard, but what is passed evaluates (before \
being passed, according to the standard evaluation strategy that arguments \
are evaluated first) to a global symbol (which can be used as a variable in \
the sense described in section ",
 ButtonBox["2.2",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-2-Elementary-operations.nb", 
     CharacterEncoding -> "UTF-8"], "2.2"},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-2-Elementary-operations.nb"],
 "), with no assigned value."
}], "Text",
 CellChangeTimes->{{3.939874958366448*^9, 3.939874966048711*^9}, {
  3.9398750010693502`*^9, 3.939875001077509*^9}},
 CellID->1242788193,ExpressionUUID->"bec0865d-671b-4f05-91f2-cb108d084d81"],

Cell["\<\
2. What is passed is also a global symbol in the above sense, possibly with \
some global rule (definition) assigned to it, but the order of evaluation is \
non-standard and this symbol is passed unevaluated.\
\>", "Text",
 CellChangeTimes->{{3.939875009071808*^9, 3.939875011595807*^9}},
 CellID->229259617,ExpressionUUID->"cd8b8011-8f8e-48fe-bbaa-1ab63a27dff7"],

Cell["\<\
If the global symbol above is composite, and its head does not carry the \
Protected attribute, then the result of an assignment will be a DownValue or \
SubValue for the head.\
\>", "Text",
 CellChangeTimes->{{3.93987502771808*^9, 3.9398750296194344`*^9}},
 CellID->1998726239,ExpressionUUID->"04e63339-e0a0-4b9e-900c-51f1d686572a"],

Cell["\<\
In both of these cases it is possible to assign a value to a global symbol \
being passed to the function, from within the function, and thus modify it. \
Modification of the symbol in the first case has no direct analogs in \
languages such as C, just because it requires some symbol (which we pass) to \
hang around in a global name space but not have any value at all, which is \
only possible in a symbolic environment. In the second case, effectively the \
pass-by-reference semantics is simulated.\
\>", "Text",
 CellChangeTimes->{{3.939875037281783*^9, 3.93987505881161*^9}},
 CellID->1249340395,ExpressionUUID->"5b3184ab-cdaf-4a24-a9a5-58595bcb8ae2"],

Cell["\<\
Finally, if what is passed does not represent an L-value, no assignments to \
it are possible. Again, this reflects the fact that what really happens is a \
textual substitution in a body of a function rather than say allocating \
variables on the stack. This textual substitution is similar to that \
performed by a scoping construct With (section 4.8.3).\
\>", "Text",
 CellChangeTimes->{{3.939875069904883*^9, 3.939875088119686*^9}},
 CellID->1124913699,ExpressionUUID->"3668a0a8-189b-4fdd-bc6c-f5a448242d36"],

Cell["\<\
Also, this means that there is no way of changing the value of the parameter \
locally (without global parameter modification) - either it represents an \
L-values and then is changed globally, or it does not and then no changes are \
at all possible. If one needs to change a passed parameter locally, one may \
introduce a local variable, initialize it with this parameter value, and then \
change a local variable instead (local variables
will be described later in this chapter).\
\>", "Text",
 CellChangeTimes->{{3.939875099406397*^9, 3.939875119050209*^9}},
 CellID->2092726308,ExpressionUUID->"b9757bf0-d7a0-4f0f-ae12-3473cc3f52d3"],

Cell["\<\
It is time now to illustrate the rather obscure statements I just made.\
\>", "Text",
 CellChangeTimes->{3.939875130836604*^9},
 CellID->523713205,ExpressionUUID->"c942e8e8-7b26-4115-8979-47f39e3d9137"],

Cell["Illustration: standard evaluation", "ItemNumbered",
 CellChangeTimes->{3.9398751425383873`*^9},
 CellID->1659851029,ExpressionUUID->"9702d9ce-bfe3-4e83-b097-a102d5506ee3"],

Cell["\<\
We start with the following function which attempts to assign a value to the \
parameter passed to it:\
\>", "Text",
 CellChangeTimes->{3.939875148024485*^9, 3.9399313901089783`*^9},
 CellID->1303669873,ExpressionUUID->"e3cc0dbb-d9d7-42de-b3cb-95024a44618a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "x", ",", "a", ",", "b", ",", "c", ",", "d", ",", "h"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "=", "5"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939875154964163*^9, 3.9398751652189703`*^9}},
 CellLabel->"In[804]:=",
 CellID->506970161,ExpressionUUID->"d50fc002-bd10-4f55-b5fd-f084a02e1cc7"],

Cell["We start with a symbol which does not have a global value:", "Text",
 CellChangeTimes->{3.9398751729121304`*^9, 3.9399313901298323`*^9},
 CellID->1983945314,ExpressionUUID->"cc366086-bc59-4bb2-8689-409681909fd1"],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.939875174296163*^9},
 CellLabel->"In[806]:=",
 CellID->860194820,ExpressionUUID->"2287a8af-7566-4b60-9dbf-442b97fbf4de"],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.939875175573079*^9},
 CellLabel->"Out[806]=",
 CellID->250393612,ExpressionUUID->"356080d2-0269-4be3-ae5b-c8f6f1b32d5e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "a", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.939875176010969*^9, 3.93987517722227*^9}},
 CellLabel->"In[807]:=",
 CellID->1906231401,ExpressionUUID->"a18dd550-c93d-42e0-a292-d4a9c8d348c7"],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.939875182095663*^9},
 CellLabel->"In[808]:=",
 CellID->842221190,ExpressionUUID->"6e7b59ac-e2fa-4b4a-9923-d473a5b83e66"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.93987518307647*^9},
 CellLabel->"Out[808]=",
 CellID->1351699859,ExpressionUUID->"7c769f8f-c2ee-4d25-a877-7b2c78d5c528"]
}, Open  ]],

Cell["\<\
We see that it was modified. This corresponds to the case 1 above. Now \
consider:\
\>", "Text",
 CellChangeTimes->{3.939875196555606*^9},
 CellID->1937512247,ExpressionUUID->"87ad23d1-b7f7-478d-ab23-39240ddaf1d9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", "c"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "b", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"b", ",", "c"}], "}"}]}], "Input",
 CellChangeTimes->{{3.939875210646819*^9, 3.9398752153345423`*^9}},
 CellLabel->"In[809]:=",
 CellID->1010768978,ExpressionUUID->"6a26a394-ba84-48d1-a8d2-4dd39e0fa224"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.939875216206791*^9},
 CellLabel->"Out[811]=",
 CellID->2146543607,ExpressionUUID->"a4a4828f-49d4-4a31-9f13-316db58326bd"]
}, Open  ]],

Cell["\<\
It may be not immediately obvious, but what happened really is that only <c> \
received the numerical value, but not <b>, which has the same definition as \
before:\
\>", "Text",
 CellChangeTimes->{{3.939875242781793*^9, 3.9398752464778357`*^9}, {
  3.939947094171103*^9, 3.939947094193955*^9}, {3.9400177054031754`*^9, 
  3.940017705421646*^9}},
 CellID->1380616896,ExpressionUUID->"1b35819c-7015-4e38-abc3-5f2b2a202d8a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "b"}]], "Input",
 CellChangeTimes->{{3.9398752515949802`*^9, 3.939875251921455*^9}},
 CellLabel->"In[812]:=",
 CellID->1043984281,ExpressionUUID->"30e591ef-e89c-4eb1-803e-ed685c03243e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`b\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"b", "=", "c"}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`b\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{12.5, {1.42974853515625, 11.07025146484375}}],
               True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               
               ImageSizeCache->{
                12.5, {1.42974853515625, 11.07025146484375}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`b\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`b", "Documentation" -> None, 
    "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, $CellContext`b, {$CellContext`b -> $CellContext`c}], 
    "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`b"|>, 
   False]]], "Output",
 CellChangeTimes->{3.939875252286688*^9},
 CellLabel->"Out[812]=",
 CellID->443793282,ExpressionUUID->"742e69ee-77f2-4e18-b0a9-5ecd729f3bee"]
}, Open  ]],

Cell["\<\
In particular, if we now Clear[c], b will no longer evaluate to a number:\
\>", "Text",
 CellChangeTimes->{3.939875263825552*^9, 3.9399313901507397`*^9},
 CellID->622984543,ExpressionUUID->"069f617c-f22d-4306-a001-0d9ecd52a8c1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "c", "]"}], 
  ";"}], "\[IndentingNewLine]", "b"}], "Input",
 CellChangeTimes->{{3.939875265844535*^9, 3.939875268510831*^9}},
 CellLabel->"In[813]:=",
 CellID->1790145031,ExpressionUUID->"ad5643ed-da18-4116-97bc-893e3fdfc2cd"],

Cell[BoxData["c"], "Output",
 CellChangeTimes->{3.939875268825221*^9},
 CellLabel->"Out[814]=",
 CellID->695982837,ExpressionUUID->"e5a97bab-147b-4331-9713-fb8222239f94"]
}, Open  ]],

Cell["\<\
What happened at the moment of the function call is that first, <b> evaluated \
to <c>, and then <c> was passed and subsequently modified, because it did not \
have any rule associated with it (if it had, then the r.h.s of this rule \
would be passed to the function or be evaluated further). Let us now repeat \
the first experiment again:\
\>", "Text",
 CellChangeTimes->{{3.939875300038109*^9, 3.9398753207420053`*^9}, {
  3.939947094221401*^9, 3.939947094244252*^9}, {3.9400177054404163`*^9, 
  3.940017705458997*^9}},
 CellID->40116250,ExpressionUUID->"869c0d22-b91e-468f-bc11-61e766f4c671"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "a", "]"}]}], "Input",
 CellChangeTimes->{{3.939875322363446*^9, 3.939875325826146*^9}},
 CellLabel->"In[815]:=",
 CellID->1215433189,ExpressionUUID->"ba576c00-d5a9-440f-bffc-44f1d0680e67"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.939875326213231*^9},
 CellLabel->"Out[816]=",
 CellID->1938098432,ExpressionUUID->"ab92b3a1-8a12-439a-9b03-e6debe8b9d4d"]
}, Open  ]],

Cell["And call again:", "Text",
 CellChangeTimes->{3.939875342756531*^9, 3.939931390171256*^9},
 CellID->588388928,ExpressionUUID->"5afe0f82-e201-4b60-a67c-16468ecc062d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.939875343976819*^9, 3.9398753443388567`*^9}},
 CellLabel->"In[817]:=",
 CellID->337259506,ExpressionUUID->"018bed85-eaa3-4825-b460-15257bcbab05"],

Cell[BoxData[
 TemplateBox[{
  "Set", "setraw", 
   "\"Cannot assign to raw object \\!\\(\\*RowBox[{\\\"5\\\"}]\\).\"", 2, 817,
    42, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939875344689431*^9},
 CellLabel->"During evaluation of In[817]:=",
 CellID->32585283,ExpressionUUID->"d26f389c-a969-47fb-94ee-589f5045fd37"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.9398753447106752`*^9},
 CellLabel->"Out[817]=",
 CellID->52521396,ExpressionUUID->"8e239c89-16fd-4be9-9f89-a351fe547808"]
}, Open  ]],

Cell["\<\
The point is that after the first call, the symbol <a> received a value <5>, \
to which it evaluated before being passed to the function. The function then \
attempted to assign 5 to 5, which does not work since the l.h.s. is not an \
L-value.\
\>", "Text",
 CellChangeTimes->{{3.939875362609694*^9, 3.9398753701340313`*^9}, {
  3.9399470942701197`*^9, 3.93994709429235*^9}, {3.940017705478291*^9, 
  3.940017705496862*^9}},
 CellID->744560346,ExpressionUUID->"cc81a49c-b7aa-48d9-978e-b0607ef4ba07"],

Cell["Consider now a different attempt:", "Text",
 CellChangeTimes->{3.9398753764755697`*^9, 3.9399313901925793`*^9},
 CellID->285562538,ExpressionUUID->"48befbc7-3896-496a-84de-badaf9ac81ce"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"2", "a"}], "]"}]}], "Input",
 CellChangeTimes->{{3.93987537841856*^9, 3.939875381251981*^9}},
 CellLabel->"In[818]:=",
 CellID->1342325154,ExpressionUUID->"4b86ad54-7ed0-484c-a80b-2715e0fdc8db"],

Cell[BoxData[
 TemplateBox[{
  "Set", "write", 
   "\"Tag \\!\\(\\*RowBox[{\\\"Times\\\"}]\\) in \\!\\(\\*RowBox[{\\\"2\\\", \
\\\" \\\", \\\"a\\\"}]\\) is Protected.\"", 2, 819, 43, 26587777319895376970, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939875381607731*^9},
 CellLabel->"During evaluation of In[818]:=",
 CellID->956863976,ExpressionUUID->"a65cea39-c1a1-4a17-9358-907bd04b0a5d"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.939875381627408*^9},
 CellLabel->"Out[819]=",
 CellID->1655295896,ExpressionUUID->"2c52e55c-0643-44a4-9b50-752fc3ef318b"]
}, Open  ]],

Cell["\<\
Here, the object passed is <2 a>, which is not an L-value either despite the \
presence of symbolic quantity <a>. It is easy to understand if we use the \
FullForm:\
\>", "Text",
 CellChangeTimes->{{3.939875393170081*^9, 3.939875399354624*^9}, 
   3.939931390214138*^9, {3.93994709431841*^9, 3.939947094340767*^9}, {
   3.940017705516136*^9, 3.94001770553465*^9}, 3.940740644045959*^9},
 CellID->1313446893,ExpressionUUID->"20e6fc17-c005-471f-b2fe-0e4ac589a533"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"2", "a"}], "]"}]], "Input",
 CellChangeTimes->{{3.939875402662655*^9, 3.939875404529415*^9}},
 CellLabel->"In[820]:=",
 CellID->319403704,ExpressionUUID->"cdadc449-7b71-4ed2-ad34-c25ca17cc10b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Times", "[", 
    RowBox[{"2", ",", "a"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.939875404839487*^9},
 CellLabel->"Out[820]//FullForm=",
 CellID->90100112,ExpressionUUID->"5fe2d8aa-cc86-4f24-8c7b-7f1869399bf5"]
}, Open  ]],

Cell["\<\
Therefore, what we really attempted to do was to define a rule for a built-in \
function Times, which is protected against this (if it \
weren\[CloseCurlyQuote]t protected, the input would represent an L-Value, and \
the result of the assignment would be a DownValue rule for the head of the \
input; more on Protected attribute in section 4.9.5).\
\>", "Text",
 CellChangeTimes->{{3.939875412464316*^9, 3.939875426625668*^9}},
 CellID->336611249,ExpressionUUID->"591d2998-3716-4f6d-a46a-b6d95c7cfd10"],

Cell["If we return to the second experiment:", "Text",
 CellChangeTimes->{3.93987543382157*^9, 3.939931390234982*^9},
 CellID->1633734771,ExpressionUUID->"d38a26c9-6604-44ed-bb47-b5045891f959"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"b", ",", "c"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", "c"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "b", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9398754352957163`*^9, 3.9398754406657877`*^9}},
 CellLabel->"In[821]:=",
 CellID->407854853,ExpressionUUID->"ca6a7714-5fc9-4494-95bf-3174cffa6c5d"],

Cell["now we try again:", "Text",
 CellChangeTimes->{3.9398754479981747`*^9, 3.939931390255624*^9},
 CellID->1078460845,ExpressionUUID->"18b40bc3-2bad-40a0-b948-3805a4d36c08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "b", "]"}]], "Input",
 CellChangeTimes->{{3.939875448930135*^9, 3.939875449458475*^9}},
 CellLabel->"In[824]:=",
 CellID->322788367,ExpressionUUID->"afd588eb-b20b-4592-9b9a-bf8758cfd4c7"],

Cell[BoxData[
 TemplateBox[{
  "Set", "setraw", 
   "\"Cannot assign to raw object \\!\\(\\*RowBox[{\\\"5\\\"}]\\).\"", 2, 824,
    44, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9398754499243517`*^9},
 CellLabel->"During evaluation of In[824]:=",
 CellID->417670558,ExpressionUUID->"78b6daa7-1012-430f-8880-0dd946d2b2f4"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.9398754499451637`*^9},
 CellLabel->"Out[824]=",
 CellID->1812509910,ExpressionUUID->"135054af-50db-4286-a4ab-27df6cd88b4c"]
}, Open  ]],

Cell["\<\
We have the same story. The symbol <b> really acts as a middleman which \
simply hands <c> to the function. And the story with <c> is the same as what \
we had for <a> before.\
\>", "Text",
 CellChangeTimes->{{3.939875469721596*^9, 3.9398754724236813`*^9}, {
  3.9399470943664503`*^9, 3.9399470944318*^9}, {3.9400177055539083`*^9, 
  3.940017705609138*^9}},
 CellID->798524675,ExpressionUUID->"7c869b91-3271-4909-ac96-a91997c465fb"],

Cell["Finally, let us consider the following input:", "Text",
 CellChangeTimes->{3.939875481358818*^9},
 CellID->216687089,ExpressionUUID->"0446b75e-cd1d-45dc-859e-6a9ee66ec82a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"h", "[", "a", "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.939875483086554*^9, 3.939875487960442*^9}},
 CellLabel->"In[825]:=",
 CellID->872396781,ExpressionUUID->"5016d511-a6c7-45bc-9ef1-4390cdea8246"],

Cell["Check:", "Text",
 CellChangeTimes->{{3.939875490390213*^9, 3.939875493467268*^9}},
 CellID->671055160,ExpressionUUID->"20b9ca3e-ad7c-40a5-a32a-e332dac6bd70"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.9398754973499737`*^9, 3.9398754980856733`*^9}},
 CellLabel->"In[827]:=",
 CellID->325755355,ExpressionUUID->"2614a4c2-cf32-4eb6-afb0-f1e095224b14"],

Cell[BoxData[
 RowBox[{"h", "[", "5", "]"}]], "Output",
 CellChangeTimes->{3.9398754984709377`*^9},
 CellLabel->"Out[827]=",
 CellID->1015369391,ExpressionUUID->"3e3d81ac-320e-4ee6-ae11-f615c31eb99a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DownValues", "[", "h", "]"}]], "Input",
 CellChangeTimes->{{3.939875506005231*^9, 3.9398755075496264`*^9}},
 CellLabel->"In[828]:=",
 CellID->1804774738,ExpressionUUID->"42316055-62c8-4548-a77a-4e74096dced3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"h", "[", "a", "]"}], "]"}], "\[RuleDelayed]", "5"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.939875507937571*^9},
 CellLabel->"Out[828]=",
 CellID->820485720,ExpressionUUID->"a9579e54-955e-43a2-9162-ee9745e0264f"]
}, Open  ]],

Cell[TextData[{
 "Although we have created a DownValue for <h>, <h> did not really become a \
function in the normal sense, since the l.h.s of the rule does not contain a \
pattern. Rather, we made a definition for a composite symbol <h[a]>, much \
like in our discussion in section ",
 ButtonBox["4.4.3",
  BaseStyle->"Hyperlink",
  ButtonData->"4.4.3"],
 "."
}], "Text",
 CellChangeTimes->{{3.9398755153194838`*^9, 3.9398755227452927`*^9}, {
  3.939875562601053*^9, 3.93987556260913*^9}, {3.9399470944552717`*^9, 
  3.939947094499995*^9}, {3.940017705628183*^9, 3.940017705665592*^9}},
 CellID->910998653,ExpressionUUID->"c9abd5ec-6125-48a5-95b2-07b774b047a3"],

Cell["Illustration: non-standard evaluation", "ItemNumbered",
 CellChangeTimes->{3.939875578604526*^9},
 CellID->736405000,ExpressionUUID->"e157673f-f9dd-4fa7-abaf-0456dbd7b063"],

Cell["\<\
Now we will modify our function to have a Hold attribute, which will mean \
that it will receive whatever argument we pass, in unevaluated form:\
\>", "Text",
 CellChangeTimes->{{3.9399290928971233`*^9, 3.939929100696314*^9}, 
   3.939931390277133*^9},
 CellID->1295853170,ExpressionUUID->"9ed50c40-949e-43b8-8d47-4cd182ff0c68"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "ff", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"ff", ",", "HoldFirst"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ff", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "=", "5"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939929106645885*^9, 3.939929122361239*^9}},
 CellLabel->"In[829]:=",
 CellID->75817266,ExpressionUUID->"8cdca424-d0df-42fd-86c4-91e00915a5b1"],

Cell["We try now:", "Text",
 CellChangeTimes->{{3.939929125074807*^9, 3.9399291268173018`*^9}},
 CellID->1571500011,ExpressionUUID->"3768d5fd-4b60-417f-ae34-4dca23d85eaa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ff", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", "a"}], "Input",\

 CellChangeTimes->{{3.939929128644231*^9, 3.9399291366036673`*^9}},
 CellLabel->"In[834]:=",
 CellID->1402113760,ExpressionUUID->"a1334728-fba9-4140-bd91-ef5ee14b6896"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.939929136956839*^9},
 CellLabel->"Out[836]=",
 CellID->1274635497,ExpressionUUID->"2f9f6d0d-63cc-45fa-a30b-4b9e79da324c"]
}, Open  ]],

Cell["And the second time:", "Text",
 CellChangeTimes->{{3.93992914733701*^9, 3.939929150501423*^9}},
 CellID->1649419254,ExpressionUUID->"a1683242-df84-4f8e-9d41-bebab7c043aa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ff", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", "a"}], "Input",\

 CellChangeTimes->{{3.93992915117362*^9, 3.9399291533646307`*^9}},
 CellLabel->"In[837]:=",
 CellID->648862473,ExpressionUUID->"a51ddfcd-d81e-4695-9089-ad179a0d9eb6"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.939929153704377*^9},
 CellLabel->"Out[838]=",
 CellID->1558244395,ExpressionUUID->"3cbbc621-d51a-40ef-906e-65c9d19d239f"]
}, Open  ]],

Cell["We can modify <a> and call again:", "Text",
 CellChangeTimes->{3.939929160660091*^9, 3.939931390297657*^9, 
  3.939947094523074*^9, 3.9400177056840477`*^9},
 CellID->850471600,ExpressionUUID->"cfc4a09e-652e-44f6-b6ec-0eb46597b693"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ff", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", "a"}], "Input",\

 CellChangeTimes->{{3.939929162276353*^9, 3.939929166117079*^9}},
 CellLabel->"In[839]:=",
 CellID->306187409,ExpressionUUID->"b5379bd3-851c-4160-8954-fdbaba593f3f"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.939929166468706*^9},
 CellLabel->"Out[841]=",
 CellID->1746067571,ExpressionUUID->"b12a6605-b6b5-469b-ba5d-b8fdd53aa863"]
}, Open  ]],

Cell["\<\
So, the function really does modify the variable which has a global value. \
There is no mystery here: unevaluated simply means that the symbol <a>, \
rather than the r.h.s of the global rule associated with it, is passed to the \
body of the function, and thus modified. The symbol <a> here resembles the \
pointer to a variable in C.\
\>", "Text",
 CellChangeTimes->{{3.939929175181161*^9, 3.939929191179496*^9}, 
   3.939947094546227*^9, 3.940017705702827*^9},
 CellID->1331493814,ExpressionUUID->"04c278a4-049f-4899-a693-3a8e650f712a"],

Cell["How about our second experiment? We try:", "Text",
 CellChangeTimes->{3.9399292017451057`*^9},
 CellID->245512514,ExpressionUUID->"e98d74ca-7a97-4a4b-9ca5-4da371d2a3ce"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"b", ",", "c"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", "c"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ff", "[", "b", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"b", ",", "c"}], "}"}]}], "Input",
 CellChangeTimes->{{3.939929206088374*^9, 3.9399292141204348`*^9}},
 CellLabel->"In[842]:=",
 CellID->113877055,ExpressionUUID->"868b213d-ac09-4d3b-8b05-4aed8d2a7cf0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{3.9399292145404263`*^9},
 CellLabel->"Out[845]=",
 CellID->1932411078,ExpressionUUID->"06c1fbb2-f209-4e2d-9e1a-22eda0aae5d3"]
}, Open  ]],

Cell["\<\
We see that the result is completely different. Now <b> was assigned a value, \
and not <c>. But this had to be expected: unevaluated means in this case that \
the symbol <b>, rather than the r.h.s. of the rule associated with it (<c>), \
was textually substituted in the body of the function and thus modified. In \
particular, the previous definition <b = c> is lost now:\
\>", "Text",
 CellChangeTimes->{{3.93992922249605*^9, 3.939929240527782*^9}, {
   3.9399313903179903`*^9, 3.939931390338513*^9}, {3.939947094569271*^9, 
   3.939947094658152*^9}, {3.940017705721404*^9, 3.9400177057947474`*^9}, 
   3.940740644066753*^9},
 CellID->1637794365,ExpressionUUID->"d46afedd-68ad-4ec0-ac57-4ed6455c988a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "b"}]], "Input",
 CellChangeTimes->{{3.939929244101791*^9, 3.939929244399769*^9}},
 CellLabel->"In[846]:=",
 CellID->2098991006,ExpressionUUID->"b41dd634-6ea5-4865-8607-269169e1ec7d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`b\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"b", "=", "5"}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`b\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{12.5, {1.42974853515625, 11.07025146484375}}],
               True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               
               ImageSizeCache->{
                12.5, {1.42974853515625, 11.07025146484375}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`b\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`b", "Documentation" -> None, 
    "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, $CellContext`b, {$CellContext`b -> 5}], "UpValues" -> None, 
    "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Global`b"|>, False]]], "Output",
 CellChangeTimes->{3.939929244826165*^9},
 CellLabel->"Out[846]=",
 CellID->1735238801,ExpressionUUID->"c20a1a4a-13a0-4b77-8af4-500fd4972c58"]
}, Open  ]],

Cell["\<\
And if we call ff[b] again, nothing will change. Finally, the calls with \
non-Lvalue objects will not work in this case too:\
\>", "Text",
 CellChangeTimes->{{3.9399292546764393`*^9, 3.939929256472835*^9}},
 CellID->1330602147,ExpressionUUID->"3c108f31-442f-4b49-9c2f-ac29559a7126"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ff", "[", 
  RowBox[{"Sin", "[", "c", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.939929264291898*^9, 3.939929266084407*^9}},
 CellLabel->"In[847]:=",
 CellID->119356049,ExpressionUUID->"4af81576-ba55-4264-afcd-232331774296"],

Cell[BoxData[
 TemplateBox[{
  "Set", "write", 
   "\"Tag \\!\\(\\*RowBox[{\\\"Sin\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Sin\\\", \
\\\"[\\\", \\\"c\\\", \\\"]\\\"}]\\) is Protected.\"", 2, 847, 45, 
   26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9399292672818613`*^9},
 CellLabel->"During evaluation of In[847]:=",
 CellID->2052876290,ExpressionUUID->"07a9096d-0a12-45f4-be30-08e54845c53b"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.9399292673067207`*^9},
 CellLabel->"Out[847]=",
 CellID->1219533328,ExpressionUUID->"5e8c603d-5f05-4435-b023-e5da77f6c049"]
}, Open  ]],

Cell["\<\
Finally, let us return to our example with a composite object <h[a]>. It will \
turn out that in this case, the result of action of <ff> will be not so \
innocent, since it may alter a definition of a real function. Let us define a \
function:\
\>", "Text",
 CellChangeTimes->{{3.93992927602945*^9, 3.9399292804618073`*^9}, {
   3.939947094687275*^9, 3.9399470947105637`*^9}, {3.9400177058142033`*^9, 
   3.940017705832752*^9}, 3.940740644089284*^9},
 CellID->1112716728,ExpressionUUID->"17275f02-1fea-4c04-8169-46ed067201c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"h", ",", "a"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "^", "3"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9399292953459053`*^9, 3.939929304144813*^9}},
 CellLabel->"In[848]:=",
 CellID->194623946,ExpressionUUID->"50700547-8fe9-440d-abfa-dcf25867b7b0"],

Cell["Now we perform our manipulations:", "Text",
 CellChangeTimes->{3.939929311406146*^9, 3.939931390359871*^9},
 CellID->572162213,ExpressionUUID->"2be16463-889c-4437-be46-05865a67392e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ff", "[", 
  RowBox[{"h", "[", "a", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.939929312664309*^9, 3.9399293150491962`*^9}},
 CellLabel->"In[850]:=",
 CellID->2055397740,ExpressionUUID->"e006f9af-0d74-40c6-8b3d-fb53a54a3ca6"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.9399293154501457`*^9},
 CellLabel->"Out[851]=",
 CellID->1160696862,ExpressionUUID->"5ceb6b4e-c9fa-41bc-8794-cc4b561cff2d"]
}, Open  ]],

Cell["Let us look at the definitions of <h> now:", "Text",
 CellChangeTimes->{3.939929324335125*^9, 3.93993139038034*^9, 
  3.939947094734294*^9, 3.9400177058512173`*^9},
 CellID->90710286,ExpressionUUID->"5898770c-98c2-4e59-b2a8-b4045fe9fb0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "h"}]], "Input",
 CellChangeTimes->{{3.939929325954533*^9, 3.9399293262084*^9}},
 CellLabel->"In[852]:=",
 CellID->1888569300,ExpressionUUID->"0aacfac1-5d7f-44a6-bc69-4b209815c366"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`h\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"h", "[", "5", "]"}], "=", "5"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"h", "[", "x_", "]"}], ":=", 
                    SuperscriptBox["x", "3"]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`h\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{12.5, {1.42974853515625, 11.07025146484375}}],
               True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               
               ImageSizeCache->{
                12.5, {1.42974853515625, 11.07025146484375}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`h\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`h", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`h, {$CellContext`h[5] -> 5, $CellContext`h[
         Pattern[$CellContext`x, 
          Blank[]]] :> $CellContext`x^3}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`h"|>, 
   False]]], "Output",
 CellChangeTimes->{3.939929326488482*^9},
 CellLabel->"Out[852]=",
 CellID->1270400374,ExpressionUUID->"33d95a18-1731-4bf7-b1b5-0423740c283d"]
}, Open  ]],

Cell[TextData[{
 "We did not cover it yet, but a function in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can have multiple definitions. What happened in this case is that a new \
specific definition has been added on the particular argument of <h> (5) , as \
a result of action of <ff>. You may wonder how comes that <a> inside <h> \
evaluated to <5> when we know that the argument is passed unevaluated to \
<ff>. In brief, <a> evaluated inside <h> before <ff> had any chance to \
\[OpenCurlyDoubleQuote]look\[CloseCurlyDoubleQuote] at the argument, because \
the question of whether or not <a> should be evaluated is decided by \
attributes of <h>, not <ff>. Had <h> have one of the Hold attributes, and <a> \
would not evaluate."
}], "Text",
 CellChangeTimes->{{3.939929335908065*^9, 3.9399293578757133`*^9}, {
  3.9399470947607403`*^9, 3.939947095032009*^9}, {3.940017705870248*^9, 
  3.940017706072563*^9}, {3.9407406441110573`*^9, 3.940740644130282*^9}},
 CellID->280674639,ExpressionUUID->"e2dd51a6-9742-431e-9c8d-d230a85b2134"],

Cell[TextData[{
 "Anyway, returning to the result, this is one good reason why it may become \
necessary to protect functions - while not many people will explicitly \
introduce erroneous rules for a function definition, they may sneak in as \
results of operations such as the one above. This is also one of the reasons \
why the programming style based on assignments, side effects and in-place \
modifications is not the preferred one in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " programming - in a complex system such as ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", with many more ways of doing things, this may result in all sorts of \
subtle bugs."
}], "Text",
 CellChangeTimes->{{3.939929379069364*^9, 3.939929401888673*^9}},
 CellID->1445029806,ExpressionUUID->"41bce59f-ca56-46ff-b64b-a2de5afe6b0a"],

Cell["Summary", "ItemNumbered",
 CellChangeTimes->{3.939929410020522*^9},
 CellID->2074329913,ExpressionUUID->"1ce41045-ce13-472c-a91e-248bade80963"],

Cell["\<\
So, to summarize: parameter passing is always in effect done by value through \
textual substitution, but the two circumstances make a variety of different \
behavior possible: first, symbols may be present in the system without any \
value attached to them, and second, the function may evaluate the argument \
(s) in standard or non-standard way. Whether or not the passed objects can be \
modified depends on whether they represent L-values at the moment of textual \
substitution, and it is completely equivalent to \
\[OpenCurlyDoubleQuote]hard-code\[CloseCurlyDoubleQuote] them in the form \
they have at this moment into the r.h.s and ask the same question for the \
resulting code.\
\>", "Text",
 CellChangeTimes->{{3.939929451059375*^9, 3.939929467677429*^9}, {
  3.9399296697209883`*^9, 3.939929670334339*^9}},
 CellID->1013322393,ExpressionUUID->"aa6a918b-ab03-4d3d-bf7e-00edb3e76296"],

Cell[TextData[{
 "This material can be somewhat unclear because we did not yet discuss in \
enough detail matters such as non-standard evaluation, Hold attributes and \
local variables. I recommend to revisit it after those topics are understood. \
There is nothing overly complicated in the parameter passing in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " really, and on the other hand this topic is very important to understand."
}], "Text",
 CellChangeTimes->{{3.9399296822042313`*^9, 3.939929698922901*^9}},
 CellID->48652285,ExpressionUUID->"76d56cea-09c8-4c3e-b585-990eb38af18a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function calls: prefix and postfix syntax", "Subsubsection",
 CellChangeTimes->{3.9399297110348063`*^9},
 CellID->2004949258,ExpressionUUID->"f6f7cba7-c2cc-4ac3-bdff-1aee634933bd"],

Cell["\<\
Apart from the standard way to apply a function to some expression, there \
exist two more short-hand forms for a function of a single argument: prefix \
and postfix notation. In the prefix notation, the special symbol <@> is used, \
while in the postfix notation, the double slash is used: <//>. For example:\
\>", "Text",
 CellChangeTimes->{{3.9399297172908897`*^9, 3.939929734625799*^9}, {
   3.939931390401154*^9, 3.939931390421417*^9}, 3.940740644149487*^9},
 CellID->1016274129,ExpressionUUID->"a3c47fca-898e-4674-85ae-2a2f8fbc28a1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "7", "]"}], ",", 
   RowBox[{"f", "@", "7"}], ",", 
   RowBox[{"7", "//", "f"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.939929736859881*^9, 3.939929755953743*^9}},
 CellLabel->"In[853]:=",
 CellID->1812868006,ExpressionUUID->"b9d68679-9fc8-4111-97cc-97029f265faa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"49", ",", "49", ",", "49"}], "}"}]], "Output",
 CellChangeTimes->{3.939929756925214*^9},
 CellLabel->"Out[855]=",
 CellID->1537446661,ExpressionUUID->"f3a7ac84-e66b-4e63-867c-43dbcf57d0fa"]
}, Open  ]],

Cell["\<\
The prefix form is convenient to remove extra square brackets when there is a \
piece of code with deeply nested function calls, like here:\
\>", "Text",
 CellChangeTimes->{{3.939929766686541*^9, 3.9399297701452837`*^9}, 
   3.939931390441854*^9},
 CellID->1342790723,ExpressionUUID->"649cc0ab-cafc-4e2c-a2e9-12984fbf7acb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", "2", "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "@", 
    RowBox[{"f", "@", 
     RowBox[{"f", "@", 
      RowBox[{"f", "@", "2"}]}]}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939929777095601*^9, 3.9399297990654783`*^9}},
 CellLabel->"In[856]:=",
 CellID->535869860,ExpressionUUID->"9764eaa5-144b-4b54-88ba-5704148db44a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"65536", ",", "65536"}], "}"}]], "Output",
 CellChangeTimes->{3.93992979935505*^9},
 CellLabel->"Out[856]=",
 CellID->717962706,ExpressionUUID->"ce1eaf15-1c7a-4bf5-9287-1f7893b37a02"]
}, Open  ]],

Cell["\<\
The postfix notation is convenient when we want to apply some operation which \
is conceptually less important than the code it encloses, such as Timing \
measurements or rendering a matrix into a Matrix-Form. In this way, it does \
not interfere with the main code when we read it:\
\>", "Text",
 CellChangeTimes->{{3.9399298083835163`*^9, 3.939929818343293*^9}},
 CellID->1974984769,ExpressionUUID->"b42afecc-17af-45bb-ac6a-44fa7593db8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IdentityMatrix", "[", "3", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.939929833986746*^9, 3.939929838907913*^9}},
 CellLabel->"In[857]:=",
 CellID->1525847843,ExpressionUUID->"d8757e71-d8e4-471f-ad25-c890541d536a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"0", "1", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.939929839257203*^9},
 CellLabel->"Out[857]//MatrixForm=",
 CellID->1689043800,ExpressionUUID->"fc656a8c-9c22-4e58-b74e-83e5d8b2c791"]
}, Open  ]],

Cell["\<\
Another reason to use the postfix notation is that the order in which the \
function calls are appearing corresponds to the order in which the \
transformations are applied to input, and this may make the code more \
readable in some cases.\
\>", "Text",
 CellChangeTimes->{{3.939929846324717*^9, 3.939929854157949*^9}},
 CellID->172816907,ExpressionUUID->"b1585042-c787-468e-a0ee-831b0e92cb6e"],

Cell["\<\
One has to be careful with both prefix and postfix forms due to precedence \
however, as the following examples illustrate:\
\>", "Text",
 CellChangeTimes->{{3.939929976711544*^9, 3.93992997837493*^9}},
 CellID->1491393233,ExpressionUUID->"43d1cb44-18ca-4e44-8954-b10eb42f6ba6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "@", "x"}], "-", "y"}], ",", 
   RowBox[{
    RowBox[{"f", "@", "x"}], "^", "y"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939929981676598*^9, 3.939929988124014*^9}},
 CellLabel->"In[858]:=",
 CellID->139993473,ExpressionUUID->"81284bb1-a912-4705-85ba-c9b85dcdad87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "-", "y"}], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["x", "2"], ")"}], "y"]}], "}"}]], "Output",
 CellChangeTimes->{3.9399299890125113`*^9},
 CellLabel->"Out[858]=",
 CellID->1059005102,ExpressionUUID->"1e0871d3-1395-44d0-9003-e442944da816"]
}, Open  ]],

Cell["\<\
In these cases, the result is such because the precedence of the subtraction \
or even Power operator is lower than that of the function call in the prefix \
notation. We have to use parentheses:\
\>", "Text",
 CellChangeTimes->{{3.939929997752057*^9, 3.9399300002907457`*^9}, 
   3.939931390462393*^9},
 CellID->1570530450,ExpressionUUID->"25eed20b-1acc-4f7e-aee9-67e4a297e108"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "@", 
    RowBox[{"(", 
     RowBox[{"x", "-", "y"}], ")"}]}], ",", 
   RowBox[{"f", "@", 
    RowBox[{"(", 
     RowBox[{"x", "^", "y"}], ")"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939930005860507*^9, 3.93993001486937*^9}},
 CellLabel->"In[859]:=",
 CellID->176725394,ExpressionUUID->"a333dd82-b803-4208-835c-153346131f37"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "-", "y"}], ")"}], "2"], ",", 
   SuperscriptBox["x", 
    RowBox[{"2", " ", "y"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.9399300152646437`*^9},
 CellLabel->"Out[859]=",
 CellID->570522883,ExpressionUUID->"1b8bef24-c178-479c-a0e2-7758ae8808ea"]
}, Open  ]],

Cell["Another example", "Text",
 CellChangeTimes->{3.939930024243924*^9},
 CellID->263610726,ExpressionUUID->"ed0bbc0c-4d64-4020-a51e-e34efd73e98b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matr", "=", 
  RowBox[{
   RowBox[{"IdentityMatrix", "[", "3", "]"}], "//", "MatrixForm"}]}]], "Input",\

 CellChangeTimes->{{3.939930025987092*^9, 3.939930031494073*^9}},
 CellLabel->"In[860]:=",
 CellID->1779950937,ExpressionUUID->"1cec7003-26bf-4b36-9752-1bddca32b44b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"0", "1", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9399300321697903`*^9},
 CellLabel->"Out[860]//MatrixForm=",
 CellID->1309498539,ExpressionUUID->"9713247c-7ace-4b87-b4fc-525150df35c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "matr", "]"}]], "Input",
 CellChangeTimes->{{3.939930037208037*^9, 3.9399300390934553`*^9}},
 CellLabel->"In[861]:=",
 CellID->852052184,ExpressionUUID->"2fa9cbab-4d54-4c60-9f4d-3cf0daccfd6d"],

Cell[BoxData[
 RowBox[{"Det", "[", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0", "0"},
      {"0", "1", "0"},
      {"0", "0", "1"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "]"}]], "Output",
 CellChangeTimes->{3.9399300394790363`*^9},
 CellLabel->"Out[861]=",
 CellID->1489864006,ExpressionUUID->"2a0970c6-1407-4f5c-bb64-e3e514c46a60"]
}, Open  ]],

Cell["\<\
The determinant has not been computed because the <matr> variable stores not \
just the matrix, but the matrix wrapped in a MatrixForm. This can be verified \
by looking at the FullForm:\
\>", "Text",
 CellChangeTimes->{{3.9399300492560873`*^9, 3.939930056088668*^9}, 
   3.93993139048283*^9},
 CellID->485024822,ExpressionUUID->"9ab99d36-17b2-4e22-8aab-dddb4282c399"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", "matr", "]"}]], "Input",
 CellChangeTimes->{{3.939930058536558*^9, 3.939930061092001*^9}},
 CellLabel->"In[862]:=",
 CellID->803259504,ExpressionUUID->"dd8ae426-bbcd-4608-865d-88d4aa9e084b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"MatrixForm", "[", 
    RowBox[{"List", "[", 
     RowBox[{
      RowBox[{"List", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
      RowBox[{"List", "[", 
       RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
      RowBox[{"List", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.939930061420527*^9},
 CellLabel->"Out[862]//FullForm=",
 CellID->852088521,ExpressionUUID->"7ca00804-ad9a-42f6-846d-d22d3122c49d"]
}, Open  ]],

Cell["Once again, the parentheses must be used:", "Text",
 CellChangeTimes->{3.939930071469018*^9, 3.9399313905031137`*^9},
 CellID->968974905,ExpressionUUID->"ed3d6e19-8d54-44cc-8f18-3d81604182e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"matr", "=", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ")"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.93993007410708*^9, 3.939930080616459*^9}},
 CellLabel->"In[863]:=",
 CellID->625834100,ExpressionUUID->"830fa27d-a5dd-4f53-850a-c87bb3697098"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"0", "1", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.939930080871893*^9},
 CellLabel->"Out[863]//MatrixForm=",
 CellID->797213182,ExpressionUUID->"247fb12a-c599-46e7-ab8e-1c1e03e886c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "matr", "]"}]], "Input",
 CellChangeTimes->{{3.939930082896446*^9, 3.9399300848793297`*^9}},
 CellLabel->"In[864]:=",
 CellID->1371931592,ExpressionUUID->"5be71c90-d767-4085-ae19-2c0c0573c2e6"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.939930085318468*^9},
 CellLabel->"Out[864]=",
 CellID->1516059575,ExpressionUUID->"7de445cb-5ddd-4afe-934e-6375ef79c2f3"]
}, Open  ]],

Cell["\<\
Because of these precedence - related complications which often result in \
bugs, I would not recommend using these forms if this does not bring obvious \
advantages such as much improved code readability etc. Moreover, they are \
mostly used in interactive sessions and less so in complete stand-alone \
programs.\
\>", "Text",
 CellChangeTimes->{{3.939930095065639*^9, 3.939930104106078*^9}},
 CellID->519805370,ExpressionUUID->"5ebd6d61-4c95-4ef1-9bf2-cde7741f64c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function name conventions", "Subsubsection",
 CellChangeTimes->{3.93993011345601*^9},
 CellID->2115538522,ExpressionUUID->"2a14c8fe-35a2-4cac-8f73-fea8bdb694c5"],

Cell[TextData[{
 "I don\[CloseCurlyQuote] t have much more to say here. Most of the rules \
which apply for variable names (section ",
 ButtonBox["2.2.1",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-2-Elementary-operations.nb", 
     CharacterEncoding -> "UTF-8"], "2.2.1"},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-2-Elementary-operations.nb"],
 ") also hold here. One difference worth mentioning is that a definition such \
as this:"
}], "Text",
 CellChangeTimes->{{3.9399301214163*^9, 3.9399301231572638`*^9}, {
  3.93993016720403*^9, 3.939930167213962*^9}},
 CellID->2116679522,ExpressionUUID->"59123467-7a26-43da-aef8-360b6e348153"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "g", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "1", "]"}], "[", "x_", "]"}], ":=", 
  RowBox[{"x", "^", "3"}]}]}], "Input",
 CellChangeTimes->{{3.939930170463868*^9, 3.93993017913461*^9}},
 CellLabel->"In[865]:=",
 CellID->1304996667,ExpressionUUID->"ef5b37de-a74c-459e-bc19-1e9b898d0201"],

Cell["produces not the DownValue, but a SubValue for g:", "Text",
 CellChangeTimes->{3.939930187727462*^9, 3.939931390523638*^9},
 CellID->204118774,ExpressionUUID->"17bd2992-5428-4a76-a1d8-8628f99419d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"DownValues", "[", "g", "]"}], ",", 
   RowBox[{"SubValues", "[", "g", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.9399301896829147`*^9, 3.939930195773662*^9}},
 CellLabel->"In[867]:=",
 CellID->2135297045,ExpressionUUID->"768176b3-68d9-464a-9b3b-80aff910ee07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{
       RowBox[{"g", "[", "1", "]"}], "[", "x_", "]"}], "]"}], 
     "\[RuleDelayed]", 
     SuperscriptBox["x", "3"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9399301962137117`*^9},
 CellLabel->"Out[867]=",
 CellID->1889344180,ExpressionUUID->"65f5fb62-8527-4eac-8052-e9b29977aa57"]
}, Open  ]],

Cell["\<\
Whether or not to call this object a function is a matter of taste. In my \
definition above (and also below) I restrict functions to DownValues, but \
mostly because I didn\[CloseCurlyQuote]t want to cover the SubValue case - it \
is not too often met in practice. On the other hand, I personally would \
consider the above defined <g> as good a function as any other.\
\>", "Text",
 CellChangeTimes->{{3.939930205002232*^9, 3.939930230931306*^9}, 
   3.9399470950595493`*^9, 3.940017706091065*^9},
 CellID->1514428718,ExpressionUUID->"314b546d-7d2a-44ab-aea4-87cc9691797b"],

Cell["\<\
Perhaps, one more comment - a stylistic one: as I already mentioned, it is a \
good practice to start the names of your symbols with a small letter, to \
avoid possible conflicts with the built-in symbols. But if the name contains \
only small letters, it is rather natural to interpret it as a name of a \
variable. One possibility to distinguish variables from functions is to use \
only lower-case letters for variables and a \[OpenCurlyDoubleQuote]camel \
notation\[CloseCurlyDoubleQuote] for functions - for example, the function to \
sum a list of numbers could be called <sumNumbers>. This is by no means \
standard, but I personally find it convenient, and in particular this is the \
style that I will use throughout the book.\
\>", "Text",
 CellChangeTimes->{{3.939930239832119*^9, 3.9399302813767233`*^9}, 
   3.939947095082604*^9, 3.940017706109323*^9, 3.940740644168939*^9},
 CellID->642871087,ExpressionUUID->"5fcd2d63-ef08-452b-9c07-6f43437cb6b3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples of functions of a single argument", "Subsection",
 CellChangeTimes->{3.939930288595138*^9},
 CellID->907664421,ExpressionUUID->"59cda628-e95a-4334-9b97-98765b117125"],

Cell[TextData[{
 "All built-in functions (or commands) in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " are functions in the sense described above: all of them have a format \
fname[arg1,...,argn] (caveat: sometimes, the symbol <fname> here may be not a \
symbol, but a normal expression itself, like for instance for an expression \
Derivative[1][f][x], which represents a first derivative of the function <f> \
with respect to the variable <x>, the <fname> symbol will actually be \
Derivative[1][f]. But such cases are not very frequent, and also represent no \
problems - they result in definitions stored in SubValues rather than \
DownValues)."
}], "Text",
 CellChangeTimes->{{3.939930295346959*^9, 3.939930323103456*^9}},
 CellID->1539579106,ExpressionUUID->"b858c466-5b17-4c8c-b787-827d5101196d"],

Cell[TextData[{
 "The rules associated with the built-in functions can not normally be read - \
they are \[OpenCurlyDoubleQuote]wired in\[CloseCurlyDoubleQuote] the kernel \
(some of the externally-defined rules can be read, but they are also \
\[OpenCurlyDoubleQuote]hidden\[CloseCurlyDoubleQuote] by default). However, \
the way built-in functions work can be significantly altered by the user, \
since it is possible to redefine them and associate new rules with them, \
which will take precedence over the system-defined rules. All these\n\
techniques are not normally needed, fairly advanced and assume high level of \
competence with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". I mention these possibilities here just to illustrate the consistency of \
the whole approach. In principle, the built-in functions are not too \
different from the user-defined ones. They are just faster (being implemented \
in lower-level language like C), and already interconnected by a large base \
of global rules built\ninto the system."
}], "Text",
 CellChangeTimes->{{3.939931267504987*^9, 3.939931310482518*^9}},
 CellID->616646470,ExpressionUUID->"6810d6ac-5426-43c2-a56a-5a1db7895b4b"],

Cell["\<\
Let us now give some examples of functions of a single argument.\
\>", "Text",
 CellChangeTimes->{3.93993131876882*^9},
 CellID->1652328134,ExpressionUUID->"69005d8f-8f3e-4cf2-bf84-f11f4cb754f5"],

Cell[CellGroupData[{

Cell["Example: Integer part of a number", "Subsubsection",
 CellChangeTimes->{3.9399313274373627`*^9},
 CellID->1567908781,ExpressionUUID->"f82d6289-90d4-4517-a5a9-f4ea01d870c6"],

Cell[TextData[{
 "Such a function exists in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", but we may define our own:"
}], "Text",
 CellChangeTimes->{{3.939931335347032*^9, 3.939931338532032*^9}},
 CellID->71049930,ExpressionUUID->"1b6461f4-e8d8-4cff-a9a8-39f6234b4dd8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"IntegerPart", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "Pi", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"3", "/", "2"}], "]"}], ",", 
   RowBox[{"f", "[", "1", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.939931342703813*^9, 3.939931366215604*^9}},
 CellLabel->"In[868]:=",
 CellID->1374232320,ExpressionUUID->"8faa27ef-4b21-41b2-a62a-16dbedacf8fe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.939931366627191*^9},
 CellLabel->"Out[870]=",
 CellID->47804105,ExpressionUUID->"5829da13-f89c-4b3a-b9b9-14d7fb9c2aba"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["What we will not call a function definition", "Subsubsection",
 CellChangeTimes->{3.939931530247439*^9},
 CellTags->"4.5.2",
 CellID->1774520151,ExpressionUUID->"74efea8e-ed6f-4f85-a7cb-62316ce9eee1"],

Cell["There is an alternative way of doing so:", "Text",
 CellChangeTimes->{3.9399315384024677`*^9, 3.940017740441967*^9},
 CellID->107288321,ExpressionUUID->"ba4f2bd6-a402-4bf2-986e-086493e57609"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "g", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", "IntegerPart"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", "Pi", "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"3", "/", "2"}], "]"}], ",", 
   RowBox[{"g", "[", "1", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.939931539984593*^9, 3.939931563819297*^9}},
 CellLabel->"In[871]:=",
 CellID->940456133,ExpressionUUID->"c5754ae0-5646-4ab4-ad04-785ff310fa7a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.9399315643051157`*^9},
 CellLabel->"Out[873]=",
 CellID->2099284235,ExpressionUUID->"be96cc8f-1be7-45b2-af4c-b0863c43b7f6"]
}, Open  ]],

Cell["\<\
The definitions such as a last one are not what we will call the definition \
of a function. Although the behavior of <f> and <g> look the same, there are \
subtle differences in how they are evaluated, which matter sometimes. For \
example, there are no DownValues associated with <g>:\
\>", "Text",
 CellChangeTimes->{{3.9399315740827627`*^9, 3.93993158328686*^9}, 
   3.939947095106799*^9, 3.9400177061277933`*^9, 3.940017740462495*^9},
 CellID->1661301082,ExpressionUUID->"c141b288-ccab-441e-b4f4-84715b54528a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DownValues", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.939931586872324*^9, 3.9399315888647223`*^9}},
 CellLabel->"In[874]:=",
 CellID->345092253,ExpressionUUID->"df2d956b-d260-40af-83fd-c2a60d6b6297"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.939931589236209*^9},
 CellLabel->"Out[874]=",
 CellID->2042592355,ExpressionUUID->"968fb31b-f414-4ced-99e3-2f213b4059a8"]
}, Open  ]],

Cell["But rather, <g> has an OwnValue:", "Text",
 CellChangeTimes->{3.939931598550499*^9, 3.940017740481234*^9},
 CellID->176129543,ExpressionUUID->"8e6b6efe-08f5-4e2f-a92a-a1da2296512f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OwnValues", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.939931600163083*^9, 3.939931601344524*^9}},
 CellLabel->"In[875]:=",
 CellID->1101415777,ExpressionUUID->"185c7e0f-3c3c-43b7-b5bd-0aec81194ef6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"HoldPattern", "[", "g", "]"}], "\[RuleDelayed]", "IntegerPart"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.939931601697023*^9},
 CellLabel->"Out[875]=",
 CellID->513349099,ExpressionUUID->"27915a88-8e3f-46b4-8b37-399c3eb0133e"]
}, Open  ]],

Cell["\<\
Although is most cases you will get what you want also by the second method, \
my advice is to avoid it until you get a good understanding of the evaluation \
process and the differences in evaluation induced by the differences in these \
two methods.\
\>", "Text",
 CellChangeTimes->{{3.9399316103893223`*^9, 3.9399316175171432`*^9}},
 CellID->1416496894,ExpressionUUID->"7ee985c9-f7d2-4d61-9d24-1c8843d27cdd"],

Cell["\<\
As an example where in fact the second method is more appropriate than the \
straightforwardly implemented first one, consider a built-in Increment \
function which has a side effect of incrementing a value of the input \
variable by 1:\
\>", "Text",
 CellChangeTimes->{{3.9399316254434147`*^9, 3.9399316372541*^9}},
 CellID->2102673885,ExpressionUUID->"86c2f10e-fbc8-4e46-8142-264894209de9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Increment", "[", "a", "]"}], 
  ";"}], "\[IndentingNewLine]", "a"}], "Input",
 CellChangeTimes->{{3.9399316393735857`*^9, 3.93993165052988*^9}},
 CellLabel->"In[876]:=",
 CellID->744118639,ExpressionUUID->"676e85e8-87f2-4bc6-a7db-f763f9e8dc34"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.939931650857829*^9},
 CellLabel->"Out[879]=",
 CellID->932914461,ExpressionUUID->"bf8f5f07-28f9-44ca-a966-503b76a7408e"]
}, Open  ]],

Cell["We now define our version of an increment function:", "Text",
 CellChangeTimes->{3.939931657889193*^9, 3.940017740500256*^9},
 CellID->715239280,ExpressionUUID->"391df451-e0f7-4228-94ac-83f838dd115a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ourInc", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ourInc", "[", "x_", "]"}], ":=", 
   RowBox[{"Increment", "[", "x", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9399316628208857`*^9, 3.939931674260892*^9}},
 CellLabel->"In[880]:=",
 CellID->1899042896,ExpressionUUID->"ddab5d5f-6624-4147-b3cb-d32fe245b0bb"],

Cell["Everything seems fine before we try it:", "Text",
 CellChangeTimes->{3.9399316827897053`*^9, 3.940017740519486*^9},
 CellID->595366960,ExpressionUUID->"59ac4bc1-3035-42a4-b222-87f45811f911"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ourInc", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.939931684869437*^9, 3.939931686217761*^9}},
 CellLabel->"In[882]:=",
 CellID->111499349,ExpressionUUID->"42183b23-44cd-4edb-a494-39cacb6aba20"],

Cell[BoxData[
 TemplateBox[{
  "Increment", "rvalue", 
   "\"\\!\\(\\*RowBox[{\\\"6\\\"}]\\) is not a variable with a value, so its \
value cannot be changed.\"", 2, 882, 47, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939931686650503*^9},
 CellLabel->"During evaluation of In[882]:=",
 CellID->2105107103,ExpressionUUID->"1bd19467-9d99-4878-baa4-05b56e81349c"],

Cell[BoxData[
 RowBox[{"6", "++"}]], "Output",
 CellChangeTimes->{3.939931686670931*^9},
 CellLabel->"Out[882]=",
 CellID->741995796,ExpressionUUID->"1a1b10ae-8c9a-40df-8793-1792f20d4e6e"]
}, Open  ]],

Cell["But if we define our function as", "Text",
 CellChangeTimes->{3.939931697642755*^9},
 CellID->285805243,ExpressionUUID->"02781395-7514-4734-b707-0d1a0b81331c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ourInc1", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ourInc1", "=", "Increment"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9399317002112513`*^9, 3.9399317093491697`*^9}},
 CellLabel->"In[883]:=",
 CellID->1082203224,ExpressionUUID->"67b049b2-8b33-4cc6-a795-03f7df90891b"],

Cell["Then:", "Text",
 CellChangeTimes->{{3.9399317127536697`*^9, 3.939931713745804*^9}},
 CellID->1566538805,ExpressionUUID->"4cb9d37f-d9bf-4e4d-9914-177e0b475fab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ourInc1", "[", "a", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.9399317151706676`*^9, 3.939931718316378*^9}},
 CellLabel->"In[885]:=",
 CellID->535010021,ExpressionUUID->"85fea1c3-7325-4b43-9cdc-d7243dd5bab3"],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.939931723435855*^9},
 CellLabel->"In[886]:=",
 CellID->148825905,ExpressionUUID->"1a4fc672-9b2f-463b-b1cd-a16a7e981bd3"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.939931723788493*^9},
 CellLabel->"Out[886]=",
 CellID->1929497750,ExpressionUUID->"ad775f99-1942-4c9c-a913-f319c9d025c9"]
}, Open  ]],

Cell[TextData[{
 "It works fine. We will save the detailed discussion of these issues for \
later chapters. Despite this example, in most cases the first method is the \
one to use, and in any case, the second one should not be really thought of \
as a method for defining a function. The closest analog I can think of is to \
create one more pointer to an already defined function in C - but this is not \
really a function definition. Let me just add that the above functionality of \
the Increment function can be also achieved with the first method employed \
with some modification (the code was actually given in Chapter 2, section ",
 ButtonBox["2.5.5",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-2-Elementary-operations.nb", 
     CharacterEncoding -> "UTF-8"], "2.5.5"},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-2-Elementary-operations.nb"],
 ")."
}], "Text",
 CellChangeTimes->{{3.939931735530545*^9, 3.9399317620747023`*^9}, {
  3.939931803082375*^9, 3.939931803092246*^9}},
 CellID->2065614550,ExpressionUUID->"5a2ea4f6-ba90-43f9-bb6a-46fe02aa1b9a"],

Cell["\<\
We may now give a more formal distinction between what we will or will not \
consider a function definition (this is conventional): we will say that the \
function with a name <f> is defined if the list of global rules returned by \
the DownValues[f] command is not empty.\
\>", "Text",
 CellChangeTimes->{{3.939931813000985*^9, 3.939931822206501*^9}, 
   3.939947095132452*^9, 3.9400177061470757`*^9, 3.940017740539341*^9},
 CellID->774786183,ExpressionUUID->"d887c55a-4299-4ab2-a835-15f1d87fb4f6"],

Cell["\<\
This definition is somewhat restrictive since it excludes for instance \
functions defined by SubValues and UpValues, but if you have real reasons to \
be uncomfortable with it, you perhaps shouldn\[CloseCurlyQuote]t be reading \
this book (it takes a lot of experience to appreciate the cases missed by \
this definition).\
\>", "Text",
 CellChangeTimes->{{3.939931831118449*^9, 3.93993184196074*^9}},
 CellID->1708766547,ExpressionUUID->"84dc4d70-5221-4804-81bb-f2fa2b366c68"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: some trigonometric function", "Subsubsection",
 CellChangeTimes->{3.939931871473728*^9},
 CellID->1623026380,ExpressionUUID->"70de6487-f80a-4643-bb46-a66c4cc35c63"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"Sin", "[", 
    RowBox[{"Cos", "[", 
     RowBox[{"Exp", "[", "x", "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939931873450755*^9, 3.939931887606529*^9}},
 CellLabel->"In[887]:=",
 CellID->264591520,ExpressionUUID->"a3d22941-7fd2-4ee9-a9e5-f9d568209bfb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "1.", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939931890492825*^9, 3.939931893618595*^9}},
 CellLabel->"In[889]:=",
 CellID->1029213165,ExpressionUUID->"e64422c8-934f-4a10-8d19-df01d7971be8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"Cos", "[", "\[ExponentialE]", "]"}], "]"}], ",", 
   RowBox[{"-", "0.7905667351815867`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939931894005855*^9},
 CellLabel->"Out[889]=",
 CellID->1310503409,ExpressionUUID->"bb8bab1c-cdf7-4a33-8ad4-ac187dd12b9e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: a function to reverse a string of symbols", "Subsubsection",
 CellChangeTimes->{3.9399319028160553`*^9},
 CellID->1038511431,ExpressionUUID->"4309f065-275f-4f4b-b39d-5baf0dd37ab4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_String", "]"}], ":=", 
   RowBox[{"StringReverse", "[", "x", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939931925370799*^9, 3.939931937137088*^9}},
 CellLabel->"In[890]:=",
 CellID->1278041407,ExpressionUUID->"533a009d-bccd-4453-bd87-8a58c717273b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "\"\<madam I am Adam\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.93993194147619*^9, 3.939931946217031*^9}},
 CellLabel->"In[892]:=",
 CellID->1344800995,ExpressionUUID->"a2b63df0-f181-41d7-bf64-bbc0c05e5d3f"],

Cell[BoxData["\<\"madA ma I madam\"\>"], "Output",
 CellChangeTimes->{3.9399319468055773`*^9},
 CellLabel->"Out[892]=",
 CellID->1978356133,ExpressionUUID->"d625d6b1-5720-4d4c-82a5-21b36519a17c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: A function of function", "Subsubsection",
 CellChangeTimes->{3.939931957405698*^9},
 CellID->841845767,ExpressionUUID->"c5e67af3-03cf-4a84-b302-02f9b672fff9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "g"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"g", "[", "x_", "]"}], "]"}], ":=", 
   RowBox[{"x", "*", 
    RowBox[{"g", "[", "x", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939931959925095*^9, 3.939931968113366*^9}},
 CellLabel->"In[893]:=",
 CellID->319690073,ExpressionUUID->"5929c564-ca64-4f8d-bf4b-422f932221c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"Sin", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"g", "[", "y", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"g", "[", "elephant", "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939931970742639*^9, 3.939931980848214*^9}},
 CellLabel->"In[895]:=",
 CellID->797652878,ExpressionUUID->"051f1529-4a18-4ba4-a90e-d176d1bfe335"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"Sin", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"y", " ", 
    RowBox[{"g", "[", "y", "]"}]}], ",", 
   RowBox[{"elephant", " ", 
    RowBox[{"g", "[", "elephant", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.93993198130693*^9},
 CellLabel->"Out[895]=",
 CellID->1668225528,ExpressionUUID->"c8539707-1e0b-4cc8-8920-bc294d46dbb0"]
}, Open  ]],

Cell["\<\
This example is rather interesting. Since we did not \
\[OpenCurlyDoubleQuote]attach\[CloseCurlyDoubleQuote] a pattern to <g>, the \
rule will match when inside <f> we have literally <g>. However the argument \
of <g> can be anything, thanks to the pattern \[OpenCurlyDoubleQuote]attached\
\[CloseCurlyDoubleQuote] to the parameter x: <x_> (in expression <x_>, it is \
probably more correct to say that the tag <x> is attached to the pattern <_>, \
since the presence and the form of the pattern plays a more fundamental role \
than the specific name of the input parameter). If we use a pattern (Blank[]) \
also with <g>, then also the function inside <f> can be arbitrary:\
\>", "Text",
 CellChangeTimes->{{3.9399320627369337`*^9, 3.9399320934108458`*^9}, {
   3.9399470951563883`*^9, 3.939947095315206*^9}, {3.94001770616556*^9, 
   3.940017706293784*^9}, 3.94001774055818*^9, 3.940740644189917*^9},
 CellID->319953864,ExpressionUUID->"d4fef4a0-a46b-475c-940f-1c86b73482c1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "g", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"g_", "[", "x_", "]"}], "]"}], ":=", 
   RowBox[{"x", "*", 
    RowBox[{"g", "[", "x", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939932098350816*^9, 3.939932109836524*^9}},
 CellLabel->"In[896]:=",
 CellID->1554710469,ExpressionUUID->"847c9e0f-f639-49b1-9ca2-a67754691591"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"Sin", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"g", "[", "y", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"g", "[", "elephant", "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939932112174068*^9, 3.9399321231691093`*^9}},
 CellLabel->"In[898]:=",
 CellID->1707474881,ExpressionUUID->"cd557ef6-389a-49a3-80ba-f6866d9f996c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", " ", 
    RowBox[{"Sin", "[", "x", "]"}]}], ",", 
   RowBox[{"y", " ", 
    RowBox[{"g", "[", "y", "]"}]}], ",", 
   RowBox[{"elephant", " ", 
    RowBox[{"g", "[", "elephant", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.939932123628743*^9},
 CellLabel->"Out[898]=",
 CellID->1755947026,ExpressionUUID->"99bb6a13-bb8b-498f-b403-a5de2070e749"]
}, Open  ]],

Cell["\<\
The pattern g_[x_] used here will match any expression of the form a[b]. \
Consider a more complicated example:\
\>", "Text",
 CellChangeTimes->{{3.939932131725819*^9, 3.939932133712326*^9}, 
   3.940017740576826*^9},
 CellID->1481388908,ExpressionUUID->"6ecb179b-c9ae-457f-9f8e-96a0d30fbcf7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"h", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", "x_", "]"}], ":=", 
   RowBox[{"1", "/", "x"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.93993213639952*^9, 3.939932142741829*^9}},
 CellLabel->"In[899]:=",
 CellID->269484363,ExpressionUUID->"3708c730-411c-4de5-92f1-be8de6b4347d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"h", "[", "y", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"Unevaluated", "[", 
     RowBox[{"h", "[", "y", "]"}], "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939932145348494*^9, 3.939932157559308*^9}},
 CellLabel->"In[901]:=",
 CellID->1682177651,ExpressionUUID->"8cb642f8-e47f-4bbb-a29e-c1d495dbdc8b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    FractionBox["1", "y"], "]"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.9399321579415903`*^9},
 CellLabel->"Out[901]=",
 CellID->141992976,ExpressionUUID->"e13f6501-93fc-48a5-ad9b-d2f796755d73"]
}, Open  ]],

Cell["\<\
The Unevaluated command will be described in later chapters, but generally it \
forces the expression to be evaluated in a non-standard way (branches before \
leaves) at the particular point where Unevaluated is inserted. So, in the \
first case the evaluation started with the more innermost function h[y], \
which evaluated to 1/y, and it is this expression that the function <f> \
\[OpenCurlyDoubleQuote]saw\[CloseCurlyDoubleQuote]. Since <f> does not have \
any rules associated with an expression 1/something, we got f[1/y] as a \
result. In the second case, the Unevaluated command forced the evaluation to \
start with <f>, and then the function <f> \[OpenCurlyDoubleQuote]saw\
\[CloseCurlyDoubleQuote] the expression h[y]. Since it has a corresponding \
rule, h[y] was replaced by y*h[y]. Then, h[y] was evaluated to 1/y, and then \
the final result was simplified to 1. All this evaluation dynamics that we \
just described can be seen by using the Trace command:\
\>", "Text",
 CellChangeTimes->{{3.9399321983197803`*^9, 3.9399322388278418`*^9}, {
  3.939947095339287*^9, 3.939947095361701*^9}, {3.9400177063124533`*^9, 
  3.94001770633099*^9}},
 CellID->621615815,ExpressionUUID->"abdac175-6e5b-43f4-bd2c-8d6fba64bc25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"h", "[", "y", "]"}], "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"Unevaluated", "[", 
      RowBox[{"h", "[", "y", "]"}], "]"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9399322430158663`*^9, 3.939932255207961*^9}},
 CellLabel->"In[902]:=",
 CellID->611963593,ExpressionUUID->"91aab883-6884-42fa-ad79-22ba801621fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TagBox[
        RowBox[{"h", "[", "y", "]"}],
        HoldForm], ",", 
       TagBox[
        FractionBox["1", "y"],
        HoldForm], ",", 
       TagBox[
        FractionBox["1", "y"],
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{"f", "[", 
       FractionBox["1", "y"], "]"}],
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"f", "[", 
       RowBox[{"h", "[", "y", "]"}], "]"}],
      HoldForm], ",", 
     TagBox[
      RowBox[{"y", " ", 
       RowBox[{"h", "[", "y", "]"}]}],
      HoldForm], ",", 
     RowBox[{"{", 
      RowBox[{
       TagBox[
        RowBox[{"h", "[", "y", "]"}],
        HoldForm], ",", 
       TagBox[
        FractionBox["1", "y"],
        HoldForm], ",", 
       TagBox[
        FractionBox["1", "y"],
        HoldForm]}], "}"}], ",", 
     TagBox[
      FractionBox["y", "y"],
      HoldForm], ",", 
     TagBox[
      FractionBox["y", "y"],
      HoldForm], ",", 
     TagBox["1",
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", 
       FractionBox["1", "y"], "]"}], ",", "1"}], "}"}],
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.9399322556121473`*^9},
 CellLabel->"Out[902]=",
 CellID->2139606244,ExpressionUUID->"bd47176f-bd6a-4fa1-8237-988ff36b4917"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Example: a function which exchanges another function and its argument\
\>", "Subsubsection",
 CellChangeTimes->{3.9399322783608217`*^9},
 CellID->748473893,ExpressionUUID->"847c42ea-1ca2-40ce-9256-bfd9c99c0b35"],

Cell["\<\
Consider another example: a function <f> will take another function <g> of \
argument <x>, g[x], return x[g]:\
\>", "Text",
 CellChangeTimes->{3.939932284499201*^9},
 CellID->1788999172,ExpressionUUID->"64a8c1da-0360-4249-a4f1-63c1ac27fbe5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "g", ",", "h", ",", "x"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"g_", "[", "x_", "]"}], "]"}], ":=", 
   RowBox[{"x", "[", "g", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.93993230271449*^9, 3.93993231450075*^9}},
 CellLabel->"In[903]:=",
 CellID->160708710,ExpressionUUID->"9d667cb0-de8a-4092-8d8e-9c377b5db6de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"g", "[", "h", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"g", "[", "h", "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", "x", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939932315569619*^9, 3.939932324490497*^9}},
 CellLabel->"In[905]:=",
 CellID->1039145612,ExpressionUUID->"66e1f154-d4c0-4e18-9357-8075e74c2c36"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"h", "[", "g", "]"}], ",", 
   RowBox[{"g", "[", "h", "]"}], ",", 
   RowBox[{"f", "[", "x", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939932324862194*^9},
 CellLabel->"Out[905]=",
 CellID->593668196,ExpressionUUID->"e8fe91e6-f5f7-48ae-9707-118904f81ca9"]
}, Open  ]],

Cell["\<\
We see that applied twice, it returns back the original expression in the \
above case, and also that since there was no rule for <f> of an atomic \
argument, it returned just f[x]. However, the behavior may be different if \
there are rules for <g> and <h>:\
\>", "Text",
 CellChangeTimes->{{3.939932372491097*^9, 3.939932381253469*^9}},
 CellID->572346210,ExpressionUUID->"29139436-2e4c-4320-b073-d2b0cda0293a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "g", ",", "h", ",", "x"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"g_", "[", "x_", "]"}], "]"}], ":=", 
   RowBox[{"x", "[", "g", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", "g", "]"}], ":=", "\"\<Changed\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.9399323836833267`*^9, 3.939932401997797*^9}},
 CellLabel->"In[906]:=",
 CellID->1551312572,ExpressionUUID->"ff0184d0-3bc7-4bb9-a745-5adeb3b8fd11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", "h", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"g", "[", "h", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"g", "[", "h", "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", "x", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.9399324029294567`*^9, 3.939932412436618*^9}},
 CellLabel->"In[909]:=",
 CellID->1419720811,ExpressionUUID->"4bb77f8e-b4b4-4d24-8fe1-0a7205f321ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", "h", "]"}], ",", "\<\"Changed\"\>", ",", 
   RowBox[{"f", "[", "\<\"Changed\"\>", "]"}], ",", 
   RowBox[{"f", "[", "x", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939932412771015*^9},
 CellLabel->"Out[909]=",
 CellID->1921471558,ExpressionUUID->"74ee09cf-313c-4676-bbb9-fa1aa3d44527"]
}, Open  ]],

Cell["\<\
In this case, the <f> applied twice will not return the original expression, \
again because it has changed before <f> had any chance to \
\[OpenCurlyDoubleQuote]see\[CloseCurlyDoubleQuote] its original form.\
\>", "Text",
 CellChangeTimes->{{3.939932429467679*^9, 3.939932435632249*^9}, 
   3.939947095385281*^9, 3.940017706349552*^9},
 CellID->313391720,ExpressionUUID->"2baac438-f249-471f-866b-a2df27436ece"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: a recursive factorial function", "Subsubsection",
 CellChangeTimes->{3.93993244220614*^9},
 CellID->1441353389,ExpressionUUID->"4896c83d-60bf-473e-bcfc-4b6cb05288ba"],

Cell[TextData[{
 "Recursive functions are easy to implement in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". Here is for example the recursive factorial function:"
}], "Text",
 CellChangeTimes->{{3.939932449512113*^9, 3.939932453525078*^9}},
 CellID->1210870763,ExpressionUUID->"94f33d09-ca61-4948-8521-8b963678f6be"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "fact", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fact", "[", "0", "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fact", "[", 
    RowBox[{"n_Integer", "?", "Positive"}], "]"}], ":=", 
   RowBox[{"n", "*", 
    RowBox[{"fact", "[", 
     RowBox[{"n", "-", "1"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939932456225259*^9, 3.9399324766235867`*^9}},
 CellLabel->"In[910]:=",
 CellID->28262428,ExpressionUUID->"5649e175-e0cb-4ee2-9354-e71ffb324520"],

Cell["Check:", "Text",
 CellChangeTimes->{{3.939932479656022*^9, 3.939932480764381*^9}},
 CellID->417688398,ExpressionUUID->"7ee1dbc8-b67f-4310-bf85-4e8f2ddb577f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"fact", "[", "0", "]"}], ",", 
   RowBox[{"fact", "[", "5", "]"}], ",", 
   RowBox[{"fact", "[", 
    RowBox[{"-", "2"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939932481815487*^9, 3.939932490510357*^9}},
 CellLabel->"In[913]:=",
 CellID->738811446,ExpressionUUID->"f1f22257-15fb-41ec-b482-2c345a7a0e1c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "120", ",", 
   RowBox[{"fact", "[", 
    RowBox[{"-", "2"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.93993249092852*^9},
 CellLabel->"Out[913]=",
 CellID->1285307189,ExpressionUUID->"575bbc8c-07b4-4b02-ac63-ab11e256606a"]
}, Open  ]],

Cell["\<\
This example illustrates several points. First, it is possible for a function \
to have more than one definition on different arguments. In this case we had \
a separate definition for the base of the recursion, which can be checked \
also by looking at DownValues of <fact>:\
\>", "Text",
 CellChangeTimes->{{3.939932501188547*^9, 3.939932509054844*^9}, 
   3.93994709540891*^9, 3.9400177063682327`*^9, 3.940017740595487*^9, 
   3.940740644209022*^9},
 CellID->619920350,ExpressionUUID->"9194cecb-e06e-431e-a9ee-67734d051376"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DownValues", "[", "fact", "]"}]], "Input",
 CellChangeTimes->{{3.9399325122216263`*^9, 3.939932515009254*^9}},
 CellLabel->"In[914]:=",
 CellID->612215456,ExpressionUUID->"67d0cb8f-a5bb-4671-84f4-d2fb90b36c8d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"fact", "[", "0", "]"}], "]"}], "\[RuleDelayed]", "1"}], ",", 
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"fact", "[", 
      RowBox[{"n_Integer", "?", "Positive"}], "]"}], "]"}], "\[RuleDelayed]", 
    
    RowBox[{"n", " ", 
     RowBox[{"fact", "[", 
      RowBox[{"n", "-", "1"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.939932515391857*^9},
 CellLabel->"Out[914]=",
 CellID->883586892,ExpressionUUID->"7d5b87e8-1bf6-4c50-9899-cadd76b3b5b2"]
}, Open  ]],

Cell["We see that two rules are present, not one.", "Text",
 CellChangeTimes->{3.939932523710609*^9},
 CellID->595474839,ExpressionUUID->"0ddbb588-6ab9-4b26-b8a4-aa30cc10b7f6"],

Cell["\<\
Next, we see that by using a more complicated pattern (n_Integer?Positive in \
this case), we implemented a type-check, since the potentially dangerous \
input fact[-2] did not evaluate.\
\>", "Text",
 CellChangeTimes->{{3.939932534322598*^9, 3.939932538677848*^9}},
 CellID->871824053,ExpressionUUID->"cd8afcb1-3e60-4e06-95ed-44dc4ddae57d"],

Cell["\<\
In the next sections, we will consider both aspects in more details: the \
patterns and rules associated with them, and functions with multiple \
definitions.\
\>", "Text",
 CellChangeTimes->{{3.9399325451223583`*^9, 3.93993255034696*^9}},
 CellID->1249042068,ExpressionUUID->"132833ad-ecac-4171-ae30-2064334582a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Infinite iteration and recursion traps", "Subsubsection",
 CellChangeTimes->{3.939932556597074*^9},
 CellID->1981024122,ExpressionUUID->"2adad933-2781-4856-b142-01b9ccae7c4f"],

Cell[TextData[{
 "In fact, in the symbolic rule-based environment like ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", it is very easy to fall into an infinite recursion, for example like this \
(I have temporarily reduced the value of the system variable which controls \
the maximal iteration length, to its lower limit, but I would not recommend \
to try this if you have any unsaved results in your ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " session)."
}], "Text",
 CellChangeTimes->{{3.9399325637246523`*^9, 3.9399325771412897`*^9}},
 CellID->485955366,ExpressionUUID->"82d19daa-5dd5-4100-9761-1e41513ce29b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "g", ",", "h", ",", "x"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"g", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "x_", "]"}], ":=", 
   RowBox[{"f", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", "x_", "]"}], ":=", 
   RowBox[{"h", "[", "x", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939932579452629*^9, 3.939932596787321*^9}},
 CellLabel->"In[915]:=",
 CellID->1556513504,ExpressionUUID->"63770e37-806d-4132-b982-a05ea544f689"],

Cell["Now observe:", "Text",
 CellChangeTimes->{{3.939932599820828*^9, 3.939932601830168*^9}},
 CellID->2135525723,ExpressionUUID->"334a2066-be8d-4f40-ac08-042a4094d44d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$IterationLimit", "=", "20"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"f", "[", "x", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939932607515398*^9, 3.939932621852058*^9}},
 CellLabel->"In[919]:=",
 CellID->1444306290,ExpressionUUID->"f047ee1a-580f-48ac-a99f-e6644a288e8e"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit", "itlim", 
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"20\\\"}]\\) exceeded.\"", 2, 
   919, 48, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939932622366597*^9},
 CellLabel->"During evaluation of In[919]:=",
 CellID->2025917506,ExpressionUUID->"35c22ed8-a84d-4fc7-8ba8-0a1da970ca15"],

Cell[BoxData[
 RowBox[{"TerminatedEvaluation", "[", "\<\"IterationLimit\"\>", 
  "]"}]], "Output",
 CellChangeTimes->{3.939932622387591*^9},
 CellLabel->"Out[919]=",
 CellID->1242300157,ExpressionUUID->"ea431846-88bc-4d6f-b554-6be75aa211f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$IterationLimit", "=", "20"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"h", "[", "x", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9399326381641893`*^9, 3.9399326485961857`*^9}},
 CellLabel->"In[920]:=",
 CellID->1850461235,ExpressionUUID->"ce2b6a32-69a8-4c0c-bcd8-6486060c59fb"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit", "itlim", 
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"20\\\"}]\\) exceeded.\"", 2, 
   920, 49, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9399326489643784`*^9},
 CellLabel->"During evaluation of In[920]:=",
 CellID->1404765171,ExpressionUUID->"99f82bfd-cd34-4108-ab9d-a176afa2cc78"],

Cell[BoxData[
 RowBox[{"TerminatedEvaluation", "[", "\<\"IterationLimit\"\>", 
  "]"}]], "Output",
 CellChangeTimes->{3.9399326489906797`*^9},
 CellLabel->"Out[920]=",
 CellID->453013879,ExpressionUUID->"c6b342a9-e774-4b7e-963c-b3ff01bb36ab"]
}, Open  ]],

Cell[TextData[{
 "It is interesting that the above pathological function definitions result \
not in an infinite recursion (which would be the case in more traditional \
languages), but in infinite iteration. While I don\[CloseCurlyQuote]t have an \
authoritative answer for why this is so, my guess is that this is probably \
due to the tail recursion being optimized in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " (for tail-recursive functions, the recursion stack is not maintained since \
the result (recursive call) is always the last thing computed in such \
functions)."
}], "Text",
 CellChangeTimes->{{3.939932659208918*^9, 3.939932697726633*^9}},
 CellID->974735738,ExpressionUUID->"56adaa1b-8c5f-4cc7-b0bf-f98dc20cf9ca"],

Cell["\<\
The following example is much more dangerous, and I don\[CloseCurlyQuote] t \
recommend to run it - just be aware of this kind of pitfalls.\
\>", "Text",
 CellChangeTimes->{{3.939932705833808*^9, 3.939932709229659*^9}},
 CellID->732661238,ExpressionUUID->"fc5a66a0-ca80-40fa-b510-448562010406"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", "x", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9399327139744463`*^9, 3.9399327212894287`*^9}},
 CellLabel->"In[921]:=",
 CellID->1715414064,ExpressionUUID->"ab0acb7f-7080-4f9e-bd51-d410e1d92fe1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"$RecursionLimit", "=", "20"}], ",", 
     RowBox[{"$IterationLimit", "=", "20"}]}], "}"}], ",", 
   RowBox[{"f", "[", "x", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939932723346066*^9, 3.939932759137484*^9}},
 CellLabel->"In[924]:=",
 CellID->1681719544,ExpressionUUID->"f0ceb044-05b1-4a5a-bb44-e54e3913cba2"],

Cell[BoxData[
 TemplateBox[{
  "$RecursionLimit", "reclim", 
   "\"Recursion depth of \\!\\(\\*RowBox[{\\\"20\\\"}]\\) exceeded.\"", 2, 
   924, 51, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.93993274158392*^9, 3.939932759479787*^9}},
 CellLabel->"During evaluation of In[924]:=",
 CellID->2042084576,ExpressionUUID->"d6cd8669-bf13-43e2-939b-74352b89f0ab"],

Cell[BoxData[
 RowBox[{"TerminatedEvaluation", "[", "\<\"RecursionLimit\"\>", 
  "]"}]], "Output",
 CellChangeTimes->{{3.939932741603918*^9, 3.93993275950422*^9}},
 CellLabel->"Out[924]=",
 CellID->231822478,ExpressionUUID->"5fb64091-724e-4e7d-91cd-25304101ad50"]
}, Open  ]],

Cell[TextData[{
 "Here I had to manually abort the execution. Notice that here both infinite \
recursion and iteration took place, and even by limiting the corresponding \
\[OpenCurlyDoubleQuote]safety\[CloseCurlyDoubleQuote] system variables did \
not help much. In some of the cases similar to this one, one may need to kill \
the kernel and thus may loose all the unsaved results in a given ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " session."
}], "Text",
 CellChangeTimes->{{3.939932768549283*^9, 3.939932775243598*^9}},
 CellID->373884153,ExpressionUUID->"ce3b7c8a-66b6-451b-be4f-4b6aa2c3c3e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["An esoteric example: a self-destructive printing function", \
"Subsubsection",
 CellChangeTimes->{3.939932782865979*^9},
 CellID->209459322,ExpressionUUID->"ffa066fe-d611-4ab3-8faf-a74dee8f91f9"],

Cell[TextData[{
 "The following example will be rather extreme, and I am giving it to show \
that many things which are not possible in the more traditional programming \
environments, are possible in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". This example is a variation of the technique due to Michael Trott."
}], "Text",
 CellChangeTimes->{{3.939932788381586*^9, 3.939932797024756*^9}},
 CellID->657127421,ExpressionUUID->"4e06bd4c-9c94-4c00-855b-1925667f8f3e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "x", ",", "y", ",", "z"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Clear", "[", "f", "]"}], ";", 
     RowBox[{"Print", "[", "x", "]"}]}], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.93993280263657*^9, 3.939932817756686*^9}},
 CellLabel->"In[925]:=",
 CellID->713321052,ExpressionUUID->"e16855c1-4417-4cf4-95da-68d9404cc4da"],

Cell["We check now:", "Text",
 CellChangeTimes->{{3.939932820592187*^9, 3.939932822484581*^9}},
 CellID->627314569,ExpressionUUID->"515fa774-caac-4308-9225-36c3e5559216"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"DownValues", "[", "f", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "z", "]"}]}], "Input",
 CellChangeTimes->{{3.93993282666696*^9, 3.939932837870236*^9}},
 CellLabel->"In[928]:=",
 CellID->784105753,ExpressionUUID->"dc972577-9bbb-4334-9eb5-34680a3e2566"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"f", "[", "x_", "]"}], "]"}], "\[RuleDelayed]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Clear", "[", "f", "]"}], ";", 
     RowBox[{"Print", "[", "x", "]"}]}], ")"}]}], "}"}]], "Print",
 CellChangeTimes->{3.939932838345907*^9},
 CellLabel->"During evaluation of In[928]:=",
 CellID->717951194,ExpressionUUID->"4b29efd1-fbce-4b93-8e65-2037da302aaf"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.939932838369433*^9},
 CellLabel->"During evaluation of In[928]:=",
 CellID->2042588712,ExpressionUUID->"fb86ddac-2e00-48f2-a115-4fa68e51c432"]
}, Open  ]]
}, Open  ]],

Cell["And again:", "Text",
 CellChangeTimes->{{3.939932849483138*^9, 3.9399328511175222`*^9}},
 CellID->114901642,ExpressionUUID->"10cbe558-cc09-405e-a5e2-9be8ef6a00f1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"DownValues", "[", "f", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "z", "]"}]}], "Input",
 CellLabel->"In[930]:=",
 CellID->573401340,ExpressionUUID->"7221a804-8947-417b-8de2-3f38d0101d4d"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Print",
 CellChangeTimes->{3.939932858443469*^9},
 CellLabel->"During evaluation of In[930]:=",
 CellID->553543532,ExpressionUUID->"5b52c96f-55ed-411d-b772-f77a3a321ea2"],

Cell[BoxData[
 RowBox[{"f", "[", "5", "]"}]], "Output",
 CellChangeTimes->{3.939932858463922*^9},
 CellLabel->"Out[931]=",
 CellID->506983520,ExpressionUUID->"4061878d-382f-4f66-9565-11fb6456062b"]
}, Open  ]],

Cell["\<\
What happened is that, once called, the function printed its argument, but \
also destroyed its own definition (deleted the rule associated with itself in \
the global rule base). When we called it second time, it did not have any \
rules associated with it any more, and thus returned \
\[OpenCurlyDoubleQuote]unevaluated\[CloseCurlyDoubleQuote]. This would not \
change had we used it in a loop without user interruption:\
\>", "Text",
 CellChangeTimes->{{3.9399328680669613`*^9, 3.939932879438775*^9}},
 CellID->1804392991,ExpressionUUID->"e6d7f067-f69f-40ba-880d-198d30b1ef1c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "x", ",", "y", ",", "z"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Clear", "[", "f", "]"}], ";", 
     RowBox[{"Print", "[", "x", "]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"f", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9399328976363173`*^9, 3.9399329171778507`*^9}},
 CellLabel->"In[932]:=",
 CellID->1080344262,ExpressionUUID->"ecada2b8-710e-4816-ad94-dabdd3693460"],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.939932917637054*^9},
 CellLabel->"During evaluation of In[932]:=",
 CellID->1664043935,ExpressionUUID->"31b3fdbf-f507-46ab-bb14-58ef2c9d5d21"]
}, Open  ]],

Cell["\<\
Only the first value was printed, since the function\[CloseCurlyQuote]s \
definition disappeared after that.\
\>", "Text",
 CellChangeTimes->{3.939932925872147*^9},
 CellID->906880664,ExpressionUUID->"9667501b-f67a-435f-9d10-6f109276c7c1"],

Cell["\<\
This behavior is possible only because the delayed assignment (SetDelayed) \
was used in a function definition. This technique (or trick) can be quite \
useful is some cases, and also can be generalized, but this is outside of the \
scope of our present discussion.\
\>", "Text",
 CellChangeTimes->{{3.939932932650934*^9, 3.939932944029518*^9}},
 CellID->1251877089,ExpressionUUID->"ba18e6a5-6204-4536-9f83-560ecc2801e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mathematical functions and programming functions", "Subsubsection",
 CellChangeTimes->{3.939932953053132*^9},
 CellID->674665640,ExpressionUUID->"3146ebfb-a785-4970-8bd5-8e27bbaa7fd0"],

Cell[TextData[{
 "The symbolic and rule-based nature of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " removes the distinction between mathematical functions and functions in \
the sense of programming - the logically complete blocks of functionality. \
This may be quite confusing at the beginning, since we are used to the idea \
that these two types of functions are very different. As an illustration, we \
will now consider a function which will be a function in both senses\nat the \
same time:"
}], "Text",
 CellChangeTimes->{{3.9399329600401363`*^9, 3.939932978920204*^9}, 
   3.9400177406151667`*^9},
 CellID->391755320,ExpressionUUID->"9884e578-9e79-4e00-8088-0e835dcb76a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Sin", "[", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<This is a Sine function\>\"", "]"}], ";", 
    "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.939932985068922*^9, 3.939932998911715*^9}},
 CellLabel->"In[935]:=",
 CellID->844943952,ExpressionUUID->"811dc5e6-193d-428c-92d2-6a6e1cd54932"],

Cell["Now some examples:", "Text",
 CellChangeTimes->{{3.9399330039098997`*^9, 3.9399330066396*^9}},
 CellID->265683610,ExpressionUUID->"6a4e9ece-0546-40a9-875c-47640f11f858"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.939933007583208*^9, 3.9399330082883577`*^9}},
 CellLabel->"In[937]:=",
 CellID->1460037810,ExpressionUUID->"b4df8da5-4cef-404d-9a39-2f0e3879afce"],

Cell[BoxData["\<\"This is a Sine function\"\>"], "Print",
 CellChangeTimes->{3.939933008705955*^9},
 CellLabel->"During evaluation of In[937]:=",
 CellID->1902341890,ExpressionUUID->"008407a4-7fff-4022-b7b2-ee0f735c7bae"],

Cell[BoxData[
 RowBox[{"Sin", "[", "5", "]"}]], "Output",
 CellChangeTimes->{3.939933008728795*^9},
 CellLabel->"Out[937]=",
 CellID->923608694,ExpressionUUID->"c96d811e-4c0a-4345-bc84-1dd4e2361bcb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "Pi", "]"}]], "Input",
 CellChangeTimes->{{3.939933020858939*^9, 3.939933021621415*^9}},
 CellLabel->"In[938]:=",
 CellID->1543092538,ExpressionUUID->"91cb243f-bccb-4155-aa3e-c1c955f73099"],

Cell[BoxData["\<\"This is a Sine function\"\>"], "Print",
 CellChangeTimes->{3.939933021850061*^9},
 CellLabel->"During evaluation of In[938]:=",
 CellID->501753860,ExpressionUUID->"25dec604-a4e8-41c6-a13f-1ae138fbf63e"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.939933021867958*^9},
 CellLabel->"Out[938]=",
 CellID->1956326898,ExpressionUUID->"2d38ce52-aa83-441b-ae88-511549706124"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.939933037856339*^9, 3.939933039651314*^9}},
 CellLabel->"In[939]:=",
 CellID->102867891,ExpressionUUID->"f5f29441-40f1-4851-abb6-67acda307c0a"],

Cell[BoxData["\<\"This is a Sine function\"\>"], "Print",
 CellChangeTimes->{3.939933040034507*^9},
 CellLabel->"During evaluation of In[939]:=",
 CellID->1600952913,ExpressionUUID->"132e8984-00d7-46ba-8ac6-65c37ed83eaa"],

Cell[BoxData[
 RowBox[{"Cos", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.939933040054833*^9},
 CellLabel->"Out[939]=",
 CellID->1392995528,ExpressionUUID->"2da8e000-5c57-4d72-8c4a-0dcaba7ecad4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "==", "0"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.939933042071615*^9, 3.939933046190571*^9}},
 CellLabel->"In[940]:=",
 CellID->1388223622,ExpressionUUID->"6e596dd6-8966-411b-a6fc-931f53ec7360"],

Cell[BoxData["\<\"This is a Sine function\"\>"], "Print",
 CellChangeTimes->{3.9399330465287523`*^9},
 CellLabel->"During evaluation of In[940]:=",
 CellID->1279934989,ExpressionUUID->"d7f88b0c-f03b-4e14-bddb-26f0e743d7fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     TemplateBox[{
       RowBox[{"2", " ", "\[Pi]", " ", 
         TemplateBox[{"1"}, "C"]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     TemplateBox[{
       RowBox[{"\[Pi]", "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9399330465490294`*^9},
 CellLabel->"Out[940]=",
 CellID->523668124,ExpressionUUID->"3bedb388-6a10-45a7-9225-2607a245336b"]
}, Open  ]],

Cell[TextData[{
 "So, the distinction is really in our head. For ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", it does not matter - both mathematical and programming functions at the \
end result just in some chains of rule applications."
}], "Text",
 CellChangeTimes->{{3.939933071557641*^9, 3.939933079334443*^9}},
 CellID->902174662,ExpressionUUID->"3da681b5-39f5-417e-8b79-c987b31c4cf4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions of several variables", "Subsection",
 CellChangeTimes->{3.939933094457849*^9},
 CellID->1198915665,ExpressionUUID->"3ee283e2-c15f-4b1d-ae99-7a35ffd97773"],

Cell["\<\
So far, we considered in detail only functions of single argument. We will \
now consider functions of several variables.\
\>", "Text",
 CellChangeTimes->{{3.939933099676124*^9, 3.93993310167992*^9}},
 CellID->336521854,ExpressionUUID->"20a4bce0-e81b-4d56-9496-42556102106b"],

Cell[CellGroupData[{

Cell["Starting examples and a definition", "Subsubsection",
 CellChangeTimes->{3.939933109610737*^9},
 CellID->723696666,ExpressionUUID->"2626316d-aa8f-4668-a4f8-5738826d45b2"],

Cell["\<\
Since we can define functions to work on lists, one way to define a function \
of several arguments is to define a function on a list of arguments. For \
example, if we need a function which raises one number to the power given by \
another number, we can do it as follows:\
\>", "Text",
 CellChangeTimes->{{3.939933120063209*^9, 3.939933131675848*^9}, 
   3.940017740634388*^9},
 CellID->1969972501,ExpressionUUID->"21bd3006-9f11-4b4b-a791-ef1a44daf06b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_List", "]"}], ":=", 
   RowBox[{"Power", "[", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"x", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9399331354165*^9, 3.939933148836955*^9}},
 CellLabel->"In[941]:=",
 CellID->1007636549,ExpressionUUID->"1c39e50c-8cb2-4857-a230-0812bf122345"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"5", ",", "2"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"10", ",", "3"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939933150086422*^9, 3.939933171053555*^9}},
 CellLabel->"In[943]:=",
 CellID->1655156150,ExpressionUUID->"169c17f1-021b-4661-a426-d7130d9e92fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "25", ",", "1000", ",", 
   RowBox[{"f", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9399331714934187`*^9},
 CellLabel->"Out[943]=",
 CellID->791467692,ExpressionUUID->"08b69366-b597-4e3d-a15a-e1d628cde78f"]
}, Open  ]],

Cell["\<\
In the last case the function did not evaluate, since its argument was not a \
list. This definition is however unsatisfactory for many reasons. First of \
all, the list of arguments in such a definition is non-uniform, since the \
first element gives the base while the second gives the power. This is not a \
good programming style and often leads to bugs in more complicated cases \
(There is nothing wrong in mixing elements of different types in a single \
list, but there should be more compelling reasons to do so). The second \
problem is that we have to impose an additional constraint that the length of \
the list is exactly two, otherwise we will get either errors or unexpected \
results:\
\>", "Text",
 CellChangeTimes->{{3.939933180969851*^9, 3.939933208000054*^9}},
 CellID->683789926,ExpressionUUID->"ff116bce-67e7-4471-8b98-ce2066f1dc2c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", "1", "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.9399332266448917`*^9, 3.939933232689933*^9}},
 CellLabel->"In[944]:=",
 CellID->981252767,ExpressionUUID->"f80134f0-af7f-4fab-b467-5d2854a48fdf"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"1\\\", \\\"}\\\"}]\\) does not exist.\"", 2, 944, 52, 
   26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939933233115326*^9},
 CellLabel->"During evaluation of In[944]:=",
 CellID->1077251683,ExpressionUUID->"1cee753f-5138-43b8-9aeb-166f2031c2f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{3.9399332331374273`*^9},
 CellLabel->"Out[944]=",
 CellID->2081891971,ExpressionUUID->"3af65b6d-cee6-4d2e-94ce-217d966bbca5"]
}, Open  ]],

Cell["Let us redefine:", "Text",
 CellChangeTimes->{3.939933249743902*^9, 3.94001774065382*^9},
 CellID->1407296026,ExpressionUUID->"d6c85c3b-b5d8-46e4-8224-abdc42d7c3f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_List", "/;", 
     RowBox[{
      RowBox[{"Length", "[", "x", "]"}], "==", "2"}]}], "]"}], ":=", 
   RowBox[{"Power", "[", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"x", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939933251602281*^9, 3.9399332740576153`*^9}},
 CellLabel->"In[945]:=",
 CellID->1122506392,ExpressionUUID->"ae847350-acc2-4822-8d2f-8d319a075069"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", "1", "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939933275422883*^9, 3.939933286173319*^9}},
 CellLabel->"In[947]:=",
 CellID->1509586313,ExpressionUUID->"29ad3e3a-1e59-4949-b25d-e01651072444"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", "1", "}"}], "]"}], ",", "81", ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939933286607266*^9},
 CellLabel->"Out[947]=",
 CellID->528880911,ExpressionUUID->"d7d72b40-5469-4fc9-a10a-387f9e623be5"]
}, Open  ]],

Cell["\<\
As a somewhat better alternative, we may define a function as follows:\
\>", "Text",
 CellChangeTimes->{3.9399332945930634`*^9},
 CellID->1875829843,ExpressionUUID->"1191c8dd-f9bf-4327-822d-d9d14c094ed9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"base_", ",", "power_"}], "}"}], "]"}], ":=", 
   RowBox[{"Power", "[", 
    RowBox[{"base", ",", "power"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939933296996616*^9, 3.939933311422811*^9}},
 CellLabel->"In[948]:=",
 CellID->1033289231,ExpressionUUID->"8119233e-6372-4292-bd64-8bd735005529"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", "1", "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}], "]"}]}], "}"}]], "Input",
 CellLabel->"In[950]:=",
 CellID->75151898,ExpressionUUID->"246daa86-f1f8-47b1-b33a-489f897baad2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", "1", "}"}], "]"}], ",", "81", ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9399333192073803`*^9},
 CellLabel->"Out[950]=",
 CellID->218738976,ExpressionUUID->"ac9e1257-b60d-4dcd-a2b8-a582c6086b2c"]
}, Open  ]],

Cell["\<\
This is not a bad way to do it, but then still there is no real necessity to \
combine arguments in a list.\
\>", "Text",
 CellChangeTimes->{3.939933325839004*^9},
 CellID->2001449615,ExpressionUUID->"910fe586-9ced-4171-ac4e-7745c438c889"],

Cell[TextData[{
 StyleBox["Let us now make a definition:",
  FontWeight->"Bold"],
 " the basic way to define a function of two argument is given by a \
construction f[x_, y_]:= r.h.s."
}], "Text",
 CellChangeTimes->{{3.9399333381303387`*^9, 3.9399333532698107`*^9}, {
  3.9400177406726227`*^9, 3.940017740691247*^9}},
 CellID->179832697,ExpressionUUID->"4c1d63b1-53a1-4a5a-8b31-6f6c129cfec5"],

Cell["For example:", "Text",
 CellChangeTimes->{{3.9399333381303387`*^9, 3.9399333467217493`*^9}, 
   3.940017740709683*^9},
 CellID->2057046207,ExpressionUUID->"c2cc5340-57be-4e58-8d71-d0d2d0ff2658"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Power", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939933358666568*^9, 3.939933367166103*^9}},
 CellLabel->"In[951]:=",
 CellID->380254267,ExpressionUUID->"c4e1763d-2b13-40a7-b159-50a3a54a5bed"],

Cell["Le us see:", "Text",
 CellChangeTimes->{{3.939933371685993*^9, 3.939933373350216*^9}},
 CellID->1879030538,ExpressionUUID->"6e235612-7a76-4a73-a64b-bf4196182482"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"5", ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1.5", ",", "2.0"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"E", ",", "Pi"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.9399333752701674`*^9, 3.93993339227748*^9}},
 CellLabel->"In[953]:=",
 CellID->561082781,ExpressionUUID->"13ff3cbb-a8a3-46d1-bcf8-360903b308ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", "8", ",", "25", ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", "16807", ",", "2.25`", ",", 
   SuperscriptBox["\[ExponentialE]", "\[Pi]"]}], "}"}]], "Output",
 CellChangeTimes->{3.939933392596719*^9},
 CellLabel->"Out[953]=",
 CellID->454452275,ExpressionUUID->"c8a52080-9e73-433d-9252-55f832422606"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Putting constraints on the arguments", "Subsubsection",
 CellChangeTimes->{3.939933403046071*^9},
 CellID->1527537193,ExpressionUUID->"3afed456-ba2b-4ec7-8501-3aef3cdce0d0"],

Cell[TextData[{
 "When defining functions, one can get much more from patterns by using \
constrained patterns (section ",
 ButtonBox["4.2.6",
  BaseStyle->"Hyperlink",
  ButtonData->"4.2.6"],
 "). This allows to perform even rather complex argument checks as a part of \
the function definition on the left-hand side, rather than relegate the \
argument checks to the body of the function. This in turn leads to a much \
more readable and less error-prone code."
}], "Text",
 CellChangeTimes->{{3.939933410931341*^9, 3.939933425528102*^9}, {
  3.939933470834762*^9, 3.939933470844543*^9}},
 CellID->187744649,ExpressionUUID->"99d7100a-a336-4854-a0c1-cef1249c2d62"],

Cell["Constraints on separate arguments", "ItemNumbered",
 CellChangeTimes->{3.9399334800961113`*^9},
 CellID->372718511,ExpressionUUID->"374a55b3-f3a2-4d8e-ab61-00160d0d30a1"],

Cell["\<\
We can impose some additional constraints on function arguments, using \
conditional patterns. For instance, we may require that our function works \
only on integers:\
\>", "Text",
 CellChangeTimes->{{3.9399334879849586`*^9, 3.93993349123934*^9}},
 CellID->70216078,ExpressionUUID->"52cf2ed3-14f9-4b28-bb88-7b394b124d02"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_Integer", ",", "y_Integer"}], "]"}], ":=", 
   RowBox[{"Power", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939933495632189*^9, 3.939933507823985*^9}},
 CellLabel->"In[954]:=",
 CellID->516387320,ExpressionUUID->"ff8edc89-607b-4d41-8f39-4765426d1da1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"5", ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1.5", ",", "2.0"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"E", ",", "Pi"}], "]"}]}], "}"}]], "Input",
 CellLabel->"In[956]:=",
 CellID->1075443448,ExpressionUUID->"c9360f7b-c499-4d10-b273-4bc4685d6761"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", "8", ",", "25", ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", "16807", ",", 
   RowBox[{"f", "[", 
    RowBox[{"1.5`", ",", "2.`"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"\[ExponentialE]", ",", "\[Pi]"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9399335145505543`*^9},
 CellLabel->"Out[956]=",
 CellID->61369633,ExpressionUUID->"b0de0b3e-440c-4540-99f9-7d4d8c241260"]
}, Open  ]],

Cell["\<\
We can make a weaker restriction and let our function work on any numbers:\
\>", "Text",
 CellChangeTimes->{3.93993352280338*^9, 3.94001774072827*^9},
 CellID->1786081182,ExpressionUUID->"fd7fc5ed-8d8a-4224-b75b-956d9e997e62"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"x_", "?", "NumberQ"}], ",", 
     RowBox[{"y_", "?", "NumberQ"}]}], "]"}], ":=", 
   RowBox[{"Power", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939933524987438*^9, 3.939933539531624*^9}},
 CellLabel->"In[957]:=",
 CellID->267172622,ExpressionUUID->"ddee79ea-7cac-4312-8ce3-5a0535eba2a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"5", ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1.5", ",", "2.0"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"E", ",", "Pi"}], "]"}]}], "}"}]], "Input",
 CellLabel->"In[959]:=",
 CellID->409216556,ExpressionUUID->"2b6de69b-cc18-45db-a4a3-7d7bd155f476"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", "8", ",", "25", ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", "16807", ",", "2.25`", ",", 
   RowBox[{"f", "[", 
    RowBox[{"\[ExponentialE]", ",", "\[Pi]"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939933544395137*^9},
 CellLabel->"Out[959]=",
 CellID->1382811659,ExpressionUUID->"c610a9be-94ae-43b0-99c2-20a64e970143"]
}, Open  ]],

Cell["\<\
We see that it did not evaluate on \[Pi], \[Epsilon]. This is because the \
predicate NumberQ gives True only on explicit numbers. If we use a weaker yet \
predicate NumericQ (which gives True on any quantity on which the application \
of N command produces a number), we get:\
\>", "Text",
 CellChangeTimes->{{3.939933554799664*^9, 3.939933579288287*^9}},
 CellID->847524979,ExpressionUUID->"83144904-8887-40f9-8651-d1ba38a7c36d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"x_", "?", "NumericQ"}], ",", 
     RowBox[{"y_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{"Power", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9399335934283943`*^9, 3.939933600544098*^9}},
 CellLabel->"In[960]:=",
 CellID->1102969779,ExpressionUUID->"bcc150fb-0195-4ef5-b2ff-7d4148623687"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"5", ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1.5", ",", "2.0"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"E", ",", "Pi"}], "]"}]}], "}"}]], "Input",
 CellLabel->"In[962]:=",
 CellID->1785980644,ExpressionUUID->"96a0329a-4f79-404b-ab00-41f0f8198519"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", "8", ",", "25", ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", "16807", ",", "2.25`", ",", 
   SuperscriptBox["\[ExponentialE]", "\[Pi]"]}], "}"}]], "Output",
 CellChangeTimes->{3.939933606802785*^9},
 CellLabel->"Out[962]=",
 CellID->2026608099,ExpressionUUID->"3fac1074-2695-4204-8bf2-8ca85c571fed"]
}, Open  ]],

Cell["\<\
Of course, the conditions imposed on the arguments can be different for each \
argument. We can, for example, limit the base to be in the interval from 1 to \
3:\
\>", "Text",
 CellChangeTimes->{{3.9399336149839983`*^9, 3.9399336173872623`*^9}},
 CellID->2111678473,ExpressionUUID->"bac7aa50-a25c-47f2-b29c-8a50e3f6dba3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"x_", "/;", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"NumericQ", "[", "x", "]"}], "&&", 
        RowBox[{"1", "<=", "x", "<=", "3"}]}], ")"}]}], ",", 
     RowBox[{"y_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{"Power", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9399336219030247`*^9, 3.939933651520569*^9}},
 CellLabel->"In[963]:=",
 CellID->2069059205,ExpressionUUID->"782fa358-c322-4d28-86b0-e91525fd19ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"5", ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1.5", ",", "2.0"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"E", ",", "Pi"}], "]"}]}], "}"}]], "Input",
 CellLabel->"In[965]:=",
 CellID->662265144,ExpressionUUID->"bb25f8d9-9952-4648-96fd-d080e0d3cf97"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", "8", ",", 
   RowBox[{"f", "[", 
    RowBox[{"5", ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"7", ",", "5"}], "]"}], ",", "2.25`", ",", 
   SuperscriptBox["\[ExponentialE]", "\[Pi]"]}], "}"}]], "Output",
 CellChangeTimes->{3.9399336575614147`*^9},
 CellLabel->"Out[965]=",
 CellID->1096634163,ExpressionUUID->"cfad32d4-1e81-403b-becb-5ff586bd12bf"]
}, Open  ]],

Cell["\<\
Now the function evaluated non-trivially on the second, next to last and last \
expressions in the list.\
\>", "Text",
 CellChangeTimes->{3.9399336660902443`*^9},
 CellID->1425718987,ExpressionUUID->"21fb7331-438c-43df-a9b3-8ea09a0b0f7d"],

Cell["Constraints that mix the function arguments", "ItemNumbered",
 CellChangeTimes->{3.939933676594652*^9},
 CellID->436481283,ExpressionUUID->"4e454e2f-88a3-46dc-be4c-863f0a9cc73b"],

Cell[TextData[{
 "One can also impose more general constraints which will depend on both \
arguments. But in this case, the constraint has to be placed outside of the \
function parameters sequence, otherwise the function may not perform \
correctly (because it may use global values instead of those passed to the \
function, for some parameters. For a more detailed discussion of these \
issues, see ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Help or ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Book).\nLet us, for instance, define a function of 2 arguments, which will \
subtract the second from the first, but only if the first is equal to the \
square of the second:"
}], "Text",
 CellChangeTimes->{{3.9399336857731457`*^9, 3.939933702454056*^9}},
 CellID->136785229,ExpressionUUID->"4b686dd9-a591-4bdc-8f49-3c1fc603c251"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"g", ",", "a", ",", "b"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{"x", "==", 
      RowBox[{"y", "^", "2"}]}], ")"}]}], ":=", 
   RowBox[{"x", "-", "y"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939933707628523*^9, 3.939933722653882*^9}},
 CellLabel->"In[966]:=",
 CellID->926076409,ExpressionUUID->"d4005706-4c01-4fa4-9374-97328ac3bc89"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"9", ",", "3"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{
     RowBox[{"a", "^", "2"}], ",", "a"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.9399337243535757`*^9, 3.9399337341722927`*^9}},
 CellLabel->"In[968]:=",
 CellID->1337617144,ExpressionUUID->"02ffc914-be8a-4b95-9d8d-d5a21f3f73c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", "6", ",", 
   RowBox[{"g", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{
    RowBox[{"-", "a"}], "+", 
    SuperscriptBox["a", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.939933734893978*^9},
 CellLabel->"Out[968]=",
 CellID->873869424,ExpressionUUID->"1f893e54-47b3-4ab7-90b7-cef159c46614"]
}, Open  ]],

Cell["\<\
If we want our function to work on numbers only, this can be done as before:\
\>", "Text",
 CellChangeTimes->{3.939933754191146*^9},
 CellID->482747335,ExpressionUUID->"968e4b02-de54-44b4-aaf9-40df0396a49c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"g", ",", "a", ",", "b"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{
      RowBox[{"x_", "?", "NumberQ"}], ",", 
      RowBox[{"y_", "?", "NumberQ"}]}], "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{"x", "==", 
      RowBox[{"y", "^", "2"}]}], ")"}]}], ":=", 
   RowBox[{"x", "-", "y"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939933764968669*^9, 3.9399337738247128`*^9}},
 CellLabel->"In[969]:=",
 CellID->341240979,ExpressionUUID->"7f8a0481-9509-4af8-a150-6eac489050d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"9", ",", "3"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{
     RowBox[{"a", "^", "2"}], ",", "a"}], "]"}]}], "}"}]], "Input",
 CellLabel->"In[971]:=",
 CellID->1990240330,ExpressionUUID->"c6d015ce-dd4f-4795-ac7e-0fd3c1fe2ccd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", "6", ",", 
   RowBox[{"g", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{
     SuperscriptBox["a", "2"], ",", "a"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9399337811665154`*^9},
 CellLabel->"Out[971]=",
 CellID->1707677395,ExpressionUUID->"7eed96a8-e9c4-4e3d-91e4-16816413ed6b"]
}, Open  ]],

Cell["Using constraints to make functions safer", "ItemNumbered",
 CellChangeTimes->{3.9399337918014193`*^9},
 CellTags->"4.6.2.3",
 CellID->1962519257,ExpressionUUID->"abc554a2-52e8-4e1d-bf5e-4f5970b7d3be"],

Cell["\<\
Here is another example: a function extracts a sublist of <n> elements from a \
list, but only if <n> is not larger than the length of the list:\
\>", "Text",
 CellChangeTimes->{{3.9399337973731003`*^9, 3.939933800864379*^9}, {
   3.939947095437408*^9, 3.939947095459882*^9}, {3.9400177063884087`*^9, 
   3.9400177064068947`*^9}, 3.9400177407469273`*^9},
 CellID->859818126,ExpressionUUID->"a8b6d877-5186-4e5c-aa1a-8c52e34b8ad6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "grab", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"grab", "[", 
     RowBox[{"x_", ",", "n_"}], "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{"n", "<=", 
      RowBox[{"Length", "[", "x", "]"}]}], ")"}]}], ":=", 
   RowBox[{"Take", "[", 
    RowBox[{"x", ",", "n"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939933806058031*^9, 3.9399338223748913`*^9}},
 CellLabel->"In[972]:=",
 CellID->269207854,ExpressionUUID->"d05b0f09-8b61-4dba-8852-d2baa198fe5e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"grab", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
     "3"}], "]"}], ",", 
   RowBox[{"grab", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
     "6"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939933824238742*^9, 3.939933840812635*^9}},
 CellLabel->"In[974]:=",
 CellID->1791766595,ExpressionUUID->"72065d14-c226-4101-8171-c8c2254cb088"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"grab", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
     "6"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939933841736333*^9},
 CellLabel->"Out[974]=",
 CellID->1141240317,ExpressionUUID->"58576d34-4a52-408d-a6cf-1f5f466f41d3"]
}, Open  ]],

Cell["\<\
If, for comparison, we just use Take, we get an error message in the second \
case:\
\>", "Text",
 CellChangeTimes->{3.939933849013764*^9, 3.940017740765637*^9},
 CellID->81574064,ExpressionUUID->"a711b82a-2b79-4d3f-b930-f52b5cdc2971"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
     "3"}], "]"}], ",", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
     "6"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939933868440785*^9, 3.939933871393798*^9}},
 CellLabel->"In[975]:=",
 CellID->920726862,ExpressionUUID->"8193e540-f456-4a71-a4c8-29a165f49c3f"],

Cell[BoxData[
 TemplateBox[{
  "Take", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"1\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"6\\\"}]\\) in \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]\\).\"", 2, 975, 53, 
   26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9399338716701193`*^9},
 CellLabel->"During evaluation of In[975]:=",
 CellID->811145672,ExpressionUUID->"0e75a439-30f8-41ba-b152-1a154efd8ece"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
     "6"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.93993387169108*^9},
 CellLabel->"Out[975]=",
 CellID->699118148,ExpressionUUID->"a003cd58-0dc3-4586-b192-f63b7f39f318"]
}, Open  ]],

Cell["\<\
However, our function is not completely foolproof, since the following call \
results in an error:\
\>", "Text",
 CellChangeTimes->{3.939933881956471*^9, 3.940017740785174*^9},
 CellID->718702772,ExpressionUUID->"99575259-12db-43b1-b473-7dfc818cb363"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grab", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   "2.5"}], "]"}]], "Input",
 CellChangeTimes->{{3.939933885066436*^9, 3.9399338950513268`*^9}},
 CellLabel->"In[976]:=",
 CellID->2064252144,ExpressionUUID->"76ac51b2-674e-4a8a-bf74-f3f6441c12da"],

Cell[BoxData[
 TemplateBox[{
  "Take", "seqs", 
   "\"Sequence specification (+n, -n, {+n}, {-n}, {m, n}, or {m, n, s}) \
expected at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Take\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\
\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"5\\\"}], \\\"}\\\"}], \\\",\\\", \\\"2.5`\\\"}], \
\\\"]\\\"}]\\).\"", 2, 976, 54, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9399338954808064`*^9},
 CellLabel->"During evaluation of In[976]:=",
 CellID->55248003,ExpressionUUID->"adb623e9-49cf-4bce-83be-64d52a608381"],

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   "2.5`"}], "]"}]], "Output",
 CellChangeTimes->{3.9399338955026913`*^9},
 CellLabel->"Out[976]=",
 CellID->840250917,ExpressionUUID->"13e9899d-ddb2-4a47-8f84-95b5a3c2b5bf"]
}, Open  ]],

Cell["It will be better to restrict our variables as follows:", "Text",
 CellChangeTimes->{3.939933905791078*^9, 3.9400177408047333`*^9},
 CellID->209920345,ExpressionUUID->"23b66d55-7259-4e49-a928-e188e4062373"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "grab", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"grab", "[", 
     RowBox[{"x_List", ",", "n_Integer"}], "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{"n", "<=", 
      RowBox[{"Length", "[", "x", "]"}]}], ")"}]}], ":=", 
   RowBox[{"Take", "[", 
    RowBox[{"x", ",", "n"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939933909079088*^9, 3.939933928741926*^9}},
 CellLabel->"In[977]:=",
 CellID->1863050226,ExpressionUUID->"cd45d30d-850f-4386-824b-dcfda06ff814"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"grab", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", "2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"grab", "[", 
  RowBox[{"1", ",", "5"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"grab", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   "2.5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.939933934940584*^9, 3.939933950404469*^9}},
 CellLabel->"In[979]:=",
 CellID->1375117233,ExpressionUUID->"c635239f-4d36-415c-baf7-404ad11bd34d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.939933950774234*^9},
 CellLabel->"Out[979]=",
 CellID->520513661,ExpressionUUID->"9376adb9-b3e2-4357-bdaf-0d06f6b22800"],

Cell[BoxData[
 RowBox[{"grab", "[", 
  RowBox[{"1", ",", "5"}], "]"}]], "Output",
 CellChangeTimes->{3.939933950795944*^9},
 CellLabel->"Out[980]=",
 CellID->1572206196,ExpressionUUID->"93f651af-c14d-4003-b3ef-4fbd0a77d212"],

Cell[BoxData[
 RowBox[{"grab", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   "2.5`"}], "]"}]], "Output",
 CellChangeTimes->{3.939933950805526*^9},
 CellLabel->"Out[981]=",
 CellID->1430743484,ExpressionUUID->"200757b2-aa35-49da-8263-ee3b0d234e80"]
}, Open  ]],

Cell[TextData[{
 "Sometimes we may need some action to be performed in the case of incorrect \
input, for example some catchall error message to be issued or the error \
input analyzed for the error type. In this case, we may use a technique based \
on a possibility of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " functions to have multiple definitions (to be discussed in the next \
session in detail). What we have to do is just to give our function another \
more general definition, like this:"
}], "Text",
 CellChangeTimes->{{3.9399339598692627`*^9, 3.939933972271619*^9}},
 CellID->1131340129,ExpressionUUID->"0668b9c9-c788-4445-b77b-9ee3d8368d77"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "grab", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"grab", "[", 
     RowBox[{"x_List", ",", "n_Integer"}], "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{"n", "<=", 
      RowBox[{"Length", "[", "x", "]"}]}], ")"}]}], ":=", 
   RowBox[{"Take", "[", 
    RowBox[{"x", ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"grab", "[", "x__", "]"}], ":=", 
   RowBox[{
   "Print", "[", "\"\<Mistake in the type(s) of arguments\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9399340219713984`*^9, 3.93993405738266*^9}},
 CellLabel->"In[982]:=",
 CellID->877094966,ExpressionUUID->"7b853725-ddda-41dc-aa0b-897a35f42d51"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"grab", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", "2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"grab", "[", 
  RowBox[{"1", ",", "5"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"grab", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   "2.5"}], "]"}]}], "Input",
 CellLabel->"In[985]:=",
 CellID->543949663,ExpressionUUID->"afaadf7c-dce5-4e4f-b10d-80d746702c63"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.939934067783724*^9},
 CellLabel->"Out[985]=",
 CellID->792410179,ExpressionUUID->"706cf3b2-7486-4655-a8c3-226fe9590342"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Mistake in the type(s) of arguments\"\>"], "Print",
 CellChangeTimes->{3.939934067804063*^9},
 CellLabel->"During evaluation of In[985]:=",
 CellID->1491783406,ExpressionUUID->"912dfa51-4811-4bce-858a-bb8587434328"],

Cell[BoxData["\<\"Mistake in the type(s) of arguments\"\>"], "Print",
 CellChangeTimes->{3.939934067812784*^9},
 CellLabel->"During evaluation of In[985]:=",
 CellID->532125917,ExpressionUUID->"6d69c2e2-9a89-486a-ad97-15c31e24d4dd"]
}, Open  ]]
}, Open  ]],

Cell["\<\
In the last definition we used the pattern with a double underscore \
(BlankSequence), to account for a case of 2 or more arguments, which is what \
we need here.\
\>", "Text",
 CellChangeTimes->{{3.93993408589149*^9, 3.939934087594926*^9}},
 CellID->1318380911,ExpressionUUID->"9b0b9534-2070-40d9-a982-11f2860ca4f4"],

Cell["Warning: a subtle kind of mistakes", "ItemNumbered",
 CellChangeTimes->{3.939935534479361*^9},
 CellID->2068268363,ExpressionUUID->"b48f4fd6-7299-43ea-95e9-1afbfd4086a9"],

Cell["\<\
The matter of this subsection is likely to be obvious for many people, but it \
is important enough to be mentioned. When we build our functions on top of \
the built-in ones, we count, perhaps unconsciously, on the error-checking and \
warning messages of the builit-in functions as a safety net. However, there \
could be cases when the input which is erroneous for us will be interpreted \
fine by the built-in function we use, but will perhaps mean something \
completely different from what we need. Consider the previous example with \
the following input:\
\>", "Text",
 CellChangeTimes->{{3.939935542809449*^9, 3.939935573014165*^9}, 
   3.9400177408236837`*^9, 3.940740879412899*^9},
 CellID->68582952,ExpressionUUID->"dc5784aa-ccef-434f-a083-8a707e838178"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grab", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"-", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939935575514205*^9, 3.939935591261319*^9}},
 CellLabel->"In[989]:=",
 CellID->243848204,ExpressionUUID->"f5ea0fb3-e638-42f1-96cc-0ab8f698e289"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{{3.939935581750104*^9, 3.939935591672443*^9}},
 CellLabel->"Out[989]=",
 CellID->904832476,ExpressionUUID->"992b1615-c308-48d5-bf17-2a9a9f14ed1a"]
}, Open  ]],

Cell["\<\
It is clear what happened: the built-in Take interpreted our input as to take \
the arguments from the end of the list. Did we really mean this \
functionality? May be, but may be not. To be absolutely safe, we had to use \
the <n_Integer?NonNegative> pattern. In particular, the following input \
already will result in an error message:\
\>", "Text",
 CellChangeTimes->{{3.939935601227866*^9, 3.939935617002046*^9}},
 CellID->1203685350,ExpressionUUID->"6202f7a6-3650-4514-96ef-dfa89bec8282"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grab", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"-", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939935623795879*^9, 3.939935624109303*^9}},
 CellLabel->"In[990]:=",
 CellID->1227981032,ExpressionUUID->"0b98ebb3-7141-4c39-ad14-4c8503cef850"],

Cell[BoxData[
 TemplateBox[{
  "Take", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"-\\\", \\\"10\\\"}]\\) \
through \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\"}], \
\\\"}\\\"}]\\).\"", 2, 990, 55, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9399356244138308`*^9},
 CellLabel->"During evaluation of In[990]:=",
 CellID->792654696,ExpressionUUID->"1957f679-e64b-45e4-940b-00da554b735c"],

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"-", "10"}]}], "]"}]], "Output",
 CellChangeTimes->{3.939935624440123*^9},
 CellLabel->"Out[990]=",
 CellID->1306413331,ExpressionUUID->"bcb9add6-a69a-4427-ab59-dabc5ce968a6"]
}, Open  ]],

Cell["\<\
Generally, this means that extensive tests have to be performed on the code \
we write, since the absence of error messages on some input does not \
necessarily mean the correct logic.\
\>", "Text",
 CellChangeTimes->{{3.939935631271669*^9, 3.939935637808887*^9}},
 CellID->133814966,ExpressionUUID->"27fd64a5-0dc4-4c32-91e6-4a50d4ddbde9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples of functions of several variables (arguments)", "Subsubsection",
 CellChangeTimes->{3.9399356481939287`*^9},
 CellID->1071481418,ExpressionUUID->"0e747866-ba7d-4150-8b73-63f3da8d0c41"],

Cell["\<\
Here I will give some examples of functions that take several arguments. \
Since I did not want to give built-in functions as examples, and on the other \
hand we don\[CloseCurlyQuote] t yet have the full functional machinery, some \
of the code may be unclear. You have two choices then: either have a quick \
look at the next chapter when this machinery is developed, or (recommended) \
just relax and consider it only an illustration of our
present discussion.\
\>", "Text",
 CellChangeTimes->{{3.939935654538886*^9, 3.939935672757204*^9}},
 CellID->1737812231,ExpressionUUID->"c611b909-157f-4c4a-a13c-0877540fcc2b"],

Cell["Example: words containing a given substring", "ItemNumbered",
 CellChangeTimes->{3.939935684686042*^9},
 CellID->988346941,ExpressionUUID->"4d474c81-3aa8-42fa-8ecf-6fb59d454e18"],

Cell["\<\
Here is a function which takes some list of words and returns all the words \
containing a given substring.\
\>", "Text",
 CellChangeTimes->{3.939935700138385*^9},
 CellID->361027842,ExpressionUUID->"f3c68c75-9138-4e2e-80bb-31f8e2b97adc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "findWordsWith", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"findWordsWith", "[", 
    RowBox[{"textwords_List", ",", "str_String"}], "]"}], ":=", 
   RowBox[{"Pick", "[", 
    RowBox[{"textwords", ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringMatchQ", "[", 
         RowBox[{"#", ",", 
          RowBox[{"\"\<*\>\"", "<>", "str", "<>", "\"\<*\>\""}]}], "]"}], 
        "&"}], ",", "textwords"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939935704425661*^9, 3.939935749269487*^9}, {
  3.9399358777499037`*^9, 3.939935879396744*^9}},
 CellLabel->"In[995]:=",
 CellID->1706778117,ExpressionUUID->"e4ec9154-6170-4376-a1b7-145bd70c3139"],

Cell[TextData[{
 "This will be our list of words (taken from ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " book)"
}], "Text",
 CellChangeTimes->{3.93993578710966*^9},
 CellID->81217638,ExpressionUUID->"4155337e-4256-4146-a74d-a1bcd770c2d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wlist", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Most\>\"", ",", "\"\<of\>\"", ",", "\"\<this\>\"", ",", 
     "\"\<Part\>\"", ",", "\"\<assumes\>\"", ",", "\"\<no\>\"", ",", 
     "\"\<specific\>\"", ",", " ", "\"\<prior\>\"", ",", " ", 
     "\"\<knowledge\>\"", ",", "  ", "\"\<of\>\"", ",", "  ", 
     "\"\<computer\>\"", ",", "  ", "\"\<science\>\"", ",", " ", "\n", 
     "\"\<Nevertheless\>\"", ",", "\"\<some\>\"", ",", "\"\<of\>\"", ",", 
     "\"\<it\>\"", ",", "\"\<ventures\>\"", ",", "\"\<into\>\"", ",", 
     "\"\<some\>\"", ",", "  ", "\"\<fairly\>\"", ",", " ", 
     "\"\<complicated\>\"", ",", "  ", "\"\<issues\>\"", ",", "  ", 
     "\"\<zou\>\"", ",", "  ", "\"\<can\>\"", ",", " ", "\n", 
     "\"\<probably\>\"", ",", "\"\<ignore\>\"", ",", "\"\<these\>\"", ",", 
     "\"\<issues\>\"", ",", "\"\<unless\>\"", ",", "\"\<they\>\"", ",", 
     "\"\<specifically\>\"", ",", " ", "\"\<affect\>\"", ",", " ", 
     "\"\<programs\>\"", ",", " ", "\"\<you\>\"", ",", "  ", "\"\<are\>\"", 
     ",", "  ", "\"\<writing\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.939935799804969*^9, 3.9399358404583883`*^9}},
 CellLabel->"In[993]:=",
 CellID->1345187228,ExpressionUUID->"d494add3-e428-4a52-9640-89dfbfd288e4"],

Cell["Some examples:", "Text",
 CellChangeTimes->{{3.939935845033839*^9, 3.939935850705196*^9}},
 CellID->1133308933,ExpressionUUID->"ed6412cc-461e-47a0-85fb-fdf96a8b6a6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findWordsWith", "[", 
  RowBox[{"wlist", ",", "\"\<om\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.939935854769256*^9, 3.9399358589061127`*^9}},
 CellLabel->"In[997]:=",
 CellID->222689380,ExpressionUUID->"6593435b-b67d-47ed-abcf-2e46d7dc02e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"computer\"\>", ",", "\<\"some\"\>", ",", "\<\"some\"\>", 
   ",", "\<\"complicated\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.939935859199088*^9, 3.9399358830810137`*^9}},
 CellLabel->"Out[997]=",
 CellID->1184744436,ExpressionUUID->"d6468da6-5730-4c7c-91fa-658fb83e3366"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findWordsWith", "[", 
  RowBox[{"wlist", ",", "\"\<ss\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.9399358917158213`*^9, 3.939935895641062*^9}},
 CellLabel->"In[998]:=",
 CellID->1345104250,ExpressionUUID->"1c679819-e5ac-41e6-b63a-90dbf99fa0b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"assumes\"\>", ",", "\<\"Nevertheless\"\>", 
   ",", "\<\"issues\"\>", ",", "\<\"issues\"\>", ",", "\<\"unless\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.939935895905964*^9},
 CellLabel->"Out[998]=",
 CellID->2125806536,ExpressionUUID->"47097378-88b7-4415-97b4-2a39999d8322"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findWordsWith", "[", 
  RowBox[{"wlist", ",", "\"\<th\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.939935899774544*^9, 3.939935903906164*^9}},
 CellLabel->"In[999]:=",
 CellID->1644384281,ExpressionUUID->"ccf4f592-339b-4df2-a145-72b6cfbd4297"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"this\"\>", ",", "\<\"Nevertheless\"\>", ",", "\<\"these\"\>", 
   ",", "\<\"they\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.9399359041909847`*^9},
 CellLabel->"Out[999]=",
 CellID->1465422344,ExpressionUUID->"b8e0ccd5-baf2-4ea3-9a19-ee356634d73d"]
}, Open  ]],

Cell["\<\
In this example, we can make a function safer against bad inputs by checking \
that the incoming list is indeed a list of strings. This can be done rather \
easily with patterns:\
\>", "Text",
 CellChangeTimes->{{3.9399359108947563`*^9, 3.939935914157946*^9}, {
   3.939935956051691*^9, 3.939935959590521*^9}, 3.94001774084346*^9},
 CellID->2010871812,ExpressionUUID->"eac02a51-3748-46b1-b9ec-ad5d76161b55"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "findWordsWithSafer", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"findWordsWithSafer", "[", 
    RowBox[{"textwords__String", ",", "str_String"}], "]"}], ":=", 
   RowBox[{"Pick", "[", 
    RowBox[{
     RowBox[{"{", "textwords", "}"}], ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringMatchQ", "[", 
         RowBox[{"#", ",", 
          RowBox[{"\"\<*\>\"", "<>", "str", "<>", "\"\<*\>\""}]}], "]"}], 
        "&"}], ",", 
       RowBox[{"{", "textwords", "}"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9399359353952827`*^9, 3.939935945230348*^9}, {
  3.939936010592968*^9, 3.9399360474600077`*^9}},
 CellLabel->"In[1002]:=",
 CellID->1400306004,ExpressionUUID->"cc903159-5b62-40d1-a885-b9b8f0047e0a"],

Cell["\<\
Since the check is purely syntactic, we should not expect a large performance \
overhead for this check. Notice that here we had to wrap <textwords> in a \
list inside the function since now it represents the sequence of strings - \
the interior of the list.\
\>", "Text",
 CellChangeTimes->{{3.9399359713459873`*^9, 3.939935980391645*^9}},
 CellID->1175320811,ExpressionUUID->"29d2c1e2-0879-4c3c-bee2-c35975f5001c"],

Cell["Example: transforming numbers to decimal from other bases", \
"ItemNumbered",
 CellChangeTimes->{3.939936058776361*^9},
 CellID->2063087650,ExpressionUUID->"1e45e9bb-6056-4a67-bf60-146ec6757149"],

Cell["\<\
This function transforms a number given in an arbitrary base less than 10, \
into a decimal form.\
\>", "Text",
 CellChangeTimes->{3.9399360655252113`*^9},
 CellID->1043169088,ExpressionUUID->"5bda2198-ccae-4bb5-ad6b-66f7f5bb3eb9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "convertToDecimal", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"convertToDecimal", "[", 
    RowBox[{"x_Integer", ",", 
     RowBox[{"base_Integer", "/;", 
      RowBox[{"base", "<", "10"}]}]}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"base", "*", "#1"}], "+", "#2"}], ")"}], "&"}], ",", "0", ",", 
     RowBox[{"IntegerDigits", "[", "x", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939936071462468*^9, 3.9399361111345577`*^9}},
 CellLabel->"In[1004]:=",
 CellID->1062669274,ExpressionUUID->"7dd5058f-361c-4edd-983b-395c74edd666"],

Cell["For example:", "Text",
 CellChangeTimes->{{3.9399361141387167`*^9, 3.939936115938697*^9}},
 CellID->204534616,ExpressionUUID->"80e303d4-763f-4030-8b0e-815472468f6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"convertToDecimal", "[", 
  RowBox[{"10001", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.939936117002079*^9, 3.93993612151616*^9}},
 CellLabel->"In[1006]:=",
 CellID->1182995625,ExpressionUUID->"b6ba2e4b-7b40-42ef-9653-4322f515ec76"],

Cell[BoxData["17"], "Output",
 CellChangeTimes->{3.939936121832304*^9},
 CellLabel->"Out[1006]=",
 CellID->1306148385,ExpressionUUID->"3379edf3-4632-4bd4-b4ab-f099ce7f6720"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"convertToDecimal", "[", 
  RowBox[{"10001", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.9399361232289953`*^9, 3.939936127813992*^9}},
 CellLabel->"In[1007]:=",
 CellID->1180404622,ExpressionUUID->"31366bfd-1c0d-41bf-9b68-93c20e402b72"],

Cell[BoxData["82"], "Output",
 CellChangeTimes->{3.9399361281415377`*^9},
 CellLabel->"Out[1007]=",
 CellID->1868674135,ExpressionUUID->"d9ee6a35-7598-4752-81b8-c612776a1455"]
}, Open  ]],

Cell["\<\
Let us map our function on entire list (Map is a functional programming \
construct described in chapter V):\
\>", "Text",
 CellChangeTimes->{3.93993615064935*^9, 3.9400177408626328`*^9},
 CellID->1158970044,ExpressionUUID->"5b575fdb-bbf6-485e-9f8e-9520d700a4c7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"binarylist", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "10", ",", "1", ",", "1011", ",", "11101"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"convertToDecimal", "[", 
    RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", "binarylist"}]}], "Input",
 CellChangeTimes->{{3.93993615402386*^9, 3.939936173025457*^9}},
 CellLabel->"In[1008]:=",
 CellID->240406624,ExpressionUUID->"49f600d1-478a-4377-beab-e466c21b58c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "2", ",", "1", ",", "11", ",", "29"}], "}"}]], "Output",
 CellChangeTimes->{3.939936173502355*^9},
 CellLabel->"Out[1009]=",
 CellID->2022927692,ExpressionUUID->"d8b8e30d-7bcc-48d7-a6a4-f07823da69f2"]
}, Open  ]],

Cell["Example: common digit subsequences of two numbers", "ItemNumbered",
 CellChangeTimes->{3.9399361859058113`*^9},
 CellID->1912918331,ExpressionUUID->"f8de2c99-14b2-47ca-8379-cfea82f0abe9"],

Cell["\<\
Here we will be interested in finding common subsequences of digits of two \
integers. The function will take 3 arguments - numbers x and y, and the \
length of the common subsequence. It will return all common subsequences of \
this length, as a nested list.\
\>", "Text",
 CellChangeTimes->{{3.939936195412054*^9, 3.9399362042243156`*^9}},
 CellID->440709880,ExpressionUUID->"700d57dd-db59-45c4-8a0b-d6b64177d296"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "commonSequences", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"commonSequences", "[", 
    RowBox[{"x_Integer", ",", "y_Integer", ",", "size_Integer"}], "]"}], ":=", 
   RowBox[{"Intersection", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"IntegerDigits", "[", "#", "]"}], ",", "size", ",", "1"}], 
        "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939936206717243*^9, 3.939936246812449*^9}},
 CellLabel->"In[1010]:=",
 CellID->1292715372,ExpressionUUID->"bbb821ac-728c-4078-aac5-a96b032d901c"],

Cell["Some examples:", "Text",
 CellChangeTimes->{{3.9399362492725067`*^9, 3.9399362518412247`*^9}},
 CellID->977692222,ExpressionUUID->"1a5ff8da-7a53-4a24-9036-336feb20227c"],

Cell["Here are the numbers:", "Text",
 CellChangeTimes->{{3.9399362567717657`*^9, 3.939936260480506*^9}},
 CellID->1679646806,ExpressionUUID->"82e670be-511a-492a-abf6-b1a7b1c5a576"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nm1", "=", "12349086754356712345"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nm2", "=", "12378695435348712356"}], ";"}]}], "Input",
 CellChangeTimes->{{3.939936261513736*^9, 3.939936301710376*^9}},
 CellLabel->"In[1013]:=",
 CellID->70448519,ExpressionUUID->"b9a58233-32fb-49eb-a8a7-650cc03d5894"],

Cell["Here are their common subsequences of length 3, 4, and 5:", "Text",
 CellChangeTimes->{3.9399363094476013`*^9, 3.9400177408819933`*^9},
 CellID->1356710324,ExpressionUUID->"e5d77427-c4f0-419e-bad4-18610d4e5083"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"commonSequences", "[", 
  RowBox[{"nm1", ",", "nm2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.939936311866992*^9, 3.939936315406989*^9}},
 CellLabel->"In[1015]:=",
 CellID->364982951,ExpressionUUID->"b401fe20-f8cb-4880-bb51-2039c0846263"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.93993631580923*^9},
 CellLabel->"Out[1015]=",
 CellID->2058837639,ExpressionUUID->"75352b40-1417-4cf3-afd9-2dca1728f55a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"commonSequences", "[", 
  RowBox[{"nm1", ",", "nm2", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.9399363338559427`*^9, 3.9399363341864557`*^9}},
 CellLabel->"In[1016]:=",
 CellID->480194562,ExpressionUUID->"9e7a9135-c169-4177-aeea-0a4822a75fa9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939936334642789*^9},
 CellLabel->"Out[1016]=",
 CellID->1234145394,ExpressionUUID->"a70e42a8-2702-4f56-beb7-efeba5a592ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"commonSequences", "[", 
  RowBox[{"nm1", ",", "nm2", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.9399363390465603`*^9, 3.939936339525511*^9}},
 CellLabel->"In[1017]:=",
 CellID->1884574232,ExpressionUUID->"05917b2c-98fc-4e6f-905a-d1d43d1595c7"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.939936339953793*^9},
 CellLabel->"Out[1017]=",
 CellID->888211624,ExpressionUUID->"ac78b8a5-4e05-4e25-86dc-ff098b63a9d8"]
}, Open  ]],

Cell["More serious example: random numbers 500 digits each.", "Text",
 CellChangeTimes->{3.9399363487214413`*^9, 3.940017740900882*^9},
 CellID->1026908910,ExpressionUUID->"07e91475-31bf-4cfc-9675-e82abc5ddfe7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"(", 
   RowBox[{"nm3", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"10", "^", "500"}]}], "}"}], "]"}]}], ")"}], "//", 
  "Short"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"nm4", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"10", "^", "500"}]}], "}"}], "]"}]}], ")"}], "//", 
  "Short"}]}], "Input",
 CellChangeTimes->{{3.939936355370476*^9, 3.9399363776870737`*^9}},
 CellLabel->"In[1018]:=",
 CellID->1729798891,ExpressionUUID->"e77d3a3f-8794-4bac-88a9-d96e92eab3b7"],

Cell[BoxData[
 TagBox[
  RowBox[{"6503378641942469", 
   RowBox[{"\[LeftSkeleton]", "467", "\[RightSkeleton]"}], 
   "88551863823926597"}],
  Short]], "Output",
 CellChangeTimes->{3.939936379085281*^9},
 CellLabel->"Out[1018]//Short=",
 CellID->1336199000,ExpressionUUID->"774cbeb6-b138-4d2e-b3ca-0e335cbeb384"],

Cell[BoxData[
 TagBox[
  RowBox[{"3638599324842022", 
   RowBox[{"\[LeftSkeleton]", "466", "\[RightSkeleton]"}], 
   "79583676293511879"}],
  Short]], "Output",
 CellChangeTimes->{3.939936379104484*^9},
 CellLabel->"Out[1019]//Short=",
 CellID->1260096321,ExpressionUUID->"3048f15c-0c5e-4ea3-bede-c42f9cba0571"]
}, Open  ]],

Cell["Here are the common sequences:", "Text",
 CellChangeTimes->{3.939936386247692*^9, 3.94001774091978*^9},
 CellID->2102623980,ExpressionUUID->"e5b3bb8f-c259-42e9-99f2-4bcc03d1fd7d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"commonSequences", "[", 
  RowBox[{"nm3", ",", "nm4", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.9399363879513206`*^9, 3.939936392581748*^9}},
 CellLabel->"In[1020]:=",
 CellID->1344283991,ExpressionUUID->"4739df4d-6609-455a-b821-bd14902d3d79"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "5", ",", "9", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "8", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "7", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "8", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "9", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "8", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "8", ",", "6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", "3", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", "9", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2", ",", "9", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", "3", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "4", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "4", ",", "6", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "8", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939936393121368*^9},
 CellLabel->"Out[1020]=",
 CellID->1998587256,ExpressionUUID->"1fab50ce-efdc-4178-bc3d-04c86ba08ea4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"commonSequences", "[", 
  RowBox[{"nm3", ",", "nm4", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.939936403038062*^9, 3.9399364034392633`*^9}},
 CellLabel->"In[1021]:=",
 CellID->1464288865,ExpressionUUID->"fa153d5a-a341-4244-9de8-43dde7ff87b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"2", ",", "8", ",", "0", ",", "3", ",", "9"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.939936403884076*^9},
 CellLabel->"Out[1021]=",
 CellID->922737074,ExpressionUUID->"d891af53-a22f-49bc-aa3c-f67856904208"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"commonSequences", "[", 
  RowBox[{"nm3", ",", "nm4", ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.939936409877782*^9, 3.939936410267548*^9}},
 CellLabel->"In[1022]:=",
 CellID->1462587731,ExpressionUUID->"249e6cc5-c4b1-4f5d-8b1f-3829c0011ecb"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.939936410647818*^9},
 CellLabel->"Out[1022]=",
 CellID->1102105539,ExpressionUUID->"2c35aa61-5eb7-444a-8c28-d48e931db21d"]
}, Open  ]],

Cell["A longer example - numbers and intervals", "ItemNumbered",
 CellChangeTimes->{3.939936423551805*^9},
 CellID->1909168277,ExpressionUUID->"91a99e35-f54e-415f-9a3a-a4507afc5350"],

Cell["\<\
This will be a more complicated example dealing with numbers and intervals. \
Please ignore the code in the body of the functions below, and concentrate on \
the patterns and type checks used in the definitions (l.h.s.) of these \
functions. If this example is still too hard, it can be skipped on the first \
reading.\
\>", "Text",
 CellChangeTimes->{{3.93993642953629*^9, 3.9399364368911877`*^9}},
 CellID->1838061712,ExpressionUUID->"c9de1af4-c7c8-4b8d-ac54-8457bc3a6cb1"],

Cell["Here are 20 random numbers in the range [1, 20]:", "Text",
 CellChangeTimes->{3.939936445859906*^9, 3.940017740938458*^9},
 CellID->236468812,ExpressionUUID->"fa89bd23-5dda-4716-a821-2c2b283a3a6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"numbers", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "20"}], "}"}], "]"}], ",", 
    RowBox[{"{", "20", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9399364478883743`*^9, 3.939936459809886*^9}},
 CellLabel->"In[1023]:=",
 CellID->1063696340,ExpressionUUID->"9ce09620-2a48-46bb-ba7b-5d784dbbadc8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "12", ",", "3", ",", "13", ",", "3", ",", "4", ",", "6", ",", "7", ",", 
   "19", ",", "15", ",", "5", ",", "5", ",", "2", ",", "13", ",", "5", ",", 
   "13", ",", "3", ",", "11", ",", "16", ",", "8", ",", "15"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.939936461043997*^9},
 CellLabel->"Out[1023]=",
 CellID->669833959,ExpressionUUID->"14b849a2-81da-4108-bb91-208dcd3e37b9"]
}, Open  ]],

Cell["Let us generate random (possibly overlapping) intervals:", "Text",
 CellChangeTimes->{3.93993646871318*^9, 3.9400177409572077`*^9},
 CellID->837605172,ExpressionUUID->"0f0f4228-5461-4b28-8b18-5f2158889685"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nints", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ints", "=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "19"}], "}"}], "]"}]}], ",", 
      RowBox[{"x", "+", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "10"}], "}"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", "nints", "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.939936470631631*^9, 3.939936498722287*^9}},
 CellLabel->"In[1024]:=",
 CellID->1421969871,ExpressionUUID->"0ac6e53e-815b-4075-aabb-03043ac0d832"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"16", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "25"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939936500768044*^9},
 CellLabel->"Out[1025]=",
 CellID->1701371051,ExpressionUUID->"9fe9ec3a-80a9-4cbd-a081-33887ec86b95"]
}, Open  ]],

Cell["\<\
The following function takes a list of numbers and a list of intervals, and \
returns intervals together with all the numbers which belong to them:\
\>", "Text",
 CellChangeTimes->{{3.93993651636766*^9, 3.939936519873118*^9}, 
   3.940017740975821*^9},
 CellID->285039588,ExpressionUUID->"9fde9b2d-93d3-44fd-b1a4-c9fc96b1774a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "numsInIntervals", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numsInIntervals", "[", 
    RowBox[{"nums_List", ",", "ints_List"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"MapAt", "[", 
      RowBox[{"Sort", ",", "#", ",", "2"}], "]"}], "&"}], "/@", 
    RowBox[{
     RowBox[{"Reap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", "x", "}"}], ",", 
          RowBox[{"Sow", "[", 
           RowBox[{"x", ",", 
            RowBox[{"Select", "[", 
             RowBox[{"ints", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<=", "x", "<=", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], "]"}]}], 
         "]"}], "/@", "nums"}], ",", "_", ",", "List"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939936908674391*^9, 3.939937006303438*^9}, {
  3.939937061268052*^9, 3.939937061670244*^9}},
 CellLabel->"In[1032]:=",
 CellID->1565686361,ExpressionUUID->"6e039ccd-10a2-487c-828f-4b9b9bf53ae9"],

Cell["Let us check:", "Text",
 CellChangeTimes->{{3.939936988907593*^9, 3.9399369909461946`*^9}},
 CellID->625734889,ExpressionUUID->"876bc6fa-4c82-4216-b651-7620c53a79e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tst", "=", 
  RowBox[{"numsInIntervals", "[", 
   RowBox[{"numbers", ",", "ints"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.939936991666087*^9, 3.939936999857086*^9}},
 CellLabel->"In[1034]:=",
 CellID->1491070200,ExpressionUUID->"4e68dd2c-a82d-490e-a5f4-19ce76fd1b05"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"12", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "12", ",", "13", ",", "13", ",", "13", ",", "15", ",", "15", ",", 
       "16"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"11", ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "12", ",", "13", ",", "13", ",", "13"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"17", ",", "24"}], "}"}], ",", 
     RowBox[{"{", "19", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"15", ",", "24"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "15", ",", "16", ",", "19"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"16", ",", "25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "19"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"16", ",", "18"}], "}"}], ",", 
     RowBox[{"{", "16", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.939937000924704*^9, 3.9399370092363443`*^9}, 
   3.939937064979957*^9},
 CellLabel->"Out[1034]=",
 CellID->2060852065,ExpressionUUID->"003dbbab-4eb5-456b-99aa-98a64804a4da"]
}, Open  ]],

Cell["\<\
The following function returns for a given number all the intervals which \
contain this number:\
\>", "Text",
 CellChangeTimes->{3.939937155518991*^9, 3.940017740994507*^9},
 CellID->2124397639,ExpressionUUID->"6738c683-bd7b-46c5-95c6-48f6647a050b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "intervalsForNums1", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intervalsForNums1", "[", 
   RowBox[{"nums_List", ",", "ints_List"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Union", "/@", "#"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"Transpose", "/@", 
        RowBox[{"Outer", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<=", "#1", "<=", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"#1", ",", "#2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"#1", ",", 
               RowBox[{"{", "}"}]}], "}"}]}], "]"}], "&"}], ",", 
          RowBox[{"Union", "[", "nums", "]"}], ",", "ints", ",", "1"}], 
         "]"}]}], ")"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x___", ",", 
          RowBox[{"{", "}"}], ",", "y___"}], "}"}], ":>", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"{", "x_Integer", "}"}], ":>", "x"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.939937164201305*^9, 3.93993727053939*^9}},
 CellLabel->"In[1035]:=",
 CellID->1225406909,ExpressionUUID->"d80ebf46-207c-4be0-aa80-c5323ed3f582"],

Cell["Let us check:", "Text",
 CellChangeTimes->{{3.939937274601962*^9, 3.93993727719604*^9}},
 CellID->2103051359,ExpressionUUID->"e4cec36a-0339-4eaa-af09-dfe465d0271b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"intervalsForNums1", "[", 
  RowBox[{"numbers", ",", "ints"}], "]"}]], "Input",
 CellChangeTimes->{{3.939937278078197*^9, 3.93993728357099*^9}},
 CellLabel->"In[1037]:=",
 CellID->2089906751,ExpressionUUID->"0048281e-fec4-49ea-ab23-4ea9ae903abc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"11", ",", "14"}], "}"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "14"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "16"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "14"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "16"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "24"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "24"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"16", ",", "18"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"16", ",", "25"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"15", ",", "24"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"16", ",", "25"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"17", ",", "24"}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.939937284139265*^9},
 CellLabel->"Out[1037]=",
 CellID->949158791,ExpressionUUID->"988883ce-3b90-4f0a-ab38-17681e6ef8f0"]
}, Open  ]],

Cell["Here is an alternative realization:", "Text",
 CellChangeTimes->{3.9399373700801992`*^9, 3.940017741013204*^9},
 CellID->753449733,ExpressionUUID->"c81e0350-b624-442b-a61b-6196fd4e01f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"intervalsForNums2", "[", 
    RowBox[{"nums_List", ",", "ints_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "y", "}"}], ",", 
     RowBox[{
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{"Reap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Sow", "[", 
             RowBox[{"#", ",", 
              RowBox[{"Select", "[", 
               RowBox[{"nums", ",", 
                RowBox[{"Function", "[", 
                 RowBox[{
                  RowBox[{"{", "x", "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<=", "x", "<=", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "]"}]}], 
             "]"}], "&"}], "/@", "ints"}], ",", "_", ",", "List"}], "]"}], 
        "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"y", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{"{", "}"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Complement", "[", 
           RowBox[{"nums", ",", 
            RowBox[{
             RowBox[{"Transpose", "[", "y", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Sort", "[", "y", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9399373719257917`*^9, 3.939937482710093*^9}},
 CellLabel->"In[1038]:=",
 CellID->764244700,ExpressionUUID->"8e42ac90-ace5-41db-bacc-498b24538ae6"],

Cell["Check again:", "Text",
 CellChangeTimes->{{3.939937489370976*^9, 3.939937491351774*^9}},
 CellID->1144900471,ExpressionUUID->"ff5a2e8b-ee66-4e22-9a9d-19694d69a3d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"intervalsForNums2", "[", 
  RowBox[{"numbers", ",", "ints"}], "]"}]], "Input",
 CellChangeTimes->{{3.9399374920735607`*^9, 3.939937497768805*^9}},
 CellLabel->"In[1039]:=",
 CellID->2021629502,ExpressionUUID->"bfa52a77-bdb2-4a78-b3b5-127af8c65e26"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"11", ",", "14"}], "}"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "14"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "14"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "14"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "14"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "24"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "24"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"16", ",", "18"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "16"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "24"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"16", ",", "25"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"17", ",", "24"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "24"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"16", ",", "25"}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.939937498183178*^9},
 CellLabel->"Out[1039]=",
 CellID->1337817548,ExpressionUUID->"ea9a28de-c582-4f02-a1e5-51087eae67ee"]
}, Open  ]],

Cell["\<\
Both these functions can also serve as examples of code modularization (uses \
of Module construct) and functional programming. So far we give them just as \
examples of how typical user-defined functions of several arguments look like.\
\>", "Text",
 CellChangeTimes->{{3.939937526321742*^9, 3.939937537526206*^9}},
 CellID->847631831,ExpressionUUID->"0b8dee94-fb4d-413d-bdc0-5c44d7478cce"],

Cell[TextData[StyleBox["Type checking and function bulletproofing",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{3.939937545606482*^9},
 CellID->1643943729,ExpressionUUID->"07aaa1d4-c127-481e-b178-e6c1b4671fc6"],

Cell["\<\
For the last function, we can add conditions to check if the input is right. \
This will lead to a (small) performance overhead, though.\
\>", "Text",
 CellChangeTimes->{{3.939937554593856*^9, 3.939937560308387*^9}},
 CellID->237651001,ExpressionUUID->"4f15c953-112e-4b9b-8753-3f42816e312c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "intervalsForNumsWithCheck", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"intervalsForNumsWithCheck", "[", 
    RowBox[{"nums_List", ",", "ints_List"}], "]"}], "/;", 
   RowBox[{"And", "[", 
    RowBox[{
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{"NumericQ", "/@", "nums"}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"Union", "[", 
       RowBox[{"Length", "/@", "ints"}], "]"}], "===", 
      RowBox[{"{", "2", "}"}]}], ",", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{"NumericQ", "/@", 
        RowBox[{"Flatten", "[", "ints", "]"}]}], ")"}]}]}], "]"}]}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Union", "/@", "#"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"Transpose", "/@", 
        RowBox[{"Outer", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<=", "#1", "<=", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"#1", ",", "#2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"#1", ",", 
               RowBox[{"{", "}"}]}], "}"}]}], "]"}], "&"}], ",", 
          RowBox[{"Union", "[", "nums", "]"}], ",", "ints", ",", "1"}], 
         "]"}]}], ")"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x___", ",", 
          RowBox[{"{", "}"}], ",", "y___"}], "}"}], ":>", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"{", "x_Integer", "}"}], ":>", "x"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.939937586442307*^9, 3.9399377200142803`*^9}},
 CellLabel->"In[1040]:=",
 CellID->581982381,ExpressionUUID->"bd3a2a76-faf0-4489-ac65-78b587f20a90"],

Cell["\<\
An additional condition checks that the list <nums> indeed contains only \
numeric quantities, that all sublists of the interval list <ints> have length \
2 (that is, they indeed define intervals), and that all elements in the \
interval sublists are also numerical quantities. These conditions are \
implemented rather compactly using functional programming constructs. Note \
that we did not introduce any auxiliary functions which check these \
conditions - these functions actually \[OpenCurlyDoubleQuote]live\
\[CloseCurlyDoubleQuote] inside the condition check itself. Of course in \
cases when several large functions share the same condition checks, it may \
become advantageous to put these checks in separate functions.\
\>", "Text",
 CellChangeTimes->{{3.939937730244068*^9, 3.9399377534658537`*^9}, {
  3.939947095487165*^9, 3.939947095509733*^9}, {3.940017706426878*^9, 
  3.940017706445446*^9}},
 CellID->351481770,ExpressionUUID->"ee5efd23-4c4b-4edc-b444-1b6cf18435f4"],

Cell["\<\
Now that we looked at the way how these type checks can be implemented using \
functional programming constructs, we can consider a different way to \
implement them - based on patterns only:\
\>", "Text",
 CellChangeTimes->{{3.939937760646297*^9, 3.9399377629179153`*^9}, 
   3.940017741032*^9},
 CellID->1763992955,ExpressionUUID->"488535bd-1ba8-48c1-a4e3-5c0d2d8c7ac7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "intervalsForNumsWithCheckPattern", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intervalsForNumsWithCheckPattern", "[", 
   RowBox[{
    RowBox[{"nums", ":", 
     RowBox[{"{", 
      RowBox[{"__", "?", "NumericQ"}], "}"}]}], ",", 
    RowBox[{"ints", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumericQ"}], ",", 
         RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Union", "/@", "#"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"Transpose", "/@", 
        RowBox[{"Outer", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<=", "#1", "<=", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"#1", ",", "#2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"#1", ",", 
               RowBox[{"{", "}"}]}], "}"}]}], "]"}], "&"}], ",", 
          RowBox[{"Union", "[", "nums", "]"}], ",", "ints", ",", "1"}], 
         "]"}]}], ")"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x___", ",", 
          RowBox[{"{", "}"}], ",", "y___"}], "}"}], ":>", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"{", "x_Integer", "}"}], ":>", "x"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.939937791982381*^9, 3.93993782792551*^9}},
 CellLabel->"In[1042]:=",
 CellID->1290267838,ExpressionUUID->"0badf6f0-e862-495c-90ba-c5458189dbdb"],

Cell[TextData[{
 "We see that the pattern-based check is even more concise and elegant (and \
perhaps also faster in this case). We used a variety of pattern building \
blocks here: names for entire patterns (section ",
 ButtonBox["4.2.8",
  BaseStyle->"Hyperlink",
  ButtonData->"4.2.8"],
 "), double underscore (BlankSequence, section ",
 ButtonBox["4.2.4.7",
  BaseStyle->"Hyperlink",
  ButtonData->"4.2.4.7"],
 "), conditional patterns, repeated patterns (section ",
 ButtonBox["4.2.10",
  BaseStyle->"Hyperlink",
  ButtonData->"4.2.10"],
 ")."
}], "Text",
 CellChangeTimes->{{3.939937843667198*^9, 3.9399378536216707`*^9}, {
  3.9399379419641743`*^9, 3.9399379610213757`*^9}},
 CellID->1919753362,ExpressionUUID->"03020622-b03f-43eb-a03c-1a283f5ce9ce"],

Cell["\<\
Let us now check that our functions will not attempt to work on a wrong input.\
\>", "Text",
 CellChangeTimes->{3.93993796823438*^9},
 CellID->1706884601,ExpressionUUID->"a2b058a2-15f4-40c0-9837-1f1e597cb9e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"intervalsForNumsWithCheck", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "]"}], "//", 
  "Short"}]], "Input",
 CellChangeTimes->{{3.9399379743739443`*^9, 3.939937994694604*^9}},
 CellLabel->"In[1044]:=",
 CellID->66938874,ExpressionUUID->"8ca9c3c6-7c4a-4e58-a866-1d68e300bde0"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"{", "}"}]}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}], "}"}]}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.93993799509947*^9},
 CellLabel->"Out[1044]//Short=",
 CellID->1524212935,ExpressionUUID->"d77f2e6e-8340-42eb-8ec9-f40798cfb6ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"intervalsForNumsWithCheckPattern", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "]"}], "//", 
  "Short"}]], "Input",
 CellChangeTimes->{{3.939938008823155*^9, 3.9399380095807343`*^9}},
 CellLabel->"In[1045]:=",
 CellID->114373482,ExpressionUUID->"6ca48b6e-532a-4e06-9d02-182b10f719a0"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"{", "}"}]}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}], "}"}]}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.939938009999851*^9},
 CellLabel->"Out[1045]//Short=",
 CellID->1215055776,ExpressionUUID->"08efb6e4-a230-48fb-b60d-d068bd8ae7ab"]
}, Open  ]],

Cell["Now wrong inputs:", "Text",
 CellChangeTimes->{3.939938017184466*^9},
 CellID->120702344,ExpressionUUID->"7abb6f27-e081-4d95-8cfb-7ad29be685eb"],

Cell[TextData[StyleBox["First attempt:",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{3.93993802618631*^9, 3.940017741050722*^9},
 CellID->1419732840,ExpressionUUID->"682600fb-a559-4864-826d-528b5e0d09a5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"intervalsForNumsWithCheck", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "a", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.93993803431314*^9, 3.939938058646193*^9}, {
  3.939938092558783*^9, 3.9399380929000177`*^9}},
 CellLabel->"In[1048]:=",
 CellID->1133475661,ExpressionUUID->"cfe4920a-85ec-46c9-848f-8b7b8d166377"],

Cell[BoxData[
 RowBox[{"intervalsForNumsWithCheck", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "a", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.9399380604627934`*^9, 3.939938093349736*^9},
 CellLabel->"Out[1049]=",
 CellID->2109346561,ExpressionUUID->"42d62c73-efcb-4853-91ec-7bc61c04b765"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"intervalsForNumsWithCheckPattern", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "a", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9399381020840387`*^9, 3.939938103017412*^9}},
 CellLabel->"In[1050]:=",
 CellID->1955127673,ExpressionUUID->"5dac0500-b798-41bb-ae49-cdc9d5309569"],

Cell[BoxData[
 RowBox[{"intervalsForNumsWithCheckPattern", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "a", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.9399381033754663`*^9},
 CellLabel->"Out[1050]=",
 CellID->57136655,ExpressionUUID->"64e01a5d-5191-4062-948f-3799d171869d"]
}, Open  ]],

Cell["Without protection:", "Text",
 CellChangeTimes->{3.9399381100162582`*^9, 3.940017741069605*^9},
 CellID->1310870095,ExpressionUUID->"5ead2ccd-ca57-4635-b4a8-c02985ee7b6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"intervalsForNums1", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "a", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9399381203820257`*^9, 3.939938121085363*^9}},
 CellLabel->"In[1051]:=",
 CellID->758952092,ExpressionUUID->"1ac14f56-4b5f-4c41-b686-d924b5acf70b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"2", ",", "6"}], "}"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"3", ",", "8"}], "}"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"2", "\[LessEqual]", "a", "\[LessEqual]", "6"}], ",", 
       RowBox[{"{", "a", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "6"}], "}"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"3", "\[LessEqual]", "a", "\[LessEqual]", "8"}], ",", 
       RowBox[{"{", "a", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.93993812164898*^9},
 CellLabel->"Out[1051]=",
 CellID->1130267820,ExpressionUUID->"e7010f5f-c744-4427-ae66-9a8dff98744b"]
}, Open  ]],

Cell[TextData[StyleBox["Second attempt:",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{3.939938135501528*^9, 3.9400177410883427`*^9},
 CellID->112095117,ExpressionUUID->"0c690f4d-fc46-4bc0-8709-7a6ca5e80544"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"intervalsForNumsWithCheck", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.939938148656897*^9, 3.939938152207316*^9}},
 CellLabel->"In[1052]:=",
 CellID->639473000,ExpressionUUID->"257cb295-d2b2-4b70-9d83-60a1aea195b6"],

Cell[BoxData[
 RowBox[{"intervalsForNumsWithCheck", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.939938152574026*^9},
 CellLabel->"Out[1053]=",
 CellID->1137212630,ExpressionUUID->"8dd5aabd-a07c-4872-a97a-308cad4ec5aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"intervalsForNumsWithCheckPattern", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939938160463169*^9, 3.939938161128316*^9}},
 CellLabel->"In[1054]:=",
 CellID->1493383985,ExpressionUUID->"5e967c57-dd4c-417a-af05-abc4c0b870e5"],

Cell[BoxData[
 RowBox[{"intervalsForNumsWithCheckPattern", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.939938161441965*^9},
 CellLabel->"Out[1054]=",
 CellID->934552468,ExpressionUUID->"9347e09b-872b-4b25-a278-f96ed6bd05ce"]
}, Open  ]],

Cell["Without protection:", "Text",
 CellChangeTimes->{3.939938168559413*^9, 3.94001774110711*^9},
 CellID->406649278,ExpressionUUID->"35d74044-0446-46b0-8929-4ad5c735eac1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"intervalsForNums1", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.939938177920539*^9},
 CellLabel->"In[1055]:=",
 CellID->1261450592,ExpressionUUID->"a8f57568-86e1-464d-b2d6-11eaa9ecf017"],

Cell[BoxData[
 TemplateBox[{
  "Transpose", "nmtx", 
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"If\\\", \\\"[\\\", RowBox[{RowBox[{\\\"2\\\", \\\"\
\[LessEqual]\\\", \\\"a\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \
\\\",\\\", \\\"a\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", RowBox[{\\\"{\\\", \
\\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2\\\", \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \
\\\"}\\\"}]}], \\\"}\\\"}]\\) cannot be transposed.\"", 2, 1055, 56, 
   26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939938178303982*^9},
 CellLabel->"During evaluation of In[1055]:=",
 CellID->935686976,ExpressionUUID->"c3533e27-1b89-45f6-aa25-19fb0fb96099"],

Cell[BoxData[
 TemplateBox[{
  "Transpose", "nmtx", 
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"If\\\", \\\"[\\\", RowBox[{RowBox[{\\\"3\\\", \\\"\
\[LessEqual]\\\", \\\"a\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \
\\\",\\\", \\\"a\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\", RowBox[{\\\"{\\\", \
\\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \
\\\",\\\", \\\"8\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}]\\) cannot \
be transposed.\"", 2, 1055, 57, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939938178331532*^9},
 CellLabel->"During evaluation of In[1055]:=",
 CellID->68258651,ExpressionUUID->"8651c01d-27ef-4c34-8bbe-8d9f15d6baaf"],

Cell[BoxData[
 TemplateBox[{
  "Transpose", "nmtx", 
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"If\\\", \\\"[\\\", RowBox[{RowBox[{\\\"4\\\", \\\"\
\[LessEqual]\\\", \\\"a\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"4\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \
\\\",\\\", \\\"a\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", RowBox[{\\\"{\\\", \
\\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"4\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \
\\\",\\\", \\\"8\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}]\\) cannot \
be transposed.\"", 2, 1055, 58, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.93993817834404*^9},
 CellLabel->"During evaluation of In[1055]:=",
 CellID->466879859,ExpressionUUID->"854020e1-dc96-40b5-999e-a3bbf5275ee2"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Transpose\\\", \\\"::\\\
\", \\\"nmtx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 1055, 59, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9399381783554287`*^9},
 CellLabel->"During evaluation of In[1055]:=",
 CellID->2092027722,ExpressionUUID->"088c9030-984e-4605-a4c7-baee265c4e2a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{
         RowBox[{"If", "[", 
           RowBox[{
             RowBox[{"2", "\[LessEqual]", "a"}], ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", 
                 RowBox[{"{", 
                   RowBox[{"2", ",", "a"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "}"}]},
    "Transpose"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{
         RowBox[{"If", "[", 
           RowBox[{
             RowBox[{"3", "\[LessEqual]", "a"}], ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", 
                 RowBox[{"{", 
                   RowBox[{"2", ",", "a"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", "3", "}"}]}], "]"}], ",", 
         RowBox[{"{", 
           RowBox[{"3", ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "}"}]},
    "Transpose"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{
         RowBox[{"If", "[", 
           RowBox[{
             RowBox[{"4", "\[LessEqual]", "a"}], ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", 
                 RowBox[{"{", 
                   RowBox[{"2", ",", "a"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", "4", "}"}]}], "]"}], ",", 
         RowBox[{"{", 
           RowBox[{"4", ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "}"}]},
    "Transpose"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{
         RowBox[{"If", "[", 
           RowBox[{
             RowBox[{"5", "\[LessEqual]", "a"}], ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", 
                 RowBox[{"{", 
                   RowBox[{"2", ",", "a"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", "5", "}"}]}], "]"}], ",", 
         RowBox[{"{", 
           RowBox[{"5", ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "}"}]},
    "Transpose"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{
         RowBox[{"If", "[", 
           RowBox[{
             RowBox[{"6", "\[LessEqual]", "a"}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", 
                 RowBox[{"{", 
                   RowBox[{"2", ",", "a"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", "6", "}"}]}], "]"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "}"}]},
    "Transpose"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{
         RowBox[{"If", "[", 
           RowBox[{
             RowBox[{"7", "\[LessEqual]", "a"}], ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", 
                 RowBox[{"{", 
                   RowBox[{"2", ",", "a"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", "7", "}"}]}], "]"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "}"}]},
    "Transpose"]}], "}"}]], "Output",
 CellChangeTimes->{3.939938178366651*^9},
 CellLabel->"Out[1055]=",
 CellID->2107654970,ExpressionUUID->"92439078-8cd6-4742-a593-7ba6b40dbd8a"]
}, Open  ]],

Cell[TextData[StyleBox["Third attempt:",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{3.9399381881664667`*^9, 3.940017741127146*^9},
 CellID->1685620895,ExpressionUUID->"586c984c-e13c-4b8f-a4d2-537ae88443bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"intervalsForNumsWithCheck", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939938199743861*^9, 3.939938205700776*^9}},
 CellLabel->"In[1056]:=",
 CellID->626111041,ExpressionUUID->"c94f1f3b-55b4-4a75-8595-8e264a295ff6"],

Cell[BoxData[
 RowBox[{"intervalsForNumsWithCheck", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.939938206411181*^9},
 CellLabel->"Out[1056]=",
 CellID->1047256308,ExpressionUUID->"9cde3b93-9d7a-4286-b57b-5c331cd8579d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"intervalsForNumsWithCheckPattern", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9399382156189003`*^9, 3.939938219973297*^9}},
 CellLabel->"In[1058]:=",
 CellID->460797744,ExpressionUUID->"ece652e7-55c5-45d8-8738-c2d0a458e644"],

Cell[BoxData[
 RowBox[{"intervalsForNumsWithCheckPattern", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.939938216249441*^9, 3.939938220323167*^9}},
 CellLabel->"Out[1058]=",
 CellID->271958236,ExpressionUUID->"11f19d1f-38b7-4281-8ad6-a113b7861b04"]
}, Open  ]],

Cell["Without protection:", "Text",
 CellChangeTimes->{3.9399382269662323`*^9, 3.940017741145596*^9},
 CellID->149857354,ExpressionUUID->"aec1d28e-b7d3-4a23-9368-919f2bba7ab2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"intervalsForNums1", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.939938238069131*^9},
 CellLabel->"In[1059]:=",
 CellID->1801714394,ExpressionUUID->"02ee7083-bde2-4462-9ca4-fe513a9e6529"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"1\\\", \\\"}\\\"}]\\) does not exist.\"", 2, 1059, 60, 
   26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939938238478763*^9},
 CellLabel->"During evaluation of In[1059]:=",
 CellID->1066177284,ExpressionUUID->"84ffae37-27f3-4843-a407-b6d8c2bd7d9b"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"1\\\", \\\"}\\\"}]\\) does not exist.\"", 2, 1059, 61, 
   26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939938238504512*^9},
 CellLabel->"During evaluation of In[1059]:=",
 CellID->638061620,ExpressionUUID->"22ae60a2-a9f7-42ba-b35f-abb056cabada"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"1\\\", \\\"}\\\"}]\\) does not exist.\"", 2, 1059, 62, 
   26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939938238516623*^9},
 CellLabel->"During evaluation of In[1059]:=",
 CellID->1515797869,ExpressionUUID->"e1e8be1a-0c78-421e-af31-f36107cb09ba"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 1059, 63, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939938238527371*^9},
 CellLabel->"During evaluation of In[1059]:=",
 CellID->416279922,ExpressionUUID->"ea4bb77d-3145-4625-806c-d3ea0d4d4988"],

Cell[BoxData[
 TemplateBox[{
  "Transpose", "nmtx", 
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\"{\\\", \
\\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"If\\\", \\\"[\\\", RowBox[{RowBox[{\\\"1\\\", \\\"\[LessEqual]\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\
\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\"{\\\", \
\\\"1\\\", \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"1\\\", \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}]}], \\\"}\\\"}]\\) cannot be transposed.\"", 2, 1059, 64, 
   26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939938238537908*^9},
 CellLabel->"During evaluation of In[1059]:=",
 CellID->2062410775,ExpressionUUID->"22f0df75-c921-40fd-bc0a-1a11d1353206"],

Cell[BoxData[
 TemplateBox[{
  "Transpose", "nmtx", 
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"6\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"If\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"2\\\", \\\"\[LessEqual]\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\
\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", RowBox[{\\\"{\\\", \
\\\"1\\\", \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"2\\\", \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}]}], \\\"}\\\"}]\\) cannot be transposed.\"", 2, 1059, 65, 
   26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939938238548108*^9},
 CellLabel->"During evaluation of In[1059]:=",
 CellID->404349198,ExpressionUUID->"59d110ea-a8a3-4536-b42b-5a78721f6481"],

Cell[BoxData[
 TemplateBox[{
  "Transpose", "nmtx", 
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"6\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\", \\\"8\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"3\\\", \\\"\[LessEqual]\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"1\\\", \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\
\[RightDoubleBracket]\\\"}]}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}]}], \\\
\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]}], \
\\\"}\\\"}]\\) cannot be transposed.\"", 2, 1059, 66, 26587777319895376970, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939938238557877*^9},
 CellLabel->"During evaluation of In[1059]:=",
 CellID->1258711678,ExpressionUUID->"8ec15689-ea10-4bce-9503-2fbde5f07153"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Transpose\\\", \\\"::\\\
\", \\\"nmtx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 1059, 67, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939938238568166*^9},
 CellLabel->"During evaluation of In[1059]:=",
 CellID->305765549,ExpressionUUID->"413181e3-3936-4051-bc82-7ea43a02e7ef"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"1\\\", \\\"\[LeftDoubleBracket]\
\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of \
object.\"", 2, 1059, 68, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939938238577879*^9},
 CellLabel->"During evaluation of In[1059]:=",
 CellID->73214772,ExpressionUUID->"3a182197-1b7d-4a40-83a1-77ad23410724"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"1\\\", \\\"\[LeftDoubleBracket]\
\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of \
object.\"", 2, 1059, 69, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939938238587648*^9},
 CellLabel->"During evaluation of In[1059]:=",
 CellID->12543273,ExpressionUUID->"e757605a-d9b1-4072-a3c7-a052c77baa49"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"1\\\", \\\"\[LeftDoubleBracket]\
\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of \
object.\"", 2, 1059, 70, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939938238597219*^9},
 CellLabel->"During evaluation of In[1059]:=",
 CellID->361391905,ExpressionUUID->"62510a14-52f9-4f2b-b2d3-006b040e0706"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 1059, 71, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9399382386069937`*^9},
 CellLabel->"During evaluation of In[1059]:=",
 CellID->829993619,ExpressionUUID->"372653ca-964a-4869-8045-fffb1e887b13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{
         RowBox[{"If", "[", 
           RowBox[{
             RowBox[{"1", "\[LessEqual]", 
               
               RowBox[{
                "1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
              ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
             RowBox[{"{", "1", "}"}]}], "]"}], ",", 
         RowBox[{"{", "1", "}"}]}], "}"}]},
    "Transpose"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{
         RowBox[{"If", "[", 
           RowBox[{
             RowBox[{"2", "\[LessEqual]", 
               
               RowBox[{
                "1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
              ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "1"}], "}"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], ",", 
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"2", ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "6"}], "}"}]}], "}"}]}], "}"}]},
    "Transpose"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{
         RowBox[{"If", "[", 
           RowBox[{
             RowBox[{"3", "\[LessEqual]", 
               
               RowBox[{
                "1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
              ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "1"}], "}"}], ",", 
             RowBox[{"{", "3", "}"}]}], "]"}], ",", 
         RowBox[{"{", 
           RowBox[{"3", ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"3", ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "}"}]},
    "Transpose"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{
         RowBox[{"If", "[", 
           RowBox[{
             RowBox[{"4", "\[LessEqual]", 
               
               RowBox[{
                "1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
              ",", 
             RowBox[{"{", 
               RowBox[{"4", ",", "1"}], "}"}], ",", 
             RowBox[{"{", "4", "}"}]}], "]"}], ",", 
         RowBox[{"{", 
           RowBox[{"4", ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"4", ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "}"}]},
    "Transpose"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{
         RowBox[{"If", "[", 
           RowBox[{
             RowBox[{"5", "\[LessEqual]", 
               
               RowBox[{
                "1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
              ",", 
             RowBox[{"{", 
               RowBox[{"5", ",", "1"}], "}"}], ",", 
             RowBox[{"{", "5", "}"}]}], "]"}], ",", 
         RowBox[{"{", 
           RowBox[{"5", ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"5", ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "}"}]},
    "Transpose"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{
         RowBox[{"If", "[", 
           RowBox[{
             RowBox[{"6", "\[LessEqual]", 
               
               RowBox[{
                "1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
              ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "1"}], "}"}], ",", 
             RowBox[{"{", "6", "}"}]}], "]"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", 
             RowBox[{"{", 
               RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"6", ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "}"}]},
    "Transpose"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{
         RowBox[{"If", "[", 
           RowBox[{
             RowBox[{"7", "\[LessEqual]", 
               
               RowBox[{
                "1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
              ",", 
             RowBox[{"{", 
               RowBox[{"7", ",", "1"}], "}"}], ",", 
             RowBox[{"{", "7", "}"}]}], "]"}], ",", 
         RowBox[{"{", "7", "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"7", ",", 
             RowBox[{"{", 
               RowBox[{"3", ",", "8"}], "}"}]}], "}"}]}], "}"}]},
    "Transpose"]}], "}"}]], "Output",
 CellChangeTimes->{3.939938238617036*^9},
 CellLabel->"Out[1059]=",
 CellID->1796467268,ExpressionUUID->"33568055-3d26-4524-a5e0-3e742d016248"]
}, Open  ]],

Cell["\<\
It is usually a good idea to protect your function from the wrong input. Of \
course, chances are that the wrong input uncaught by your code will trigger \
error messages of some built-in functions you are using, but if you want to \
build on the functionality you are presently developing, it is best to make \
your own functions acting as much like built-ins as possible. Once the \
quick-and-dirty solution is found and tested, it is a good practice to add \
input checks (just make sure that they are not redundant).\
\>", "Text",
 CellChangeTimes->{{3.939938247441515*^9, 3.939938266814062*^9}},
 CellID->1752780103,ExpressionUUID->"39628990-ebf4-4801-aa44-f7ba94121fd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions with variable number of arguments", "Subsubsection",
 CellChangeTimes->{3.9399382749625053`*^9},
 CellID->571933779,ExpressionUUID->"c52481bd-164f-46cf-a266-2a38c0485ec0"],

Cell["\<\
Sometimes one may need to define a function whose number of arguments is not \
fixed, either because it can change from one call to the other, or because \
there is no need to refer to the individual arguments, or both. To do this, \
one may use BlankSequence (__) or BlankNullSequence (___), depending on \
whether or not the zero arguments case has to be included. Several built-in \
functions are in fact defined on an arbitrary number of arguments, examples \
being Plus, Times, Equal, Alternatives, SameQ and a few others.\
\>", "Text",
 CellChangeTimes->{{3.93993828130894*^9, 3.939938304985783*^9}},
 CellID->354219681,ExpressionUUID->"7716b359-e294-4427-b0a8-a9f431642af1"],

Cell["\<\
As an example, we will define our own version of Plus function:\
\>", "Text",
 CellChangeTimes->{3.939938310905223*^9, 3.940017741166556*^9},
 CellID->197224172,ExpressionUUID->"793aa102-23b1-410e-b6e7-f860bd49245e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ourPlus", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ourPlus", "[", "x__", "]"}], ":=", 
   RowBox[{"Plus", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ourPlus", "[", "1", "]"}], ",", 
   RowBox[{"ourPlus", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"ourPlus", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.939938314471483*^9, 3.9399383407872334`*^9}},
 CellLabel->"In[1060]:=",
 CellID->758592971,ExpressionUUID->"1529c40e-c533-4cff-8ab6-6c4e4eab8190"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.9399383412224693`*^9},
 CellLabel->"Out[1062]=",
 CellID->236299772,ExpressionUUID->"c1853675-650a-421a-a235-9ef84cd679eb"]
}, Open  ]],

Cell["\<\
The built-in Plus is however defined also for zero arguments (through \
convention):\
\>", "Text",
 CellChangeTimes->{{3.939938348420662*^9, 3.939938350531352*^9}, 
   3.940017741185525*^9},
 CellID->431294802,ExpressionUUID->"36e8d9e1-5dac-4d10-9c10-3933a623f58b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plus", "[", "]"}]], "Input",
 CellChangeTimes->{{3.939938355288578*^9, 3.9399383561239767`*^9}},
 CellLabel->"In[1063]:=",
 CellID->628621790,ExpressionUUID->"d75b7662-ed5c-402c-ae06-b4f09b4c0ac4"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.939938356465884*^9},
 CellLabel->"Out[1063]=",
 CellID->744332423,ExpressionUUID->"b29861ef-8d19-4834-90e1-56f8b40740c2"]
}, Open  ]],

Cell["\<\
Since we used BlankSequence, the zero argument case is not included in our \
function definition:\
\>", "Text",
 CellChangeTimes->{3.9399383660029573`*^9, 3.9400177412042723`*^9},
 CellID->902789586,ExpressionUUID->"7ca72d05-2818-4ba7-b661-122aacdbda9e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ourPlus", "[", "]"}]], "Input",
 CellChangeTimes->{{3.939938368633239*^9, 3.939938370387435*^9}},
 CellLabel->"In[1064]:=",
 CellID->646660499,ExpressionUUID->"5c6c5d6a-649b-4a8a-8f43-a3dcb376683f"],

Cell[BoxData[
 RowBox[{"ourPlus", "[", "]"}]], "Output",
 CellChangeTimes->{3.939938370791313*^9},
 CellLabel->"Out[1064]=",
 CellID->752119985,ExpressionUUID->"64f9e121-646d-4f5b-b40e-0a213be3b6eb"]
}, Open  ]],

Cell["\<\
If we want it to behave just as the builit-in Plus in all cases, we have to \
use BlankNullSequence:\
\>", "Text",
 CellChangeTimes->{{3.939938378496241*^9, 3.939938381174128*^9}, 
   3.940017741223174*^9, 3.940740879469777*^9},
 CellID->526501512,ExpressionUUID->"a733cda4-6e42-48bf-9a18-7a34b88588ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ourPlus", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ourPlus", "[", "x___", "]"}], ":=", 
   RowBox[{"Plus", "[", "x", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.939938392075943*^9},
 CellLabel->"In[1065]:=",
 CellID->735540420,ExpressionUUID->"a1640511-5b54-49e9-aff3-8a930b5a9133"],

Cell["Check now:", "Text",
 CellChangeTimes->{{3.939938394970613*^9, 3.939938397676445*^9}},
 CellID->317320287,ExpressionUUID->"cabf68e1-406b-4af1-8c96-aee8441f99e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ourPlus", "[", "]"}]], "Input",
 CellChangeTimes->{{3.939938399235619*^9, 3.939938401241363*^9}},
 CellLabel->"In[1067]:=",
 CellID->807063002,ExpressionUUID->"022859ae-84d0-4df6-89a2-6b39ea8de0fc"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.9399384015053463`*^9},
 CellLabel->"Out[1067]=",
 CellID->1136260138,ExpressionUUID->"0e893c0a-66c7-4b27-b5a0-031fdfa58d70"]
}, Open  ]],

Cell["\<\
Let us now define a function which will multiply its first argument by the \
sum of all others:\
\>", "Text",
 CellChangeTimes->{3.9399384698772173`*^9, 3.940017741241922*^9},
 CellID->1699550242,ExpressionUUID->"cb1a5e34-cb8f-44f6-8f1c-c44069268873"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "firstMultiply", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"firstMultiply", "[", 
    RowBox[{"x_", ",", "y___"}], "]"}], ":=", 
   RowBox[{"x", "*", 
    RowBox[{"Plus", "[", "y", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9399384784223557`*^9, 3.939938495398259*^9}},
 CellLabel->"In[1068]:=",
 CellID->169403379,ExpressionUUID->"82a54467-e607-4c8b-8398-480298c52bf9"],

Cell["\<\
We have included the case when there is a single argument. Check:\
\>", "Text",
 CellChangeTimes->{3.939938501329495*^9, 3.940017741260551*^9},
 CellID->941884910,ExpressionUUID->"dafac20b-5e42-4af8-a64b-8206948a155c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"firstMultiply", "[", "1", "]"}], ",", 
   RowBox[{"firstMultiply", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"firstMultiply", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939938508629737*^9, 3.9399385222010393`*^9}},
 CellLabel->"In[1070]:=",
 CellID->1609951476,ExpressionUUID->"fed90a97-6c58-4d5d-9263-7102e32b056d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "2", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.939938522608902*^9},
 CellLabel->"Out[1070]=",
 CellID->1154392252,ExpressionUUID->"8ef95363-bb38-44b9-8f03-f3125473a297"]
}, Open  ]],

Cell["\<\
There is no ambiguity in this case as to which arguments will be matched with \
<x_> pattern and which with <y___>, since <x_> states that there should be \
exactly one - the first one, and all the rest are matched by <y___>.\
\>", "Text",
 CellChangeTimes->{{3.939938531031742*^9, 3.939938536948913*^9}, {
   3.939947095539495*^9, 3.939947095607766*^9}, {3.9400177064666557`*^9, 
   3.9400177065219717`*^9}, 3.94074064423603*^9},
 CellID->1503312366,ExpressionUUID->"cdcfb0af-5dd9-4178-889a-49890db71f11"],

Cell["\<\
The other way to define the same function would be not to split arguments on \
the level of the definition but to do that later, in the body of the function:\
\>", "Text",
 CellChangeTimes->{{3.939938546333022*^9, 3.9399385483673763`*^9}, 
   3.9400177412791557`*^9},
 CellID->1441407590,ExpressionUUID->"ff601374-7a1d-49ab-b1f4-ca5ddddd2dc3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "firstMultiplyAlt", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"firstMultiplyAlt", "[", "x__", "]"}], ":=", 
   RowBox[{
    RowBox[{"First", "[", 
     RowBox[{"{", "x", "}"}], "]"}], "*", 
    RowBox[{"Apply", "[", 
     RowBox[{"Plus", ",", 
      RowBox[{"Rest", "[", 
       RowBox[{"{", "x", "}"}], "]"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939938565409815*^9, 3.939938595807678*^9}},
 CellLabel->"In[1071]:=",
 CellID->979931908,ExpressionUUID->"1fe1082b-bffd-4beb-8848-138d6da620b1"],

Cell["\<\
This is exactly equivalent to the previous realization. The role of Apply \
here is to hand to Plus the interior of the list Rest[{x}], rather than the \
list itself.:\
\>", "Text",
 CellChangeTimes->{{3.9399386034522953`*^9, 3.939938605562972*^9}, 
   3.940017741297813*^9},
 CellID->1549397776,ExpressionUUID->"cb1979dd-aece-481f-8886-2866c0ac25e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"firstMultiplyAlt", "[", "1", "]"}], ",", 
   RowBox[{"firstMultiplyAlt", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"firstMultiplyAlt", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939938615535136*^9, 3.939938623157292*^9}},
 CellLabel->"In[1073]:=",
 CellID->878279892,ExpressionUUID->"6ec4be02-08d3-48e4-9740-b11f1466a9bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "2", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.939938623604755*^9},
 CellLabel->"Out[1073]=",
 CellID->113921891,ExpressionUUID->"00919331-36cb-468d-84e1-1b0655fb6e0b"]
}, Open  ]],

Cell["\<\
One has however to avoid ambiguous patterns like the following one:\
\>", "Text",
 CellChangeTimes->{3.9399386327846746`*^9, 3.940017741316379*^9},
 CellID->1198977484,ExpressionUUID->"1bbe8bec-a73e-4ad5-8795-b962d1b955e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x__", ",", "y__"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Plus", "[", "x", "]"}], "*", 
    RowBox[{"Plus", "[", "y", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939938638983789*^9, 3.939938650681944*^9}},
 CellLabel->"In[1074]:=",
 CellID->444849982,ExpressionUUID->"97d9fdfa-a1ba-40ef-af75-d657c17911b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939938653637601*^9, 3.939938662450824*^9}},
 CellLabel->"In[1076]:=",
 CellID->1396946531,ExpressionUUID->"6000bd50-a656-4b7f-910e-a5e1c6c6501b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "5", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.939938662851308*^9},
 CellLabel->"Out[1076]=",
 CellID->561800719,ExpressionUUID->"618ef780-bd05-4a54-b334-ae70d49ffc1b"]
}, Open  ]],

Cell["\<\
This example is in fact useful to examine the way how the pattern-matcher \
works: it is obvious that it starts from the left, and once it finds out that \
<1> matches <x__>, then all the rest of the arguments match <y__>. However, \
one should not rely on a particular behavior of the pattern-matcher, and \
neither should one use ambiguous patterns like the one above.\
\>", "Text",
 CellChangeTimes->{{3.9399386739823236`*^9, 3.939938687518668*^9}, {
   3.939947095630211*^9, 3.939947095675308*^9}, {3.9400177065405397`*^9, 
   3.940017706577446*^9}, 3.9407406442551003`*^9},
 CellID->1846572021,ExpressionUUID->"7a6dd9f8-6dae-4079-a22b-8fc08cc9b730"],

Cell[TextData[{
 "The more general pattern we use in a function definition, the more \
dangerous it is in the sense that it may match incorrectly in situations \
completely unforeseen by the developer. We already discussed this issue when \
we considered patterns and rules separately (section ",
 ButtonBox["4.2.4.7",
  BaseStyle->"Hyperlink",
  ButtonData->"4.2.4.7"],
 "), but this is as true for function definitions as it was for local rules \
and patterns (since function definitions are just global rules). The less you \
use these patterns the safer your functions will be - use them only when \
necessary."
}], "Text",
 CellChangeTimes->{{3.9399386948334303`*^9, 3.939938730256303*^9}},
 CellID->618793958,ExpressionUUID->"b8b1e50f-76a1-43b5-8f4b-0bb03fdba219"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions with multiple definitions", "Subsection",
 CellChangeTimes->{3.939938737217462*^9},
 CellID->1611371354,ExpressionUUID->"e311e2a1-7eb2-433b-be71-aed9118a4f01"],

Cell[TextData[{
 "We have seen such functions many time in our examples already, but here we \
will treat them more systematically. So, In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " a function can have more than one definition. More precisely, there can be \
more than one rule associated with a function symbol, with different rules \
applying on different forms of arguments. In particular, one and the same \
function can be defined differently on different number and types of \
arguments. All this is possible because patterns are used for function \
definitions. To start with, consider an example:"
}], "Text",
 CellChangeTimes->{{3.939939000700376*^9, 3.93993901620123*^9}},
 CellID->652370286,ExpressionUUID->"87fcff01-965e-4205-8ffe-1758d8030546"],

Cell[CellGroupData[{

Cell["Example: a discontinuous function", "Subsubsection",
 CellChangeTimes->{3.939939023155776*^9},
 CellID->783420168,ExpressionUUID->"138351db-c99f-4566-bc67-29a159912ed2"],

Cell["\<\
Consider a function which is 1 on integer numbers and -1 on those which are \
not integer (in the spirit of the Dirichlet function - the latter is very \
different of course, being defined differently on rational and irrational \
numbers):\
\>", "Text",
 CellChangeTimes->{{3.93993902963205*^9, 3.9399390638608103`*^9}, 
   3.940017741334996*^9},
 CellID->720523819,ExpressionUUID->"216a446d-0c31-416b-bd1d-b46601ac42b3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_Integer", "]"}], ":=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"-", "1"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939939066321517*^9, 3.939939076686018*^9}},
 CellLabel->"In[1077]:=",
 CellID->232221635,ExpressionUUID->"e1f81cc1-2a9e-417d-80fb-059b075c618c"],

Cell["We check:", "Text",
 CellChangeTimes->{{3.939939079007739*^9, 3.939939080389233*^9}},
 CellID->779052552,ExpressionUUID->"9ab1ca41-0d28-4afa-addd-368954872672"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "1.5", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "2.5", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}], ",", 
   RowBox[{"f", "[", "Pi", "]"}], ",", 
   RowBox[{"f", "[", "E", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939939097145773*^9, 3.93993911331328*^9}},
 CellLabel->"In[1080]:=",
 CellID->1317622131,ExpressionUUID->"f0297b98-e99a-4c22-abeb-d0cb5c7e9c87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939939113516032*^9},
 CellLabel->"Out[1080]=",
 CellID->1467239346,ExpressionUUID->"228a4b53-bad3-4f07-ac1f-bd9e0dfa9bf2"]
}, Open  ]],

Cell["\<\
Notice that in the second part of our definition in this case we don\
\[CloseCurlyQuote] t necessarily need to use a pattern that is exact opposite \
of the first one, which would look like f[x_ /;Not[IntegerQ[x]]]. This is so \
because when the first pattern does not match, the second will match \
automatically, since it matches any single expression.\
\>", "Text",
 CellChangeTimes->{{3.9399391220882196`*^9, 3.9399391392918386`*^9}},
 CellID->336969721,ExpressionUUID->"912e2500-40d0-41b9-8462-482c3e46dccc"],

Cell["\<\
It is interesting that if we plot this function, the values on the integers \
(1) are not visible. One may think that this is because the probability that \
the sample point in the Plot procedure becomes exactly integer is very small \
(integers represent a set of measure 0). However, the truth is simpler: the \
numerical values for the sample points will never match the _Integer pattern \
just syntactically.\
\>", "Text",
 CellChangeTimes->{{3.939939149249298*^9, 3.939939167346031*^9}},
 CellID->2127851136,ExpressionUUID->"0ba0d6c1-cffd-48bd-b946-e934b61aa72e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939939172730023*^9, 3.9399391772551613`*^9}},
 CellLabel->"In[1081]:=",
 CellID->753908443,ExpressionUUID->"cd24240b-6d96-4921-aac6-96b4c0912dee"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpduOAQw+7Ge//Uj9rfxOexh/4an5ha/l
T8L569Z33s7RuwXnp9tfnPmm6DGcn/dU8/GWdS/hfC7FFvX7Fh/g/D6B01oL
Ez7D+Um3Q/Yzn/kG5xcebUnKV/8F528s4AmW8PyLcE919iuDcAYHGL9p/p/A
L28Y4XyGyw8c9lQxw/lqJWkVIVqscP6Tr9PDuPeywfleT7NqJxVywPl+TyZo
y8lxwfmvDic1nFjLDefrCV6TdY7nhfO57L8m3vnMB+e7v436rhQqAOffOJTC
GKUjCOdv7TgSp/AVwU9jLX1w7pwQnJ9cVL2VZ5YwnK+frn3OJ1EEzj8vpMNd
aikK5+9e1zRbh1kMzq9m1Ao4cxfB57pT5ZG3RRzOf7pMccr8Ggk4f4qGJMvO
UEk4f8KstOOJClJwftSU2HM8zxH8Hy5Lf87fJw3nP37qVHGoXQbOX2RrKH02
URbOX9taKpiuKwfnt4cmezN/RfBN7yxc2X5WHs6foTl77VlvBTi//kDvDO+d
CL6vdOjSUyqKcL5j3vFowU4Ef75MksqZrwi+yuHl0/yilRD+0z2kdWkfgp/2
meXiSS1lOD9p4yeFzn4Ef8Ilnt4jxxH8fZ/Vfv7/j+ADAFtMDWk=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpduOAQw+7Ge//Uj9rfxOexh/4an5ha/l
T8L569Z33s7RuwXnp9tfnPmm6DGcn/dU8/GWdS/hfC7FFvX7Fh/g/D6B01oL
Ez7D+Um3Q/Yzn/kG5xcebUnKV/8F528s4AmW8PyLcE919iuDcAYHGL9p/p/A
L28Y4XyGyw8c9lQxw/lqJWkVIVqscP6Tr9PDuPeywfleT7NqJxVywPl+TyZo
y8lxwfmvDic1nFjLDefrCV6TdY7nhfO57L8m3vnMB+e7v436rhQqAOffOJTC
GKUjCOdv7TgSp/AVwU9jLX1w7pwQnJ9cVL2VZ5YwnK+frn3OJ1EEzj8vpMNd
aikK5+9e1zRbh1kMzq9m1Ao4cxfB57pT5ZG3RRzOf7pMccr8Ggk4f4qGJMvO
UEk4f8KstOOJClJwftSU2HM8zxH8Hy5Lf87fJw3nP37qVHGoXQbOX2RrKH02
URbOX9taKpiuKwfnt4cmezN/RfBN7yxc2X5WHs6foTl77VlvBTi//kDvDO+d
CL6vdOjSUyqKcL5j3vFowU4Ef75MksqZrwi+yuHl0/yilRD+0z2kdWkfgp/2
meXiSS1lOD9p4yeFzn4Ef8Ilnt4jxxH8fZ/Vfv7/j+ADAFtMDWk=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 10}, {-2., 0.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 10}, {-2., 0.}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpduOAQw+7Ge//Uj9rfxOexh/4an5ha/l
T8L569Z33s7RuwXnp9tfnPmm6DGcn/dU8/GWdS/hfC7FFvX7Fh/g/D6B01oL
Ez7D+Um3Q/Yzn/kG5xcebUnKV/8F528s4AmW8PyLcE919iuDcAYHGL9p/p/A
L28Y4XyGyw8c9lQxw/lqJWkVIVqscP6Tr9PDuPeywfleT7NqJxVywPl+TyZo
y8lxwfmvDic1nFjLDefrCV6TdY7nhfO57L8m3vnMB+e7v436rhQqAOffOJTC
GKUjCOdv7TgSp/AVwU9jLX1w7pwQnJ9cVL2VZ5YwnK+frn3OJ1EEzj8vpMNd
aikK5+9e1zRbh1kMzq9m1Ao4cxfB57pT5ZG3RRzOf7pMccr8Ggk4f4qGJMvO
UEk4f8KstOOJClJwftSU2HM8zxH8Hy5Lf87fJw3nP37qVHGoXQbOX2RrKH02
URbOX9taKpiuKwfnt4cmezN/RfBN7yxc2X5WHs6foTl77VlvBTi//kDvDO+d
CL6vdOjSUyqKcL5j3vFowU4Ef75MksqZrwi+yuHl0/yilRD+0z2kdWkfgp/2
meXiSS1lOD9p4yeFzn4Ef8Ilnt4jxxH8fZ/Vfv7/j+ADAFtMDWk=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 10}, {-2., 0.}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-2., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.939939177682905*^9},
 CellLabel->"Out[1081]=",
 CellID->605338381,ExpressionUUID->"61f82b4b-9e49-4523-b179-813849da42ee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Adding more definitions", "Subsubsection",
 CellChangeTimes->{3.939939193754408*^9},
 CellID->1535247332,ExpressionUUID->"8fea059e-6094-424c-ab58-1c9507ff94e5"],

Cell["\<\
Let us now add another definition to our function, so that it will give 2 on \
every even number:\
\>", "Text",
 CellChangeTimes->{3.939939206080216*^9, 3.940017741354054*^9},
 CellID->885890219,ExpressionUUID->"d7b2fbb8-f8be-480f-ae5e-839608f65aa9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_Integer", "?", "EvenQ"}], "]"}], ":=", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.939939211344439*^9, 3.939939218747924*^9}},
 CellLabel->"In[1082]:=",
 CellID->2029211298,ExpressionUUID->"17e09586-1e8e-4513-8c7c-67b1eaf34d6d"],

Cell["Check now:", "Text",
 CellChangeTimes->{{3.939939221078189*^9, 3.939939222802392*^9}},
 CellID->1895680850,ExpressionUUID->"888f89fc-061b-4e75-8bde-955798d4dae8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "1.5", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "2.5", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}], ",", 
   RowBox[{"f", "[", "Pi", "]"}], ",", 
   RowBox[{"f", "[", "E", "]"}]}], "}"}]], "Input",
 CellLabel->"In[1083]:=",
 CellID->1870441211,ExpressionUUID->"88acb78e-e853-48fe-8683-3a41c0f2d8f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "1"}], ",", "2", ",", 
   RowBox[{"-", "1"}], ",", "2", ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939939231250909*^9},
 CellLabel->"Out[1083]=",
 CellID->1899498952,ExpressionUUID->"16c19088-e542-403a-9b0a-15583b32c264"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 CellChangeTimes->{{3.93993925398403*^9, 3.939939254295741*^9}},
 CellLabel->"In[1084]:=",
 CellID->1363840997,ExpressionUUID->"7ab73eb1-f8b9-4cb9-b423-d9ef3ec7e95d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"x_Integer", "?", "EvenQ"}], "]"}], ":=", 
                    "2"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"f", "[", "x_Integer", "]"}], ":=", "1"}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{"f", "[", "x_", "]"}], ":=", 
                    RowBox[{"-", "1"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`f\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{12.5, {1.42974853515625, 11.07025146484375}}],
               True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               
               ImageSizeCache->{
                12.5, {1.42974853515625, 11.07025146484375}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`f", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`f, {$CellContext`f[
         PatternTest[
          Pattern[$CellContext`x, 
           Blank[Integer]], EvenQ]] :> 2, $CellContext`f[
         Pattern[$CellContext`x, 
          Blank[Integer]]] :> 1, $CellContext`f[
         Pattern[$CellContext`x, 
          Blank[]]] :> -1}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Global`f"|>, False]]], "Output",
 CellChangeTimes->{3.939939254730405*^9},
 CellLabel->"Out[1084]=",
 CellID->422321135,ExpressionUUID->"b88f4291-3d59-4719-9df1-234a2a730cd1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Changing definitions selectively", "Subsubsection",
 CellChangeTimes->{3.939939424678936*^9},
 CellTags->"4.7.3",
 CellID->1725655196,ExpressionUUID->"a39aab1f-bfd8-4133-9666-1b9ab75c461a"],

Cell["\<\
The above pattern-based mechanism of function definitions allows them to be \
very flexible. In particular, it is quite possible to change or delete a \
given definition corresponding to the specific pattern, without introducing \
changes in other definitions associated with this function.\
\>", "Text",
 CellChangeTimes->{{3.939939431602508*^9, 3.939939441781188*^9}},
 CellID->1320226437,ExpressionUUID->"635afbe0-b20a-4db2-9ea7-7af3676185b0"],

Cell["\<\
To change an already existing definition for some pattern, to a new one, one \
just needs to redefine a function on this particular pattern with a new right \
hand side. For example, we want our first definition for <f> from the \
previous example to return not 2, but 4 on even numbers. We simply redefine:\
\>", "Text",
 CellChangeTimes->{{3.939939448403062*^9, 3.9399394547841797`*^9}, 
   3.939947095698988*^9, 3.940017706597481*^9, 3.940017741373122*^9},
 CellID->643784967,ExpressionUUID->"7e815159-ea70-4ab6-a3ee-8945659b3c38"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_Integer", "?", "EvenQ"}], "]"}], ":=", "4"}], ";"}]], "Input",
 CellChangeTimes->{{3.939939470269308*^9, 3.939939479099394*^9}},
 CellLabel->"In[1085]:=",
 CellID->96386466,ExpressionUUID->"07f9d904-6cd0-4f85-8334-2f6aaa1ca067"],

Cell["Observe:", "Text",
 CellChangeTimes->{{3.93993948247841*^9, 3.939939483887498*^9}},
 CellID->1774624309,ExpressionUUID->"6e38b85e-ece6-495a-8835-f56919cddd32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 CellChangeTimes->{{3.939939484546995*^9, 3.939939484846581*^9}},
 CellLabel->"In[1086]:=",
 CellID->1622354949,ExpressionUUID->"7ab5b628-a78e-4ee6-9f50-fa73b3007188"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"x_Integer", "?", "EvenQ"}], "]"}], ":=", 
                    "4"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"f", "[", "x_Integer", "]"}], ":=", "1"}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{"f", "[", "x_", "]"}], ":=", 
                    RowBox[{"-", "1"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`f\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{12.5, {1.42974853515625, 11.07025146484375}}],
               True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               
               ImageSizeCache->{
                12.5, {1.42974853515625, 11.07025146484375}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`f", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`f, {$CellContext`f[
         PatternTest[
          Pattern[$CellContext`x, 
           Blank[Integer]], EvenQ]] :> 4, $CellContext`f[
         Pattern[$CellContext`x, 
          Blank[Integer]]] :> 1, $CellContext`f[
         Pattern[$CellContext`x, 
          Blank[]]] :> -1}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Global`f"|>, False]]], "Output",
 CellChangeTimes->{3.939939485241064*^9},
 CellLabel->"Out[1086]=",
 CellID->827878225,ExpressionUUID->"1d0e51c9-4d50-4c9d-9a9b-cd743ee1e365"]
}, Open  ]],

Cell["\<\
It is not required that the pattern tags (names) in a new pattern are \
literally the same as those for the old one (but otherwise the patterns have \
to be the same if we want to replace old definition with the new one):\
\>", "Text",
 CellChangeTimes->{{3.939939493572604*^9, 3.939939495692204*^9}, 
   3.940017741391926*^9},
 CellID->602778662,ExpressionUUID->"9314f24e-0b85-4d9d-9116-f430be2bd45a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"y_Integer", "?", "EvenQ"}], "]"}], ":=", "6"}], ";"}]], "Input",
 CellChangeTimes->{{3.9399395090601*^9, 3.939939516272566*^9}},
 CellLabel->"In[1087]:=",
 CellID->242238371,ExpressionUUID->"5a4bee64-c3d6-44eb-a5c2-772248ffcf29"],

Cell["Check now:", "Text",
 CellChangeTimes->{{3.939939521016552*^9, 3.939939522722781*^9}},
 CellID->1160992854,ExpressionUUID->"cfd75c11-45ac-4af4-810d-64a0a1bd91e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 CellChangeTimes->{{3.9399395238177223`*^9, 3.939939524176963*^9}},
 CellLabel->"In[1088]:=",
 CellID->482200629,ExpressionUUID->"4e8510ff-c5df-4eb9-9c18-7010a030077e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"y_Integer", "?", "EvenQ"}], "]"}], ":=", 
                    "6"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"f", "[", "x_Integer", "]"}], ":=", "1"}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{"f", "[", "x_", "]"}], ":=", 
                    RowBox[{"-", "1"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`f\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{12.5, {1.42974853515625, 11.07025146484375}}],
               True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               
               ImageSizeCache->{
                12.5, {1.42974853515625, 11.07025146484375}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`f", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`f, {$CellContext`f[
         PatternTest[
          Pattern[$CellContext`y, 
           Blank[Integer]], EvenQ]] :> 6, $CellContext`f[
         Pattern[$CellContext`x, 
          Blank[Integer]]] :> 1, $CellContext`f[
         Pattern[$CellContext`x, 
          Blank[]]] :> -1}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Global`f"|>, False]]], "Output",
 CellChangeTimes->{3.939939524496278*^9},
 CellLabel->"Out[1088]=",
 CellID->224240728,ExpressionUUID->"7e646b56-b241-4ae5-bfca-b7a829c2ed05"]
}, Open  ]],

Cell[TextData[{
 "As we see, the old definition still got replaced by a new one, since the \
pattern essentially did not change, and ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can see that (this wasn\[CloseCurlyQuote]t the case in some early \
versions)."
}], "Text",
 CellChangeTimes->{{3.939939535778644*^9, 3.9399395389386*^9}},
 CellID->2127598658,ExpressionUUID->"3958825e-9f3c-4ff6-97b0-b3c745aeb1a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Warning: a common mistake", "Subsubsection",
 CellChangeTimes->{3.9399395500723057`*^9},
 CellID->949616047,ExpressionUUID->"72f9240f-2661-46dc-995e-7cabd4587d8f"],

Cell["\<\
It is quite common during the development of some function to change the \
patterns for the function\[CloseCurlyQuote] s arguments. However, if one does \
not remove the old definition, it will remain in the rule base and may lead \
to errors when testing the function. Always make sure that you clear old \
definitions when you change a definition (argument patterns) of the function \
you are developing. One way to automate this is to always start with a line \
Clear[f] before any definition for <f> is entered - this is the practice I \
usually adhere to.\
\>", "Text",
 CellChangeTimes->{{3.939939555837018*^9, 3.939939576919826*^9}, 
   3.939947095721949*^9, 3.9400177066182213`*^9},
 CellID->98437425,ExpressionUUID->"5463f5df-ab4c-4cf2-ae2a-7f8f63d61924"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Selective removal of the definitions", "Subsubsection",
 CellChangeTimes->{3.939939584682168*^9},
 CellID->1035586234,ExpressionUUID->"463dcea1-d86f-4595-827a-9c35ab06dcba"],

Cell["\<\
If we would like to remove the definition of the function <f> associated with \
some pattern <pattern>, there is a special builit-in command tailor - made \
for this: Unset. Its short - hand notation is <=.> (equal dot). Thus, we have \
to use either f[pattern] =., or Unset[f[pattern]]. This will remove a given \
definition. \
\>", "Text",
 CellChangeTimes->{{3.939939591550784*^9, 3.9399396216394444`*^9}, {
   3.939947095744932*^9, 3.93994709576751*^9}, {3.940017706638277*^9, 
   3.940017706658223*^9}, 3.940740644279975*^9, 3.940740879505471*^9},
 CellID->1890359550,ExpressionUUID->"4697903b-a32e-40b2-a967-b631efe917fb"],

Cell["\<\
Let us for instance remove a first definition of the above function <f>. This \
is done as follows:\
\>", "Text",
 CellChangeTimes->{{3.939939591550784*^9, 3.939939606165043*^9}, 
   3.939947095789912*^9, 3.940017706677684*^9, 3.940740644299232*^9},
 CellID->783855497,ExpressionUUID->"73d72ac8-4dab-47d3-bdeb-07e7e9231852"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"y_Integer", "?", "EvenQ"}], "]"}], "=."}]], "Input",
 CellChangeTimes->{{3.9399396263744173`*^9, 3.9399396326874447`*^9}},
 CellLabel->"In[1089]:=",
 CellID->642617907,ExpressionUUID->"8b8ec68c-8d22-450c-a7d4-c7c194256c2c"],

Cell["We now check:", "Text",
 CellChangeTimes->{{3.939939634892461*^9, 3.939939636954904*^9}},
 CellID->324951508,ExpressionUUID->"770dbc49-8ecb-4655-a232-6ccc872953ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 CellChangeTimes->{{3.939939640006298*^9, 3.939939640276237*^9}},
 CellLabel->"In[1090]:=",
 CellID->1901000864,ExpressionUUID->"02b3ef27-6d3b-4eaf-87b3-1cf256bb1d54"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"f", "[", "x_Integer", "]"}], ":=", "1"}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{"f", "[", "x_", "]"}], ":=", 
                    RowBox[{"-", "1"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`f\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{12.5, {1.42974853515625, 11.07025146484375}}],
               True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               
               ImageSizeCache->{
                12.5, {1.42974853515625, 11.07025146484375}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`f", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`f, {$CellContext`f[
         Pattern[$CellContext`x, 
          Blank[Integer]]] :> 1, $CellContext`f[
         Pattern[$CellContext`x, 
          Blank[]]] :> -1}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Global`f"|>, False]]], "Output",
 CellChangeTimes->{3.939939640627586*^9},
 CellLabel->"Out[1090]=",
 CellID->129259353,ExpressionUUID->"2267caa8-9a79-485f-ad45-f5da71a7afe8"]
}, Open  ]],

Cell["\<\
As a side remark, it is interesting that the above possibilities of selective \
changes and/or removals of function definitions can be used in quite an \
unusual way: the function itself may (temporarily, for instance) change part \
of its own definitions during its execution. One reason why this may be \
useful is that sometimes it is a possible workaround to avoid an infinite \
recursion.\
\>", "Text",
 CellChangeTimes->{{3.939939649121684*^9, 3.9399396614149837`*^9}, 
   3.940017741411161*^9},
 CellID->1355978754,ExpressionUUID->"0f9266a1-45c1-4920-b553-10cca637790e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Case study: changing the weights of words", "Subsubsection",
 CellChangeTimes->{3.939939670150805*^9},
 CellID->875087534,ExpressionUUID->"0f39afb0-54b3-49f6-8d7d-07f77c4bb8d0"],

Cell["The problem", "ItemNumbered",
 CellChangeTimes->{3.93993969534626*^9},
 CellID->410407917,ExpressionUUID->"01735cdb-005b-4d8d-a6c7-125e61dbe49e"],

Cell["\<\
Consider some set of words, on pairs of which we will define a model \
\[OpenCurlyDoubleQuote]mutual attraction\[CloseCurlyDoubleQuote] function \
which will be equal to the number of common letters in the given pair of \
words. As a model set of words we will take the one we have used already:\
\>", "Text",
 CellChangeTimes->{{3.9399397014721622`*^9, 3.939939710479624*^9}, 
   3.940017741429802*^9},
 CellID->8386855,ExpressionUUID->"be8b262c-808d-4a76-8dab-fdeaf4198e11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wlist", "=", 
   RowBox[{"ToLowerCase", "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Most\>\"", ",", "\"\<of\>\"", ",", "\"\<this\>\"", ",", 
      "\"\<Part\>\"", ",", "\"\<assumes\>\"", ",", "\"\<no\>\"", ",", 
      "\"\<specific\>\"", ",", " ", "\"\<prior\>\"", ",", " ", 
      "\"\<knowledge\>\"", ",", "  ", "\"\<of\>\"", ",", " ", 
      "\"\<computer\>\"", ",", " ", "\"\<science\>\"", ",", " ", "\n", 
      "\"\<Nevertheless\>\"", ",", "  ", "\"\<some\>\"", ",", "  ", 
      "\"\<of\>\"", ",", "  ", "\"\<it\>\"", ",", " ", "\"\<ventures\>\"", 
      ",", "  ", "\"\<into\>\"", ",", " ", "\n", "\"\<some\>\"", ",", 
      "\"\<fairly\>\"", ",", "\"\<complicated\>\"", ",", "\"\<issues\>\"", 
      ",", "\"\<zou\>\"", ",", "\"\<can\>\"", ",", "\"\<'probably\>\"", ",", 
      "\"\<ignore\>\"", ",", "\"\<these\>\"", ",", "\"\<issues\>\"", ",", 
      "\"\<unless\>\"", ",", "\"\<they\>\"", ",", "\"\<specifically\>\"", 
      ",", "\"\<affect\>\"", ",", "\"\<programs\>\"", ",", "\"\<you\>\"", 
      ",", "\"\<are\>\"", ",", "\"\<writing\>\""}], "}"}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.939939726799594*^9, 3.939939746448477*^9}},
 CellLabel->"In[1091]:=",
 CellID->589437071,ExpressionUUID->"4d8d0e29-e4de-4e67-8fc5-cb90ed7ee575"],

Cell["The solution", "ItemNumbered",
 CellChangeTimes->{3.939939759937524*^9},
 CellID->2134838466,ExpressionUUID->"2777cf25-cc9d-4854-9962-1881828b3cc5"],

Cell["\<\
Our function will be a function of two strings-words. It is very easy to \
write-split words to characters, and compute a length of the intersection of \
the character lists:\
\>", "Text",
 CellChangeTimes->{{3.939939767659206*^9, 3.9399397777362413`*^9}},
 CellID->73323986,ExpressionUUID->"b79e27ba-2ffa-450b-9326-edd2758e2117"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "wordFunction", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wordFunction", "[", 
    RowBox[{"x_String", ",", "y_String"}], "]"}], ":=", 
   RowBox[{"Length", "[", 
    RowBox[{"Intersection", "[", 
     RowBox[{
      RowBox[{"Characters", "[", "x", "]"}], ",", 
      RowBox[{"Characters", "[", "y", "]"}]}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.939939782149876*^9, 3.9399398101520157`*^9}},
 CellLabel->"In[1092]:=",
 CellID->142064860,ExpressionUUID->"b709ec9e-16b8-4a4f-8b24-491bd9b1ed01"],

Cell["For example:", "Text",
 CellChangeTimes->{{3.939939814022838*^9, 3.939939816215866*^9}},
 CellID->1260111235,ExpressionUUID->"a102951b-ea7f-4b68-9163-100b37f67675"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wordFunction", "[", 
  RowBox[{"\"\<word\>\"", ",", "\"\<word\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.9399398172042513`*^9, 3.9399398210564537`*^9}},
 CellLabel->"In[1094]:=",
 CellID->513384132,ExpressionUUID->"be58542f-f934-498d-91a8-736f5dc2e5cc"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.939939821731964*^9},
 CellLabel->"Out[1094]=",
 CellID->1311860782,ExpressionUUID->"0af2f65a-d965-4284-adb8-5cb5b356abbf"]
}, Open  ]],

Cell["Testing the solution", "ItemNumbered",
 CellChangeTimes->{3.939939829516041*^9},
 CellID->229559325,ExpressionUUID->"42497ca4-a16d-44dc-9c0d-be3e4e267277"],

Cell["\<\
Let us now make a list of our words together with the weights that these \
words have with respect to some fixed word, say \
\[OpenCurlyDoubleQuote]computer\[CloseCurlyDoubleQuote]:\
\>", "Text",
 CellChangeTimes->{{3.939939836605101*^9, 3.9399398404391403`*^9}, 
   3.940017741448345*^9},
 CellID->1322945263,ExpressionUUID->"9cb137e0-545b-41d7-907d-4a486a0b81e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wlist1", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"wlist", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"wordFunction", "[", 
       RowBox[{"\"\<computer\>\"", ",", 
        RowBox[{"wlist", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "wlist", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.939939843933963*^9, 3.9399398814164867`*^9}},
 CellLabel->"In[1096]:=",
 CellID->1493591992,ExpressionUUID->"375c58ba-e935-4bd6-8dca-9c984ceabfc5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"most\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"of\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"this\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"part\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"assumes\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"no\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"specific\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"prior\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"knowledge\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"of\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"computer\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"science\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"nevertheless\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"some\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"of\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"it\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ventures\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"into\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"some\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"fairly\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"complicated\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"issues\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"zou\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"can\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"'probably\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ignore\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"these\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"issues\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"unless\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"they\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"specifically\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"affect\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"programs\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"you\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"are\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"writing\"\>", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9399398701869287`*^9, 3.939939881685038*^9}},
 CellLabel->"Out[1096]=",
 CellID->2042616186,ExpressionUUID->"2d142309-c6bd-4c5c-8a61-e360d148c4f0"]
}, Open  ]],

Cell["We can now sort the words according to the highest weight:", "Text",
 CellChangeTimes->{3.939939891971966*^9},
 CellID->1175905668,ExpressionUUID->"70f59894-8a85-491a-b798-74e88a73cb51"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"wlist1", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"#1", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ">", 
     RowBox[{"#2", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939939896163782*^9, 3.939939908283469*^9}},
 CellLabel->"In[1097]:=",
 CellID->1360929922,ExpressionUUID->"7ef3b432-1210-46a9-828f-625a03a59035"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"computer\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"complicated\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"programs\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ventures\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"affect\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"specifically\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ignore\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"'probably\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"some\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"some\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"nevertheless\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"prior\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"specific\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"assumes\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"part\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"most\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"writing\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"are\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"you\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"they\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"unless\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"issues\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"these\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"zou\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"issues\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"into\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"science\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"knowledge\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"can\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"fairly\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"it\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"of\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"of\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"no\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"this\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"of\"\>", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939939908787302*^9},
 CellLabel->"Out[1097]=",
 CellID->668174257,ExpressionUUID->"990b6149-b740-4cf6-b6e1-51d3daf69088"]
}, Open  ]],

Cell["Manipulating weights of individual words", "ItemNumbered",
 CellChangeTimes->{3.939939928945714*^9},
 CellID->89805612,ExpressionUUID->"9dcfbe8a-743d-4db1-9b34-0c66dca17d9a"],

Cell["\<\
Suppose now that we want to bring some words up in the list, that is, change \
the \[OpenCurlyDoubleQuote]strength function\[CloseCurlyDoubleQuote] of these \
words with the word \[OpenCurlyDoubleQuote]computer\[CloseCurlyDoubleQuote] \
by hand. Such new definitions can be implemented according to the above \
described scheme - we just have to add specific definitions of our weight \
function on specific words. Let these words be \
\[OpenCurlyDoubleQuote]programs\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]knowledge\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]science\[CloseCurlyDoubleQuote]. Let us give them \
weights:\
\>", "Text",
 CellChangeTimes->{{3.9399399353332243`*^9, 3.939939948530115*^9}, 
   3.940017741467122*^9},
 CellID->1829400690,ExpressionUUID->"62264f0f-fd6a-4bce-bed3-529958634015"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"wordFunction", "[", 
    RowBox[{"\"\<computer\>\"", ",", "\"\<programs\>\""}], "]"}], "=", "20"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wordFunction", "[", 
    RowBox[{"\"\<computer\>\"", ",", "\"\<science\>\""}], "]"}], "=", "15"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wordFunction", "[", 
    RowBox[{"\"\<computer\>\"", ",", "\"\<knowledge\>\""}], "]"}], "=", 
   "10"}], ";"}]}], "Input",
 CellChangeTimes->{{3.93994000518921*^9, 3.939940033753305*^9}},
 CellLabel->"In[1098]:=",
 CellID->1185450359,ExpressionUUID->"92bcdefb-1593-4f41-9a57-645172fbe776"],

Cell["\<\
Now let us have a look on the new definitions of <wordFunction>:\
\>", "Text",
 CellChangeTimes->{3.939940041328436*^9, 3.939947095814196*^9, 
  3.9400177066968107`*^9, 3.940017741485671*^9},
 CellID->777970762,ExpressionUUID->"dbfcf602-a6e1-46c6-8ed8-32db851a8d23"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "wordFunction"}]], "Input",
 CellChangeTimes->{{3.939940042685342*^9, 3.939940043811281*^9}},
 CellLabel->"In[1101]:=",
 CellID->599846970,ExpressionUUID->"d3f9a010-d64f-4468-b52f-43307a42be16"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`wordFunction\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"wordFunction", "[", 
                    RowBox[{"\"computer\"", ",", "\"knowledge\""}], "]"}], 
                    "=", "10"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"wordFunction", "[", 
                    RowBox[{"\"computer\"", ",", "\"programs\""}], "]"}], "=",
                     "20"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"wordFunction", "[", 
                    RowBox[{"\"computer\"", ",", "\"science\""}], "]"}], "=", 
                    "15"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"wordFunction", "[", 
                    RowBox[{"x_String", ",", "y_String"}], "]"}], ":=", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    RowBox[{"Characters", "[", "x", "]"}], "\[Intersection]", 
                    
                    RowBox[{"Characters", "[", "y", "]"}]}], "]"}]}]}, {" "}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`wordFunction\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{12.5, {1.42974853515625, 11.07025146484375}}],
               True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               
               ImageSizeCache->{
                12.5, {1.42974853515625, 11.07025146484375}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`wordFunction\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`wordFunction", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`wordFunction, {$CellContext`wordFunction[
        "computer", "knowledge"] -> 
       10, $CellContext`wordFunction["computer", "programs"] -> 
       20, $CellContext`wordFunction["computer", "science"] -> 
       15, $CellContext`wordFunction[
         Pattern[$CellContext`x, 
          Blank[String]], 
         Pattern[$CellContext`y, 
          Blank[String]]] :> Length[
         Intersection[
          Characters[$CellContext`x], 
          Characters[$CellContext`y]]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`wordFunction"|>, False]]], "Output",
 CellChangeTimes->{3.93994004422482*^9},
 CellLabel->"Out[1101]=",
 CellID->1054569890,ExpressionUUID->"74bf2f2b-3170-43d3-bfa9-4d7b64bfa2d5"]
}, Open  ]],

Cell[TextData[{
 "Let us note two things: first, in these latter definitions we used Set \
rather than SetDelayed (it does not matter much for constant r.h.s.), and \
second, that these definitions are placed before the more general one even \
though they were added later - ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " figured out their level of generality and positioned them accordingly. \
This means that they will be applied before the more general one, and thus \
the general one does not \[OpenCurlyDoubleQuote]threaten\
\[CloseCurlyDoubleQuote] the more specific ones. Let us check now:"
}], "Text",
 CellChangeTimes->{{3.939940057556357*^9, 3.9399400817742662`*^9}, 
   3.940017741504305*^9},
 CellID->2047314658,ExpressionUUID->"ad1c298d-496b-4334-a4df-b1f9463e79e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"wlist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"wordFunction", "[", 
        RowBox[{"\"\<computer\>\"", ",", 
         RowBox[{"wlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "wlist", "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"#1", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ">", 
     RowBox[{"#2", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939940088916553*^9, 3.939940127270185*^9}},
 CellLabel->"In[1102]:=",
 CellID->1445798879,ExpressionUUID->"6c8c5cd4-281e-4ceb-b695-137ab2765d72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"programs\"\>", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"science\"\>", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"knowledge\"\>", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"computer\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"complicated\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ventures\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"affect\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"specifically\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ignore\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"'probably\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"some\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"some\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"nevertheless\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"prior\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"specific\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"assumes\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"part\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"most\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"writing\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"are\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"you\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"they\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"unless\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"issues\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"these\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"zou\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"issues\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"into\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"can\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"fairly\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"it\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"of\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"of\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"no\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"this\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"of\"\>", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.93994012772915*^9},
 CellLabel->"Out[1102]=",
 CellID->2079999777,ExpressionUUID->"91ebb479-4bac-4a67-ba6d-2d974d7c259e"]
}, Open  ]],

Cell["Now let us remove these definitions:", "Text",
 CellChangeTimes->{3.939940156040886*^9, 3.940017741522778*^9},
 CellID->261552982,ExpressionUUID->"2d3f53a2-7feb-4957-83bd-d20e9737dd8c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"wordFunction", "[", 
    RowBox[{"\"\<computer\>\"", ",", "\"\<programs\>\""}], "]"}], "=."}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wordFunction", "[", 
    RowBox[{"\"\<computer\>\"", ",", "\"\<science\>\""}], "]"}], "=."}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wordFunction", "[", 
    RowBox[{"\"\<computer\>\"", ",", "\"\<knowledge\>\""}], "]"}], "=."}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9399401644576187`*^9, 3.93994016980881*^9}},
 CellLabel->"In[1103]:=",
 CellID->21943065,ExpressionUUID->"e0107f24-1afd-4613-b6b9-368348668216"],

Cell["We check now:", "Text",
 CellChangeTimes->{{3.939940172829006*^9, 3.939940174701886*^9}},
 CellID->1201553377,ExpressionUUID->"0c5def4b-a111-49ee-973a-e4f9961e0e02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "wordFunction"}]], "Input",
 CellChangeTimes->{{3.939940175947091*^9, 3.9399401772542477`*^9}},
 CellLabel->"In[1106]:=",
 CellID->2059858937,ExpressionUUID->"3fd74f7e-bcd9-4149-aed4-651b93db092f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`wordFunction\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"wordFunction", "[", 
                    RowBox[{"x_String", ",", "y_String"}], "]"}], ":=", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    RowBox[{"Characters", "[", "x", "]"}], "\[Intersection]", 
                    
                    RowBox[{"Characters", "[", "y", "]"}]}], "]"}]}]}, {" "}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`wordFunction\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{12.5, {1.42974853515625, 11.07025146484375}}],
               True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               
               ImageSizeCache->{
                12.5, {1.42974853515625, 11.07025146484375}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`wordFunction\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`wordFunction", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`wordFunction, {$CellContext`wordFunction[
         Pattern[$CellContext`x, 
          Blank[String]], 
         Pattern[$CellContext`y, 
          Blank[String]]] :> Length[
         Intersection[
          Characters[$CellContext`x], 
          Characters[$CellContext`y]]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`wordFunction"|>, False]]], "Output",
 CellChangeTimes->{3.93994017762043*^9},
 CellLabel->"Out[1106]=",
 CellID->315990097,ExpressionUUID->"f9edf3d4-6be5-4e26-a4d3-1825b2b3ec34"]
}, Open  ]],

Cell["Only the general one remains.", "Text",
 CellChangeTimes->{3.939940185265931*^9},
 CellID->118501248,ExpressionUUID->"e3b3f75e-b67b-429c-9923-c866519de65a"],

Cell["Automating the process (advanced)", "ItemNumbered",
 CellChangeTimes->{3.9399401948225822`*^9},
 CellID->933134367,ExpressionUUID->"f0ec89bf-52a0-45bf-a43c-0eaa19cfa7f6"],

Cell["\<\
It is interesting that the process of giving new definitions to some function \
can be automated by another function. In particular, let us define:\
\>", "Text",
 CellChangeTimes->{{3.939940202749187*^9, 3.939940204687945*^9}, 
   3.940017741541685*^9},
 CellID->116232128,ExpressionUUID->"c5fbcd35-87e2-4abf-83c7-bd8fa76967bc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "giveDefinitions", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"giveDefinitions", "[", 
     RowBox[{"f_", ",", "args_List", ",", "values_List"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "args", "]"}], "==", 
     RowBox[{"Length", "[", "values", "]"}]}]}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{"Set", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Unevaluated", "[", 
            RowBox[{"f", "[", 
             RowBox[{"Sequence", "@@", "#"}], "]"}], "]"}], "&"}], "/@", 
          "args"}], ",", "values"}], "}"}]}], "]"}], ";"}], ")"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.939940215265339*^9, 3.93994026941022*^9}, {
  3.939940371608189*^9, 3.939940371827654*^9}},
 CellLabel->"In[1111]:=",
 CellID->1131411086,ExpressionUUID->"b192beb6-ad54-4c58-8414-c3869f52fa97"],

Cell["\<\
This function is quite general (although one may write it more efficiently): \
it takes the name of another function, a list of arguments and a list of \
values, and creates the new definitions for the supplied function \
accordingly. At the same time, any other definitions of this function will \
not be affected. This is our example:\
\>", "Text",
 CellChangeTimes->{{3.939940277535878*^9, 3.9399403013776073`*^9}, {
  3.940017741560356*^9, 3.940017741578808*^9}},
 CellID->1832769553,ExpressionUUID->"ff9fedc3-b521-45cf-8f52-47447ed5b730"],

Cell[BoxData[
 RowBox[{"giveDefinitions", "[", 
  RowBox[{"wordFunction", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<computer\>\"", ",", "\"\<programs\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<computer\>\"", ",", "\"\<science\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<computer\>\"", ",", "\"\<knowledge\>\""}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "15", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9399403040017967`*^9, 3.9399403460458717`*^9}},
 CellLabel->"In[1113]:=",
 CellID->577095815,ExpressionUUID->"3ed28ae6-7cc0-4851-86eb-51fe43b26f33"],

Cell["We check now:", "Text",
 CellChangeTimes->{{3.939940382136331*^9, 3.9399403838784037`*^9}},
 CellID->1262075122,ExpressionUUID->"174a5a19-10f5-4959-99b1-4b515e0df983"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "wordFunction"}]], "Input",
 CellChangeTimes->{{3.93994038509088*^9, 3.939940386264257*^9}},
 CellLabel->"In[1114]:=",
 CellID->436354442,ExpressionUUID->"13949987-fb8a-4398-b8a0-d84a9ff71363"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`wordFunction\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"wordFunction", "[", 
                    RowBox[{"\"computer\"", ",", "\"knowledge\""}], "]"}], 
                    "=", "10"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"wordFunction", "[", 
                    RowBox[{"\"computer\"", ",", "\"programs\""}], "]"}], "=",
                     "20"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"wordFunction", "[", 
                    RowBox[{"\"computer\"", ",", "\"science\""}], "]"}], "=", 
                    "15"}]}, {" "}, {
                    RowBox[{
                    RowBox[{"wordFunction", "[", 
                    RowBox[{"x_String", ",", "y_String"}], "]"}], ":=", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    RowBox[{"Characters", "[", "x", "]"}], "\[Intersection]", 
                    
                    RowBox[{"Characters", "[", "y", "]"}]}], "]"}]}]}, {" "}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`wordFunction\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{12.5, {1.42974853515625, 11.07025146484375}}],
               True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               
               ImageSizeCache->{
                12.5, {1.42974853515625, 11.07025146484375}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`wordFunction\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`wordFunction", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`wordFunction, {$CellContext`wordFunction[
        "computer", "knowledge"] -> 
       10, $CellContext`wordFunction["computer", "programs"] -> 
       20, $CellContext`wordFunction["computer", "science"] -> 
       15, $CellContext`wordFunction[
         Pattern[$CellContext`x, 
          Blank[String]], 
         Pattern[$CellContext`y, 
          Blank[String]]] :> Length[
         Intersection[
          Characters[$CellContext`x], 
          Characters[$CellContext`y]]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`wordFunction"|>, False]]], "Output",
 CellChangeTimes->{3.939940386525628*^9},
 CellLabel->"Out[1114]=",
 CellID->552711279,ExpressionUUID->"8a662b1c-d9fe-45fb-871f-17fa86d6e8b8"]
}, Open  ]],

Cell["\<\
The technique just illustrated allows some functions to manipulate the \
definitions of other functions, which allows us to control the program \
execution in a very flexible way.\
\>", "Text",
 CellChangeTimes->{{3.93994043844632*^9, 3.9399404405853777`*^9}},
 CellID->62123235,ExpressionUUID->"8e5e3ff7-7920-4e58-bc6e-2ec5fbc9e4f3"],

Cell["\<\
Functions like <giveDefinitions>, which in effect manipulate other functions, \
are called higher-order functions. Their use is quite common in the \
functional programming style. We will cover a lot of built-in higher-order \
functions in the chapter V.\
\>", "Text",
 CellChangeTimes->{{3.939940447794489*^9, 3.939940463351388*^9}, 
   3.9399470958376827`*^9, 3.9400177067159*^9},
 CellID->1984700371,ExpressionUUID->"e79d8370-997b-4e09-8124-9e71b87452bc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Larger functions, local variables and the code modularization\
\>", "Subsection",
 CellChangeTimes->{3.939940475813339*^9},
 CellTags->"4.8",
 CellID->622892622,ExpressionUUID->"2476424b-01fd-4be5-9672-38f9d5796d7f"],

Cell[TextData[{
 "In the majority of real situations, the code for a typical function is \
longer than one or two lines (in other words, not every problem can be solved \
by one-liners). Also, it is often convenient to introduce intermediate \
variables, both to avoid redundant computations and to improve the code \
readability. Such variables one has to localize, in order to avoid name \
conflicts with the global variables already defined in the system, and in \
general not to \[OpenCurlyDoubleQuote]pollute\[CloseCurlyDoubleQuote] the \
global name space. On the scale of a single function or program, there are 3 \
constructs in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " which provide this functionality: Module, Block and With. These constructs \
are explained in detail in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Book and ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Help, so I will say just a few words about them here. On the larger scale, \
this is supported through the system of packages - we will\nconsider them in \
part II."
}], "Text",
 CellChangeTimes->{{3.939940483484256*^9, 3.939940515660657*^9}},
 CellID->2121002476,ExpressionUUID->"3792cb29-0298-4c43-812a-53acdf139f55"],

Cell[CellGroupData[{

Cell["Module", "Subsubsection",
 CellChangeTimes->{3.939940524474503*^9},
 CellID->1235506013,ExpressionUUID->"3b76ee7d-ff0c-48fa-bebf-4ecebd7f560f"],

Cell[TextData[{
 "The goal of Module is to localize names of the variables, and avoid the \
name conflicts between the global names (and by global I mean everything \
exterior to the body of the Module), and the local names used in the code \
inside Module. What is important is that if this code calls some function \
which contains one of the global symbols with the name coinciding with the \
name of some of the local variables, the global value will be used. Put in \
another way, the variables are localized in space - only in the code inside \
Module, but not in functions which may be called from within this Module. The \
way Module does it is to create temporary variables with names which can not \
possibly collide with any other name (but see ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Book for some subtleties). In fact, the workings of Module correspond most \
directly to standard variable scopes\nin other languages such as C."
}], "Text",
 CellChangeTimes->{{3.939940532227519*^9, 3.939940558831285*^9}},
 CellID->1130177648,ExpressionUUID->"ac64a218-f32a-4dd2-a5a3-e7a0dba688c1"],

Cell["\<\
The format of Module is Module[{var1, var2,...}, body], where var1, var2,... \
are the variables we localize, and <body> is the body of the function. The \
value returned by Module is the value returned by the last operator in the \
<body> (unless an explicit Return[] statement is used within the body of \
Module. In this case, the argument of Return[arg] is returned). In \
particular, if one places the semicolon after this last operator, nothing \
(Null) is returned. As a variant, it is acceptable to initialize the local \
variables in the place of the declaration, with some global values: \
Module[{var1 = value1, var2,...}, body]. However, one local variable (say, \
the one \[OpenCurlyDoubleQuote]just initialized\[CloseCurlyDoubleQuote] can \
not be used in the initialization of another local variable inside the \
declaration list. The following would be a mistake: Module[{var1 = value1, \
var2 = var1,...}, body]. Moreover, this will not result in an error, but just \
the global value for the symbol <var1> would be used in this example for the \
<var2> initialization (this is even more dangerous since no error message is \
generated and thus we don\[CloseCurlyQuote]t see the problem). In this case, \
it would be better to do initialization in steps: \
Module[{var1=value1,var2,...}, var2=var1;body] , that is, include the \
initialization of part of the variables in the body of Module.\
\>", "Text",
 CellChangeTimes->{{3.939947013595262*^9, 3.939947105271699*^9}, {
  3.940017741598011*^9, 3.94001774161675*^9}, {3.9407406443229313`*^9, 
  3.940740644379984*^9}},
 CellID->942271196,ExpressionUUID->"81887a3e-f767-4b22-8fd3-c4511d76cd5c"],

Cell["\<\
One can use Return[value] statement to return a value from anywhere within \
the Module. In this case, the rest of the code (if any) inside Module is \
slipped, and the result <value> is returned.\
\>", "Text",
 CellChangeTimes->{{3.939947122688501*^9, 3.9399471247259417`*^9}},
 CellID->944635559,ExpressionUUID->"f17a120b-d648-41e8-8580-8338ef780030"],

Cell[TextData[{
 "One difference between Module and the localizing constructs in some other \
programming languages is that Module allows to define not just local \
variables, but local functions (essentially, this is because in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " there is no strong distinction between the two). This opens new \
interesting possibilities, in particular this is useful for implementing \
recursive functions. The same comment holds also for the Block construct."
}], "Text",
 CellChangeTimes->{{3.939947132484571*^9, 3.9399471477946577`*^9}},
 CellID->653438905,ExpressionUUID->"40db4cbb-dd5b-4b35-889a-4ad458c3842e"],

Cell["\<\
A simple example: here is a function which computes the sum of the first <n> \
natural numbers:\
\>", "Text",
 CellChangeTimes->{{3.939947160275547*^9, 3.939947173364498*^9}},
 CellID->501586391,ExpressionUUID->"8644bcb5-e761-43d4-ac4c-bc86ad5c4473"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "numberSum", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numberSum", "[", "n_Integer", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sum", "=", "0"}], ",", "i"}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", "n"}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"sum", "=", 
        RowBox[{"sum", "+", "i"}]}]}], "]"}], ";", "sum"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.9399471857015123`*^9, 3.939947215817156*^9}},
 CellLabel->"In[1115]:=",
 CellID->1056301114,ExpressionUUID->"d37277ee-3b6b-4d5f-a91d-9447675dd1c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"numberSum", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.939947218309449*^9, 3.93994722059978*^9}},
 CellLabel->"In[1117]:=",
 CellID->31684054,ExpressionUUID->"90335e84-6ea2-48fd-ae06-273b72587dd4"],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.939947220881178*^9},
 CellLabel->"Out[1117]=",
 CellID->1143107460,ExpressionUUID->"2946ca76-8da5-4111-984f-bd4af0391940"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"i", ",", "sum"}], "}"}]], "Input",
 CellChangeTimes->{{3.939947223861236*^9, 3.939947224812207*^9}},
 CellLabel->"In[1118]:=",
 CellID->1324666820,ExpressionUUID->"5c2bd63b-6e17-4c6a-a6ce-881cf63c9205"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5001", ",", "sum"}], "}"}]], "Output",
 CellChangeTimes->{3.939947225092764*^9},
 CellLabel->"Out[1118]=",
 CellID->1625676237,ExpressionUUID->"ca8c7ccf-af9a-4adc-9304-042e277de0ca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Block", "Subsubsection",
 CellChangeTimes->{3.93994723971329*^9},
 CellID->306074478,ExpressionUUID->"d60d815a-16ed-454d-ad9c-100951747856"],

Cell["\<\
Turning to the Block construct, it is used to localize the values of \
variables rather than names, or, to localize variables in time rather than in \
space. This means that in particular, if any function is called from within \
the Block (not being a part of the code inside this Block), and it refers \
globally to some of the variables with names matching those localized by \
Block, then the new (local) value for this variable will be used (this is in \
sharp contrast with Module). Block can be used to make the system temporarily
\[OpenCurlyDoubleQuote]forget\[CloseCurlyDoubleQuote] the rules (definitions) \
associated with a given set of symbols.\
\>", "Text",
 CellChangeTimes->{{3.9399472464633493`*^9, 3.939947266816551*^9}},
 CellID->970417181,ExpressionUUID->"649355dd-9253-47a9-8228-69291d27c211"],

Cell["\<\
The syntax of Block is similar to the one of Module. However, their uses are \
really different. While I will not go into further detail here (we will \
revisit scoping constructs in the part II), the quick summary is that it is \
usually more appropriate to use Module for localizing variables, and Block to \
temporarily change certain values. In particular, using Block instead of \
Module may result in errors in some cases. In general, if you use Block to \
localize a value of some variable, you have to make sure that no unforeseen \
variables with accidentally the same name will be involved in entire \
computation happening inside this Block, including possible (nested) calls of \
external functions which use these variables as global ones.\
\>", "Text",
 CellChangeTimes->{{3.9399472787148943`*^9, 3.93994731279285*^9}},
 CellID->1821256223,ExpressionUUID->"c5c286be-c61c-4bea-9221-00528446fd91"],

Cell["Here is some simple example with Block:", "Text",
 CellChangeTimes->{3.939947318651621*^9, 3.940017741635281*^9},
 CellID->368420064,ExpressionUUID->"319c36db-a88a-4497-a0af-3165041b04f5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "i"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", ":=", 
   RowBox[{"i", "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "3"}], 
  ";"}], "\[IndentingNewLine]", "a", "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"i", "=", "5"}], "}"}], ",", "a"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9399473215136347`*^9, 3.939947334975058*^9}},
 CellLabel->"In[1119]:=",
 CellID->700345416,ExpressionUUID->"16ece427-de64-420f-8bf3-27cc62ae0157"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.939947337765465*^9},
 CellLabel->"Out[1122]=",
 CellID->2140894538,ExpressionUUID->"a16b74e4-a73c-4adb-a644-c8853b0323d2"],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{3.939947337786776*^9},
 CellLabel->"Out[1123]=",
 CellID->925994681,ExpressionUUID->"1ca27e10-abb9-4106-8742-343769f7350b"]
}, Open  ]],

Cell["\<\
We see that the value of <a> changed inside block, even though <a> was \
defined with the global <i> outside the Block, and no explicit reference to \
<i> is present inside the Block.\
\>", "Text",
 CellChangeTimes->{{3.939947350373868*^9, 3.9399473647985773`*^9}, {
  3.939948554179426*^9, 3.93994855425041*^9}, {3.940017706734663*^9, 
  3.940017706789797*^9}},
 CellID->117538014,ExpressionUUID->"cb5194f6-134b-4dfe-87fe-a60f9c57ae53"],

Cell[TextData[{
 "It is worth mentioning that several built-in commands such as Do, Table, \
Sum and a few others, use Block internally to localize their iterator \
variables. This means that the same caution is needed also when one uses \
these commands as with the Block itself. We have already discussed this issue \
for Table (section ",
 ButtonBox["3.4.3",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-3-Lists.nb", CharacterEncoding -> "UTF-8"], 
    "3.4.3"},
  ButtonNote->"/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-3-Lists.nb"],
 ") and Do (section ",
 ButtonBox["2.8.3",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-2-Elementary-operations.nb", 
     CharacterEncoding -> "UTF-8"], "2.8.3"},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-2-Elementary-operations.nb"],
 ")."
}], "Text",
 CellChangeTimes->{{3.939947375953074*^9, 3.939947392130062*^9}, {
  3.9399474892817373`*^9, 3.9399474892925*^9}, {3.9399475566154003`*^9, 
  3.939947556625885*^9}},
 CellID->1743654614,ExpressionUUID->"cf5ade2d-9c2c-436e-904a-31bb416ba172"]
}, Open  ]],

Cell[CellGroupData[{

Cell["With", "Subsubsection",
 CellChangeTimes->{3.939947565724616*^9},
 CellID->806058976,ExpressionUUID->"7196450f-7f79-4708-9fea-84a275890224"],

Cell["\<\
The last scoping construct is With, and it is very different from both Block \
and Module. It is used to define local constants. With [{var1 = value1,...}, \
body] is used to textually substitute the values <value1> etc in every place \
in the <body> where <var1>, etc occur. In some sense With is closer in spirit \
to the C preprocessor macros. In particular, it is not possible to modify the \
values given to the \[OpenCurlyDoubleQuote]variables\[CloseCurlyDoubleQuote]
<var1> etc during the declaration, anywhere else inside With, since the \
occurrences of <var1> etc are textually substituted with the values <val1> \
etc before any evaluation takes place. For example, the following code:\
\>", "Text",
 CellChangeTimes->{{3.939947570962556*^9, 3.939947600917756*^9}, {
   3.93994855427429*^9, 3.93994855432054*^9}, {3.9400177068085203`*^9, 
   3.940017706827112*^9}, 3.940740644398988*^9},
 CellID->1106364356,ExpressionUUID->"853f47b7-3e0f-4820-be09-542046fb9fcc"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"i", "=", "2"}], "}"}], ",", 
   RowBox[{"i", "=", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.93994760382903*^9, 3.939947607123063*^9}},
 CellLabel->"In[1124]:=",
 CellID->369714399,ExpressionUUID->"2628f686-ebd5-4cde-82cb-59e6ebcbb57a"],

Cell["\<\
is just equivalent to a direct attempt of assigning the value 3 to 2:\
\>", "Text",
 CellChangeTimes->{3.939947630206195*^9, 3.940017741654068*^9},
 CellID->979174100,ExpressionUUID->"d5d10ecb-2d01-4877-81c2-372307ad3beb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", "=", "2"}], "}"}], ",", 
    RowBox[{"i", "=", "3"}]}], "]"}], "//", "Trace"}]], "Input",
 CellChangeTimes->{{3.9399476357804117`*^9, 3.939947637112196*^9}},
 CellLabel->"In[1125]:=",
 CellID->811911739,ExpressionUUID->"d2d046c3-cfd1-45a1-abb9-eda114f90985"],

Cell[BoxData[
 TemplateBox[{
  "Set", "setraw", 
   "\"Cannot assign to raw object \\!\\(\\*RowBox[{\\\"2\\\"}]\\).\"", 2, 
   1125, 78, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939947637435204*^9},
 CellLabel->"During evaluation of In[1125]:=",
 CellID->1955850832,ExpressionUUID->"8d9e6b42-9b00-4609-b3b7-2690733bcec4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", "=", "2"}], "}"}], ",", 
      RowBox[{"i", "=", "3"}]}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"2", "=", "3"}],
    HoldForm], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"Message", "[", 
       RowBox[{
        StyleBox[
         RowBox[{"Set", "::", "setraw"}], "MessageName"], ",", 
        TagBox["2",
         HoldForm]}], "]"}],
      HoldForm], ",", 
     RowBox[{"{", 
      RowBox[{
       TagBox[
        StyleBox[
         RowBox[{"Set", "::", "setraw"}], "MessageName"],
        HoldForm], ",", 
       TagBox["\<\"Cannot assign to raw object `1`.\"\>",
        HoldForm]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       TagBox[
        RowBox[{"MakeBoxes", "[", 
         RowBox[{
          
          TemplateBox[{
           "Set", "setraw", 
            "\"Cannot assign to raw object \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\).\"", 2, 1125, 78, 26587777319895376970, 
            "Local"},
           "MessageTemplate"], ",", "StandardForm"}], "]"}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"TemplateBox", "[", 
         RowBox[{
          RowBox[{"{", 
           
           RowBox[{"\<\"Set\"\>", ",", "\<\"setraw\"\>", 
            ",", "\<\"\\\"Cannot assign to raw object \\\\!\\\\(\\\\*RowBox[{\
\\\\\\\"2\\\\\\\"}]\\\\).\\\"\"\>", ",", "2", ",", "1125", ",", "78", ",", 
            "26587777319895376970", ",", "\<\"Local\"\>"}], "}"}], 
          ",", "\<\"MessageTemplate\"\>"}], "]"}],
        HoldForm]}], "}"}], ",", 
     TagBox["Null",
      HoldForm]}], "}"}], ",", 
   TagBox["3",
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.9399476374606123`*^9},
 CellLabel->"Out[1125]=",
 CellID->452748795,ExpressionUUID->"8c1fe38a-661d-42ed-b59e-ebcdada65127"]
}, Open  ]],

Cell["\<\
The With construct is very useful in many circumstances, particularly when \
some symbols will have a constant value throughout the execution of some \
piece of code. Since these values can not be changed once initialized by \
With, it improves the code readability because it is easy to find the place \
where the symbols are defined, and then we know that they will not change. \
There are also more advanced applications of With, some of which we will \
discuss later (for example, one such application is to embed parameters into \
functions which are created at run-time).\
\>", "Text",
 CellChangeTimes->{{3.939947649239689*^9, 3.9399476702654753`*^9}},
 CellID->1138483256,ExpressionUUID->"dae8aa13-4356-4eed-8349-c5b65a73f962"],

Cell[TextData[{
 "The scoping constructs Block, Module and With can be nested arbitrarily \
deep one within another. Possible name conflicts are resolved typically in \
such a way that the more \[OpenCurlyDoubleQuote]internal\
\[CloseCurlyDoubleQuote] definitions have higher priority. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Book contains a lucid discussion of the subtleties associated with name \
conflicts in nested scoping constructs."
}], "Text",
 CellChangeTimes->{{3.939947677879911*^9, 3.939947689848393*^9}},
 CellID->1854179269,ExpressionUUID->"2f8207fe-5afa-4f1c-a80d-dfaf2d49eef5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function attributes", "Subsection",
 CellChangeTimes->{3.939947695605178*^9},
 CellID->2061790856,ExpressionUUID->"d6a17d81-69a8-4895-be76-62268df1b3c6"],

Cell[TextData[{
 "Apart from the definitions, functions can be assigned certain properties \
which affect the way they are executed. These properties are called \
Attributes. There are many possible attributes which a function may have, and \
we will only briefly discuss very few of them here. It is important that all \
possible attributes are only those built in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", and one can not assign to a function a \[OpenCurlyDoubleQuote]home-made\
\[CloseCurlyDoubleQuote] attribute that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " does not know."
}], "Text",
 CellChangeTimes->{{3.939947701226554*^9, 3.93994771265578*^9}},
 CellID->722788800,ExpressionUUID->"7b2791d4-686f-48c4-80f3-faa6f5f790c4"],

Cell[CellGroupData[{

Cell["Listable attribute and SetAttributes command", "Subsubsection",
 CellChangeTimes->{3.939947730333156*^9},
 CellTags->"4.9.1",
 CellID->215800951,ExpressionUUID->"9c5e1f3f-5f2a-4d24-a488-a311a38a7997"],

Cell["A simple example", "ItemNumbered",
 CellChangeTimes->{3.939947738083036*^9},
 CellTags->"4.9.1.1",
 CellID->1373934472,ExpressionUUID->"338aa29d-1b11-4875-bf21-b3c0627ef2d8"],

Cell["\<\
This attribute is used when we want our function to be automatically threaded \
over any lists passed to it as arguments. For example, let us define a \
function which will square its argument and will also work on lists:\
\>", "Text",
 CellChangeTimes->{{3.939947743949144*^9, 3.9399477533947697`*^9}, 
   3.94001774167388*^9},
 CellID->1972498360,ExpressionUUID->"3cd44d88-44b7-4e78-ae64-b6be1940517d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "flst", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"flst", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"flst", ",", "Listable"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9399477599072027`*^9, 3.9399477759236917`*^9}},
 CellLabel->"In[1126]:=",
 CellID->70410329,ExpressionUUID->"761d9655-7520-49d3-946e-900ffa8ccc4b"],

Cell["\<\
Notice how we set the attributes: we use the SetAttributes built-in function. \
Let us check:\
\>", "Text",
 CellChangeTimes->{3.9399477848586817`*^9, 3.9400177416925087`*^9},
 CellID->490248049,ExpressionUUID->"a6991260-86bf-42d1-9c40-638d3835ab8c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"testlist", "=", 
  RowBox[{"Range", "[", "10", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"testlist1", "=", 
  RowBox[{"Range", "/@", 
   RowBox[{"Range", "[", "5", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.939947788211968*^9, 3.939947797766333*^9}},
 CellLabel->"In[1129]:=",
 CellID->14952033,ExpressionUUID->"a866f809-47df-4564-8f66-25da5a0f3ca6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.939947798362465*^9},
 CellLabel->"Out[1129]=",
 CellID->457698248,ExpressionUUID->"f0a7fa00-3c11-4a4c-8ed3-1294f6ee8491"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.939947798384158*^9},
 CellLabel->"Out[1130]=",
 CellID->248030582,ExpressionUUID->"71a738ac-60f9-476d-83da-ed4c939555c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flst", "[", "testlist", "]"}]], "Input",
 CellChangeTimes->{{3.939947801907866*^9, 3.9399478057774353`*^9}},
 CellLabel->"In[1131]:=",
 CellID->1911610732,ExpressionUUID->"928bc0c0-e91a-4969-b5a9-a76ca1321788"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.939947807027516*^9},
 CellLabel->"Out[1131]=",
 CellID->810130209,ExpressionUUID->"914f065c-058b-400c-a31d-65313a44df7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flst", "[", "testlist1", "]"}]], "Input",
 CellChangeTimes->{{3.9399478088348618`*^9, 3.939947816114834*^9}},
 CellLabel->"In[1132]:=",
 CellID->1717602496,ExpressionUUID->"7d301815-4a5a-431b-9a02-1e4cccdc1f06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "9", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.939947816400036*^9},
 CellLabel->"Out[1132]=",
 CellID->1827378903,ExpressionUUID->"805e9d03-7a56-4380-92b5-82eb59777829"]
}, Open  ]],

Cell["Careful with the Listable attribute", "ItemNumbered",
 CellChangeTimes->{3.9399478349490232`*^9},
 CellID->1593586974,ExpressionUUID->"55f674f7-8cee-4d92-b361-7a1e66663ccf"],

Cell["\<\
As we can see, listability leads to function working also on nested lists. In \
fact, this is not always the desired behavior. For example, here we have a \
function that takes an interval and computes its length:\
\>", "Text",
 CellChangeTimes->{{3.939947841769236*^9, 3.9399478456305113`*^9}},
 CellID->226634,ExpressionUUID->"79bcc1e5-0588-4f69-83a1-0c6a2ae32b4d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "intervalLength", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"intervalLength", "[", 
    RowBox[{"{", 
     RowBox[{"start_", ",", "end_"}], "}"}], "]"}], ":=", 
   RowBox[{"end", "-", "start"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939947850867998*^9, 3.93994786661798*^9}},
 CellLabel->"In[1133]:=",
 CellID->1839513767,ExpressionUUID->"e35e5971-226b-4f4d-ba98-6f76b12300fb"],

Cell["\<\
We now want it to work on a list of intervals and add the Listable attribute:\
\
\>", "Text",
 CellChangeTimes->{3.939947873732769*^9, 3.9400177417110853`*^9},
 CellID->813317165,ExpressionUUID->"6c9ab999-0572-4e97-a09e-282378e1c0aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"intervalLength", ",", "Listable"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.939947877792141*^9, 3.9399478853799973`*^9}},
 CellLabel->"In[1135]:=",
 CellID->2025013905,ExpressionUUID->"a4c0e11a-09c6-4c62-b870-c919c6f0411d"],

Cell["Now we use it on a list of intervals:", "Text",
 CellChangeTimes->{3.939947892729228*^9, 3.9400177417295427`*^9},
 CellID->1193707841,ExpressionUUID->"81288441-08b6-4ce3-aa25-b4cdbaa44349"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"intervalLength", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "10"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.93994789438094*^9, 3.939947901818239*^9}},
 CellLabel->"In[1136]:=",
 CellID->202495626,ExpressionUUID->"0b4dbd83-3cb0-4a57-a6f3-27892c9a146d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"intervalLength", "[", "1", "]"}], ",", 
     RowBox[{"intervalLength", "[", "4", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"intervalLength", "[", "2", "]"}], ",", 
     RowBox[{"intervalLength", "[", "7", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"intervalLength", "[", "5", "]"}], ",", 
     RowBox[{"intervalLength", "[", "10", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939947902402808*^9},
 CellLabel->"Out[1136]=",
 CellID->1660262909,ExpressionUUID->"75f81a20-2c7a-41a7-86a7-876d7fcea454"]
}, Open  ]],

Cell["\<\
We see that listability made our function go all the way to the elements \
which are not lists - but this is not we want. So, if you attach a listable \
attribute to a function, make sure that its normal arguments are not lists.\
\>", "Text",
 CellChangeTimes->{{3.939947924858774*^9, 3.9399479322147493`*^9}},
 CellID->1783686092,ExpressionUUID->"df88408a-1963-429b-91b1-f4a189553809"],

Cell["A way out in some cases", "ItemNumbered",
 CellChangeTimes->{3.939947942582652*^9},
 CellTags->"4.9.1.3",
 CellID->516383228,ExpressionUUID->"a4cea705-01fc-463e-8b20-f1c5c142f61f"],

Cell["\<\
As another example of the similar kind, consider a following one: we are \
given some function , say <f>, and two lists , say {1, 2} and {3, 4, 5}, and \
wish the output be a list: {f[1, {3, 4, 5}], f[2, {3, 4, 5}]} - that is, to \
thread <f> over the first list but not the second. For the same reason as \
above, the straightforward attempt to assign a listable attribute to <f> will \
fail:\
\>", "Text",
 CellChangeTimes->{{3.939947948763253*^9, 3.939947965951325*^9}, {
  3.939948554346211*^9, 3.93994855439281*^9}, {3.9400177068466673`*^9, 
  3.940017706883843*^9}, {3.940017741748054*^9, 3.940017741766479*^9}},
 CellID->871495469,ExpressionUUID->"62a28393-e489-4643-a3ac-6728286c440e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"f", ",", "Listable"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.939947972641637*^9, 3.939947986754809*^9}},
 CellLabel->"In[1137]:=",
 CellID->1706374754,ExpressionUUID->"970e2e27-7800-472b-8734-f2f6647aa9e1"],

Cell[BoxData[
 TemplateBox[{
  "Thread", "tdlen", 
   "\"Objects of unequal length in \\!\\(\\*RowBox[{\\\"f\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\) cannot be combined.\"", 
   2, 1139, 79, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939947988092814*^9},
 CellLabel->"During evaluation of In[1137]:=",
 CellID->872493054,ExpressionUUID->"96d08e57-e9a0-4476-9c8e-514e8e0439fb"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.9399479881126537`*^9},
 CellLabel->"Out[1139]=",
 CellID->972416862,ExpressionUUID->"61a82180-4d28-4c22-8292-c671b45004c8"]
}, Open  ]],

Cell["\<\
I can\[CloseCurlyQuote] t help showing here a hack which solves this sort of \
problems and which is related to the use of Listable SubValues, although it \
is perhaps a bit too advanced at this point.The idea is that we will create a \
higher-order function which will take <f>, and both of our lists as \
parameters. Here is the code:\
\>", "Text",
 CellChangeTimes->{{3.9399479993777533`*^9, 3.939948011608779*^9}, 
   3.939948554416925*^9, 3.940017706902975*^9, 3.940017741785716*^9},
 CellID->1059645964,ExpressionUUID->"180c229d-7d08-4715-a6b1-0d8fd095b373"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "listThread", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"listThread", "[", 
    RowBox[{"f_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "auxf", "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Attributes", "[", "auxf", "]"}], "=", 
       RowBox[{"{", "Listable", "}"}]}], ";", 
      RowBox[{
       RowBox[{
        RowBox[{"auxf", "[", "t_", "]"}], "[", "z_", "]"}], ":=", 
       RowBox[{"f", "[", 
        RowBox[{"t", ",", "z"}], "]"}]}], ";", 
      RowBox[{"Through", "[", 
       RowBox[{
        RowBox[{"auxf", "[", "x", "]"}], "[", "y", "]"}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9399480278112307`*^9, 3.939948072346436*^9}, 
   3.9399481047318573`*^9},
 CellLabel->"In[1144]:=",
 CellID->2142382755,ExpressionUUID->"f52d9589-ae5d-4c79-b319-f403a4c66909"],

Cell["Check:", "Text",
 CellChangeTimes->{{3.939948075060238*^9, 3.939948076608067*^9}},
 CellID->2147096552,ExpressionUUID->"109bd9c6-31e4-4e5e-a3ba-8fa38a334f74"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"listThread", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.93994808087754*^9, 3.9399480911375217`*^9}},
 CellLabel->"In[1146]:=",
 CellID->565462644,ExpressionUUID->"80c6d0c1-a985-4a61-8158-206f6585d5c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.939948091773563*^9, 3.939948108057344*^9}},
 CellLabel->"Out[1147]=",
 CellID->737425565,ExpressionUUID->"fef3829b-5a01-43bc-8516-fad89004bc09"]
}, Open  ]],

Cell[TextData[{
 "What happens here is that an auxiliary function is defined inside Module, \
but if you look carefully at its definition you will realize that it \
corresponds to global rules stored in SubValues rather than DownValues \
(section ",
 ButtonBox["2.2.5",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-2-Elementary-operations.nb", 
     CharacterEncoding -> "UTF-8"], "2.2.5"},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-2-Elementary-operations.nb"],
 "), because the function <auxf[x]>, considered as a function of <y>, has a \
composite (non-atomic) head. Setting the Listable attribute to <auxf> will \
then only affect the \[OpenCurlyDoubleQuote]first\[CloseCurlyDoubleQuote] \
argument <x>, but not <y>. Note also that neither <t> nor <z> needs to be \
localized since SetDelayed is used in the definition, and thus they are local \
to the auxiliary function scope automatically. The Through operator is needed \
here as well - it is covered at the end of chapter V."
}], "Text",
 CellChangeTimes->{{3.939948119403644*^9, 3.9399481455907583`*^9}, {
   3.939948181701551*^9, 3.939948181712215*^9}, {3.9399485544404497`*^9, 
   3.9399485544879513`*^9}, {3.940017706921768*^9, 3.940017706959078*^9}, 
   3.9407406444210987`*^9},
 CellID->783344118,ExpressionUUID->"80a47ded-7b50-4137-94b3-736498d25ff9"],

Cell["\<\
This trick is trivial to generalize to the total <n> number of arguments, out \
of which you need your function to be Listable on <k>: just place these <k> \
first - in the place of our <t>, and the rest - in the place of <z>: \
auxf[arg1...argk][arg(k+1)...argn].\
\>", "Text",
 CellChangeTimes->{{3.93994819727754*^9, 3.939948207118235*^9}},
 CellID->2045181427,ExpressionUUID->"fda6ee8b-38f6-4abb-9360-876a2818dff2"],

Cell["Be aware of Listable built-in functions", "ItemNumbered",
 CellChangeTimes->{{3.939948217174336*^9, 3.9399482253737497`*^9}},
 CellID->556336596,ExpressionUUID->"f47fe9e9-d2a4-498b-afe2-dafc1db42d5f"],

Cell["\<\
There are at least two good reasons to check for a Listable attribute of a \
built-in function you wish to use.\
\>", "Text",
 CellChangeTimes->{{3.939948233058744*^9, 3.939948239563348*^9}},
 CellID->71086556,ExpressionUUID->"3389801f-cc61-46ba-a976-321e21813c20"],

Cell["\<\
First, to avoid errors of the type described above, which result from the \
assumption that the function is not Listable when in fact it is. A classic \
example here would be an attempt to sum two nested lists of the same length, \
but where lengths of sublists in the two lists are different:\
\>", "Text",
 CellChangeTimes->{{3.9399482520451927`*^9, 3.939948260518656*^9}, 
   3.9399483116422033`*^9},
 CellID->736490948,ExpressionUUID->"ec4c70a0-aba4-462e-858f-d1c4702d1189"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
    RowBox[{"{", "6", "}"}]}], "}"}], "+", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.939948263464038*^9, 3.939948281873166*^9}},
 CellLabel->"In[1148]:=",
 CellID->1599938831,ExpressionUUID->"a1023443-c558-4536-9bc7-2157f7b4283b"],

Cell[BoxData[
 TemplateBox[{
  "Thread", "tdlen", 
   "\"Objects of unequal length in \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\"+\\\", RowBox[{\\\
\"{\\\", \\\"1\\\", \\\"}\\\"}]}]\\) cannot be combined.\"", 2, 1148, 80, 
   26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939948282371451*^9},
 CellLabel->"During evaluation of In[1148]:=",
 CellID->1522418648,ExpressionUUID->"fc7424aa-b5bc-4f7d-b104-6f44e93a6f33"],

Cell[BoxData[
 TemplateBox[{
  "Thread", "tdlen", 
   "\"Objects of unequal length in \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}], \
\\\"+\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\"}], \
\\\"}\\\"}]}]\\) cannot be combined.\"", 2, 1148, 81, 26587777319895376970, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9399482823971767`*^9},
 CellLabel->"During evaluation of In[1148]:=",
 CellID->22562931,ExpressionUUID->"c732cf74-5c35-4b04-8fb8-164a29c5459b"],

Cell[BoxData[
 TemplateBox[{
  "Thread", "tdlen", 
   "\"Objects of unequal length in \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
\\\"6\\\", \\\"}\\\"}], \\\"+\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \
\\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\"}], \\\"}\\\"}]}]\\) cannot be \
combined.\"", 2, 1148, 82, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939948282409568*^9},
 CellLabel->"During evaluation of In[1148]:=",
 CellID->1258059445,ExpressionUUID->"01591c4e-9271-47c6-bfba-bdf3b4ecd53a"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Thread\\\", \\\"::\\\", \
\\\"tdlen\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 1148, 83, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939948282421198*^9},
 CellLabel->"During evaluation of In[1148]:=",
 CellID->81103753,ExpressionUUID->"04573dc1-f061-48a3-a60d-22e1b509dd3d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "1", "}"}], "+", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], "+", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6", "}"}], "+", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.939948282433853*^9},
 CellLabel->"Out[1148]=",
 CellID->1606144473,ExpressionUUID->"a4bb8fb9-96e0-4717-b92b-1a294d7d75f2"]
}, Open  ]],

Cell["\<\
This result is such (error messages) because summation operator Plus is \
Listable. For the record, Listable attributes, among others, can be removed \
or temporarily disabled to avoid problems like this, for both user-defined \
and built-in functions. We will see such an example in chapter V.\
\>", "Text",
 CellChangeTimes->{{3.939948290443429*^9, 3.939948302117647*^9}},
 CellID->681403162,ExpressionUUID->"4a9b866d-7d4f-4664-9738-a8fce94d32e2"],

Cell["\<\
The second reason to be aware of Listable attributes for built-ins is to be \
able to write more efficient code. If some built-in function is Listable and \
one has to thread it over a list, it will almost certainly be faster to feed \
it an entire list rather than to thread (map) it by hand with commands such \
as Table or Map. This is so just because more operations will then be \
\[OpenCurlyDoubleQuote]pushed\[CloseCurlyDoubleQuote] into the kernel. For \
user-defined functions however there will be no significant difference in \
most cases, so this comment refers to built-ins.\
\>", "Text",
 CellChangeTimes->{{3.939948320033061*^9, 3.9399483509082737`*^9}},
 CellID->1873255980,ExpressionUUID->"d103bf8a-b1c0-45b3-9a14-8d96ade93007"],

Cell["\<\
As an example, consider computing some function numerically on a list of \
first 50000 natural numbers. Here is implementation using Table:\
\>", "Text",
 CellChangeTimes->{{3.939948359270145*^9, 3.9399483617094088`*^9}, 
   3.940017741805373*^9},
 CellID->1390243839,ExpressionUUID->"d365b02b-d023-4584-80a3-b4589bd096a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"Sin", "[", "i", "]"}], "^", "3"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "50000"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Short", "[", 
     RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "//", "Timing"}]], "Input",
 CellChangeTimes->{{3.939948364875558*^9, 3.939948387471465*^9}},
 CellLabel->"In[1151]:=",
 CellID->1685947835,ExpressionUUID->"ca6c0921-6d77-4d42-b112-2070e3ce46a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00579`", ",", 
   TagBox[
    RowBox[{"{", 
     RowBox[{"1.814524112905498`", ",", 
      RowBox[{"\[LeftSkeleton]", "49998", "\[RightSkeleton]"}], ",", 
      "0.3680558287044108`"}], "}"}],
    Short[#, 3]& ]}], "}"}]], "Output",
 CellChangeTimes->{3.939948388276594*^9, 3.939948461337859*^9},
 CellLabel->"Out[1151]=",
 CellID->1715047493,ExpressionUUID->"b596215b-5f4f-4e38-b471-bc433965039e"]
}, Open  ]],

Cell["\<\
Here we use Listability of all the functions (Sin, Exp, Power) to compute the \
result on entire list. We win a factor of 7-10 (an order of magnitude) in \
performance.\
\>", "Text",
 CellChangeTimes->{{3.939948398834762*^9, 3.9399484048917294`*^9}},
 CellID->1951818559,ExpressionUUID->"f13e85a2-36de-4398-af0d-ca95154ca445"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"N", "[", 
       RowBox[{"Range", "[", "50000", "]"}], "]"}], "]"}], "^", "3"}], "]"}], 
   "//", 
   RowBox[{
    RowBox[{"Short", "[", 
     RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "//", "Timing"}]], "Input",
 CellChangeTimes->{{3.939948419369945*^9, 3.939948436959107*^9}},
 CellLabel->"In[1157]:=",
 CellID->919066180,ExpressionUUID->"25c68ce8-168c-4d39-a14f-30ed10c52aa0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000344`", ",", 
   TagBox[
    RowBox[{"{", 
     RowBox[{"1.814524112905498`", ",", "2.1208711936436577`", ",", 
      RowBox[{"\[LeftSkeleton]", "49997", "\[RightSkeleton]"}], ",", 
      "0.36805582870441067`"}], "}"}],
    Short[#, 3]& ]}], "}"}]], "Output",
 CellChangeTimes->{{3.939948437388817*^9, 3.939948474985648*^9}},
 CellLabel->"Out[1157]=",
 CellID->486047692,ExpressionUUID->"a312dfc4-8719-4b64-9685-c83137c6d42b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clearing Attributes - the ClearAll command", "Subsubsection",
 CellChangeTimes->{3.939948486927758*^9},
 CellID->2123249903,ExpressionUUID->"1bf98c1c-aff9-4e4a-9130-073726555782"],

Cell["\<\
Now suppose we would like to give our function <flst> from the previous \
example another definition, and also no longer want it to have a Listable \
attribute (in fact, we want to remove all attributes attached to the symbol \
<flst>). First thing we may try is just to use Clear command, as we usually \
do:\
\>", "Text",
 CellChangeTimes->{{3.939948493359415*^9, 3.939948499815439*^9}, {
   3.939948554512333*^9, 3.939948560761314*^9}, 3.939948653648473*^9},
 CellID->725357522,ExpressionUUID->"d8832c48-fe01-435e-93d5-e7be2e602f13"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "flst", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"flst", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.939948664999823*^9, 3.93994867192869*^9}},
 CellLabel->"In[1158]:=",
 CellID->1184371236,ExpressionUUID->"020c246f-bc59-47ae-8d21-48463d2103ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"flst", "[", "1", "]"}], ",", 
   RowBox[{"flst", "[", "2", "]"}], ",", 
   RowBox[{"flst", "[", "3", "]"}], ",", 
   RowBox[{"flst", "[", "4", "]"}], ",", 
   RowBox[{"flst", "[", "5", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939948672895751*^9},
 CellLabel->"Out[1159]=",
 CellID->364310330,ExpressionUUID->"45c91dc7-102f-4156-a27d-12dd962fd731"]
}, Open  ]],

Cell["\<\
We see that while the definition of <flst> has been cleared, the Listable \
attribute remains. To remove both the definitions and the attributes attached \
to a given symbol, use ClearAll instead of Clear:\
\>", "Text",
 CellChangeTimes->{{3.939948686704658*^9, 3.93994868921669*^9}, {
   3.940017681527361*^9, 3.940017706978622*^9}, 3.940017741824028*^9},
 CellID->487838713,ExpressionUUID->"d40e6c29-1cf8-46a4-91ca-0d0c72a43c00"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "flst", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"flst", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9399486936161222`*^9, 3.939948702821007*^9}},
 CellLabel->"In[1160]:=",
 CellID->1966183080,ExpressionUUID->"a24fe240-654e-4252-aa08-e32fcdfac0c5"],

Cell[BoxData[
 RowBox[{"flst", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.939948703581686*^9},
 CellLabel->"Out[1161]=",
 CellID->2082191988,ExpressionUUID->"63991574-0914-4f05-ab1e-0241b8d28c28"]
}, Open  ]],

Cell["\<\
Let me stress that ClearAll serves to clear all definitions (including \
attributes) for a given symbol (or symbols), and not to clear definitions of \
all global symbols in the system (it is a common mistake to mix these two \
things).\
\>", "Text",
 CellChangeTimes->{{3.939948710390359*^9, 3.9399487156923237`*^9}},
 CellID->7230804,ExpressionUUID->"5ff9dc0b-466f-40c6-831c-28e61222057e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Orderless attribute", "Subsubsection",
 CellChangeTimes->{3.939948751703294*^9},
 CellID->2062309938,ExpressionUUID->"b516a6c9-6984-45e7-b883-03561ca7aae5"],

Cell[TextData[{
 "This attribute states that the result of evaluation of a given function \
should not depend on the order of its arguments, which is commutativity. The \
presence of this attribute does change the evaluation of the function, \
because then the argument list is sorted (by default ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " sorting function) before the actual evaluation process for this function \
starts. Many built-in functions such as Plus or Times (or, in general, \
commutative functions) have this attribute. As an example, we can arrange \
sorting of a list (with the default sorting criteria) by just defining a \
\[OpenCurlyDoubleQuote]container function\[CloseCurlyDoubleQuote] with such \
an attribute:"
}], "Text",
 CellChangeTimes->{{3.939948758324729*^9, 3.939948779997834*^9}},
 CellID->857065386,ExpressionUUID->"a23b9bba-3f8c-49b8-9e77-b18b00614868"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "fsort", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"fsort", ",", "Orderless"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.939948783003743*^9, 3.939948794878991*^9}},
 CellLabel->"In[1162]:=",
 CellID->1298210758,ExpressionUUID->"d9b06bf0-f9b6-4c2d-9853-d8b2b3477cd7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testlist", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "15"}], "}"}], "]"}], ",", 
    RowBox[{"{", "20", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.93994879869306*^9, 3.939948808632619*^9}},
 CellLabel->"In[1164]:=",
 CellID->1432558288,ExpressionUUID->"e40523cc-a0e4-4d7c-9d10-067ee4ce7fb5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "14", ",", "1", ",", "12", ",", "11", ",", "3", ",", "13", ",", "8", ",", 
   "14", ",", "15", ",", "10", ",", "1", ",", "4", ",", "2", ",", "4", ",", 
   "12", ",", "14", ",", "12", ",", "7", ",", "7", ",", "15"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9399488089157*^9},
 CellLabel->"Out[1164]=",
 CellID->1917305451,ExpressionUUID->"bef75b47-64e3-4bac-8c81-482d8af61bf0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"fsort", ",", "testlist"}], "]"}]], "Input",
 CellChangeTimes->{{3.939948810360403*^9, 3.939948815913353*^9}},
 CellLabel->"In[1165]:=",
 CellID->471105953,ExpressionUUID->"28a5643e-7e19-4af0-b2d6-5fe391e0267c"],

Cell[BoxData[
 RowBox[{"fsort", "[", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "4", ",", "4", ",", "7", ",", "7", 
   ",", "8", ",", "10", ",", "11", ",", "12", ",", "12", ",", "12", ",", "13",
    ",", "14", ",", "14", ",", "14", ",", "15", ",", "15"}], "]"}]], "Output",\

 CellChangeTimes->{3.939948816265072*^9},
 CellLabel->"Out[1165]=",
 CellID->1348205583,ExpressionUUID->"f697c934-4faf-42b2-bfd1-b1d8e77d8d80"]
}, Open  ]],

Cell["\<\
The meaning of Apply will be clarified in the chapter V. Its role here is to \
\[OpenCurlyDoubleQuote]eat up\[CloseCurlyDoubleQuote] the List head so that \
the <fsort> receives a sequence of arguments rather than a list.\
\>", "Text",
 CellChangeTimes->{{3.939948826821563*^9, 3.939948830757469*^9}, {
  3.94001768154657*^9, 3.940017706997143*^9}},
 CellID->1191273984,ExpressionUUID->"33136f37-2546-4907-b99a-71f56865cee7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Flat attribute", "Subsubsection",
 CellChangeTimes->{3.9399488390943813`*^9},
 CellID->1992559048,ExpressionUUID->"3a408d91-ae4d-4d45-a8f1-32da96a6bd96"],

Cell["\<\
This attribute is used to implement associativity. This means that for \
example expression like f[a,b,f[c,d,e,f[f[g,h]]],i,f[f[j]]] will be \
automatically simplified to f[a,b,c,d,e,f,g,h,i,j] if the symbol <f> has a \
Flat attribute. Previously we considered a rule-based way to mimic this \
functionality in a very special case when the function has a property that \
f[f[f[...f[x]]]]] = f[x]. With a Flat attribute this is trivial since the
system does all the work. For instance:\
\>", "Text",
 CellChangeTimes->{{3.939948845709515*^9, 3.939948862083207*^9}},
 CellID->1079928418,ExpressionUUID->"e1fda85f-cbee-4877-9701-d273dae07d91"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"f", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testlist", "=", 
  RowBox[{"NestList", "[", 
   RowBox[{"f", ",", "x", ",", "5"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.939948867019142*^9, 3.939948877575768*^9}},
 CellLabel->"In[1166]:=",
 CellID->1848455827,ExpressionUUID->"f284364e-3b97-4007-9c3f-22c96fd090ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", 
       RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.939948877975671*^9},
 CellLabel->"Out[1167]=",
 CellID->1883531094,ExpressionUUID->"6b5e4993-92b5-477d-90c3-e5d876f5df81"]
}, Open  ]],

Cell["Now we set the Flat attribute to the function <f>:", "Text",
 CellChangeTimes->{
  3.939948889195609*^9, {3.940017681565281*^9, 3.940017707015498*^9}, 
   3.940017741842554*^9},
 CellID->450656431,ExpressionUUID->"968b97cd-54c9-49ad-b44d-ec1950c2d021"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"f", ",", "Flat"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.9399488914350233`*^9, 3.939948895830093*^9}},
 CellLabel->"In[1168]:=",
 CellID->314033869,ExpressionUUID->"07fb1e58-4741-4945-9bec-3c6d5dec2316"],

Cell[CellGroupData[{

Cell[BoxData["testlist"], "Input",
 CellChangeTimes->{{3.9399489017720823`*^9, 3.939948903736546*^9}},
 CellLabel->"In[1169]:=",
 CellID->989068106,ExpressionUUID->"5a0bfbe9-6ff1-4a26-81d4-22028eb9cc08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", "x", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939948904027995*^9},
 CellLabel->"Out[1169]=",
 CellID->1145522215,ExpressionUUID->"a45fc09c-4ca1-4439-83be-ad96b1aa93f1"]
}, Open  ]],

Cell["And our first example:", "Text",
 CellChangeTimes->{3.939948921419504*^9, 3.940017741861042*^9},
 CellID->600972150,ExpressionUUID->"8bb2e7e2-571e-4b8b-ae4d-caceca80816f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "g", ",", "h", ",", "i", 
    ",", "j"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"a", ",", "b", ",", 
   RowBox[{"f", "[", 
    RowBox[{"c", ",", "d", ",", "e", ",", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", 
       RowBox[{"g", ",", "h"}], "]"}], "]"}]}], "]"}], ",", "i", ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", "j", "]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.939948924164249*^9, 3.939948943079607*^9}},
 CellLabel->"In[1170]:=",
 CellID->744410441,ExpressionUUID->"551cfd9b-136b-4be5-b929-a9f2d0d2dae6"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
  "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "g", ",", "h", ",", "i", 
   ",", "j"}], "]"}]], "Output",
 CellChangeTimes->{3.939948943581067*^9},
 CellLabel->"Out[1171]=",
 CellID->792480783,ExpressionUUID->"1449c7e0-4ec6-4d9c-bed6-63ec52e5f5b6"]
}, Open  ]],

Cell["\<\
By the way, setting the attributes is largely independent from giving \
definitions to a function. The non-trivial dependencies arise in some cases, \
and generally one has to set up attributes before any definitions are given \
to the function. However, often there is no need to satisfy such strict \
requirements (but you have to know precisely what you are doing, of course). \
In particular, some attributes may be set when the function has already been \
defined for a while and perhaps used, attributes may also be set temporarily, \
or selectively removed. In fact, as an extreme case, a function may be \
programmed in such a way that it itself temporarily removes, changes or \
restores its own attributes (this is however a really exotic example).To \
remove a given attribute, one has to use ClearAttributes. The current list of \
attributes can be monitored with the Attributes built-in command:\
\>", "Text",
 CellChangeTimes->{{3.939948953242919*^9, 3.939948996586192*^9}, 
   3.940017741879595*^9},
 CellID->990296531,ExpressionUUID->"f98a77d6-66e3-4f38-937b-3812a9ba0edd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "Plus", "]"}]], "Input",
 CellChangeTimes->{{3.939949002006221*^9, 3.939949005024085*^9}},
 CellLabel->"In[1172]:=",
 CellID->560802157,ExpressionUUID->"c72b98cf-a377-4dae-97f4-23c43a7efabc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Flat", ",", "Listable", ",", "NumericFunction", ",", "OneIdentity", ",", 
   "Orderless", ",", "Protected"}], "}"}]], "Output",
 CellChangeTimes->{3.9399490054341803`*^9},
 CellLabel->"Out[1172]=",
 CellID->334669836,ExpressionUUID->"892e14e6-96cc-402c-9553-8ffabec113a0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Protected attribute", "Subsubsection",
 CellChangeTimes->{3.939949016806428*^9},
 CellID->536262159,ExpressionUUID->"4d59d50e-f532-46bf-b156-263a90a45aa8"],

Cell["\<\
This attribute is needed if we want to protect a given function or symbol \
against changes that the user or some user program may wish to apply to it. \
Most system functions have the Protected attribute. For example, when we try \
something like this assignment:\
\>", "Text",
 CellChangeTimes->{{3.9399490233594837`*^9, 3.939949031772225*^9}},
 CellID->2116723501,ExpressionUUID->"0df7b358-6d82-471f-82c2-b6125af63944"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "+", "b"}], "=", "c"}]], "Input",
 CellChangeTimes->{{3.939949034205291*^9, 3.939949035324501*^9}},
 CellLabel->"In[1173]:=",
 CellID->2102634394,ExpressionUUID->"8105ec5a-89b5-468a-81f5-387ed69aa89d"],

Cell[BoxData[
 TemplateBox[{
  "Set", "write", 
   "\"Tag \\!\\(\\*RowBox[{\\\"Plus\\\"}]\\) in \\!\\(\\*RowBox[{\\\"a\\\", \
\\\"+\\\", \\\"b\\\"}]\\) is Protected.\"", 2, 1173, 84, 26587777319895376970,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9399490362618113`*^9},
 CellLabel->"During evaluation of In[1173]:=",
 CellID->1358590720,ExpressionUUID->"ecb0f72c-1042-438b-8c51-e127fd28fd77"],

Cell[BoxData["c"], "Output",
 CellChangeTimes->{3.93994903628913*^9},
 CellLabel->"Out[1173]=",
 CellID->1788096136,ExpressionUUID->"aa6f9fd1-0f8a-48df-b4ff-e4ecf24f4cd2"]
}, Open  ]],

Cell["\<\
The FullForm Plus[a, b] = c tells us that we are trying to make a new rule \
(definition) for the built-in Plus command, which is protected. Of course, \
our assignment fails.\
\>", "Text",
 CellChangeTimes->{{3.939949045055728*^9, 3.9399490555981827`*^9}},
 CellID->645601634,ExpressionUUID->"56b060e7-6527-4ba5-8ac2-6cf17b075bf0"],

Cell["\<\
It is possible to make a symbol Protected by using the built-in command \
Protect and to unprotect the symbol by using the built-in command Unprotect. \
This is often handy. Protecting your own symbols is a standard practice when \
writing packages (which are system extensions to some domain), while \
unprotecting is used usually with built-in commands when we need to add some \
new rule to the definition of this or that built-in command. As an example, \
we may Unprotect Plus command so that the above assignment will work:\
\>", "Text",
 CellChangeTimes->{{3.939949066064801*^9, 3.9399490955293303`*^9}, 
   3.940017741898849*^9},
 CellID->2057233396,ExpressionUUID->"fc1cb1c2-c5c1-464b-8442-da3f56263e96"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b", ",", "c"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Unprotect", "[", "Plus", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Plus", "[", 
    RowBox[{"a", ",", "b"}], "]"}], "=", "c"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", "Plus", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.939949100749192*^9, 3.9399491219285393`*^9}},
 CellLabel->"In[1174]:=",
 CellID->212547489,ExpressionUUID->"d94f174c-16e6-4743-b79b-1c2917779397"],

Cell["We can check now:", "Text",
 CellChangeTimes->{3.9399491274293327`*^9, 3.9400177419174347`*^9},
 CellID->1058569075,ExpressionUUID->"d4f46a77-c790-4a63-90e5-c8b0f3e409e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "+", "b"}]], "Input",
 CellChangeTimes->{{3.939949130464994*^9, 3.9399491311542997`*^9}},
 CellLabel->"In[1178]:=",
 CellID->1551036077,ExpressionUUID->"ac947c61-24cb-4436-bc76-bbd8997feb1f"],

Cell[BoxData["c"], "Output",
 CellChangeTimes->{3.939949131492737*^9},
 CellLabel->"Out[1178]=",
 CellID->827711685,ExpressionUUID->"b932c18d-d6f4-4112-91e9-90226c585869"]
}, Open  ]],

Cell["\<\
The reason we can redefine the behavior of system functions is that the \
user-defined rules have higher priority than the system ones. But what we \
just did was in this case not motivated by any serious need and thus \
represents an act of vandalism. Besides, even in cases when the workings of \
the built-in functions have to be modified, modifying their DownValues \
(adding rules as above) is really a last resort. There are
softer ways of getting what one needs, such as using UpValues for the symbol \
you define. I will have more to say about this later. For now, then, let us \
remove our definition:\
\>", "Text",
 CellChangeTimes->{{3.939949140595666*^9, 3.939949171222179*^9}, 
   3.9400177419360228`*^9},
 CellID->2098708176,ExpressionUUID->"e6076cf2-7f9c-45a7-8d6f-45b8ac92f4b9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "Plus", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "Plus", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", "Plus", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"a", "+", "b"}]}], "Input",
 CellChangeTimes->{{3.9399491735340567`*^9, 3.939949188709894*^9}},
 CellLabel->"In[1179]:=",
 CellID->1473440504,ExpressionUUID->"fd039596-fbf0-430b-b84d-1510951d0f30"],

Cell[BoxData[
 RowBox[{"a", "+", "b"}]], "Output",
 CellChangeTimes->{3.939949189218031*^9},
 CellLabel->"Out[1182]=",
 CellID->854844625,ExpressionUUID->"6e1d3b04-9456-48f3-9af4-40c9db00f03c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Attributes are properties of symbols", "Subsubsection",
 CellChangeTimes->{3.939949198871088*^9},
 CellID->383485588,ExpressionUUID->"8ef247d1-826e-4050-9be5-b2784d6e965c"],

Cell["\<\
I would like to stress that while we may interpret many attributes to be \
properties of functions, they are really properties of symbols (function \
names for functions). Function definitions are rules associated also with \
symbols (function heads or names). There is no fundamental distinction \
between rules describing functions and just some symbolic rewritings, as we \
have already discussed a few times. The technical distinction is that say \
rules for symbols are kept as OwnValues and rules for functions in DownValues \
(and UpValues and SubValues which we did not cover yet), but the main point \
is the same: there are symbols and associated with them global rules and \
properties. Whether we interpret these symbols as function names or something \
else is up to us.\
\>", "Text",
 CellChangeTimes->{{3.9399492092851667`*^9, 3.9399492440013647`*^9}},
 CellID->643852869,ExpressionUUID->"bf700ff6-8874-44ba-af18-9fa86dac7d09"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Attributes HoldFirst, HoldRest and HoldAll", "Subsubsection",
 CellChangeTimes->{3.9399492521317043`*^9},
 CellID->287815514,ExpressionUUID->"36d8df3e-18b0-4aef-a3c8-07f89e041dea"],

Cell["The meaning of argument holding", "ItemNumbered",
 CellChangeTimes->{3.939949260710137*^9},
 CellID->1182170754,ExpressionUUID->"1a9e179d-4f48-45cd-9b89-86ca7bd05c44"],

Cell[TextData[{
 "These attributes are used when some of the function arguments have to be \
evaluated only after the rules associated with the function name have been \
applied. This means that these attributes change the evaluation order from \
standard evaluation (depth-first, subexpressions before expressions) to a \
non-standard one (expressions before subexpressions). One usually needs to \
change the evaluation order to do something non-trivial. In particular, as we \
have seen already on the example of the increment function <inc[x]> (sections \
",
 ButtonBox["2.5.5",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$RootDirectory, "Users", "fengh", "Documents", "RDS", 
      "EDITED", "MPAAI"}, "MPAAI-2-Elementary-operations.nb", 
     CharacterEncoding -> "UTF-8"], "2.5.5"},
  ButtonNote->
   "/Users/fengh/Documents/RDS/EDITED/MPAAI/MPAAI-2-Elementary-operations.nb"],
 ", ",
 ButtonBox["4.5.2",
  BaseStyle->"Hyperlink",
  ButtonData->"4.5.2"],
 "), Hold attributes can be used to mimic the pass-by-reference semantics. \
This allows functions to modify the variables which are passed to them. Other \
cases when one needs to hold some arguments unevaluated arise when only some \
of the arguments have to be evaluated at all, and which ones\nhave to be \
evaluated is decided by say a condition on the part of arguments that are \
evaluated (this is exactly the situation with conditional operators such as \
If)."
}], "Text",
 CellChangeTimes->{{3.939949268335696*^9, 3.939949270943519*^9}, {
  3.939949814013945*^9, 3.939949848194357*^9}, {3.93995014264345*^9, 
  3.939950142654234*^9}, {3.93995017940658*^9, 3.939950179417082*^9}},
 CellID->225160434,ExpressionUUID->"21c47b5c-3197-43f6-8f30-6320b71218ad"],

Cell["\<\
The attribute HoldFirst instructs a function to hold (in unevaluated form) \
the first argument. HoldRest instructs to hold all but the first argument, \
and HoldAll instructs to hold all arguments. The fact that the argument is \
held unevaluated does not necessarily mean that it is never evaluated in a \
function (which may also happen if it is discarded before it is evaluated) - \
it simply means that it is evaluated after all the transformations of this \
argument by the function <f> ( according to the definition of <f>) are \
performed. As a simple example, consider a squaring function:\
\>", "Text",
 CellChangeTimes->{{3.939950595736931*^9, 3.939950629464532*^9}},
 CellID->1094518709,ExpressionUUID->"cc08d19f-c0a8-4492-8bc9-4cd250a4f4f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "^", "2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9399506319315863`*^9, 3.939950640041883*^9}},
 CellLabel->"In[1183]:=",
 CellID->1106999795,ExpressionUUID->"fabbc445-9646-4bc8-b8b6-b33231cebf1b"],

Cell["Let us Trace its evaluation on some number:", "Text",
 CellChangeTimes->{3.939950648891176*^9, 3.9400177419547453`*^9},
 CellID->393789770,ExpressionUUID->"17bd0d57-b20e-49c2-a2ec-f7d266de4c0b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "a", "]"}], "//", "Trace"}]}], "Input",
 CellChangeTimes->{{3.9399506510149593`*^9, 3.939950657275256*^9}},
 CellLabel->"In[1185]:=",
 CellID->728439685,ExpressionUUID->"d208ef26-8cc6-4b37-82ec-4c3cc195c71c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TagBox["a",
      HoldForm], ",", 
     TagBox["5",
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{"f", "[", "5", "]"}],
    HoldForm], ",", 
   TagBox[
    SuperscriptBox["5", "2"],
    HoldForm], ",", 
   TagBox["25",
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.939950657579496*^9},
 CellLabel->"Out[1187]=",
 CellID->304009218,ExpressionUUID->"d23ef685-f48d-4ed0-8bb5-f58ac1c4a781"]
}, Open  ]],

Cell["\<\
We see that <a> was evaluated before <f>. Now let us attach the HoldFirst \
attribute to <f>:\
\>", "Text",
 CellChangeTimes->{
  3.93995067449811*^9, {3.940017681584791*^9, 3.9400177070713778`*^9}, 
   3.940017741973222*^9, 3.940740644442913*^9},
 CellID->238056382,ExpressionUUID->"5338da88-4ccc-4567-a5f8-5cf330866394"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"f", ",", "HoldFirst"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.939950685817257*^9, 3.939950690645158*^9}},
 CellLabel->"In[1188]:=",
 CellID->2022166495,ExpressionUUID->"55f04827-863c-4c69-83f6-fd077e6955be"],

Cell["Now:", "Text",
 CellChangeTimes->{{3.9399506924952097`*^9, 3.9399506932287483`*^9}},
 CellID->1122406004,ExpressionUUID->"1710ca00-2144-488d-a325-bbf18919a7fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "a", "]"}], "//", "Trace"}]], "Input",
 CellChangeTimes->{{3.939950694531519*^9, 3.9399506970966997`*^9}},
 CellLabel->"In[1189]:=",
 CellID->873240184,ExpressionUUID->"9a7f1ea9-595e-4be0-82b7-ec112141b8e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"f", "[", "a", "]"}],
    HoldForm], ",", 
   TagBox[
    SuperscriptBox["a", "2"],
    HoldForm], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox["a",
      HoldForm], ",", 
     TagBox["5",
      HoldForm]}], "}"}], ",", 
   TagBox[
    SuperscriptBox["5", "2"],
    HoldForm], ",", 
   TagBox["25",
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.939950697563093*^9},
 CellLabel->"Out[1189]=",
 CellID->49868952,ExpressionUUID->"d908f304-92aa-4ac8-8562-dd4f97ef3123"]
}, Open  ]],

Cell["\<\
We see that now the evaluation order has changed: first the function <f> was \
evaluated, and then the value of <a> was substituted. In this simple example, \
the end result was the same regardless of the evaluation order, but in less \
trivial cases the evaluation order becomes important.\
\>", "Text",
 CellChangeTimes->{{3.939950923273026*^9, 3.93995092738671*^9}, {
   3.940017681640759*^9, 3.940017707108097*^9}, 3.940017741991745*^9},
 CellID->628853934,ExpressionUUID->"8255ed58-8137-4689-a96d-87363d5045d8"],

Cell["\<\
It is fairly easy to give an example of held arguments being discarded and \
thus not evaluated at all - take any operators on the False branch of some If \
operator.\
\>", "Text",
 CellChangeTimes->{{3.939950941212373*^9, 3.939950948712681*^9}},
 CellID->888379969,ExpressionUUID->"ee6fb2e3-b199-4e17-a3a2-4594731fada0"],

Cell["Advanced topic: Hold attributes and pattern-matching", "ItemNumbered",
 CellChangeTimes->{3.9399509578750277`*^9},
 CellID->1520114833,ExpressionUUID->"59f8a237-4ba5-4479-957d-76bd4610975b"],

Cell["\<\
While the general topic of Hold attributes is a bit too advanced for us now \
(since it requires a much more thorough discussion of the evaluation \
process), let me mention one important point. This is, Hold attributes affect \
pattern-matching. Consider the following function.\
\>", "Text",
 CellChangeTimes->{{3.939950969532239*^9, 3.9399509826696577`*^9}},
 CellID->2104533519,ExpressionUUID->"39ea4891-c637-47c1-9736-411652741613"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_Sin", "]"}], ":=", 
   RowBox[{"x", "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", "\"\<Not sine\>\""}]}], "Input",
 CellChangeTimes->{{3.9399509859211607`*^9, 3.939951000460017*^9}},
 CellLabel->"In[1190]:=",
 CellID->1490873518,ExpressionUUID->"dc0aed61-b42b-4738-91fc-4ba05475e15e"],

Cell["\<\
It is supposed to square any expression of the form Sin[anything], and issue \
a message for all other inputs. We can try it:\
\>", "Text",
 CellChangeTimes->{{3.939951008912098*^9, 3.939951016314352*^9}},
 CellID->1408236595,ExpressionUUID->"df77e297-fac7-4c54-8e9f-42d254a596e4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"Sin", "[", "a", "]"}], "]"}], ",", 
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"Sin", "[", "Pi", "]"}], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.939951021279613*^9, 3.939951034826105*^9}},
 CellLabel->"In[1193]:=",
 CellID->197163733,ExpressionUUID->"4ecb6f4e-f0f9-43dd-b963-7ca1d8f276f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Sin", "[", "a", "]"}], "2"], ",", "\<\"Not sine\"\>", 
   ",", "\<\"Not sine\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.939951036260305*^9},
 CellLabel->"Out[1194]=",
 CellID->157909997,ExpressionUUID->"090a5328-c628-4670-8e0b-e123fe66033d"]
}, Open  ]],

Cell["\<\
In the last input, Sin[Pi] was evaluated first, leading to f[0], which led to \
a \[OpenCurlyDoubleQuote]Not sine\[CloseCurlyDoubleQuote] message. Let us now \
add the attribute:\
\>", "Text",
 CellChangeTimes->{{3.939951045945566*^9, 3.939951048505147*^9}},
 CellID->2053169346,ExpressionUUID->"fd25fb6c-c5a2-4cfc-bdc6-ee668816bf99"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"f", ",", "HoldFirst"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.9399510520748863`*^9, 3.939951056793459*^9}},
 CellLabel->"In[1195]:=",
 CellID->440869063,ExpressionUUID->"6f7dbbce-c751-49cf-85fe-d20746d59570"],

Cell["And test the same input again:", "Text",
 CellChangeTimes->{3.939951063614579*^9},
 CellID->413047873,ExpressionUUID->"cfb80e97-85e7-467e-809a-d4fa10bfbbb3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"Sin", "[", "a", "]"}], "]"}], ",", 
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"Sin", "[", "Pi", "]"}], "]"}]}], "}"}]}], "Input",
 CellLabel->"In[1196]:=",
 CellID->1428454407,ExpressionUUID->"3560cb1e-a37b-445b-823d-144c10deb0e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Sin", "[", "a", "]"}], "2"], ",", "\<\"Not sine\"\>", ",", "0"}],
   "}"}]], "Output",
 CellChangeTimes->{3.939951069095717*^9},
 CellLabel->"Out[1197]=",
 CellID->949510167,ExpressionUUID->"cd0e895c-16ff-4b37-8bdf-e368a2dfdb8d"]
}, Open  ]],

Cell["\<\
What happened with the last output is that the presence of Hold attribute \
made a function to evaluate \[OpenCurlyDoubleQuote]branches before leaves\
\[CloseCurlyDoubleQuote], and then it had a chance to \
\[OpenCurlyDoubleQuote]see\[CloseCurlyDoubleQuote] Sin[Pi] before it \
evaluated to 0, and thus the first definition applied.\
\>", "Text",
 CellChangeTimes->{{3.939951086535128*^9, 3.939951090448494*^9}},
 CellID->466395912,ExpressionUUID->"a2146f8a-aad3-4b4b-8022-c4e0434c11da"],

Cell["\<\
All right, this is all known stuff, we discussed the non-standard evaluation \
before. But now, let us do it a bit differently:\
\>", "Text",
 CellChangeTimes->{{3.939951239325248*^9, 3.939951242527273*^9}, 
   3.9400177420102577`*^9},
 CellID->767094825,ExpressionUUID->"6beca507-85b6-40b5-a15f-95bca093a450"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"Sin", "[", "b", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"a", ",", 
   RowBox[{"f", "[", "a", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.939951244896845*^9, 3.9399512520616407`*^9}},
 CellLabel->"In[1198]:=",
 CellID->855273221,ExpressionUUID->"8e9cd706-6c7f-41ca-8576-ee514d7f30b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Sin", "[", "b", "]"}], ",", "\<\"Not sine\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{3.939951252455379*^9},
 CellLabel->"Out[1200]=",
 CellID->1840657767,ExpressionUUID->"16910df4-8c8c-4aed-9172-77dfcea840bc"]
}, Open  ]],

Cell["\<\
For us, it is obvious that <a> is Sin[b], so this behavior looks like a bug. \
It isn\[CloseCurlyQuote]t however: Hold attribute means that the argument is \
held unevaluated before the rules associated with the function apply. If we \
supply the direct Sin[something], then, while Sin[something] is not \
evaluated, the function can test the head of the argument (which is Sin) and \
thus the first definition (associated with Sin[something]) applies.
If however the value of the expression is stored in another variable, then by \
the time the pattern-matching takes place, there is no way for the function \
to test the head of an expression Sin[b] - all it has is a symbol <a> (again \
because <a> this time is held unevaluated). This behavior may lead to rather \
subtle bugs in user-defined functions which use Hold attributes. One way out \
in this case would be to redefine the function as follows:\
\>", "Text",
 CellChangeTimes->{{3.939951275484764*^9, 3.939951303542695*^9}, 
   3.940740644461982*^9},
 CellID->1433154934,ExpressionUUID->"3eddb5b7-4cee-4cc0-a2af-456119540d19"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], "/;", 
    RowBox[{
     RowBox[{"Head", "[", 
      RowBox[{"Evaluate", "[", "x", "]"}], "]"}], "===", "Sin"}]}], ":=", 
   RowBox[{"x", "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", "\"\<Not sine\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"f", ",", "HoldFirst"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.939951308809086*^9, 3.939951337771863*^9}},
 CellLabel->"In[1201]:=",
 CellID->1445701317,ExpressionUUID->"bb752d13-8b73-485e-ab88-7794f4e5265c"],

Cell["\<\
Here, by using Evaluate, we override the Hold attribute in that particular \
place and instruct the argument inside Head command to be evaluated. Now:\
\>", "Text",
 CellChangeTimes->{{3.939951344822407*^9, 3.939951346610574*^9}, 
   3.94001774202885*^9},
 CellID->1563232066,ExpressionUUID->"6e63e676-6c08-40ce-bbd7-cd412c5ae725"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"Sin", "[", "b", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"a", ",", 
   RowBox[{"f", "[", "a", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.939951349941638*^9, 3.939951357287757*^9}},
 CellLabel->"In[1205]:=",
 CellID->1923152022,ExpressionUUID->"626fdcbc-f640-4eac-af8e-d6f4dd777f77"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Sin", "[", "b", "]"}], ",", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "b", "]"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.9399513581347857`*^9},
 CellLabel->"Out[1207]=",
 CellID->1862718241,ExpressionUUID->"478a91d8-6549-49cc-8c87-914706a9d702"]
}, Open  ]],

Cell["The case with a Sin[Pi] is lost however:", "Text",
 CellChangeTimes->{3.939951373551476*^9, 3.940017742047309*^9},
 CellID->688870521,ExpressionUUID->"2dd0dded-e51e-4c2f-8e62-eebf41792f36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"Sin", "[", "Pi", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.93995137533825*^9, 3.939951378064673*^9}},
 CellLabel->"In[1208]:=",
 CellID->1394512641,ExpressionUUID->"0569aa3c-174d-44cf-b750-b7a3198c15d7"],

Cell[BoxData["\<\"Not sine\"\>"], "Output",
 CellChangeTimes->{3.939951378322879*^9},
 CellLabel->"Out[1208]=",
 CellID->1698921453,ExpressionUUID->"47a74289-54fe-460d-bcc7-0f2661ca991a"]
}, Open  ]],

Cell["\<\
If we think of it, this is still a more logical behavior, since it is more \
logical (or should I say more robust) to test the head of fully evaluated \
expression than the one which will evaluate to something else. If one wants \
to catch both cases (something that was Sin[expr] or something that will \
become Sin[expr]), this is also possible:\
\>", "Text",
 CellChangeTimes->{{3.9399515404152317`*^9, 3.9399515514514227`*^9}},
 CellID->830290059,ExpressionUUID->"7f77b5c4-a187-4651-b61a-5607d67bfd84"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], "/;", 
    RowBox[{
     RowBox[{"Head", "[", 
      RowBox[{"Evaluate", "[", "x", "]"}], "]"}], "===", "Sin"}]}], ":=", 
   RowBox[{"x", "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_Sin", "]"}], ":=", 
   RowBox[{"x", "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", "\"\<Not sine\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"f", ",", "HoldFirst"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9399531797485933`*^9, 3.939953229261447*^9}},
 CellLabel->"In[1209]:=",
 CellID->1711352525,ExpressionUUID->"43287ee8-32fe-4335-b49d-9da64e13f79d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"Sin", "[", "Pi", "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.93995325896312*^9, 3.939953263654871*^9}},
 CellLabel->"In[1214]:=",
 CellID->290242599,ExpressionUUID->"ccb7b100-d2eb-4534-a573-27df6496501f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Sin", "[", "b", "]"}], "2"], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.93995326396385*^9},
 CellLabel->"Out[1214]=",
 CellID->2088163722,ExpressionUUID->"53dacd89-bfd9-4878-b4da-3f5d7aec336c"]
}, Open  ]],

Cell[TextData[{
 "One may ask when in practice do such situations occur. More often than one \
may think, in fact. As a simple example, an expression may be assigned to a \
local variable in one function, which then passes this variable (with the \
\[OpenCurlyDoubleQuote]pass-by-reference\[CloseCurlyDoubleQuote] semantics) \
to another function which is supposed to both do a type-check and \
subsequently modify this variable. Such cases are relatively rare just \
because pass-by-reference semantics and in-place modifications are rarely \
used in \[OpenCurlyDoubleQuote]usual\[CloseCurlyDoubleQuote] ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " programming, but once you choose to program in this style (which \
occasionally is a good option), these sorts of problems will pop up much more \
often."
}], "Text",
 CellChangeTimes->{{3.939953273277273*^9, 3.93995330470918*^9}},
 CellID->1589916380,ExpressionUUID->"b9585c0a-ed1a-4c80-bf72-7c1f65fdf794"],

Cell["Hold attributes and built-in functions", "ItemNumbered",
 CellChangeTimes->{3.9399533171847467`*^9},
 CellID->1758319652,ExpressionUUID->"f5adb849-e1af-49d9-a0cb-46149a7027fb"],

Cell["\<\
Many built-in commands have Hold attributes. For instance, the Set command \
has a HoldFirst attribute, since otherwise its l.h.s. would evaluate before \
Set will have a chance to assign anything to it (in case when the variable in \
the l.h.s. has a global value). SetDelayed has attribute HoldAll, since it \
does not evaluate also the r.h.s. of an assignment. Constructs such as \
Module, Block and With also have the Hold-All attribute, since they have to \
hold the code they enclose unevaluated until the naming conflicts are \
resolved. We could go on with this list, but let us just say once again that \
these attributes are very important.\
\>", "Text",
 CellChangeTimes->{{3.93995332424888*^9, 3.939953356403695*^9}},
 CellID->555924797,ExpressionUUID->"36eea206-bca5-4fd3-8bcd-b9365a8a0b09"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Attributes and the evaluation process", "Subsubsection",
 CellChangeTimes->{3.939953390989677*^9},
 CellID->1308710383,ExpressionUUID->"3c5fa788-5b6d-4dcb-b9d5-3faecdea47ba"],

Cell["\<\
As we have discussed before, the evaluation process can be roughly \
represented by a repeated application of all available global rules to an \
expression and all of its parts, until the result no longer changes. We also \
mentioned that this is a very oversimplified picture. Now we can at least \
outline some other ingredients
which make the evaluation process more complex.\
\>", "Text",
 CellChangeTimes->{{3.939953399908885*^9, 3.939953424404093*^9}},
 CellID->967894507,ExpressionUUID->"735b5f83-57a0-4e5c-9315-0afea02e1536"],

Cell["\<\
One of such ingredients is the existence of attributes. You can not assign \
attributes in the form of local rules - they are essentially global \
properties of symbols. The presence or absence of attributes for a given \
symbol affects the way the expression involving this symbol is evaluated.\
\>", "Text",
 CellChangeTimes->{{3.939953399908885*^9, 3.939953439975375*^9}},
 CellID->1921642775,ExpressionUUID->"a26586b5-f8ff-447d-bf18-c1684a7bb41a"],

Cell["\<\
Another ingredient is the interplay of standard and non-standard evaluation. \
This is partly related to attributes through Hold attributes, but there are \
other ways to switch between standard and non-standard evaluation, such as \
using commands like Evaluate, Unevaluated, Hold, HoldPattern, etc.\
\>", "Text",
 CellChangeTimes->{{3.939953399908885*^9, 3.939953453843461*^9}},
 CellID->1137746886,ExpressionUUID->"d89d3c34-356e-480e-bc00-5be8ca839415"],

Cell["\<\
Yet another distinction is that there are many more types of global rules \
than there are local ones. While local rules are basically either immediate \
(Rule) or delayed (RuleDelayed), global rules are additionally categorized by \
being OwnValues, DownValues, SubValues, UpValues, NValues or FormatValues \
(the latter three we did not have a chance to discuss yet). The category to \
which the global rule belongs, determines the way and order in which it is \
applied.\
\>", "Text",
 CellChangeTimes->{{3.9399534632940702`*^9, 3.9399534829476843`*^9}},
 CellID->941925622,ExpressionUUID->"f4108ac1-01ce-42b3-9c8d-71ade7165d78"],

Cell["\<\
So, while the evaluation process generally is the repeated rule application, \
we can now see a bit better more of the ingredients that make it different \
and perhaps somewhat more complex than just a repeated application of all \
global rules.\
\>", "Text",
 CellChangeTimes->{{3.9399534632940702`*^9, 3.939953501946657*^9}},
 CellID->833321009,ExpressionUUID->"7b0959e6-c49f-49bb-b132-50e11533a863"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Advanced topic: parameter passing and local variables", "Subsection",
 CellChangeTimes->{3.939953519806752*^9},
 CellID->1068019174,ExpressionUUID->"c01b7c78-72a2-4218-b365-7558e81134ed"],

Cell[TextData[{
 "In this section we will have a brief discussion on the interplay of \
parameter-passing and localization of variables with scoping constructs \
Module, Block and With and Function, which we promised in the section on the \
parameter passing (",
 ButtonBox["4.4.7",
  BaseStyle->"Hyperlink",
  ButtonData->"4.4.7"],
 ")."
}], "Text",
 CellChangeTimes->{{3.939953527823398*^9, 3.939953540258246*^9}, {
  3.939953586137246*^9, 3.93995358614777*^9}},
 CellID->1529935792,ExpressionUUID->"78bf75c8-2b97-4704-b3a9-cc70463fa969"],

Cell["\<\
It turns out that the situation is very similar for all these constructs, so \
we will discuss the Module case only. The main question is what happens if \
the name of some of the formal parameters coincides with a name of one of the \
local variables. Let me say straight away that this is a really bad practice \
which should be avoided since it brings nothing except bugs into the \
programs. Let us consider a simple example:\
\>", "Text",
 CellChangeTimes->{{3.939953592257235*^9, 3.9399536051323967`*^9}},
 CellID->1326963058,ExpressionUUID->"1e1d1d94-3736-4002-830f-07be910f2e81"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"fM", ",", "a"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fM", "[", "x_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", "=", "10"}], "}"}], ",", 
     RowBox[{"Print", "[", "x", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939953608226569*^9, 3.939953625939474*^9}},
 CellLabel->"In[1215]:=",
 CellID->1425690124,ExpressionUUID->"2394f6c0-c78a-4906-a249-97c3ff0dbe53"],

Cell["\<\
Here we set up a function <fM> with conflicting names of the parameter and a \
local variable, and just a global variable <a> assigned some value. Now we \
try a couple of inputs:\
\>", "Text",
 CellChangeTimes->{{3.9399536442668743`*^9, 3.9399536473886757`*^9}, {
   3.940017681678447*^9, 3.940017707145069*^9}, 3.940017742065981*^9},
 CellID->1895357486,ExpressionUUID->"baaefbf3-7ad0-4dc7-8d71-f57853c75a7e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fM", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.939953650919053*^9, 3.9399536519657907`*^9}},
 CellLabel->"In[1218]:=",
 CellID->1897942137,ExpressionUUID->"38ef97e9-684b-4822-89e4-646913c7b899"],

Cell[BoxData[
 TemplateBox[{
  "Module", "lvset", 
   "\"Local variable specification \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"5\\\", \\\"=\\\", \\\"10\\\"}], \\\"}\\\"}]\\) contains \
\\!\\(\\*RowBox[{\\\"5\\\", \\\"=\\\", \\\"10\\\"}]\\), which is an \
assignment to \\!\\(\\*RowBox[{\\\"5\\\"}]\\); only assignments to symbols \
are allowed.\"", 2, 1218, 85, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9399536523778057`*^9},
 CellLabel->"During evaluation of In[1218]:=",
 CellID->928715055,ExpressionUUID->"455138a5-5a6d-4c2e-9e1a-0dcbe572519e"],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", "=", "10"}], "}"}], ",", 
   RowBox[{"Print", "[", "5", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.939953652401493*^9},
 CellLabel->"Out[1218]=",
 CellID->1002782989,ExpressionUUID->"03d1157c-51bd-4a55-a97f-f6273bfa7b87"]
}, Open  ]],

Cell[TextData[{
 "We see what happened: the value for a formal parameter <x> (5 in this case) \
was textually substituted in all places where the literal <x> appears on the \
r.h.s., before any other evaluation (and name conflict resolution in Module \
in particular) took place. This is in full agreement with the general \
parameter-passing mechanism described earlier (section ",
 ButtonBox["4.4.7",
  BaseStyle->"Hyperlink",
  ButtonData->"4.4.7"],
 "). But then, by the time Module actually started executing, we see what was \
inside - in particular, instead of the local variable initialization, we had \
in the variable declaration block a statement 5 = 10, which triggered an \
error message and resulted in Module returning unevaluated."
}], "Text",
 CellChangeTimes->{{3.93995368854568*^9, 3.939953718606144*^9}, {
  3.940017681716646*^9, 3.9400177071851053`*^9}},
 CellID->322034467,ExpressionUUID->"4889da76-8734-4ba1-ab90-f07dcfb2f8f9"],

Cell[TextData[{
 "Conclusion: ",
 StyleBox["it is an error to make a name of a local variable coincide with \
the name of any of the function parameters.",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.9399537292438173`*^9, 3.939953737356803*^9}},
 CellID->334682315,ExpressionUUID->"5b7e84b5-482b-4bca-8088-ab8d9f5a9ebf"],

Cell["\<\
We now try to call our function on a variable rather than a raw expression:\
\>", "Text",
 CellChangeTimes->{{3.9399537292438173`*^9, 3.939953735441738*^9}, 
   3.940017742085238*^9},
 CellID->1991136981,ExpressionUUID->"c0b1624c-b4c8-4898-85f8-a08c3aa25244"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fM", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.9399537484520082`*^9, 3.93995374941591*^9}},
 CellLabel->"In[1219]:=",
 CellID->796290431,ExpressionUUID->"724afe3e-ed6c-49c0-a1df-af5fbffbdb64"],

Cell[BoxData[
 TemplateBox[{
  "Module", "lvset", 
   "\"Local variable specification \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"5\\\", \\\"=\\\", \\\"10\\\"}], \\\"}\\\"}]\\) contains \
\\!\\(\\*RowBox[{\\\"5\\\", \\\"=\\\", \\\"10\\\"}]\\), which is an \
assignment to \\!\\(\\*RowBox[{\\\"5\\\"}]\\); only assignments to symbols \
are allowed.\"", 2, 1219, 86, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939953749777912*^9},
 CellLabel->"During evaluation of In[1219]:=",
 CellID->1549758945,ExpressionUUID->"a8cdd178-f820-4ecd-8e77-ff526b565638"],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", "=", "10"}], "}"}], ",", 
   RowBox[{"Print", "[", "5", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.939953749804619*^9},
 CellLabel->"Out[1219]=",
 CellID->2116917799,ExpressionUUID->"e5006cda-cbde-4178-8e80-94f187dabcab"]
}, Open  ]],

Cell["\<\
The results are identical, because <a> evaluated to <5> before the function \
was essentially called (recall the standard evaluation mechanism).\
\>", "Text",
 CellChangeTimes->{{3.9399537688334093`*^9, 3.939953775500845*^9}, {
  3.940017681754788*^9, 3.940017707225395*^9}},
 CellID->1675867944,ExpressionUUID->"005d978d-ceeb-465d-bdbf-4537bbc3d05f"],

Cell["\<\
Next, let us see what happens when a function has a Hold attribute for the \
parameter in question. We modify our code accordingly:\
\>", "Text",
 CellChangeTimes->{{3.9399537688334093`*^9, 3.939953784431047*^9}, 
   3.940017742104526*^9},
 CellID->1292526861,ExpressionUUID->"bbb384b6-328a-4a81-b2c6-5649f5c54c5a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "FMHold", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "FMHold", "]"}], "=", 
   RowBox[{"{", "HoldAll", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FMHold", "[", "x_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", "=", "10"}], "}"}], ",", 
     RowBox[{"Print", "[", 
      RowBox[{"x", ",", "\"\<  \>\"", ",", "a", ",", "\"\<  \>\"", ",", 
       RowBox[{"Unevaluated", "[", "a", "]"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.939953789399156*^9, 3.939953825530991*^9}},
 CellLabel->"In[1220]:=",
 CellID->540392628,ExpressionUUID->"513931d6-303a-4548-9e87-d6b96f852fe7"],

Cell["\<\
Here, we have included additional objects to be printed - in a second you\
\[CloseCurlyQuote] ll see why. Now let us test:\
\>", "Text",
 CellChangeTimes->{3.9399538335643473`*^9, 3.9400177421243134`*^9},
 CellID->1734284026,ExpressionUUID->"eb99fcab-4bd4-4f82-afdb-26f24bd93b2c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FMHold", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.939953839484375*^9, 3.939953842422497*^9}},
 CellLabel->"In[1223]:=",
 CellID->1700947526,ExpressionUUID->"1cb24679-f2a4-4b7e-b840-893d5efd2083"],

Cell[BoxData[
 TemplateBox[{
  "Module", "lvset", 
   "\"Local variable specification \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"5\\\", \\\"=\\\", \\\"10\\\"}], \\\"}\\\"}]\\) contains \
\\!\\(\\*RowBox[{\\\"5\\\", \\\"=\\\", \\\"10\\\"}]\\), which is an \
assignment to \\!\\(\\*RowBox[{\\\"5\\\"}]\\); only assignments to symbols \
are allowed.\"", 2, 1223, 87, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939953842914357*^9},
 CellLabel->"During evaluation of In[1223]:=",
 CellID->70615319,ExpressionUUID->"1be4f287-a133-4dc5-aadd-9b343af9c69b"],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", "=", "10"}], "}"}], ",", 
   RowBox[{"Print", "[", 
    RowBox[{"5", ",", "\<\"  \"\>", ",", "a", ",", "\<\"  \"\>", ",", 
     RowBox[{"Unevaluated", "[", "a", "]"}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.939953842939584*^9},
 CellLabel->"Out[1223]=",
 CellID->1420693289,ExpressionUUID->"b7823bdb-e051-4d1b-a927-6027907e367e"]
}, Open  ]],

Cell["\<\
The result here is essentially the same as before, because <5> is a raw \
object. Now let us see what happens if we call our function on a variable:\
\>", "Text",
 CellChangeTimes->{{3.939953854817657*^9, 3.9399538579934187`*^9}, {
   3.940017681792783*^9, 3.940017707244692*^9}, 3.940017742144062*^9},
 CellID->1857358717,ExpressionUUID->"dbaf7b26-2bb5-446f-b232-ef9feec6392e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FMHold", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.939953860078356*^9, 3.939953862353943*^9}},
 CellLabel->"In[1224]:=",
 CellID->907546054,ExpressionUUID->"76594554-d4ca-4b15-a27c-f93e789c8dd5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "10", "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\"  \"\>", "\[InvisibleSpace]", "a$73757"}],
  SequenceForm[10, "  ", 10, "  ", $CellContext`a$73757],
  Editable->False]], "Print",
 CellChangeTimes->{3.939953862669931*^9},
 CellLabel->"During evaluation of In[1224]:=",
 CellID->886761983,ExpressionUUID->"12b9ff52-b219-4daf-a902-541c66412184"]
}, Open  ]],

Cell["\<\
This output is quite interesting. The last output gives us a name that was \
internally associated with <a> in our code inside Module. It tells us that in \
this case, the local variable was initialized, and has shadowed the global \
parameter being passed. It is instructive to see exactly how this happened:\
\>", "Text",
 CellChangeTimes->{{3.9399538764025393`*^9, 3.939953888498807*^9}},
 CellID->272138101,ExpressionUUID->"99b473fb-93df-4cac-b6d6-5e0536816d96"],

Cell[TextData[{
 StyleBox["Step 1:",
  FontSlant->"Italic"],
 " The symbol <a> in unevaluated form (due to a Hold attribute) is textually \
substituted everywhere where <x> stands inside the Module (r.h.s. of the \
function definition). At this point we have the code:"
}], "Text",
 CellChangeTimes->{{3.9399538764025393`*^9, 3.9399538940222816`*^9}, 
   3.940017742163965*^9},
 CellID->1256046419,ExpressionUUID->"53df41fc-0b1a-4e8b-98c2-450141d57ba6"],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "=", "10"}], "}"}], ",", 
   RowBox[{"Print", "[", 
    RowBox[{"x", ",", "\"\<  \>\"", ",", "a", ",", "\"\<  \>\"", ",", 
     RowBox[{"Unevaluated", "[", "a", "]"}]}], "]"}]}], "]"}]], "Input",
 CellID->1632956482,ExpressionUUID->"32a5da7e-7c86-41d7-a3a8-330a79fe4715"],

Cell[TextData[{
 StyleBox["Step 2:",
  FontSlant->"Italic"],
 " A local variable <a> with a special name is initialized, and all \
occurrences of the symbol <a> in the code of Module are then associated with \
this local variable - just as if we had entered the above code from the \
keyboard."
}], "Text",
 CellChangeTimes->{{3.9399539219053288`*^9, 3.9399539445663967`*^9}, {
   3.940017681811368*^9, 3.940017707281522*^9}, 3.940017742183024*^9},
 CellID->1529175810,ExpressionUUID->"64b49c0b-3999-4318-9ad2-b88ae0c6cb94"],

Cell[TextData[{
 StyleBox["Step 3",
  FontSlant->"Italic"],
 ": It is only at this point that the function would try to evaluate the \
passed parameter (since it was held unevaluated so far), but by this time all \
occurrences of <a> already correspond to the initialized local variable, \
which thus completely shadows the passed parameter value."
}], "Text",
 CellChangeTimes->{{3.9399539219053288`*^9, 3.9399539610494337`*^9}},
 CellID->236649443,ExpressionUUID->"8e47e561-3228-4712-8103-c6a08bf48ac4"],

Cell[TextData[{
 StyleBox["Step 4",
  FontSlant->"Italic"],
 ": The code is executed in the above form, with the results we just saw. The \
conclusion is that if a given parameter is held by the function and if the \
passed object happened to be a global symbol with the head Symbol, then the \
parameter being passed is shadowed by a local variable."
}], "Text",
 CellChangeTimes->{{3.9399539219053288`*^9, 3.9399539819773693`*^9}},
 CellID->58665129,ExpressionUUID->"edb114b3-47d5-4477-877a-e9acd36477db"],

Cell["\<\
This behavior looks more mild than the one before, but in fact it is worse. \
Because really, colliding names in this fashion is a bad mistake in both \
cases, but here it may go unnoticed, since it does not result in an explicit \
error.\
\>", "Text",
 CellChangeTimes->{{3.9399539219053288`*^9, 3.939953994156633*^9}},
 CellID->1524194844,ExpressionUUID->"65113da8-ba23-4a93-9b83-679c1c71952d"],

Cell["\<\
If the passed held parameter is a composite expression, Module will at least \
generate an error message and return unevaluated, since it is illegal to name \
local variables in such way).\
\>", "Text",
 CellChangeTimes->{{3.9399539219053288`*^9, 3.939954004562109*^9}, 
   3.940740644483252*^9},
 CellID->596229950,ExpressionUUID->"a46b3fef-c916-439c-92c6-24384722f291"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FMHold", "[", 
  RowBox[{"a", "[", "b", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.939954044150364*^9, 3.9399540469205523`*^9}},
 CellLabel->"In[1225]:=",
 CellID->1013780969,ExpressionUUID->"c40387c8-7fc6-4504-88d1-bc85fd221db0"],

Cell[BoxData[
 TemplateBox[{
  "Module", "lvset", 
   "\"Local variable specification \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"a\\\", \\\"[\\\", \\\"b\\\", \\\"]\\\"}], \\\"=\\\", \
\\\"10\\\"}], \\\"}\\\"}]\\) contains \\!\\(\\*RowBox[{RowBox[{\\\"a\\\", \
\\\"[\\\", \\\"b\\\", \\\"]\\\"}], \\\"=\\\", \\\"10\\\"}]\\), which is an \
assignment to \\!\\(\\*RowBox[{\\\"a\\\", \\\"[\\\", \\\"b\\\", \
\\\"]\\\"}]\\); only assignments to symbols are allowed.\"", 2, 1225, 88, 
   26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9399540473421373`*^9},
 CellLabel->"During evaluation of In[1225]:=",
 CellID->2124968381,ExpressionUUID->"e2ea8d65-ed78-425a-959a-162605b40ea5"],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "[", "b", "]"}], "=", "10"}], "}"}], ",", 
   RowBox[{"Print", "[", 
    RowBox[{
     RowBox[{"a", "[", "b", "]"}], ",", "\<\"  \"\>", ",", "a", 
     ",", "\<\"  \"\>", ",", 
     RowBox[{"Unevaluated", "[", "a", "]"}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.939954047369516*^9},
 CellLabel->"Out[1225]=",
 CellID->1690529857,ExpressionUUID->"fbcd944c-22e3-4039-bd55-28c0c57bf05a"]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["final conclusions",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " are these:"
}], "Text",
 CellChangeTimes->{{3.939954060340126*^9, 3.9399540687379704`*^9}, 
   3.940017742202406*^9},
 CellID->1526656789,ExpressionUUID->"58b3e25d-117f-4f9c-b61e-4c0417754f5f"],

Cell["\<\
1. There is no mystery in what happens in parameter and local variable name \
collisions - all the outcomes can be easily explained by the core \
parameter-passing mechanism based on textual substitution.\
\>", "Text",
 CellChangeTimes->{{3.939954060340126*^9, 3.93995408700556*^9}},
 CellID->2004847479,ExpressionUUID->"0aa6a5e5-0ac4-44ab-84a7-1b57027a0e53"],

Cell["\<\
2. It is always an error to collide the names like this, but there are cases \
when this error may go unnoticed, and the parameter value be shadowed by a \
local variable.\
\>", "Text",
 CellChangeTimes->{{3.939954060340126*^9, 3.939954099425857*^9}},
 CellID->690834992,ExpressionUUID->"247e67cd-9c21-4cb2-bb80-7fd58f147e8b"],

Cell["\<\
A good news is that in version 6 such name collisions are usually detected \
and highlighted in red by the front-end.\
\>", "Text",
 CellChangeTimes->{{3.939954060340126*^9, 3.93995411179924*^9}},
 CellID->468441416,ExpressionUUID->"f4c36faf-4b6f-496c-bf57-1e93d92435a5"],

Cell[TextData[{
 "The final comment here: this situation is not too specific to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". In C, for instance, it is also an error to name a local variable after \
one of the function formal parameters, and will result in an undefined \
behavior (at least, here it is not undefined). It is a different matter that \
the passed parameters themselves may serve in C as local variables, unlike in \
",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " (see a discussion in ",
 ButtonBox["4.4.7",
  BaseStyle->"Hyperlink",
  ButtonData->"4.4.7"],
 ")."
}], "Text",
 CellChangeTimes->{{3.939954060340126*^9, 3.9399541377050858`*^9}},
 CellID->502110178,ExpressionUUID->"0c91975d-6146-432c-ace9-2540d3b75cf8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pure functions", "Subsection",
 CellChangeTimes->{3.939954145494192*^9},
 CellTags->"4.11",
 CellID->1770967983,ExpressionUUID->"9d378ef6-78b6-471b-be88-a705686a7a60"],

Cell[TextData[{
 "The notion of a pure function comes from the \[Lambda]-calculus, and is \
widely used in functional programming languages, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " in particular. From the practical viewpoint, the idea is that often we \
need some intermediate functions which we have to use just once, and we don\
\[CloseCurlyQuote] t want to give them separate names. Pure functions allow \
to use them without assigning them names, storing them in the global rule \
base etc. Another application of them is that while they can be assigned to \
some symbols, they exist independently of their arguments and can be called \
just by name with the arguments being supplied separately, so that the \
\[OpenCurlyDoubleQuote]assembly\[CloseCurlyDoubleQuote] to the working \
function happens already at the place where the function is used. Finally, \
these functions may be dynamically changed and modified during the program\
\[CloseCurlyQuote] s execution."
}], "Text",
 CellChangeTimes->{{3.939954153714471*^9, 3.939954191455195*^9}},
 CellID->535542861,ExpressionUUID->"f0a40c11-ff41-4277-aef5-8b1bb889dd4e"],

Cell[TextData[{
 "In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", the pure function can be defined in two (in principle, equivalent modulo \
some subtleties which we will discuss) ways: through the built-in function \
<Function> and through the so-called #-& notation (anonymous pure \
functions)."
}], "Text",
 CellChangeTimes->{{3.939954153714471*^9, 3.9399541999045143`*^9}},
 CellID->404815332,ExpressionUUID->"071999a5-16f4-4d77-a357-6ecde0600c30"],

Cell[CellGroupData[{

Cell["The #-& notation", "Subsubsection",
 CellChangeTimes->{{3.9399542098387947`*^9, 3.939954213343973*^9}},
 CellID->1593721781,ExpressionUUID->"75356982-2647-4b5c-9d38-17b877effe7e"],

Cell["\<\
We will first discuss the latter method. The idea behind it is to allow one \
to create functions which have no names and also no named arguments - \
completely anonymous pure functions. In this notation, the parameters of the \
function are denoted by sharp (#) plus the parameter index, like #1, #2, etc. \
If there is a single parameter, the index can be suppressed and we can just \
use #. The function ends with an ampersand <&>. It is recommended although \
not always required to put the entire function definition in parentheses \
(including the &), to avoid precedence-related bugs. This is because the \
ampersand & has a very low precedence and often a larger piece of code is \
interpreted as a part of the function definition, than meant by developer. \
This leads to bugs. One typical case where parenthesizing is absolutely \
necessary is when we provide a pure function as a sameness test in the \
SameTest option for the Union, Intersection or Complement commands.\
\>", "Text",
 CellChangeTimes->{{3.939954221890234*^9, 3.9399542709990587`*^9}},
 CellID->118444236,ExpressionUUID->"23e85ea6-26d5-446d-a6fd-cdab71779173"],

Cell["Let us give some examples of pure functions.", "Text",
 CellChangeTimes->{{3.939954221890234*^9, 3.939954268428162*^9}},
 CellID->612828379,ExpressionUUID->"e44ebad0-35e1-4b8d-a9f6-253f1b0b8efa"],

Cell["Example: the squaring pure function", "ItemNumbered",
 CellChangeTimes->{3.939954279116412*^9},
 CellID->474994841,ExpressionUUID->"85f0776d-dce9-4647-831e-90f763cf43ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "^", "2"}], "&"}], ")"}], "[", "1", "]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "^", "2"}], "&"}], ")"}], "[", "2", "]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "^", "2"}], "&"}], ")"}], "[", "Pi", "]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "^", "2"}], "&"}], ")"}], "[", "10", "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.939954282785256*^9, 3.9399543204427958`*^9}},
 CellLabel->"In[1226]:=",
 CellID->307145944,ExpressionUUID->"ac866441-539d-4b7d-bf5b-265a1d13e445"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", 
   SuperscriptBox["\[Pi]", "2"], ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.939954321123375*^9},
 CellLabel->"Out[1226]=",
 CellID->246328943,ExpressionUUID->"7aeff30d-55c9-4aae-b03f-0b5b853221e5"]
}, Open  ]],

Cell["The same can be done as follows:", "Text",
 CellChangeTimes->{3.939954328419221*^9, 3.940017742221046*^9},
 CellID->1849557232,ExpressionUUID->"84069597-4eb8-410d-9c59-72c276fe8b92"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"#", "^", "2"}], "&"}], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939954330035223*^9, 3.939954338775981*^9}},
 CellLabel->"In[1227]:=",
 CellID->733316219,ExpressionUUID->"ad91b14c-a6f7-43a5-88d5-a8c896372147"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "Pi", "]"}], ",", 
   RowBox[{"f", "[", "10", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939954347943941*^9, 3.939954354388056*^9}},
 CellLabel->"In[1229]:=",
 CellID->573758931,ExpressionUUID->"1b243226-0f40-45aa-8f78-ad1e9dfb0e61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", 
   SuperscriptBox["\[Pi]", "2"], ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.939954355047225*^9},
 CellLabel->"Out[1229]=",
 CellID->903077333,ExpressionUUID->"fc8580e9-f8ff-43bc-8177-c5e6f1b97ef6"]
}, Open  ]],

Cell["\<\
To understand, how a given pure function expressed in such a notation will \
work, one has to get used to it a little. In the beginning it often helps to \
substitute the real values of the arguments for parameters #.\
\>", "Text",
 CellChangeTimes->{{3.9399543631796703`*^9, 3.939954373389716*^9}},
 CellID->361843076,ExpressionUUID->"4643f604-d1f3-41db-8991-72fd2e1d0263"],

Cell["\<\
Let us note that the internal representation of <f> is different from the one \
we had for functions which were defined with the help of patterns. In \
particular, there are no DownValues associated with f (which means, no rules \
associated with the form f[something]):\
\>", "Text",
 CellChangeTimes->{{3.9399543631796703`*^9, 3.939954381467807*^9}, {
   3.940017681849304*^9, 3.940017707300858*^9}, 3.940017742239538*^9},
 CellID->1166055030,ExpressionUUID->"505a2b70-6ce1-4e20-93ee-b35738731d30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DownValues", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.939954385536168*^9, 3.939954386907304*^9}},
 CellLabel->"In[1230]:=",
 CellID->1267047073,ExpressionUUID->"17376041-9f76-4222-8056-c8248331a4da"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.939954387225423*^9},
 CellLabel->"Out[1230]=",
 CellID->2052391398,ExpressionUUID->"5661dc7d-9c85-4b05-a567-86a91df3d178"]
}, Open  ]],

Cell["\<\
Also, with this form of function definition, we can not associate several \
different definitions with the symbol f:\
\>", "Text",
 CellChangeTimes->{{3.9399544016618633`*^9, 3.9399544066686983`*^9}, 
   3.940017742258062*^9},
 CellID->1659888072,ExpressionUUID->"6ba93031-c0f8-45d7-a6d3-ff64d3513052"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 CellChangeTimes->{{3.9399544084689493`*^9, 3.939954408844643*^9}},
 CellLabel->"In[1231]:=",
 CellID->431558075,ExpressionUUID->"7176b49e-010b-4659-888b-e40f394653e8"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"f", "=", 
                    RowBox[{
                    SuperscriptBox["#1", "2"], "&"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`f\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{12.5, {1.42974853515625, 11.07025146484375}}],
               True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               
               ImageSizeCache->{
                12.5, {1.42974853515625, 11.07025146484375}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`f", "Documentation" -> None, 
    "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, $CellContext`f, {$CellContext`f -> (#^2& )}], "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Global`f"|>, False]]], "Output",
 CellChangeTimes->{3.939954409236038*^9},
 CellLabel->"Out[1231]=",
 CellID->67387654,ExpressionUUID->"8824eabd-037a-4a4d-9852-88e4716c56da"]
}, Open  ]],

Cell["We give a new definition:", "Text",
 CellChangeTimes->{3.939954418664098*^9, 3.940017742276846*^9},
 CellID->860418809,ExpressionUUID->"a0ac1400-5638-46ed-95b6-bac200649f16"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
    RowBox[{"#", "^", "4"}], "&"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"?", "f"}]}], "Input",
 CellChangeTimes->{{3.93995442038116*^9, 3.939954425899418*^9}},
 CellLabel->"In[1232]:=",
 CellID->27138652,ExpressionUUID->"3ded89b9-3389-4888-9576-ab068470b6cf"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"f", "=", 
                    RowBox[{
                    SuperscriptBox["#1", "4"], "&"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`f\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{12.5, {1.42974853515625, 11.07025146484375}}],
               True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               
               ImageSizeCache->{
                12.5, {1.42974853515625, 11.07025146484375}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`f", "Documentation" -> None, 
    "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, $CellContext`f, {$CellContext`f -> (#^4& )}], "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Global`f"|>, False]]], "Output",
 CellChangeTimes->{3.939954426232728*^9},
 CellLabel->"Out[1233]=",
 CellID->1969651879,ExpressionUUID->"741bcd19-1bd8-44af-94dc-8bdee55af336"]
}, Open  ]],

Cell["\<\
This was possible with patterns, because f[pattern1] and f[pattern2] are \
different symbols. In our present case however, the best way to think about \
it is to think that the variable <f> received some value, which turned out to \
be not a number or another variable, but a pure function. Such a \
\[OpenCurlyDoubleQuote]variable\[CloseCurlyDoubleQuote] interpretation is \
also consistent with the fact that the rule for <f> is stored in OwnValues \
rather than DownValues.\
\>", "Text",
 CellChangeTimes->{{3.939954434111623*^9, 3.939954451084979*^9}, {
  3.9400176818682117`*^9, 3.940017707319805*^9}},
 CellID->357529007,ExpressionUUID->"8d570614-93fd-4521-8fd3-318818c3a350"],

Cell["\<\
Example: function which takes the first element from the list\
\>", "ItemNumbered",
 CellChangeTimes->{3.939954465549799*^9},
 CellID->990870684,ExpressionUUID->"3af5785f-aa05-4b65-aeba-764ef6f94b18"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "takeFirst", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"takeFirst", "=", 
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "&"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939954473764936*^9, 3.939954484163069*^9}},
 CellLabel->"In[1234]:=",
 CellID->234647430,ExpressionUUID->"69cd705e-07d5-47ee-a8e3-2af2bf2149bb"],

Cell["We check:", "Text",
 CellChangeTimes->{{3.939954487596734*^9, 3.939954488828677*^9}},
 CellID->1190739010,ExpressionUUID->"6e0d91fe-e5b1-45f7-8b3b-2e80331d6a8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"takeFirst", "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.939954489924279*^9, 3.9399544932300262`*^9}},
 CellLabel->"In[1236]:=",
 CellID->1423953500,ExpressionUUID->"4debda34-9f87-4795-b69e-28cabeedc1bb"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9399544936060553`*^9},
 CellLabel->"Out[1236]=",
 CellID->1819370121,ExpressionUUID->"0ce2db95-8b44-4369-84d9-90df05307eea"]
}, Open  ]],

Cell["\<\
Pure functions defined in the # - & notation usually work faster than the \
pattern-defined ones (there is no pattern-matching going on in this case), \
but they require more care. In particular, it is less easy to organize the \
argument checks for them (although also possible, of course). Let us, for \
example, apply our function to a number instead of a list:\
\>", "Text",
 CellChangeTimes->{{3.9399545015902147`*^9, 3.939954519512882*^9}, 
   3.940017742295656*^9},
 CellID->133974014,ExpressionUUID->"2c527300-0194-4875-b7d6-3a709e4829eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"takeFirst", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.93995452661499*^9, 3.93995452847241*^9}},
 CellLabel->"In[1237]:=",
 CellID->153210484,ExpressionUUID->"dc6f2375-288f-4010-9452-ff84cf95741c"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"1\\\", \\\"\[LeftDoubleBracket]\
\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of \
object.\"", 2, 1237, 89, 26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939954528883215*^9},
 CellLabel->"During evaluation of In[1237]:=",
 CellID->2101217906,ExpressionUUID->"35359588-0d87-4756-8668-383497ff1127"],

Cell[BoxData[
 RowBox[{"1", "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.939954528910962*^9},
 CellLabel->"Out[1237]=",
 CellID->1948254874,ExpressionUUID->"7a3d3ce8-e83a-458e-b4a4-5abe4716a00d"]
}, Open  ]],

Cell["\<\
To add the argument check, we would have to write something like this:\
\>", "Text",
 CellChangeTimes->{3.9399545431318197`*^9, 3.940017742315002*^9},
 CellID->1636501509,ExpressionUUID->"cde4cc50-02ca-4bf4-ae40-f7d489bb98bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"takeFirst", "=", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"AtomQ", "[", "#", "]"}], ",", "#", ",", 
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.939954545681767*^9, 3.9399545586650763`*^9}},
 CellLabel->"In[1238]:=",
 CellID->1689669905,ExpressionUUID->"e8666d04-ad91-4447-8127-1ba22202e027"],

Cell["\<\
That is, to return the argument itself if it is an atom, and its first \
element if it is not:\
\>", "Text",
 CellChangeTimes->{3.939954566104763*^9},
 CellID->1643127904,ExpressionUUID->"1053e36f-c95b-4d2e-a4bc-f5ad2106d680"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"takeFirst", "[", "5", "]"}], ",", 
   RowBox[{"takeFirst", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4", ",", "5", ",", "6"}], "}"}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.939954568900198*^9, 3.939954575689089*^9}},
 CellLabel->"In[1239]:=",
 CellID->664795709,ExpressionUUID->"7d1c5186-cdfe-4442-afdd-c1c6999833c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.9399545764071283`*^9},
 CellLabel->"Out[1239]=",
 CellID->1981786266,ExpressionUUID->"acbba291-e09e-4fc8-92fb-df81474342ba"]
}, Open  ]],

Cell["With the help of patterns, we could do the same as follows:", "Text",
 CellChangeTimes->{3.9399545857147207`*^9, 3.940017742333493*^9},
 CellID->326140990,ExpressionUUID->"7f3cce54-7040-4c4f-a428-353e7bc0a711"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"takeFirstP", "[", 
    RowBox[{"x_", "/;", 
     RowBox[{"Not", "[", 
      RowBox[{"AtomQ", "[", "x", "]"}], "]"}]}], "]"}], ":=", 
   RowBox[{"x", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9399545882491903`*^9, 3.939954611929967*^9}},
 CellLabel->"In[1240]:=",
 CellID->960832502,ExpressionUUID->"562ebf63-2f7c-4b67-8171-21053028e34c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"takeFirstP", "[", "5", "]"}], ",", 
   RowBox[{"takeFirstP", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4", ",", "5", ",", "6"}], "}"}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.939954615549302*^9, 3.939954624168111*^9}},
 CellLabel->"In[1241]:=",
 CellID->1903396821,ExpressionUUID->"e02bb69d-efc9-415c-a227-1b1aa134bc9a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"takeFirstP", "[", "5", "]"}], ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.939954624594061*^9},
 CellLabel->"Out[1241]=",
 CellID->1201190339,ExpressionUUID->"24b0b169-462a-421a-a2c9-993c8f669078"]
}, Open  ]],

Cell[TextData[{
 "Notice the difference in execution: when the pattern does not match, the \
function simply returns unevaluated. This allows to use the trick with the \
\[OpenCurlyDoubleQuote]soft\[CloseCurlyDoubleQuote] generation of error \
messages by adding a general catchall rule to catch all wrong arguments (see \
section ",
 ButtonBox["4.6.2.3",
  BaseStyle->"Hyperlink",
  ButtonData->"4.6.2.3"],
 " for an example). On the other hand, for pure functions, all cases have to \
be explicitly taken into account - in this sense they are more \
\[OpenCurlyDoubleQuote]rigid\[CloseCurlyDoubleQuote] entities."
}], "Text",
 CellChangeTimes->{{3.939954634090088*^9, 3.9399546541661777`*^9}, {
  3.939954694301918*^9, 3.939954694312642*^9}},
 CellID->1071172330,ExpressionUUID->"7aeb4227-172b-4e9f-8305-fb65cc381fa6"],

Cell["\<\
Returning back to the previous example of the takeFirst function, we may \
indeed want it to remain unevaluated for atomic objects, rather than \
returning them. In this case, we really need a pattern-defined function.\
\>", "Text",
 CellChangeTimes->{{3.939954634090088*^9, 3.939954658672442*^9}, {
  3.939954707005095*^9, 3.9399547075129147`*^9}},
 CellID->1942728189,ExpressionUUID->"f4f37b64-fba8-461d-ad00-635436e5bd3d"],

Cell["Example: a function of two variables", "ItemNumbered",
 CellChangeTimes->{3.939954714068267*^9},
 CellID->1784192165,ExpressionUUID->"275cd7ac-4878-4d95-aa88-e7b8a0740ce1"],

Cell["This function returns an intersection of two sets:", "Text",
 CellChangeTimes->{3.9399547209608517`*^9},
 CellID->1603554094,ExpressionUUID->"492b76d2-b234-4219-98f7-080c530bf6f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Intersection", "[", 
   RowBox[{"#1", ",", "#2"}], "]"}], "&"}]], "Input",
 CellChangeTimes->{{3.939954723235436*^9, 3.9399547291878853`*^9}},
 CellLabel->"In[1242]:=",
 CellID->1487516580,ExpressionUUID->"665b896e-1873-4a41-8c93-437514cf7156"],

Cell[BoxData[
 RowBox[{
  RowBox[{"#1", "\[Intersection]", "#2"}], "&"}]], "Output",
 CellChangeTimes->{3.939954729575173*^9},
 CellLabel->"Out[1242]=",
 CellID->1035671133,ExpressionUUID->"d9646db8-c7f0-45cd-8600-8a0e0e24bd59"]
}, Open  ]],

Cell["Let us use it:", "Text",
 CellChangeTimes->{3.93995473606663*^9},
 CellID->1169773396,ExpressionUUID->"bc819517-ca0b-4d86-911e-24714427e97f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Intersection", "[", 
    RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9399547437987957`*^9, 3.93995475125175*^9}},
 CellLabel->"In[1243]:=",
 CellID->168678287,ExpressionUUID->"7316ab02-62b2-4b5d-bd3e-4ffc83056308"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.9399547517474318`*^9},
 CellLabel->"Out[1243]=",
 CellID->1858637525,ExpressionUUID->"f385fbb7-6681-406d-8570-ea72b175b564"]
}, Open  ]],

Cell["Example: building a matrix of rank 1 from two vectors", "ItemNumbered",
 CellChangeTimes->{3.939954763641739*^9},
 CellID->84016588,ExpressionUUID->"15df1f57-f6de-46d9-a6c2-5346ebf32f67"],

Cell["\<\
This function creates a matrix of rank 1 for the two given vectors:\
\>", "Text",
 CellChangeTimes->{3.939954772081706*^9, 3.940017742352034*^9},
 CellID->1170038437,ExpressionUUID->"91c5e1a3-8ba5-418b-a652-610032166997"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Outer", "[", 
   RowBox[{"Times", ",", "#1", ",", "#2"}], "]"}], "&"}]], "Input",
 CellChangeTimes->{{3.9399547750356207`*^9, 3.939954781793193*^9}},
 CellLabel->"In[1244]:=",
 CellID->482887905,ExpressionUUID->"fbd725cf-0d12-4c8a-8ade-bc79c405d4b8"],

Cell["For example:", "Text",
 CellChangeTimes->{3.939954793929245*^9, 3.940017742370614*^9},
 CellID->1956610601,ExpressionUUID->"ad441158-36e5-42d3-be3b-1194cf55efe1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b", ",", "c", ",", "a1", ",", "b1", ",", "c1"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Outer", "[", 
    RowBox[{"Times", ",", "#1", ",", "#2"}], "]"}], "&"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a1", ",", "b1", ",", "c1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.939954796013022*^9, 3.939954814959743*^9}},
 CellLabel->"In[1245]:=",
 CellID->1531179839,ExpressionUUID->"3d787fee-7101-45c4-ba63-01520e91b5d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", " ", "a1"}], ",", 
     RowBox[{"a", " ", "b1"}], ",", 
     RowBox[{"a", " ", "c1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", " ", "b"}], ",", 
     RowBox[{"b", " ", "b1"}], ",", 
     RowBox[{"b", " ", "c1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", " ", "c"}], ",", 
     RowBox[{"b1", " ", "c"}], ",", 
     RowBox[{"c", " ", "c1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9399548160189543`*^9},
 CellLabel->"Out[1246]=",
 CellID->603503043,ExpressionUUID->"c241528e-4251-4578-acb3-a363b6983304"]
}, Open  ]],

Cell["Example: supplying a list with its length", "ItemNumbered",
 CellChangeTimes->{3.939954830769917*^9},
 CellID->2084716605,ExpressionUUID->"b10a5a7c-6ae4-4a08-b644-e9e55c88bb4d"],

Cell["This function supplies a list with its length:", "Text",
 CellChangeTimes->{3.939954836761963*^9, 3.940017742389064*^9},
 CellID->1636279430,ExpressionUUID->"0a9863f2-7aca-4aa1-9c57-14325920e7c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"#", ",", 
    RowBox[{"Length", "[", "#", "]"}]}], "}"}], "&"}]], "Input",
 CellChangeTimes->{{3.939954838885035*^9, 3.93995484477857*^9}},
 CellID->1946168475,ExpressionUUID->"849f94b5-3cf1-44a0-a98a-63e9e6c0146b"],

Cell["For example:", "Text",
 CellChangeTimes->{3.9399548512103777`*^9, 3.940017742408352*^9},
 CellID->688883556,ExpressionUUID->"fa576489-4649-4990-bb84-2244c77a6953"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"#", ",", 
     RowBox[{"Length", "[", "#", "]"}]}], "}"}], "&"}], "[", 
  RowBox[{"{", 
   RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.939954856013891*^9, 3.939954860482038*^9}},
 CellLabel->"In[1247]:=",
 CellID->981584715,ExpressionUUID->"da0d11d7-4bab-4048-9906-3e74df577279"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10"}], "}"}], 
   ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.939954860896275*^9},
 CellLabel->"Out[1247]=",
 CellID->1080202328,ExpressionUUID->"4598ba9b-3a62-4f41-b703-617ac359aa78"]
}, Open  ]],

Cell["\<\
In all these examples, the same results would be obtained if the real values \
of the arguments were substituted, as is easy to check.\
\>", "Text",
 CellChangeTimes->{{3.939954871385044*^9, 3.939954873594529*^9}},
 CellID->1198766175,ExpressionUUID->"5928d788-6b79-4b5f-948d-18537bfacef1"],

Cell["If we supply a wrong number of arguments", "ItemNumbered",
 CellChangeTimes->{3.939954898794404*^9},
 CellTags->"4.11.1.6",
 CellID->2119010718,ExpressionUUID->"860b9005-a64a-4e8c-8e63-f68942a6add3"],

Cell["\<\
If the pure function is given more arguments than it needs, extra arguments \
are ignored:\
\>", "Text",
 CellChangeTimes->{3.939954906142054*^9, 3.94001774242857*^9},
 CellID->344335578,ExpressionUUID->"dbe09aba-ffa4-45fb-b764-9fed46578bc9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "&"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939954911068985*^9, 3.9399549192217293`*^9}},
 CellLabel->"In[1248]:=",
 CellID->768590829,ExpressionUUID->"1f614e62-5440-44a4-a68b-1b535202294f"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.939954919838315*^9},
 CellLabel->"Out[1248]=",
 CellID->582359695,ExpressionUUID->"89138b76-39ff-4638-b4f5-9a5b0f007db8"]
}, Open  ]],

Cell["\<\
This property has both advantages and disadvantages. The advantage is that if \
some other (higher-order) built-in function takes a given pure function as an \
argument but supplies more arguments than needed, I don\[CloseCurlyQuote] t \
need to modify my code (one such example is NestWhile when we need an access \
to more than just the most recent result - see chapter V).\
\>", "Text",
 CellChangeTimes->{{3.939954929435315*^9, 3.9399549518438807`*^9}},
 CellID->1636414486,ExpressionUUID->"c6928282-c504-4079-a92c-7b8d3b61ee21"],

Cell["\<\
The disadvantage is that one has to be extra careful. If the arguments were \
not supposed to be ignored, but the pure function is erroneous, such error is \
hard to catch. For comparison, for a pattern-defined function with the fixed \
number of arguments, for the wrong number of arguments the pattern simply won\
\[CloseCurlyQuote]t match
and the function will evaluate to itself (or, if one uses the trick with the \
catch-all pattern and error messages, the error message will be generated) - \
this situation is much better for debugging.\
\>", "Text",
 CellChangeTimes->{{3.939954929435315*^9, 3.939954973727627*^9}},
 CellID->803109544,ExpressionUUID->"70f2eb66-9201-410f-a817-8e5dc39349f6"],

Cell["\<\
If, on the other hand, we supply less arguments than expected by the pure \
function, the error message will be generated:\
\>", "Text",
 CellChangeTimes->{{3.939954929435315*^9, 3.939954977170095*^9}, 
   3.9400177424493303`*^9},
 CellID->153328035,ExpressionUUID->"981d0b0d-0616-457b-95c1-21a77ea41fd6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#1", "+", "#2"}], ")"}], "&"}], "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.939954983475634*^9, 3.939954988254818*^9}},
 CellLabel->"In[1249]:=",
 CellID->1031464849,ExpressionUUID->"644ef107-10d9-40e7-b4c5-61a1eb7bca69"],

Cell[BoxData[
 TemplateBox[{
  "Function", "slotn", 
   "\"Slot number \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{RowBox[{\\\"#1\\\", \\\"+\\\", \\\"#2\\\"}], \\\"&\\\"}]\\) \
cannot be filled from \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"#1\\\", \\\"+\\\", \\\"#2\\\"}], \\\"&\\\"}], \
\\\")\\\"}], \\\"[\\\", \\\"1\\\", \\\"]\\\"}]\\).\"", 2, 1249, 90, 
   26587777319895376970, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939954988728622*^9},
 CellLabel->"During evaluation of In[1249]:=",
 CellID->1026185945,ExpressionUUID->"ef4420c4-a094-4994-b297-0a35cabd7283"],

Cell[BoxData[
 RowBox[{"1", "+", "#2"}]], "Output",
 CellChangeTimes->{3.93995498875213*^9},
 CellLabel->"Out[1249]=",
 CellID->666008558,ExpressionUUID->"368a24d7-b53a-4321-a6ba-ef4b90bf7090"]
}, Open  ]],

Cell["\<\
The Head and the FullForm of the pure function in #-& notation\
\>", "ItemNumbered",
 CellChangeTimes->{3.9399549982214117`*^9},
 CellID->14330853,ExpressionUUID->"80d1def0-ada7-4fa7-a758-86ceb2eeec23"],

Cell["\<\
The #-& form of a pure function is really just a convenient notation. The \
fundamental built-in function (head) used to create pure functions is always \
Function, as can be seen easily:\
\>", "Text",
 CellChangeTimes->{{3.939955004823576*^9, 3.939955015075457*^9}, 
   3.940017742469239*^9},
 CellID->340477907,ExpressionUUID->"84dd3243-2f36-432f-bc0a-eedd40facb57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{
   RowBox[{"#", "^", "2"}], "&"}], "]"}]], "Input",
 CellChangeTimes->{{3.939955017811202*^9, 3.939955022082889*^9}},
 CellLabel->"In[1250]:=",
 CellID->1447187432,ExpressionUUID->"1c3d0962-3e67-4bd9-80c9-7826a24b9316"],

Cell[BoxData["Function"], "Output",
 CellChangeTimes->{3.939955022714505*^9},
 CellLabel->"Out[1250]=",
 CellID->709974502,ExpressionUUID->"d3b396bb-70ec-4504-91e1-2605fb9eca6f"]
}, Open  ]],

Cell["This is how this pure function looks internally:", "Text",
 CellChangeTimes->{3.939955029860271*^9, 3.940017742488227*^9},
 CellID->1122312382,ExpressionUUID->"b5221ece-1311-455a-ac76-1cb14d67ccc2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{
   RowBox[{"#", "^", "2"}], "&"}], "]"}]], "Input",
 CellChangeTimes->{{3.939955031458954*^9, 3.9399550358370323`*^9}},
 CellLabel->"In[1251]:=",
 CellID->717191382,ExpressionUUID->"2d8572c4-f0e6-451b-97cd-8c3e0fb13188"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Function", "[", 
    RowBox[{"Power", "[", 
     RowBox[{
      RowBox[{"Slot", "[", "1", "]"}], ",", "2"}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.9399550361960087`*^9},
 CellLabel->"Out[1251]//FullForm=",
 CellID->1734449894,ExpressionUUID->"de0395b7-e94c-4462-bb0d-bd9933270839"]
}, Open  ]],

Cell["SlotSequence and functions with variable number of arguments", \
"ItemNumbered",
 CellChangeTimes->{3.939955060579872*^9},
 CellTags->"4.11.1.8",
 CellID->956344080,ExpressionUUID->"7812b7e7-d44a-47fc-a0eb-8b6158a59ba5"],

Cell["\<\
It is sometimes needed to define a function of many variables, where their \
number is either not fixed or when the variables are not needed to be \
referred to separately. In this case, one can use the SlotSequence, which has \
an abbreviation ##. As an example, we may define our own Plus function as a \
pure function in the following fashion:\
\>", "Text",
 CellChangeTimes->{{3.939955067659398*^9, 3.9399550812115297`*^9}, 
   3.940017742507105*^9},
 CellID->1507338412,ExpressionUUID->"c745e055-ad35-48ef-a37a-016cc9a004ab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ourPlus", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ourPlus", "=", 
   RowBox[{
    RowBox[{"Plus", "[", "##", "]"}], "&"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939955084020178*^9, 3.939955093798668*^9}},
 CellLabel->"In[1252]:=",
 CellID->456546040,ExpressionUUID->"d3db522d-dac8-44ab-b70e-bb6510ec1378"],

Cell["We can check:", "Text",
 CellChangeTimes->{{3.9399550959426727`*^9, 3.939955097806326*^9}},
 CellID->513031352,ExpressionUUID->"843b948e-7b2e-4d48-a7ce-6ae2e9f05f6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ourPlus", "[", "1", "]"}], ",", 
   RowBox[{"ourPlus", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"ourPlus", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.9399550985834846`*^9, 3.9399551086562853`*^9}},
 CellLabel->"In[1254]:=",
 CellID->1470475577,ExpressionUUID->"d8730148-fb5f-4f6d-b0e4-85551464e574"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.939955109164904*^9},
 CellLabel->"Out[1254]=",
 CellID->288401540,ExpressionUUID->"be8cdd66-28dc-4e23-bcd1-5d5794a4abd4"]
}, Open  ]],

Cell["\<\
It is less obvious, but one can also use SlotSequence even when one needs an \
access to individual variables. For example, we need a function which \
multiples its first argument by the sum of all the other ones, as a pure \
function. This does not seem possible to do since ## gives all arguments but \
does not directly allow to access the individual ones. This is not so however:\
\>", "Text",
 CellChangeTimes->{{3.939955118585293*^9, 3.939955133576952*^9}, 
   3.940017742526083*^9},
 CellID->294091501,ExpressionUUID->"180b84b5-7bcf-4b34-8f70-32698563c989"],

Cell[BoxData[
 RowBox[{
  RowBox[{"firstTimesSumRest", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", "##", "}"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "*", 
      RowBox[{"Total", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"{", "##", "}"}], ",", "1"}], "]"}], "]"}]}], "&"}], ")"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.939955136475873*^9, 3.939955161130031*^9}},
 CellLabel->"In[1255]:=",
 CellID->1570272723,ExpressionUUID->"56951bad-7004-47e5-924d-f7781f730cfe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"firstTimesSumRest", "[", "1", "]"}], ",", 
   RowBox[{"firstTimesSumRest", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"firstTimesSumRest", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", 
   RowBox[{"firstTimesSumRest", "[", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939955163024537*^9, 3.9399551907597437`*^9}},
 CellLabel->"In[1256]:=",
 CellID->348922083,ExpressionUUID->"1d447e1c-0b24-4c1f-bb89-115e95dab00e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "2", ",", "5", ",", "24"}], "}"}]], "Output",
 CellChangeTimes->{3.939955191359069*^9},
 CellLabel->"Out[1256]=",
 CellID->804780412,ExpressionUUID->"eb78499b-2035-4d52-bddd-573cc0c00dba"]
}, Open  ]],

Cell["\<\
This shows how to access individual variables with SlotSequence - place ## in \
a list and then index the list. I deliberately ignored the variation of the \
SlotSequence which allows to supply first <n> arguments separately and the \
rest with SlotSequence, to illustrate the general way of accessing individual \
variables. With this variation, our function would be rewritten much more \
compactly as\
\>", "Text",
 CellChangeTimes->{{3.939955199045632*^9, 3.939955216198401*^9}},
 CellID->395792656,ExpressionUUID->"aa34a7e2-d16e-4327-9a72-3c15f7d1ade5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"firstTimesSumRest1", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"#1", "*", 
      RowBox[{"Plus", "[", "##2", "]"}]}], "&"}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.939955220388631*^9, 3.939955235203225*^9}},
 CellLabel->"In[1257]:=",
 CellID->964627163,ExpressionUUID->"d4237573-218d-4060-9c95-1cf9e1baa20c"],

Cell["With the same results of course:", "Text",
 CellChangeTimes->{3.939955244195381*^9, 3.940017742544992*^9},
 CellID->1362889470,ExpressionUUID->"0a7370ab-c772-498d-887e-f62103a196da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"firstTimesSumRest1", "[", "1", "]"}], ",", 
   RowBox[{"firstTimesSumRest1", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"firstTimesSumRest1", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", 
   RowBox[{"firstTimesSumRest1", "[", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.9399552854247932`*^9, 3.939955290873198*^9}},
 CellLabel->"In[1259]:=",
 CellID->1022743388,ExpressionUUID->"fab22c97-3e85-4988-a5c9-830ba3b67af9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "2", ",", "5", ",", "24"}], "}"}]], "Output",
 CellChangeTimes->{{3.939955279545958*^9, 3.9399552917695*^9}},
 CellLabel->"Out[1259]=",
 CellID->764201774,ExpressionUUID->"850b214f-d86d-46f3-b641-fae77fffc7c8"]
}, Open  ]],

Cell["\<\
This form of the function is certainly shorter, but less general since I will \
not be able to access say the third argument without the use of the trick \
with the list indexing shown above.\
\>", "Text",
 CellChangeTimes->{{3.9399553127543077`*^9, 3.93995532325386*^9}},
 CellID->885113256,ExpressionUUID->"8431142e-8aa2-4ccb-a16c-7ea82d74d6c2"],

Cell["\<\
One important limitation of the #-& notation for the pure functions is that \
it is not possible to assign attributes to them in this notation (unless some \
undocumented features are used). The advantage however is that functions in \
this form are typically faster than in other forms (patter-defined or defined \
through the Function construct with named arguments).\
\>", "Text",
 CellChangeTimes->{{3.9399553127543077`*^9, 3.9399553388006907`*^9}},
 CellID->1356337231,ExpressionUUID->"8257b783-ec51-4b5c-93b8-779c19300075"],

Cell["A comment on function names", "ItemNumbered",
 CellChangeTimes->{3.939955347428473*^9},
 CellID->678075001,ExpressionUUID->"b7de9d20-f54e-42a8-bf1f-84afd7aa4b54"],

Cell["\<\
You may have noticed that I sometimes store the pure function definition in \
some variable. However, this is done purely for convenience in our examples, \
where I use these functions on several arguments, but don\[CloseCurlyQuote] t \
want to use any of the functional programming constructs which automate \
function application. When we come to that point, you will see that we will \
never need names for pure functions.\
\>", "Text",
 CellChangeTimes->{{3.9399553528140717`*^9, 3.939955369095442*^9}},
 CellID->1858310825,ExpressionUUID->"ec23fe4c-41dc-4b19-84fb-c689e2c13f3f"],

Cell["Nesting pure functions in #-& notation", "ItemNumbered",
 CellChangeTimes->{3.939955379435561*^9},
 CellID->88098115,ExpressionUUID->"ab4ac2fb-6e4c-4ac0-84ca-cd504e1a82da"],

Cell["\<\
It often happens that inside one pure function there is another one, supplied \
to it as one of its arguments. The question is then whether or not we face \
any difficulties or ambiguities due to the same abbreviation for the function \
variables. As an example, consider a pure function which sorts its argument \
(list of lists is assumed), in an ascending order in the first elements of \
the sublists. This is how it will look like in the #-& notation:\
\>", "Text",
 CellChangeTimes->{{3.9399553866094923`*^9, 3.939955409028142*^9}, 
   3.940017742563993*^9},
 CellID->1048786022,ExpressionUUID->"007d8e2e-166b-4be5-aff2-cdacfdb020a6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "sortFirstElem", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sortFirstElem", "=", 
   RowBox[{
    RowBox[{"Sort", "[", 
     RowBox[{"#1", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"First", "[", "#1", "]"}], "<=", 
        RowBox[{"First", "[", "#2", "]"}]}], "&"}]}], "]"}], "&"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.939955413052809*^9, 3.939955441371231*^9}, {
  3.939955530919957*^9, 3.939955531383532*^9}},
 CellLabel->"In[1264]:=",
 CellID->20174886,ExpressionUUID->"ffb2da55-147c-48fd-afb1-d775c4a823de"],

Cell["\<\
We see that the pure functions are nested one within another, and that there \
are two instances of #1 variable which have different meaning and, indeed, \
refer to different variables. Is it legal? The answer is yes, as long as one \
pure function is entirely contained in another one (more precisely, if there \
are no expressions such that for their evaluation, the variables of the \
nested functions have to be used together, simultaneously). Let us test it:\
\>", "Text",
 CellChangeTimes->{{3.9399554591093397`*^9, 3.939955482061205*^9}, 
   3.940017742582522*^9},
 CellID->1477523768,ExpressionUUID->"791416ed-31b5-4d90-9f5f-dd49a392885b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sortFirstElem", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "8"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.939955487182618*^9, 3.9399555076967087`*^9}},
 CellLabel->"In[1266]:=",
 CellID->1221156122,ExpressionUUID->"5812eaf0-6ac5-412b-855f-39dad7dabead"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.939955500416909*^9, 3.939955535122573*^9}},
 CellLabel->"Out[1266]=",
 CellID->1432071925,ExpressionUUID->"30fdf0e9-8b4e-43be-8598-a1ad035d62e4"]
}, Open  ]],

Cell["Pure functions with zero arguments", "ItemNumbered",
 CellChangeTimes->{3.939955546530294*^9},
 CellTags->"4.11.1.11",
 CellID->1769251484,ExpressionUUID->"8667c2e8-084a-43e1-bde2-c78c4502a93c"],

Cell["\<\
This seems like a really weird construct, but it is in fact quite useful. \
Such functions are required basically when we want to supply some number or \
expression to a function as one of the arguments, while instead a function \
argument is expected. Then we need to \[OpenCurlyDoubleQuote]convert\
\[CloseCurlyDoubleQuote] our expression into an \[OpenCurlyDoubleQuote]idle\
\[CloseCurlyDoubleQuote] function, which will simply produce this expression \
regardless if its argument.\
\>", "Text",
 CellChangeTimes->{{3.9399555528738317`*^9, 3.939955571969894*^9}},
 CellID->1751115226,ExpressionUUID->"f3ab62fe-f747-43b6-ae73-451b00e6fd6f"],

Cell["\<\
As a simple example, say we need to produce a list of ones, of the length 10: \
{1, 1, 1, 1, 1, 1, 1, 1, 1, 1}. This can be done by Table, of course, but \
alternatively by an Array command (which is somewhat faster). However, Array \
requires a function to be supplied, so the input like this:\
\>", "Text",
 CellChangeTimes->{{3.9399555528738317`*^9, 3.939955581017312*^9}, 
   3.9400177426010847`*^9},
 CellID->219671154,ExpressionUUID->"118611df-8ea9-45a6-b23b-504c4a31c578"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{"1", ",", 
   RowBox[{"{", "10", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939955586888917*^9, 3.939955589207561*^9}},
 CellLabel->"In[1267]:=",
 CellID->1636116991,ExpressionUUID->"ff157ceb-f9c9-4726-a2e6-0768bd9fc4c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "[", "1", "]"}], ",", 
   RowBox[{"1", "[", "2", "]"}], ",", 
   RowBox[{"1", "[", "3", "]"}], ",", 
   RowBox[{"1", "[", "4", "]"}], ",", 
   RowBox[{"1", "[", "5", "]"}], ",", 
   RowBox[{"1", "[", "6", "]"}], ",", 
   RowBox[{"1", "[", "7", "]"}], ",", 
   RowBox[{"1", "[", "8", "]"}], ",", 
   RowBox[{"1", "[", "9", "]"}], ",", 
   RowBox[{"1", "[", "10", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939955589737797*^9},
 CellLabel->"Out[1267]=",
 CellID->969899031,ExpressionUUID->"f91e2aee-1cfd-42f9-a897-0a10d0c77aab"]
}, Open  ]],

Cell["\<\
does not work, as we can see. The solution is to \
\[OpenCurlyDoubleQuote]convert\[CloseCurlyDoubleQuote] the number <1> into a \
pure function with zero arguments. This is extremely easy to do - just add an \
ampersand to the end:\
\>", "Text",
 CellChangeTimes->{{3.939955611459902*^9, 3.939955625867234*^9}, {
   3.940017681887824*^9, 3.940017707339477*^9}, 3.9400177426196833`*^9},
 CellID->1751070020,ExpressionUUID->"97e65d40-62cd-4ed4-a8ba-198536925aa3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{"1", "&"}], ",", 
   RowBox[{"{", "10", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939955627819058*^9, 3.939955632451893*^9}},
 CellLabel->"In[1268]:=",
 CellID->1460711895,ExpressionUUID->"c2f068cb-43a9-4846-b9b9-62f5d98a2c8f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.939955632706781*^9},
 CellLabel->"Out[1268]=",
 CellID->361954151,ExpressionUUID->"519b8c46-b238-471b-ba34-e0a2b8c1769c"]
}, Open  ]],

Cell["\<\
So, to summarize: adding an ampersand to the end of some expression (not \
involving anonymous variables - # symbols), converts this expression into a \
pure function with zero arguments, which is quite handy at times.\
\>", "Text",
 CellChangeTimes->{{3.93995564023104*^9, 3.939955655466709*^9}},
 CellID->1689727553,ExpressionUUID->"6dbba646-d092-40e6-b367-a0fef62dc3f6"],

Cell["\<\
Currying (partial application) with pure functions in #-& notation\
\>", "ItemNumbered",
 CellChangeTimes->{{3.9399556645620623`*^9, 3.939955666699136*^9}},
 CellTags->"4.11.1.12",
 CellID->2077382498,ExpressionUUID->"6b98b6e2-05fd-49e3-b53a-30d7e279751b"],

Cell["\<\
Currying means the following: given a function of <n> arguments and passing \
to it the smaller number of arguments <k> (k <n, and argument positions not \
necessarily consecutive), we insert these arguments into their \
\[OpenCurlyDoubleQuote]argument slots\[CloseCurlyDoubleQuote] and create a \
new function of the remaining variables at run-time. Sometimes this is also \
called partial application of the function. If, for instance, we have a \
function <f> of two variables <x> and <y> from the sets X,Y, producing some \
result <z> from the set Z, then f:X x Y -> Z, while what currying does is \
<curried f>: X-> (Y -> Z). Thus, while initial function maps a Cartesian \
product of X and Y onto Z, takes two arguments and maps them to a result \
(expression), curried function maps X onto a space of mappings (functions) \
Y->Z. The result of application of curried function is then always another \
function.\
\>", "Text",
 CellChangeTimes->{{3.939955673334301*^9, 3.9399557337059507`*^9}, {
  3.9400176819065237`*^9, 3.940017707376472*^9}},
 CellID->778510960,ExpressionUUID->"5bf33a0f-4c1b-4aa1-9dd3-b857eb158774"],

Cell["\<\
This technique is not very useful in procedural programming, since there it \
is the programmer himself who makes all the function calls. In the functional \
style however, we allow some functions to manipulate other functions, call \
them, etc. In this paradigm, it is quite often that one function expects \
another function as one of its arguments, and then frequently such a function \
does not exist and has to be created at run-time. \
\>", "Text",
 CellChangeTimes->{{3.9399557876813107`*^9, 3.9399558264559917`*^9}},
 CellID->1764550724,ExpressionUUID->"c1626132-84bd-44c6-a8bf-25708c9f3837"],

Cell[TextData[{
 "In some languages such as Ocaml, all functions are curried automatically. \
There is no built-in support for currying in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", but the compactness of the #-& notation makes it almost mindless to \
implement in each particular case. For example, say we have a function of two \
variables, to which we pass the first argument and then need to create a \
resulting function of a single (second) argument:"
}], "Text",
 CellChangeTimes->{{3.9399557876813107`*^9, 3.939955842364881*^9}},
 CellID->1345982386,ExpressionUUID->"40a0ab7c-905b-426b-b6d6-1ff5aafc37e5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Sin", "[", 
    RowBox[{"x", "*", "y"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939955847781193*^9, 3.939955858908371*^9}},
 CellLabel->"In[1269]:=",
 CellID->1944630282,ExpressionUUID->"3ea482f7-c083-42ba-bea3-18822f353534"],

Cell["\<\
Say, the first argument is Pi. This is how we create such a function:\
\>", "Text",
 CellChangeTimes->{3.939955867140499*^9, 3.940017742638208*^9},
 CellID->1994995678,ExpressionUUID->"721bbb79-aba5-4846-ae10-e8f748a4fef3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"Pi", ",", "#"}], "]"}], "&"}]], "Input",
 CellChangeTimes->{{3.939955869998027*^9, 3.939955874494422*^9}},
 CellLabel->"In[1271]:=",
 CellID->1802375076,ExpressionUUID->"eb05740d-1684-41bb-8ef7-948e376d14d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"\[Pi]", ",", "#1"}], "]"}], "&"}]], "Output",
 CellChangeTimes->{3.9399558775015907`*^9},
 CellLabel->"Out[1271]=",
 CellID->1831032876,ExpressionUUID->"5afe63ef-9eb2-46f0-9514-488ac5ac8e90"]
}, Open  ]],

Cell["For example:", "Text",
 CellChangeTimes->{{3.9399558903812723`*^9, 3.939955893443143*^9}},
 CellID->728885422,ExpressionUUID->"e674b2c6-5c3c-4bf2-85d1-0ffdf0070973"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"Pi", ",", "#"}], "]"}], "&"}], "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.939955894234324*^9, 3.939955898293899*^9}},
 CellLabel->"In[1272]:=",
 CellID->223100995,ExpressionUUID->"b97746ec-5ad6-4fb6-b993-1cbf55fa46d6"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.939955898669767*^9},
 CellLabel->"Out[1272]=",
 CellID->7306324,ExpressionUUID->"fc061a64-c600-4ae9-be34-ad3e6feb5bf4"]
}, Open  ]],

Cell["\<\
This technique trivially generalizes to more arguments. We will make real use \
of it in chapter V on functional programming.\
\>", "Text",
 CellChangeTimes->{{3.939955910292017*^9, 3.939955915388494*^9}},
 CellID->390819589,ExpressionUUID->"4d1f9b7d-956e-4aa6-84db-101a1b182eb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pure functions defined with Function", "Subsubsection",
 CellChangeTimes->{3.9399559560831347`*^9},
 CellID->1499839797,ExpressionUUID->"c58b14ae-6e38-45c8-8689-9fbde9b75156"],

Cell["\<\
Now, let us describe another way of defining pure functions - through the \
Function construct. It has the format: Function[{vars}, body]. If there is a \
single variable, then the list braces are optional. Let us show how some of \
the previous examples would look in this notation:\
\>", "Text",
 CellChangeTimes->{{3.939955962344944*^9, 3.9399559747186747`*^9}},
 CellID->644419693,ExpressionUUID->"88f50db8-b94c-47f6-bd10-3a5ba3e68546"],

Cell["The squaring function:", "Text",
 CellChangeTimes->{{3.939955962344944*^9, 3.9399559722805023`*^9}, 
   3.940017742656703*^9},
 CellID->929461030,ExpressionUUID->"b98c33ae-c2b2-4fd9-a0cc-81aded0b58c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"x", "^", "2"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939955976855345*^9, 3.93995599792747*^9}},
 CellLabel->"In[1276]:=",
 CellID->110529014,ExpressionUUID->"eb916197-9277-4c90-90be-5407d782de9b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "Pi", "]"}], ",", 
   RowBox[{"f", "[", "10", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.9399559864866447`*^9, 3.939955992858268*^9}},
 CellLabel->"In[1278]:=",
 CellID->272692407,ExpressionUUID->"a96bda36-dffd-4d71-adc1-6587ec0e5644"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", 
   SuperscriptBox["\[Pi]", "2"], ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{{3.939955993152207*^9, 3.939956002118844*^9}},
 CellLabel->"Out[1278]=",
 CellID->818802385,ExpressionUUID->"40ed195f-2436-49ac-9d3f-3aca6b12319a"]
}, Open  ]],

Cell["The function which take the first element:", "Text",
 CellChangeTimes->{3.939956134713623*^9, 3.9400177426751966`*^9},
 CellID->1190498448,ExpressionUUID->"6d2109f0-5f7f-4a58-92df-42f9b0eb28c6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "takeFirst", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"takeFirst", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"AtomQ", "[", "x", "]"}], ",", "x", ",", 
       RowBox[{"First", "[", "x", "]"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.939956137752831*^9, 3.939956182219467*^9}},
 CellLabel->"In[1282]:=",
 CellID->610819497,ExpressionUUID->"96401381-286b-417a-ac66-0cc10674badc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"takeFirst", "[", "a", "]"}], ",", 
   RowBox[{"takeFirst", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.9399561698463507`*^9, 3.939956178277272*^9}},
 CellLabel->"In[1284]:=",
 CellID->1259055799,ExpressionUUID->"b1e62536-ad51-46ca-abc4-453787c81f35"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.939956178698288*^9, 3.939956184581201*^9}},
 CellLabel->"Out[1284]=",
 CellID->606536172,ExpressionUUID->"17046c6d-690a-4b18-8a17-92e7be1cc6e8"]
}, Open  ]],

Cell["Intersection of two sets (lists):", "Text",
 CellChangeTimes->{3.939956222522648*^9, 3.940017742693736*^9},
 CellID->1186513109,ExpressionUUID->"15cf0aae-ffb6-45bc-8cdc-af3adaa8513e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "intSets", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intSets", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", 
     RowBox[{"Intersection", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939956226040558*^9, 3.939956243616184*^9}},
 CellLabel->"In[1]:=",
 CellID->2063155218,ExpressionUUID->"de66062f-509d-4247-9fc9-dc0695914d46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"intSets", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "]"}], ",", 
   RowBox[{"intSets", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.93995624480619*^9, 3.939956271795978*^9}},
 CellLabel->"In[4]:=",
 CellID->585291613,ExpressionUUID->"54982cb0-49d9-4387-8d0c-39ee8e9899b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.939956264561954*^9, 3.9399562722209063`*^9}},
 CellLabel->"Out[4]=",
 CellID->2097091541,ExpressionUUID->"81cfbee5-a112-413b-95dc-2b3ad0b75262"]
}, Open  ]],

Cell["Matrix of rank 1, built out of 2 vectors:", "Text",
 CellChangeTimes->{3.9399562806141977`*^9, 3.9400177427122793`*^9},
 CellID->1531135002,ExpressionUUID->"ed2082ed-1944-4d62-a088-bba2ae124d14"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "extMultiply", ",", "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", 
    "f"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"extMultiply", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", 
     RowBox[{"Outer", "[", 
      RowBox[{"Times", ",", "x", ",", "y"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9399562837139597`*^9, 3.939956307425371*^9}},
 CellLabel->"In[5]:=",
 CellID->1098786681,ExpressionUUID->"8caeb8ab-a208-4a08-9a4b-e0598a57c0c4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"extMultiply", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "e", ",", "f"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.93995630873256*^9, 3.9399563137550983`*^9}},
 CellLabel->"In[7]:=",
 CellID->4895737,ExpressionUUID->"5b540ddd-ac9b-4999-9897-c87cae17d8c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", " ", "d"}], ",", 
     RowBox[{"a", " ", "e"}], ",", 
     RowBox[{"a", " ", "f"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b", " ", "d"}], ",", 
     RowBox[{"b", " ", "e"}], ",", 
     RowBox[{"b", " ", "f"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", " ", "d"}], ",", 
     RowBox[{"c", " ", "e"}], ",", 
     RowBox[{"c", " ", "f"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939956314109501*^9},
 CellLabel->"Out[7]=",
 CellID->1583284827,ExpressionUUID->"acd99ad3-c5cc-4fc3-830e-88f5e117d228"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Differences between pure functions defined with Function and with #-& notation\
\>", "Subsubsection",
 CellChangeTimes->{{3.93995632730628*^9, 3.939956332817521*^9}},
 CellID->309700675,ExpressionUUID->"387d5c7f-08df-407a-ab2f-c9c69bce2c95"],

Cell["\<\
It is important to note that there is no fundamental difference between \
functions defined with the #-& notation and functions defined with the \
Function command, in the sense that both definitions produce pure functions. \
There are however several technical differences that need to be mentioned.\
\>", "Text",
 CellChangeTimes->{{3.939956339769219*^9, 3.939956359495706*^9}},
 CellID->1786368044,ExpressionUUID->"70fc6377-cf57-4637-aa4d-4ad1c379441c"],

Cell[TextData[{
 "The first one is that the Function[{vars}, body] is a scoping construct, \
similar to Module, Block, With etc. This means in particular that the <vars> \
in the function body are localized to the body of the function, and have \
nothing to do with the global variables with same names, so we don\
\[CloseCurlyQuote]t need to worry about name conflicts when defining pure \
functions with Function. This also means that, should we wish to nest the \
Function constructs one inside another, the possible name conflicts will \
automatically be resolved by the system (but I would recommend to read the \
corresponding sections of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Book and ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Help to see precisely how they are resolved). Also, with Function we may \
nest functions in more general way than with #-& notation, which is \
illustrated on the following example:"
}], "Text",
 CellChangeTimes->{{3.939956339769219*^9, 3.9399563974882517`*^9}},
 CellID->1724988471,ExpressionUUID->"f524917f-352d-4dc6-98af-6413bc3d9fe4"],

Cell["Example: currying", "ItemNumbered",
 CellChangeTimes->{3.9399564070619917`*^9},
 CellID->2075606115,ExpressionUUID->"73886bfd-0092-449c-9c59-0d26f90118b2"],

Cell["\<\
This is a function which takes an argument and produces another function. \
That function takes another argument and returns the sum of these two \
arguments\
\>", "Text",
 CellChangeTimes->{{3.93995641320056*^9, 3.939956415422407*^9}},
 CellID->1000444024,ExpressionUUID->"854a3a99-7ad1-46df-8bf5-fb374d63d555"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "nestedF", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nestedF", "=", 
  RowBox[{"Function", "[", 
   RowBox[{"x", ",", 
    RowBox[{"Function", "[", 
     RowBox[{"y", ",", 
      RowBox[{"x", "+", "y"}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.93995642025974*^9, 3.939956434610392*^9}},
 CellLabel->"In[8]:=",
 CellID->198890389,ExpressionUUID->"779aae09-e2f5-40fb-aa90-7a6f27db7122"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", 
   RowBox[{"Function", "[", 
    RowBox[{"y", ",", 
     RowBox[{"x", "+", "y"}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.93995643607725*^9},
 CellLabel->"Out[9]=",
 CellID->1208097979,ExpressionUUID->"5161210d-1a0b-4b8b-99ec-05eb197e62dd"]
}, Open  ]],

Cell["\<\
For example, we may \[OpenCurlyDoubleQuote]forge\[CloseCurlyDoubleQuote] a \
function which adds 3 to its argument, like this:\
\>", "Text",
 CellChangeTimes->{3.939956468486844*^9, 3.940017742730814*^9},
 CellID->1707367236,ExpressionUUID->"b2fc82cc-6a7e-4bc3-a22f-2d323d759833"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"add3", "=", 
  RowBox[{"nestedF", "[", "3", "]"}]}]], "Input",
 CellChangeTimes->{{3.939956471725771*^9, 3.93995647547248*^9}},
 CellLabel->"In[10]:=",
 CellID->1656893841,ExpressionUUID->"94b1556e-58c2-4e3d-905d-5fabccaf2f4f"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"y$", ",", 
   RowBox[{"3", "+", "y$"}]}], "]"}]], "Output",
 CellChangeTimes->{3.939956476713469*^9},
 CellLabel->"Out[10]=",
 CellID->1961812434,ExpressionUUID->"2deaebf2-3a2f-41c4-bfe8-c7e102921412"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"add3", "[", "1", "]"}], ",", 
   RowBox[{"add3", "[", "5", "]"}], ",", 
   RowBox[{"add3", "[", "7", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939956508197693*^9, 3.9399565145079813`*^9}},
 CellLabel->"In[11]:=",
 CellID->598702030,ExpressionUUID->"a590bcd1-ce86-453b-a48a-f9e75cb4ddf2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "8", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.939956514848469*^9},
 CellLabel->"Out[11]=",
 CellID->1335112869,ExpressionUUID->"226fdc51-419e-43ff-8d1e-d29373876295"]
}, Open  ]],

Cell[TextData[{
 "This is somewhat similar to a technique called currying in some languages. \
As this example illustrates, currying can be easily implemented in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " through nested Function constructs, even though ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " does not support it directly."
}], "Text",
 CellChangeTimes->{{3.939956522552505*^9, 3.939956543849619*^9}},
 CellID->185361780,ExpressionUUID->"1b6d6cea-333f-4678-b7b7-7dd0368d6f20"],

Cell["\<\
We can of course use our function directly on the 2 arguments\
\>", "Text",
 CellChangeTimes->{{3.939956522552505*^9, 3.939956536576083*^9}},
 CellID->971526499,ExpressionUUID->"93f33849-816b-4924-bc92-8bb9fe3f64b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"nestedF", "[", "3", "]"}], "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.93995654971379*^9, 3.939956552634705*^9}},
 CellLabel->"In[12]:=",
 CellID->1719992689,ExpressionUUID->"b7b2634d-5fb0-409c-9267-d05976f9753e"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.93995655315462*^9},
 CellLabel->"Out[12]=",
 CellID->752765219,ExpressionUUID->"177b946e-0998-4c89-b805-00226a3f7355"]
}, Open  ]],

Cell["\<\
This should not be considered a function of two arguments however, since the \
first number defines the function which then takes the second number as a \
single argument. In particular, the evaluation of this function will be \
different from the evaluation of the more standard function of two arguments \
that we described before.\
\>", "Text",
 CellChangeTimes->{{3.939956609909575*^9, 3.9399566264992313`*^9}},
 CellID->898871256,ExpressionUUID->"36eee68f-6f58-4343-a7f8-3f603b92d95c"],

Cell["\<\
Returning to our original question of comparison of the #-& style and the \
style with Function, it is not possible (to my knowledge) to implement the \
above functionality with the #-& style, since here we have nested pure \
functions with one not entirely contained in the other one (in the sense \
described above - we needed the variables of both internal and external \
function simultaneously to do the computation). Thus,
defining a pure function with Function is more general in this sense.\
\>", "Text",
 CellChangeTimes->{{3.939956609909575*^9, 3.939956643147676*^9}},
 CellID->1776975286,ExpressionUUID->"66f4687c-62dc-4677-8996-ce056f3ed1f6"],

Cell["\<\
The other limitation of #-& approach, which we mentioned already, is that \
attributes can not be assigned to a pure function defined in this way (well, \
at least if one does not use undocumented features - see the section \
Attributes of Pure Functions in the Maeder\[CloseCurlyQuote]s book). This is \
not the case with Function: it takes an attribute or a list of attributes as \
an optional third argument, which is a powerful capability.\
\>", "Text",
 CellChangeTimes->{{3.939956654950321*^9, 3.93995667555971*^9}, 
   3.940017742749398*^9},
 CellID->154445522,ExpressionUUID->"6209bb74-f75f-46bf-a7f8-e3bdc7d8689a"],

Cell["Example: an accumulator problem", "ItemNumbered",
 CellChangeTimes->{3.939956684669486*^9},
 CellID->1172538514,ExpressionUUID->"60f01171-5b8a-44d6-b264-68c74803a857"],

Cell["\<\
To illustrate it, we will consider a model problem which Paul Graham used to \
argue in favor of functional languages (LISP).[13]: write a function, which \
takes an (integer) number <n>, and returns another function that takes any \
number and increments it by <n>. He emphasized 2 things: 1. returns a \
function, 2. this function not simply adds n to its argument, but increments \
it by n (that is, produces a side effects and changes a global value of the \
variable passed to it). Here is our solution:\
\>", "Text",
 CellChangeTimes->{{3.939956691333288*^9, 3.939956729547138*^9}},
 CellID->1544859926,ExpressionUUID->"e393bf0f-e38f-4cc2-806a-afc918005aac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "incrementByN", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"incrementByN", "[", "n_Integer", "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"x", "+=", "n"}], ",", "HoldFirst"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.939956732789198*^9, 3.939956757954987*^9}},
 CellLabel->"In[13]:=",
 CellID->569517316,ExpressionUUID->"6221cc4f-73fd-4c0a-80a1-1883bd6deb9e"],

Cell["\<\
The conciseness of this solution arguably rivals the one in LISP. This was \
possible only because we could specify the HoldFirst attribute, which will \
actually allow the increment to be performed on the original variable rather \
than on what it would evaluate to. Let us now test it:\
\>", "Text",
 CellChangeTimes->{{3.939956778850367*^9, 3.939956788900662*^9}, 
   3.940017742767827*^9},
 CellID->688838211,ExpressionUUID->"0a11a488-2ab8-4834-bba3-32e684c0ba19"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "inc5"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inc5", "=", 
   RowBox[{"incrementByN", "[", "5", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inc5", "[", "a", "]"}], 
  ";"}], "\[IndentingNewLine]", "a"}], "Input",
 CellChangeTimes->{{3.9399567910939713`*^9, 3.939956806566352*^9}},
 CellLabel->"In[15]:=",
 CellID->749606646,ExpressionUUID->"536edd49-4e0c-451a-baba-71938cbf2c54"],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{3.9399568068951674`*^9},
 CellLabel->"Out[19]=",
 CellID->1265393935,ExpressionUUID->"5692295d-400e-4a38-8f5b-cc0daeb3cece"]
}, Open  ]],

Cell["Example: the Listable SubValues hack revisited", "ItemNumbered",
 CellChangeTimes->{3.939956889347604*^9},
 CellID->945309304,ExpressionUUID->"d047d900-77ec-4afb-806f-f03c5b08783f"],

Cell[TextData[{
 "In section ",
 ButtonBox["4.9.1.3",
  BaseStyle->"Hyperlink",
  ButtonData->"4.9.1.3"],
 ", we considered a \[OpenCurlyDoubleQuote]hack\[CloseCurlyDoubleQuote] which \
solves the listability problem for a function in which not all list arguments \
have to be threaded upon. It involved introduction of an auxiliary function \
defined through SubValues. Here we consider an alternative (equivalent) \
implementation through the pure functions, which will be more compact."
}], "Text",
 CellChangeTimes->{{3.939956897684535*^9, 3.9399569124289083`*^9}, {
  3.939956962580802*^9, 3.939956962590317*^9}},
 CellID->729451822,ExpressionUUID->"48777e08-cb6d-432d-bb67-ed07196a7785"],

Cell["\<\
I remind that the problem was for example to get the following evaluation: \
f[{1, 2}, {3, 4, 5}] -> {f[1, {3, 4, 5}], f[2, {3, 4, 5}]}. If we just give \
<f> Listable attribute, this won\[CloseCurlyQuote] t work:\
\>", "Text",
 CellChangeTimes->{{3.939956897684535*^9, 3.9399569186058617`*^9}, {
  3.940017681962431*^9, 3.940017707395122*^9}, {3.940017742786232*^9, 
  3.940017742804685*^9}},
 CellID->69177756,ExpressionUUID->"b19a910c-7ded-45e9-82ca-501bcceda4f5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"f", ",", "Listable"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.939956964642892*^9, 3.9399569783666353`*^9}},
 CellLabel->"In[20]:=",
 CellID->1730392016,ExpressionUUID->"9e4a4204-3b68-43e9-b6e0-aba3e3fe520e"],

Cell[BoxData[
 TemplateBox[{
  "Thread", "tdlen", 
   "\"Objects of unequal length in \\!\\(\\*RowBox[{\\\"f\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\) cannot be combined.\"", 
   2, 22, 1, 26588908877246977716, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.939956979446938*^9},
 CellLabel->"During evaluation of In[20]:=",
 CellID->1760868291,ExpressionUUID->"ac6fa740-4581-4f05-8617-4119aab5bd65"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.939956979464861*^9},
 CellLabel->"Out[22]=",
 CellID->441227530,ExpressionUUID->"35d5545c-75da-48af-b176-6422eec062d5"]
}, Open  ]],

Cell["The code below does the trick.", "Text",
 CellChangeTimes->{3.93995698970783*^9},
 CellID->450063619,ExpressionUUID->"6ec4992d-ebbe-49d9-ba7e-2bcc62023d74"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "halfListable", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"halfListable", "[", 
   RowBox[{"f_", ",", "x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"f", "[", 
      RowBox[{"t", ",", "y"}], "]"}], ",", 
     RowBox[{"{", "Listable", "}"}]}], "]"}], "[", "x", "]"}]}]}], "Input",
 CellChangeTimes->{{3.939956991461084*^9, 3.939957019028727*^9}},
 CellLabel->"In[23]:=",
 CellID->2076549447,ExpressionUUID->"874d2154-c7da-4dc0-84cb-d0a12ea790da"],

Cell["Check:", "Text",
 CellChangeTimes->{{3.939957023365365*^9, 3.939957024460937*^9}},
 CellID->1834435371,ExpressionUUID->"b55de759-92ce-4cc1-8618-e61a0e578d65"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"halfListable", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.939957028800849*^9, 3.9399570390097322`*^9}},
 CellLabel->"In[25]:=",
 CellID->1716657815,ExpressionUUID->"2af9c24d-fdd4-42de-8ca8-78a0505e049c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939957039758937*^9},
 CellLabel->"Out[26]=",
 CellID->547977483,ExpressionUUID->"07e20bc4-925c-4a30-b459-77f76e087312"]
}, Open  ]],

Cell["\<\
What happens is that the parameter <y> (on which the function does not have \
to be Listable), is textually substituted (recall parameter passing) into a \
pure function for which Listable attribute is given, at the moment of the \
construction of this pure function. Then, the constructed pure function is \
computed at argument <x>.\
\>", "Text",
 CellChangeTimes->{{3.939957080748258*^9, 3.939957092881291*^9}, {
   3.940017681981806*^9, 3.940017707432309*^9}, 3.940740644507184*^9},
 CellID->1447678445,ExpressionUUID->"f42d7ad5-1edf-40b6-8459-2ed0e3043648"],

Cell["\<\
You can get even fancier and write a function which takes your given function \
name, but no arguments (x, y), and creates a pure function with <f> being \
embedded, and with the above behavior.\
\>", "Text",
 CellChangeTimes->{{3.939957080748258*^9, 3.939957095799152*^9}, {
  3.940017682019011*^9, 3.940017707450573*^9}},
 CellID->820156422,ExpressionUUID->"5c9dce4b-e681-4f98-a5e9-f8634ebcd731"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "makeHalfListable", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeHalfListable", "[", "f_", "]"}], ":=", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"t", ",", 
       RowBox[{"f", "[", 
        RowBox[{"t", ",", "y"}], "]"}], ",", 
       RowBox[{"{", "Listable", "}"}]}], "]"}], "[", "x", "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.939957102405332*^9, 3.939957136149644*^9}},
 CellLabel->"In[27]:=",
 CellID->1064369427,ExpressionUUID->"3697377a-874d-4603-8e9a-41b0587a854e"],

Cell["\<\
The advantage of this solution is that no specific arguments are involved \
whatsoever: you create a brand new function from <f>, with the functionality \
you want, only once, and then can use it many times later.\
\>", "Text",
 CellChangeTimes->{{3.939957143715384*^9, 3.93995715205167*^9}, {
  3.940017682037568*^9, 3.9400177074690123`*^9}},
 CellID->1678766591,ExpressionUUID->"2d0df11f-f49f-40e9-9092-85c0fc1034e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newf", "=", 
   RowBox[{"makeHalfListable", "[", "f", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.93995715627081*^9, 3.939957159925959*^9}},
 CellLabel->"In[29]:=",
 CellID->925198732,ExpressionUUID->"057156e2-b33a-47a7-be87-a0576c0505f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newf", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.939957163694017*^9, 3.939957168040497*^9}},
 CellLabel->"In[30]:=",
 CellID->850866593,ExpressionUUID->"296cbe47-8e0c-4fd3-ae37-b69c0bbcd722"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9399571689525023`*^9},
 CellLabel->"Out[30]=",
 CellID->507737147,ExpressionUUID->"b421b440-aa01-4426-8950-cae9df34c6c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newf", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9399571705960073`*^9, 3.9399571754346857`*^9}},
 CellLabel->"In[31]:=",
 CellID->589487816,ExpressionUUID->"3bbe8da4-61f9-4a04-9e39-75dce27b6a19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"3", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.939957175879209*^9},
 CellLabel->"Out[31]=",
 CellID->703278712,ExpressionUUID->"191fb8fc-12f6-4ff7-b35a-ca285b0fff1a"]
}, Open  ]],

Cell["\<\
The possible disadvantage is the overhead induced by extra <Function> \
However, this usually is a minor one.\
\>", "Text",
 CellChangeTimes->{
  3.939957185842359*^9, {3.9400176820560493`*^9, 3.940017707487316*^9}},
 CellID->255319496,ExpressionUUID->"3c03c8ab-737a-4974-8c44-fdcc93617f6c"],

Cell["\<\
To rehabilitate the #-& notation, the functions defined with it are usually \
faster than those defined with the Function construct (my guess is that this \
has to do with the scoping overhead - Function with named variables is a \
scoping construct). They are also more compact. \
\>", "Text",
 CellChangeTimes->{{3.9399572006296043`*^9, 3.939957232278343*^9}},
 CellID->482442566,ExpressionUUID->"a6a32c14-4d9a-41e7-a200-f10e0c86e01a"],

Cell["\<\
The functions defined in the #-& notation can be nested with those defined \
with Function. We will see several examples of such mixed constructs later.\
\>", "Text",
 CellChangeTimes->{{3.9399572006296043`*^9, 3.9399572295489693`*^9}},
 CellID->1887609315,ExpressionUUID->"36681b67-3e2e-4039-9614-aba34d5cb4b1"],

Cell["\<\
To conclude our section on pure functions, let me emphasize once again that \
there is no natural mechanism for them to perform arguments checks, such as \
(restricted) patterns in the pattern-defined functions. Pure functions really \
play a different role and are used in different settings. One can get the \
most out of the pure functions when they are used within a functional \
programming style, very often as arguments of other (higher-order) functions. \
When we come to the next chapter which describes it, their usefulness will \
become much more apparent.\
\>", "Text",
 CellChangeTimes->{{3.9399572006296043`*^9, 3.939957263024078*^9}},
 CellID->35510872,ExpressionUUID->"56719e6e-9d41-4340-a99d-9000c5e1505f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions with defaults and options", "Subsection",
 CellChangeTimes->{3.939957269937166*^9},
 CellID->1893493009,ExpressionUUID->"124069d5-3ddc-4166-807a-223e852f5ff9"],

Cell[TextData[{
 "It is often needed that part of the arguments are optional in the sense \
that some of the \[OpenCurlyDoubleQuote]argument \
slots\[CloseCurlyDoubleQuote] may be either used or not, and the function has \
to do meaningful things in both cases. In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", like in many other modern languages (Python comes to mind), there are two \
mechanisms to provide this functionality: default values (for positional \
arguments), and Options (this corresponds to \[OpenCurlyDoubleQuote]named \
arguments\[CloseCurlyDoubleQuote])."
}], "Text",
 CellChangeTimes->{{3.939957279223789*^9, 3.939957303439239*^9}},
 CellID->2031688563,ExpressionUUID->"cb2d5102-98d7-45e8-b039-129c69fd6131"],

Cell[TextData[{
 "What is perhaps unusual and specific to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is that neither of these mechanisms require some new special syntax in the \
sense that it has to be added externally into the system. Rather, both of \
them exploit some features already present in the system, such as optional \
patterns (see section ",
 ButtonBox["4.2.9",
  BaseStyle->"Hyperlink",
  ButtonData->"4.2.9"],
 ") or non-commutativity of the rule substitutions (see section ",
 ButtonBox["4.2.2",
  BaseStyle->"Hyperlink",
  ButtonData->"4.2.2"],
 ".)."
}], "Text",
 CellChangeTimes->{{3.939957279223789*^9, 3.9399573244008617`*^9}, {
  3.9399573756474247`*^9, 3.939957383773981*^9}},
 CellID->1892002975,ExpressionUUID->"6f8e6898-7f58-415d-8a86-a43b1819996c"],

Cell[CellGroupData[{

Cell["Functions with defaults", "Subsubsection",
 CellChangeTimes->{3.939957394062892*^9},
 CellID->103839508,ExpressionUUID->"5a59983e-9d04-4466-bd58-4440ed488c76"],

Cell[TextData[{
 "Default arguments are those which we can leave out when calling a function, \
in which case there are some default values that the function will use for \
these arguments. The matching between missed arguments and values is based on \
the positions of the arguments in this case. In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", this mechanism is realized\nthrough optional patterns (section ",
 ButtonBox["4.2.9",
  BaseStyle->"Hyperlink",
  ButtonData->"4.2.9"],
 "). We will give just a few simple examples of such functions"
}], "Text",
 CellChangeTimes->{{3.9399574006139183`*^9, 3.9399574288809958`*^9}},
 CellID->1473889592,ExpressionUUID->"3b647f4e-51c5-43bc-862d-a07419320751"],

Cell["\<\
Here we define a function which sums all its arguments, and has the last two \
arguments optional, with default values being 1 and 2:\
\>", "Text",
 CellChangeTimes->{{3.9399574006139183`*^9, 3.939957432281582*^9}, 
   3.940017742824122*^9},
 CellID->425557258,ExpressionUUID->"f07011fc-b990-4c10-8f29-fdff4ed816d4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"y_", ":", "1"}], ",", 
    RowBox[{"z_", ":", "2"}]}], "]"}], ":=", 
  RowBox[{"x", "+", "y", "+", "z"}]}]}], "Input",
 CellChangeTimes->{{3.9399574400573263`*^9, 3.9399574523358173`*^9}},
 CellLabel->"In[32]:=",
 CellID->123580241,ExpressionUUID->"15526fb0-61a2-4571-9fd6-40f43d7fa5bd"],

Cell["Check:", "Text",
 CellChangeTimes->{{3.939957454302415*^9, 3.939957455423833*^9}},
 CellID->805693218,ExpressionUUID->"f1ca5c4c-c6d9-4092-88fd-47e6136261a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "3", ",", "5"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939957456511237*^9, 3.9399574629549837`*^9}},
 CellLabel->"In[34]:=",
 CellID->629890514,ExpressionUUID->"1f7e9d46-3949-4be8-a387-db6926050b14"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "6", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.939957463333905*^9},
 CellLabel->"Out[34]=",
 CellID->2120150406,ExpressionUUID->"0df8788d-c1a7-4e0c-b35b-6418343cd465"]
}, Open  ]],

Cell["\<\
The default patterns may be interspersed with the patterns for fixed \
arguments. The rule how the arguments are filled in is more complicated in \
this case: the pattern-matcher first determines how many optional arguments \
can be filled (from left to right), and then fills all the arguments from \
left to right, fixed and optional at the same time (not like fixed first, \
optional next). This is the consequence of the general
way of how the pattern - matcher works, but one conclusion is that it is best \
to move all optional (default) arguments at the end of the argument list, to \
have a better idea of the order in which the arguments are filled. Here is an \
illustration:\
\>", "Text",
 CellChangeTimes->{{3.939957472886242*^9, 3.9399574979776*^9}, 
   3.940017742842709*^9},
 CellID->171718971,ExpressionUUID->"a31e187d-1c13-4e48-96ae-082d64afab8c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "z", ",", "t", ",", "g"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"y_", ":", "1"}], ",", "z_", ",", 
    RowBox[{"t_", ":", "2"}]}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.939957501509981*^9, 3.939957553531437*^9}},
 CellLabel->"In[38]:=",
 CellID->2056910105,ExpressionUUID->"19ba4828-eff1-4b60-b168-cb479f0bf462"],

Cell["Check:", "Text",
 CellChangeTimes->{{3.93995751920578*^9, 3.9399575201052227`*^9}},
 CellID->807478933,ExpressionUUID->"0929d7df-b64e-440a-a516-5b8af8a21f90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", "a", "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.939957520947977*^9, 3.93995753036653*^9}},
 CellLabel->"In[40]:=",
 CellID->1933085226,ExpressionUUID->"2f52aa12-4986-4ffb-ab31-3c396c74f4f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", "a", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "b", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9399575307208853`*^9, 3.939957556602685*^9}},
 CellLabel->"Out[40]=",
 CellID->1565207721,ExpressionUUID->"0ae13c9e-82f1-4b9f-b80e-026e27049cf6"]
}, Open  ]],

Cell["\<\
That\[CloseCurlyQuote] s about all I will say for default arguments. The more \
complete treatment can be found elsewhere [6,7,9].\
\>", "Text",
 CellChangeTimes->{{3.9399575857162027`*^9, 3.939957587741737*^9}},
 CellID->1059498259,ExpressionUUID->"7448bc79-1dee-4001-aed0-2fe515c6b607"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions with options", "Subsubsection",
 CellChangeTimes->{3.939957594837543*^9},
 CellID->1139015612,ExpressionUUID->"84c7064f-ff97-4854-a65a-4924d8d7abcf"],

Cell[TextData[{
 "Options are a mechanism to implement named arguments in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". They are especially convenient for the \[OpenCurlyDoubleQuote]end\
\[CloseCurlyDoubleQuote] functions which interface with the user or \
programmer. A typical example of use of options is to manipulate the format \
of data output on the screen, or to indicate the name of the particular \
method or algorithm to be used in some numerical computation."
}], "Text",
 CellChangeTimes->{{3.939957602337175*^9, 3.939957614402059*^9}},
 CellID->766161526,ExpressionUUID->"0c4e43e0-af97-4036-846e-f3ebee9201a5"],

Cell["\<\
The options mechanism is an example of use of the non-commutativity of rules \
application. We will illustrate this in detail on one particular model \
example.\
\>", "Text",
 CellChangeTimes->{{3.939957602337175*^9, 3.939957620352604*^9}},
 CellID->1937232308,ExpressionUUID->"bb373c0f-9e8c-4de1-b6cd-3b6de9b1799a"],

Cell["Example: selecting and printing prime numbers", "ItemNumbered",
 CellChangeTimes->{{3.939957627243679*^9, 3.939957630360951*^9}},
 CellID->1962372648,ExpressionUUID->"286eac7b-c2fe-492f-95b0-b40e75f622a2"],

Cell[TextData[StyleBox["The problem and the solution",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.939957638412751*^9, 3.939957644089868*^9}},
 CellID->543244310,ExpressionUUID->"ba1fe1dc-295e-4e18-84e2-f81eae893bb7"],

Cell["\<\
Our task here will be to select and print prime numbers contained in a given \
list of numbers. The option will be responsible for the number of primes \
which have to be printed. But first, let us write a function which will \
display all the numbers found:\
\>", "Text",
 CellChangeTimes->{{3.939957638412751*^9, 3.939957650891315*^9}},
 CellID->1907327353,ExpressionUUID->"88df31d1-3488-4b22-9467-a1d2e34280c6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "findPrimes", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"findPrimes", "[", "x_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "res", "}"}], ",", 
     RowBox[{
      RowBox[{"res", "=", 
       RowBox[{"Cases", "[", 
        RowBox[{"x", ",", 
         RowBox[{"_", "?", "PrimeQ"}]}], "]"}]}], ";", 
      RowBox[{"Print", "[", "res", "]"}], ";", "res"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.939957656325944*^9, 3.939957695715393*^9}},
 CellLabel->"In[41]:=",
 CellID->160316800,ExpressionUUID->"e8470219-f699-47f8-b96a-8ed227522318"],

Cell["\<\
Note that this function not only returns a list of all the numbers found, but \
also prints this list.\
\>", "Text",
 CellChangeTimes->{3.9399577047674437`*^9},
 CellID->1465646732,ExpressionUUID->"39257aaa-4f67-4979-b774-ebcfd0f47f24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findPrimes", "[", 
  RowBox[{"Range", "[", "50", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.939957706786278*^9, 3.939957710468789*^9}},
 CellLabel->"In[43]:=",
 CellID->701239205,ExpressionUUID->"743e4d44-ee09-4693-a29d-8b3006502059"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
   "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", 
   ",", "47"}], "}"}]], "Print",
 CellChangeTimes->{3.939957710797464*^9},
 CellLabel->"During evaluation of In[43]:=",
 CellID->257526558,ExpressionUUID->"cbcfcc0f-6d0f-4d93-829d-f182dcebc441"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
   "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", 
   ",", "47"}], "}"}]], "Output",
 CellChangeTimes->{3.939957710818266*^9},
 CellLabel->"Out[43]=",
 CellID->1069311601,ExpressionUUID->"45b09dc6-d7a4-4c61-8d4f-a2550e91aed3"]
}, Open  ]],

Cell["\<\
We can block the output with the semicolon, but the printing will of course \
still happen:\
\>", "Text",
 CellChangeTimes->{3.939957745968752*^9, 3.940017742861355*^9},
 CellID->1859559276,ExpressionUUID->"a123b44a-a796-4447-8520-07244a3abac3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"findPrimes", "[", 
   RowBox[{"Range", "[", "50", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.939957755744182*^9},
 CellLabel->"In[44]:=",
 CellID->1283236941,ExpressionUUID->"d8832562-6921-4053-baf5-df5dca74f68f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
   "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", 
   ",", "47"}], "}"}]], "Print",
 CellChangeTimes->{3.9399577560500603`*^9},
 CellLabel->"During evaluation of In[44]:=",
 CellID->3892930,ExpressionUUID->"1079d230-7071-471c-a9d1-9c8ff2af5d91"]
}, Open  ]],

Cell["\<\
Now, we want to include an option to print no more than the first <n> \
numbers, and say the default option will be <n> = 10. This is how the code \
will look like:\
\>", "Text",
 CellChangeTimes->{{3.9399577664361763`*^9, 3.93995777089478*^9}, {
   3.940017682074724*^9, 3.940017707524122*^9}, 3.940017742879861*^9},
 CellID->1003965100,ExpressionUUID->"c8100ab9-332c-4fe4-92d9-01a8c3918e6d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"findPrimes", ",", "DisplayN"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"findPrimes", "[", 
    RowBox[{"x_List", ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", ",", "printnumber", ",", "printres"}], "}"}], ",", 
     RowBox[{
      RowBox[{"printnumber", "=", 
       RowBox[{
        RowBox[{"DisplayN", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "opts", "}"}], "]"}]}], "/.", 
        RowBox[{"DisplayN", "->", "10"}]}]}], ";", 
      RowBox[{"res", "=", 
       RowBox[{"Cases", "[", 
        RowBox[{"x", ",", 
         RowBox[{"_", "?", "PrimeQ"}]}], "]"}]}], ";", 
      RowBox[{"printres", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "res", "]"}], "<=", "printnumber"}], ",", 
         "res", ",", 
         RowBox[{"Take", "[", 
          RowBox[{"res", ",", "printnumber"}], "]"}]}], "]"}]}], ";", 
      RowBox[{"Print", "[", "printres", "]"}], ";", "res"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.940014266347188*^9, 3.9400143613775797`*^9}},
 CellLabel->"In[45]:=",
 CellID->1594555138,ExpressionUUID->"60ab47ff-b8b8-419e-b80a-5a2aee6cc856"],

Cell["\<\
Let us first check that it works correctly, and then dissect the code to \
understand how it works. First, we will not explicitly use an option:\
\>", "Text",
 CellChangeTimes->{{3.940014369677808*^9, 3.9400143712946043`*^9}},
 CellID->1808681414,ExpressionUUID->"c10a2242-9e4e-4db0-bdc9-980bc029d0b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findPrimes", "[", 
  RowBox[{"Range", "[", "50", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.94001437528837*^9, 3.940014378595335*^9}},
 CellLabel->"In[47]:=",
 CellID->1231878828,ExpressionUUID->"70fa14f3-08e2-4c50-8b1c-7bb5bcb08c97"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
   "19", ",", "23", ",", "29"}], "}"}]], "Print",
 CellChangeTimes->{3.940014379283968*^9},
 CellLabel->"During evaluation of In[47]:=",
 CellID->1049684086,ExpressionUUID->"51fc514b-2bee-46e1-8bcf-99dc290ecf78"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
   "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", 
   ",", "47"}], "}"}]], "Output",
 CellChangeTimes->{3.940014379304974*^9},
 CellLabel->"Out[47]=",
 CellID->462273297,ExpressionUUID->"ff6b3619-c63f-47bb-9453-9399f0a20b70"]
}, Open  ]],

Cell["\<\
We see that 10 numbers were printed. Note that the result of the function \
execution is still a list of all primes found - our option only affects the \
printing. Let us now explicitly define an option - say we want to output only \
the first 5 numbers:\
\>", "Text",
 CellChangeTimes->{{3.940014407383342*^9, 3.940014414268898*^9}, 
   3.940017742898457*^9},
 CellID->1978951480,ExpressionUUID->"d43d5339-4264-44d5-8a50-7c00feed3b21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findPrimes", "[", 
  RowBox[{
   RowBox[{"Range", "[", "50", "]"}], ",", 
   RowBox[{"DisplayN", "->", "5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.94001441593851*^9, 3.940014422292982*^9}},
 CellLabel->"In[48]:=",
 CellID->799089861,ExpressionUUID->"81aa892b-487d-46e8-bdba-3462681c25c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "5", ",", "7", ",", "11"}], "}"}]], "Print",
 CellChangeTimes->{3.940014422768821*^9},
 CellLabel->"During evaluation of In[48]:=",
 CellID->1935710702,ExpressionUUID->"273f5edd-f737-4556-aef6-04a6ec592c1f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
   "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", 
   ",", "47"}], "}"}]], "Output",
 CellChangeTimes->{3.9400144227902184`*^9},
 CellLabel->"Out[48]=",
 CellID->1260000111,ExpressionUUID->"e107e08c-6189-45c8-aa66-67f921fe3bfc"]
}, Open  ]],

Cell[TextData[StyleBox["Code dissection",
 FontWeight->"Bold",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.940014434257967*^9, 3.940014442176602*^9}},
 CellID->485622510,ExpressionUUID->"8537ad92-dc68-466c-a721-0e862c627fbc"],

Cell[TextData[{
 "Now, let us dissect the code. The main line which is at the heart of the \
options mechanism, is this one: ",
 StyleBox["printnumber = DisplayN /. Flatten[{opts}] /. DisplayN ->10",
  FontWeight->"Bold"],
 "; What happens here is the following:"
}], "Text",
 CellChangeTimes->{{3.940014434257967*^9, 3.940014467233972*^9}},
 CellID->287141639,ExpressionUUID->"2a8861b5-5d88-4a8e-bb2b-cb95e0135819"],

Cell["\<\
1. The name of the option itself - <DisplayN> - does not and should not have \
any value. It is important to note here that all options are defined as some \
rule. In this case, the rule is: everywhere where the literal <DisplayN> is \
encountered, replace it by some number, say 10 (or 5 or whatever).\
\>", "Text",
 CellChangeTimes->{{3.940014434257967*^9, 3.940014498245962*^9}},
 CellID->1031961314,ExpressionUUID->"104cfe1a-d819-4e02-91ff-71eacca76b02"],

Cell["\<\
2. The variable <opts> in the pattern is a pattern tag with the \
BlankNullSequence (triple underscore), which means that the entire function \
pattern will work even if nothing will be entered for the second argument - \
<opts>. This is why we call it options, and our function worked in the first \
of the two cases above.\
\>", "Text",
 CellChangeTimes->{{3.940014434257967*^9, 3.9400145145376797`*^9}, {
   3.940017682111817*^9, 3.940017707542512*^9}, 3.940740644526408*^9},
 CellID->807479854,ExpressionUUID->"81619ea2-4382-441e-9044-ae3fa0104a39"],

Cell["\<\
3. A built-in predicate OptionQ checks that <opts> is a rule or a list of \
rules, and not something else. In particular, the following input will not \
evaluate:\
\>", "Text",
 CellChangeTimes->{{3.940014434257967*^9, 3.940014522329267*^9}, {
   3.9400176821303453`*^9, 3.940017707560719*^9}, 3.940017742916978*^9},
 CellID->1735521531,ExpressionUUID->"f47f2163-af48-4f89-a856-08e2418d4a17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findPrimes", "[", 
  RowBox[{
   RowBox[{"Range", "[", "50", "]"}], ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.940014531815184*^9, 3.9400145378868227`*^9}},
 CellLabel->"In[49]:=",
 CellID->1304966428,ExpressionUUID->"d379f309-0d45-4e48-82bf-e461ba8f0d47"],

Cell[BoxData[
 RowBox[{"findPrimes", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
     "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", 
     ",", "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", 
     "28", ",", "29", ",", "30", ",", "31", ",", "32", ",", "33", ",", "34", 
     ",", "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", "40", ",", 
     "41", ",", "42", ",", "43", ",", "44", ",", "45", ",", "46", ",", "47", 
     ",", "48", ",", "49", ",", "50"}], "}"}], ",", "5"}], "]"}]], "Output",
 CellChangeTimes->{3.940014538417878*^9},
 CellLabel->"Out[49]=",
 CellID->637690881,ExpressionUUID->"8b517af3-9983-43fb-98be-50b848cdee0a"]
}, Open  ]],

Cell["\<\
4. The operation Flatten[{opts}] is needed because in more complicated cases \
options may represent nested lists of rules. But the rule replacement command \
ReplaceAll ( /. ) works the way we want it here only with simple (not nested) \
lists of rules. Thus, an additional list structure, if present, has to be \
destroyed. Flatten is used to do this.\
\>", "Text",
 CellChangeTimes->{{3.9400145490758667`*^9, 3.940014559090232*^9}},
 CellID->1727238437,ExpressionUUID->"47d7feb7-44c6-4b10-b678-208905207437"],

Cell["\<\
5. Now we come to the essence: suppose that among the options passed to our \
function through the <opts> argument, is an option related to DisplayN \
literal. For example, in our case we used DisplayN->5. Therefore, \
Flatten[{opts}] gives {DisplayN->5}. Then, in the expression DisplayN /. \
Flatten[{opts}] the rule will apply, and as a result, this expression will be \
replaced by 5. Then, since the rules are applied from the left to the right \
(left-associatively), the last rule in the chain will look like \
5/.DisplayN->10. But since the literal <DisplayN> is no longer present in our \
transformed object (5), the rule will not apply and then the whole expression \
DisplayN /. Flatten[{opts}]/.DisplayN->10 will be equal to 5, and this number \
will
be assigned to the variable <printnumber>, which really controls the number \
of printed primes. \
\>", "Text",
 CellChangeTimes->{{3.9400145490758667`*^9, 3.940014590423807*^9}},
 CellID->1632350730,ExpressionUUID->"6be8d404-9824-44f7-b7bd-27e191e63337"],

Cell["\<\
If, however, there will be no option with the DisplayN literal, then the \
literal DisplayN will \[OpenCurlyDoubleQuote]reach\[CloseCurlyDoubleQuote] \
the last rule /.DisplayN->10 without change, so then this rule will apply and \
the variable <printnumber> will receive the value 10.\
\>", "Text",
 CellChangeTimes->{{3.9400145490758667`*^9, 3.940014594407749*^9}},
 CellID->255716432,ExpressionUUID->"9cd2135e-1cdf-4e41-ba1c-a3c129f560b6"],

Cell["Option names", "ItemNumbered",
 CellChangeTimes->{3.940016203497023*^9},
 CellID->2130141224,ExpressionUUID->"c1490da1-1400-48b9-8687-31a90f912cde"],

Cell["\<\
If you decide to set up some options for a function you are writing, it may \
be a good idea to Protect the associated option name. Because, as it is clear \
from the discussion above, the option mechanism will be immediately broken if \
the option name accidentally gets some value. In fact, the bugs associated \
with this are sometimes very hard to catch.\
\>", "Text",
 CellChangeTimes->{{3.940016210050497*^9, 3.9400162183093977`*^9}},
 CellID->583672631,ExpressionUUID->"4c895ab7-9bd7-49fc-81e6-1152b07cd1f5"],

Cell["Passing options to other functions", "ItemNumbered",
 CellChangeTimes->{3.9400162297049417`*^9},
 CellID->785411484,ExpressionUUID->"fc7b2e72-df76-4224-bea0-f0d2ec90c302"],

Cell["\<\
If a function receives some options, and then calls another function which \
also uses options, then the calling one can pass the options it received (or \
some of them) to the called one - this transfer does not require any changes \
in the base mechanism of options. On the other hand, the possibility of \
options passing makes it possible to have a very flexible control over the \
program.\
\>", "Text",
 CellChangeTimes->{{3.940016238611434*^9, 3.9400162552194033`*^9}},
 CellID->1976317126,ExpressionUUID->"e716d42d-b57b-48c2-ac69-5fdcae6d54c3"],

Cell["\<\
To illustrate option passing, let us reformulate our previous problem \
somewhat. We will now have two options: one tells whether or not to print the \
result - call it <printOption>, and another one will instruct how many primes \
to look for (previously we were collecting all) - call it <searchNumber>. \
Also, we will now package the search as a separate function, which we will \
call findPrimes, and the main (calling) function we will call showPrimes. The \
variable corresponding to the searchNumber option call <snumber>.\
\>", "Text",
 CellChangeTimes->{{3.940016238611434*^9, 3.940016281245941*^9}, 
   3.9400177429356337`*^9},
 CellID->1288035659,ExpressionUUID->"f48b0011-ceaa-4104-be94-1668ebd89f4d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"findPrimes", ",", "printOption", ",", " ", "showPrimes"}], "]"}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"findPrimes", "[", 
     RowBox[{"x_List", ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "snumber", "}"}], ",", 
      RowBox[{
       RowBox[{"snumber", "=", 
        RowBox[{
         RowBox[{"searchNumber", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "opts", "}"}], "]"}]}], "/.", 
         RowBox[{"searchNumber", "->", "10"}]}]}], ";", 
       RowBox[{"Cases", "[", 
        RowBox[{"x", ",", 
         RowBox[{"_", "?", "PrimeQ"}], ",", "1", ",", "snumber"}], "]"}]}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"showPrimes", "[", 
    RowBox[{"x_List", ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", ",", "printq"}], "}"}], ",", 
     RowBox[{
      RowBox[{"printq", "=", 
       RowBox[{
        RowBox[{"printOption", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "opts", "}"}], "]"}]}], "/.", 
        RowBox[{"printOption", "->", "True"}]}]}], ";", 
      RowBox[{"res", "=", 
       RowBox[{"findPrimes", "[", 
        RowBox[{"x", ",", "opts"}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{"printq", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<This is the printed result:  \>\"", ",", "res"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", "res"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.940016307266572*^9, 3.940016432437731*^9}},
 CellLabel->"In[50]:=",
 CellID->1606515786,ExpressionUUID->"0089906b-15df-4eb4-b91b-69f7b91e0228"],

Cell["Check now:", "Text",
 CellChangeTimes->{{3.940016435767872*^9, 3.9400164395612307`*^9}},
 CellID->1809091476,ExpressionUUID->"f236337a-69eb-4e0e-a48d-308653d9cadb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showPrimes", "[", 
  RowBox[{"Range", "[", "50", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.940016444095035*^9, 3.9400164515326347`*^9}},
 CellLabel->"In[53]:=",
 CellID->1284613140,ExpressionUUID->"6ba23798-e45c-4405-a7e7-4d9a602de6ed"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"This is the printed result:  \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
     "19", ",", "23", ",", "29"}], "}"}]}],
  SequenceForm[
  "This is the printed result:  ", {2, 3, 5, 7, 11, 13, 17, 19, 23, 29}],
  Editable->False]], "Print",
 CellChangeTimes->{3.940016452039917*^9},
 CellLabel->"During evaluation of In[53]:=",
 CellID->135079271,ExpressionUUID->"4a109f06-3120-431f-92e6-a69cdb796c18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
   "19", ",", "23", ",", "29"}], "}"}]], "Output",
 CellChangeTimes->{3.940016452062545*^9},
 CellLabel->"Out[53]=",
 CellID->387092818,ExpressionUUID->"36411a8d-e090-4877-84e9-912d26c91edf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showPrimes", "[", 
  RowBox[{
   RowBox[{"Range", "[", "50", "]"}], ",", 
   RowBox[{"searchNumber", "->", "5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940016507006797*^9, 3.940016516482312*^9}},
 CellLabel->"In[54]:=",
 CellID->184308231,ExpressionUUID->"9f3a7044-d09a-4e9f-9fd3-07cf0e21d505"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"This is the printed result:  \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "7", ",", "11"}], "}"}]}],
  SequenceForm["This is the printed result:  ", {2, 3, 5, 7, 11}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9400165169151287`*^9},
 CellLabel->"During evaluation of In[54]:=",
 CellID->1954209620,ExpressionUUID->"070253fd-f506-4113-8794-3a243c236ab9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "5", ",", "7", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{3.940016516935587*^9},
 CellLabel->"Out[54]=",
 CellID->786186122,ExpressionUUID->"1dc4a9ee-4bb4-4f7d-9c1f-33d015a50ed6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showPrimes", "[", 
  RowBox[{
   RowBox[{"Range", "[", "50", "]"}], ",", 
   RowBox[{"searchNumber", "->", "5"}], ",", 
   RowBox[{"printOption", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940016520103656*^9, 3.940016533083858*^9}},
 CellLabel->"In[55]:=",
 CellID->1195575977,ExpressionUUID->"c6e9a87f-94e3-439d-ba25-3bdb223dffc9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "5", ",", "7", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{3.940016534119626*^9},
 CellLabel->"Out[55]=",
 CellID->1300085824,ExpressionUUID->"9fe86546-13fb-4522-a938-3f2734b217a1"]
}, Open  ]],

Cell["\<\
We see that our function became very flexible. The point is that using \
options, we can alter the execution of more than one function, and this \
happens automatically (when the program is written correctly). It is easy to \
see what happens when we pass options in a \[OpenCurlyDoubleQuote]cascading\
\[CloseCurlyDoubleQuote] way. Even if every option can only be True or False, \
we have the total number of possible scenarios equal to 2^(number of \
options). And because the options are passed to auxiliary functions, we \
relegate the corresponding decisions to be made inside those auxiliary \
functions rather than one big main function - dispatcher. Thus, we take this \
load off the main function, which leads to a better program design.\
\>", "Text",
 CellChangeTimes->{{3.9400165452186813`*^9, 3.9400165645590353`*^9}},
 CellID->385956230,ExpressionUUID->"e85600e0-3141-4575-9aec-5bd553f9aa24"],

Cell["Filtering options", "ItemNumbered",
 CellChangeTimes->{3.940016594178575*^9},
 CellID->1395672107,ExpressionUUID->"63ff2522-96fd-433e-8b09-21a36e7fda36"],

Cell["\<\
To cleanly implement this procedure however, we need to ensure that each \
function only receives the options that it understands (well, in principle \
nothing bad happens when the option is not understood by a given function - \
it is then just ignored, since it does not trigger any rule, but it is \
considered a better programming style not to send foreign options to \
functions. Besides, the built-in functions will issue error messages and \
return unevaluated if some unknown options are passed to them). There is \
another mechanism called filtering options, which is designed to do just \
that. This mechanism is beyond the scope of our discussion, but is is \
described in many places [2,6,7,9]. Let me just mention that in the version 6 \
there are several new functions such as FilterRules which are specially \
designed to simplify filtering options.\
\>", "Text",
 CellChangeTimes->{{3.940016602085113*^9, 3.940016616910256*^9}, {
  3.94001704776888*^9, 3.9400170506148443`*^9}},
 CellID->97226168,ExpressionUUID->"99a4ee0a-18fa-41ab-9efb-12e8ca561a37"],

Cell["Advanced topic: globally defined defaults for options", "ItemNumbered",
 CellChangeTimes->{3.940017062062705*^9},
 CellID->889870181,ExpressionUUID->"be73fccb-dafa-44d2-a5b8-86cabebc7577"],

Cell["\<\
As an alternative to explicitly indicating all default option values in the \
function itself (\[OpenCurlyDoubleQuote]hard-coding\[CloseCurlyDoubleQuote] \
them), options for a function can be defined globally, with the help of \
Options built-in function. For example, here we define an option Heads -> \
True, plus some other option, for some symbol (function) <f>:\
\>", "Text",
 CellChangeTimes->{{3.940017103911789*^9, 3.940017114858616*^9}, {
   3.940017682148861*^9, 3.9400176911563807`*^9}, 3.940017742954482*^9},
 CellID->1774374545,ExpressionUUID->"f913eb3b-2fa5-4956-9f7c-75a398ef2173"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Options", "[", "f", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Heads", "->", "True"}], ",", 
    RowBox[{"anotherOption", "->", "someValue"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.940017126276128*^9, 3.9400171478869743`*^9}},
 CellLabel->"In[56]:=",
 CellID->1018175122,ExpressionUUID->"200c82dc-8d97-418b-9758-69ab956879b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Heads", "\[Rule]", "True"}], ",", 
   RowBox[{"anotherOption", "\[Rule]", "someValue"}]}], "}"}]], "Output",
 CellChangeTimes->{3.940017148889142*^9},
 CellLabel->"Out[57]=",
 CellID->1729072078,ExpressionUUID->"a42d6df0-8333-4676-b39d-d96d21e038ef"]
}, Open  ]],

Cell["\<\
The Options command can also be used to monitor which options are known to \
the system for a given function, and their default values. Basically, \
Options[function] is a container to keep function\[CloseCurlyQuote] s options \
and their default settings:\
\>", "Text",
 CellChangeTimes->{{3.940017158675601*^9, 3.940017167343421*^9}},
 CellID->765703742,ExpressionUUID->"7cce2e88-65d0-49cc-8787-38472821a0ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Options", "[", "f", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Heads", "->", "True"}], ",", 
    RowBox[{"anotherOption", "->", "someValue"}]}], "}"}]}]], "Input",
 CellLabel->"In[58]:=",
 CellID->1452527662,ExpressionUUID->"1f9aa726-86e3-4458-a8b6-e431f95915a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Heads", "\[Rule]", "True"}], ",", 
   RowBox[{"anotherOption", "\[Rule]", "someValue"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9400171734896183`*^9},
 CellLabel->"Out[58]=",
 CellID->91715422,ExpressionUUID->"279cceec-3a5c-4c33-a705-b942d0ecfbcc"]
}, Open  ]],

Cell["\<\
If one needs to modify the default value of some of the known (to the system) \
options of a given function, one can use SetOptions command. This way it is \
not necessary to retype all the options which do not change:\
\>", "Text",
 CellChangeTimes->{{3.94001718177571*^9, 3.940017185753607*^9}},
 CellID->2127218786,ExpressionUUID->"bf247494-8565-4119-a832-a03fa3708d75"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"f", ",", 
    RowBox[{"anotherOption", "->", "differentValue"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Options", "[", "f", "]"}]}], "Input",
 CellChangeTimes->{{3.9400171872313433`*^9, 3.940017200017077*^9}},
 CellLabel->"In[59]:=",
 CellID->1627623953,ExpressionUUID->"a84f5f06-095e-4f8c-889e-6e927e27e4e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Heads", "\[Rule]", "True"}], ",", 
   RowBox[{"anotherOption", "\[Rule]", "differentValue"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.940017200514419*^9},
 CellLabel->"Out[60]=",
 CellID->1783670848,ExpressionUUID->"ef9e217e-e28c-4965-9907-1e8277aaecdb"]
}, Open  ]],

Cell["\<\
This however will not work if the option is not known to the system:\
\>", "Text",
 CellChangeTimes->{3.940017209032586*^9, 3.940017742973093*^9},
 CellID->1192314957,ExpressionUUID->"ec9b6760-fbec-4199-a8e1-345ffe29a44f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{"f", ",", 
   RowBox[{"thirdOption", "->", "itsValue"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.940017212581863*^9, 3.940017220257845*^9}},
 CellLabel->"In[61]:=",
 CellID->459119909,ExpressionUUID->"ec4ae2ba-5095-4600-8246-35a9522d6a20"],

Cell[BoxData[
 TemplateBox[{
  "SetOptions", "optnf", 
   "\"\\!\\(\\*RowBox[{\\\"thirdOption\\\"}]\\) is not a known option for \\!\
\\(\\*RowBox[{\\\"f\\\"}]\\).\"", 2, 61, 2, 26588908877246977716, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.94001722065342*^9},
 CellLabel->"During evaluation of In[61]:=",
 CellID->1542794144,ExpressionUUID->"0d0aeb50-d20a-421e-af37-52ea0738aba0"],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{"f", ",", 
   RowBox[{"thirdOption", "\[Rule]", "itsValue"}]}], "]"}]], "Output",
 CellChangeTimes->{3.94001722067725*^9},
 CellLabel->"Out[61]=",
 CellID->1023624330,ExpressionUUID->"4bd557ac-3b3b-4889-b37b-de111a3e30a4"]
}, Open  ]],

Cell["\<\
The option has to be known to the system before SetOptions can be used with \
it.\
\>", "Text",
 CellChangeTimes->{{3.9400172306639214`*^9, 3.940017235370962*^9}},
 CellID->1452396913,ExpressionUUID->"c281149b-b111-4175-8660-caed86ad9c73"],

Cell["\<\
For built-in functions, it is anyway a mistake to introduce unknown options, \
but for user-defined ones it makes perfect sense - at the end, we have to \
define the global defaults (if we decide to use them) at some point! When one \
decides to use the global defaults through Options (and this has advantages \
we will discuss in a moment), then normally one sets all the option defaults \
at once with a single statement Options[function] = {option1 -> default1,..., \
optionk -> defaultk}. Adding new options at run-time is a bad idea in most \
cases, and also not possible if the function gets Protected. \
\>", "Text",
 CellChangeTimes->{{3.9400172306639214`*^9, 3.9400172700821457`*^9}, 
   3.9400173253124237`*^9, 3.9407406445471573`*^9},
 CellID->864226110,ExpressionUUID->"23b47612-ae3c-4410-b6e5-48cacd554b88"],

Cell["\<\
So, why this mechanism is any better than the one where defaults are \
\[OpenCurlyDoubleQuote]hard-coded\[CloseCurlyDoubleQuote] into a body of the \
function? Primarily, for a better code readability and maintenance. Usually, \
globally defined defaults are used when writing packages, and then all the \
defaults for all options for package functions are usually defined in the \
beginning of the package and can be easily inspected and changed later on. \
Also, it is often convenient if the options of a given function (in their \
current state) have to be either inspected or passed to another function \
(possibly after having been filtered). It is hard to imagine how one could do \
it without this mechanism, given that the calling function which passes them \
may be not the one whose options are being passed.\
\>", "Text",
 CellChangeTimes->{{3.9400172306639214`*^9, 3.940017283934808*^9}},
 CellID->1081421755,ExpressionUUID->"193b4847-6444-4f58-ba08-fb11269c06c7"],

Cell["\<\
The possible danger of this mechanism is that one may redefine the default \
values for function\[CloseCurlyQuote] s options at some point in the program, \
and then this function used after that point will use the new defaults in all \
places where it is called. I would not recommend resetting function\
\[CloseCurlyQuote] s options (especially for built-ins) globally if your \
program will be used by other people. It is always possible to just simply \
call the function of interest with needed option values passed to it \
explicitly, or, if it has to be called many times or you want to hide the \
implementation details, write a wrapper package where you can define your own \
function like this - this is safer.\
\>", "Text",
 CellChangeTimes->{{3.940017345395749*^9, 3.940017370555037*^9}},
 CellID->783877448,ExpressionUUID->"ee6040fe-8d66-4a9c-8e3c-731649a67bb9"],

Cell["\<\
This has also implications for writing packages: for all (especially \
built-in) functions used, always pass explicitly all the options they have \
with the values you need, even if these values are system defaults - the user \
of your package may have redefined the defaults before loading your package.\
\>", "Text",
 CellChangeTimes->{{3.940017345395749*^9, 3.9400173811447353`*^9}},
 CellID->1709354917,ExpressionUUID->"2da42291-8a69-4ae8-955d-47ae0e66dab7"],

Cell["\<\
Returning to the semantics of options, the above mechanism converts the idiom \
<optionvar = OptionName /. Flatten[{opts} /. OptionName -> DefValue> to \
<optionvar = OptionName /. Flatten[{opts} /.Options[thisFunction]>. Because \
of this, if you still decide to change options globally, I would not \
recommend assignments such as Option[function] = {list of options} (as those \
described above), for the following reason: with this assignment (unlike when \
you use SetOptions), you have to be careful to list all the options with \
their current defaults, not just those that you are currently changing. But \
if you miss some, this may result in a \[OpenCurlyDoubleQuote]dangling\
\[CloseCurlyDoubleQuote] variable <optionvar> for the option(s) you miss: say \
you have a line of code
Module[{...,optionvar = ourOption /. Flatten[{opts} /.Options[thisFunction]}, \
body]. If you accidentally delete the rule for <ourOption> as a result of \
manipulations with Options[yourfunction], and pass no explicit value for this \
option through <opts> either, the <optionvar> variable will be initialized \
with a literal <ourOption>, rather than the value. Using SetOptions is much \
safer.\
\>", "Text",
 CellChangeTimes->{{3.940017345395749*^9, 3.9400174115341253`*^9}},
 CellID->95798786,ExpressionUUID->"0c7baac0-c4a4-4089-bfa7-f57588fccf29"],

Cell["\<\
In fact, if the symbol of your function is protected (has a protected \
attribute), the system will automatically forbid assignments \
Options[function] =...:\
\>", "Text",
 CellChangeTimes->{{3.940017345395749*^9, 3.9400174139257507`*^9}, 
   3.940017742992509*^9, 3.940740644566022*^9},
 CellID->468127010,ExpressionUUID->"05864cd2-288f-4156-9a90-fbe6211cca78"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "g", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "g", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"firstOption", "->", "value1"}], ",", 
     RowBox[{"secondOption", "->", "value2"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", "g", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.940017421538591*^9, 3.9400174474067097`*^9}},
 CellLabel->"In[62]:=",
 CellID->470830510,ExpressionUUID->"f392f838-6546-4956-968e-386162795f0d"],

Cell["We try now:", "Text",
 CellChangeTimes->{{3.940017450122225*^9, 3.94001745190665*^9}},
 CellID->1380295544,ExpressionUUID->"cca8768d-8457-4c9e-b98c-d200952e3974"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.940017452870728*^9, 3.940017454032638*^9}},
 CellLabel->"In[65]:=",
 CellID->1109096680,ExpressionUUID->"4d904228-f3d0-4b9d-9648-50e00428583e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"firstOption", "\[Rule]", "value1"}], ",", 
   RowBox[{"secondOption", "\[Rule]", "value2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.940017454453368*^9},
 CellLabel->"Out[65]=",
 CellID->1714149669,ExpressionUUID->"7396bf03-3433-4176-9e3a-cc6b9bdb3a50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Options", "[", "g", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{"thirdOption", "->", "value3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.940017459605619*^9, 3.940017469443849*^9}},
 CellLabel->"In[66]:=",
 CellID->14174549,ExpressionUUID->"2db5a1fd-aab0-4c60-8585-d7f9d37d9e89"],

Cell[BoxData[
 TemplateBox[{
  "Set", "write", 
   "\"Tag \\!\\(\\*RowBox[{\\\"g\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Options\\\", \\\"[\\\", \\\"g\\\", \\\"]\\\"}]\\) is \
Protected.\"", 2, 66, 3, 26588908877246977716, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.940017470320715*^9},
 CellLabel->"During evaluation of In[66]:=",
 CellID->943377095,ExpressionUUID->"0f0e520f-7480-494a-aedf-416e7336e93b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thirdOption", "\[Rule]", "value3"}], "}"}]], "Output",
 CellChangeTimes->{3.940017470337967*^9},
 CellLabel->"Out[66]=",
 CellID->467069864,ExpressionUUID->"71f9c5b5-cc10-44db-9fd4-3b22f57f6377"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.940017486093504*^9, 3.940017487605201*^9}},
 CellLabel->"In[67]:=",
 CellID->1690606650,ExpressionUUID->"ed53920d-a3b5-4b85-b4ca-dda7982752e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"firstOption", "\[Rule]", "value1"}], ",", 
   RowBox[{"secondOption", "\[Rule]", "value2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.940017488425642*^9},
 CellLabel->"Out[67]=",
 CellID->1582605766,ExpressionUUID->"1b7744f5-3cf5-4e5d-8bcc-636daa129772"]
}, Open  ]],

Cell["\<\
If you went so far as to define global option defaults for your function, it \
probably then makes sense to Protect it, so that option changes will only be \
possible through the SetOptions route. I remind however that the Attributes \
of protected functions can still be modified.\
\>", "Text",
 CellChangeTimes->{{3.940017496203269*^9, 3.940017503396956*^9}},
 CellID->122657420,ExpressionUUID->"a1c82a68-34d4-4bf8-a227-c94c522ce19a"],

Cell["\<\
As we have noted before, Clear will not clear options associated with the \
symbol:\
\>", "Text",
 CellChangeTimes->{{3.940017496203269*^9, 3.940017502214389*^9}},
 CellID->1721217062,ExpressionUUID->"58285084-3fef-4562-9037-49d813b1c647"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Options", "[", "f", "]"}]}], "Input",
 CellChangeTimes->{{3.940017508749002*^9, 3.9400175130900583`*^9}},
 CellLabel->"In[68]:=",
 CellID->536353443,ExpressionUUID->"24ec23f6-f8d3-48c2-a6bb-b46e80ed0c82"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Heads", "\[Rule]", "True"}], ",", 
   RowBox[{"anotherOption", "\[Rule]", "differentValue"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.940017513625692*^9},
 CellLabel->"Out[69]=",
 CellID->1702816662,ExpressionUUID->"2948769f-571a-4550-a2f8-b2af13c57c2b"]
}, Open  ]],

Cell["You have to use ClearAll to remove option defaults:", "Text",
 CellChangeTimes->{3.940017520253755*^9, 3.940017743011904*^9},
 CellID->1872558312,ExpressionUUID->"3f71385d-a505-47f4-8737-17e64ca4cff5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Options", "[", "f", "]"}]}], "Input",
 CellChangeTimes->{{3.940017521621728*^9, 3.940017526847587*^9}},
 CellLabel->"In[70]:=",
 CellID->1137266522,ExpressionUUID->"f20e17ce-bdfc-4e6c-9fd2-088c49d7c798"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.940017527258481*^9},
 CellLabel->"Out[71]=",
 CellID->1983131595,ExpressionUUID->"45c550a9-f275-430d-8861-181f85efe4ad"]
}, Open  ]],

Cell["\<\
To clear definitions associates with a Protected symbol, you have first to \
Unprotect it.\
\>", "Text",
 CellChangeTimes->{3.940017534020488*^9},
 CellID->1546515725,ExpressionUUID->"4dacbf82-fc72-4cbd-9b04-ceeb2758540f"],

Cell["\<\
To summarize: functions with options enhance the flexibility and versatility \
of functions you are writing (and built-ins as well, of course).\
\>", "Text",
 CellChangeTimes->{{3.940017542701487*^9, 3.9400175450569563`*^9}},
 CellID->1615536414,ExpressionUUID->"c48301b2-5a1b-497f-94a9-6cfb489a8ffd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary", "Subsection",
 CellChangeTimes->{3.9400175549009027`*^9},
 CellID->1207535444,ExpressionUUID->"09deae97-de45-4a71-aec8-0ea926474c54"],

Cell[TextData[{
 "In this rather long chapter we have looked at rules, patterns and \
functions. From the practical viewpoint, and given that the most effective \
programming style in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is a functional one, we are more interested in functions. However, in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function definitions really are rules, and thus we have to understand how \
to deal with rules and patterns, in order to handle functions."
}], "Text",
 CellChangeTimes->{{3.940017571589695*^9, 3.940017604029408*^9}},
 CellID->876680529,ExpressionUUID->"c65a9476-a092-4225-9867-53bb2f482529"],

Cell["\<\
We have considered various types of patterns and rules. For patterns, we \
considered various building blocks, as well as mechanisms to construct \
restricted, or conditional, patterns. We have also described many built-in \
functions that take patterns as their arguments, such as Cases, Position, \
MemberQ, etc.\
\>", "Text",
 CellChangeTimes->{{3.940017571589695*^9, 3.940017611794771*^9}},
 CellID->222378549,ExpressionUUID->"d5bf2377-9c7b-4f4d-8ed4-3aa1b8017fba"],

Cell["\<\
Then we saw many examples of functions of a single or multiple arguments, \
defined through patterns. We also saw that a function may have simultaneously \
many definitions, corresponding to different patterns. This is a very \
powerful capability, which allows to make the code both safer and easier to \
read.\
\>", "Text",
 CellChangeTimes->{{3.940017571589695*^9, 3.940017621537343*^9}},
 CellID->451952335,ExpressionUUID->"e68b830c-da5b-4aef-bfea-d7f162e4221a"],

Cell["\<\
Apart from the pattern-defined functions, we have considered another very \
important class of functions - anonymous, or pure functions. We discussed how \
to define and use such functions.\
\>", "Text",
 CellChangeTimes->{{3.940017571589695*^9, 3.940017630011888*^9}},
 CellID->2061432338,ExpressionUUID->"918ba643-f3d9-427c-8303-e61a6e068591"],

Cell["\<\
Functions may have some properties which affect the way they are evaluated. \
These properties are called attributes. We considered several important \
attributes: Listable, Flat, Orderless, Protected, and HoldFirst, HoldRest and \
HoldAll attributes and illustrated their use and effect.\
\>", "Text",
 CellChangeTimes->{{3.940017571589695*^9, 3.9400176399514847`*^9}, 
   3.940017743030449*^9},
 CellID->1664223593,ExpressionUUID->"4824ccf0-bb04-4ddf-a7e7-f5762404fc25"],

Cell[TextData[{
 "In many cases the code for a function is longer than just a single line, \
and also some intermediate variables are needed to store temporary values. We \
discussed the scoping constructs that exist in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " for localizing such variables - Module, Block and With."
}], "Text",
 CellChangeTimes->{{3.940017571589695*^9, 3.9400176481345587`*^9}},
 CellID->169145008,ExpressionUUID->"57697d31-6cdb-46f3-a98a-38ec9190678f"],

Cell["\<\
When it is desired to substitute default values for some of the arguments \
based on the argument positions, one can implement functions with default \
values through the use of optional patterns. Alternatively, if a function has \
many parameters which determine its behavior and which are typically set to \
some default values, named arguments are preferred. This other possibility to \
provide the alternative values for these arguments is realized in the \
mechanism of options. We introduced options and illustrated their use on a \
simple example.\
\>", "Text",
 CellChangeTimes->{{3.940017571589695*^9, 3.940017664826644*^9}},
 CellID->693934285,ExpressionUUID->"01356f4e-67a3-4fd3-9b08-efa324f43a72"],

Cell["\<\
Now that we have understood both lists and functions, it is time to combine \
the two topics to get something really powerful: functional programming. This \
is a topic of the next chapter.\
\>", "Text",
 CellChangeTimes->{{3.940017571589695*^9, 3.9400176678662252`*^9}},
 CellID->1649847309,ExpressionUUID->"19e0001e-0d82-4724-9a74-1ac4fa938606"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1024, 1099},
WindowMargins->{{Automatic, 20}, {Automatic, 0}},
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "BookToolsStyles.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"e51002c9-6ef8-423a-a435-4031e7bc8d3f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "4.2.2"->{
  Cell[30329, 834, 199, 3, 66, "Subsubsection",ExpressionUUID->"95d18353-1193-4fb7-aab0-865ccb031450",
   CellTags->"4.2.2",
   CellID->1695924821]},
 "4.2.4.7"->{
  Cell[85771, 2358, 225, 4, 38, "ItemNumbered",ExpressionUUID->"42e9bb2c-5815-4169-8f5c-0e3b76c1e99f",
   CellTags->"4.2.4.7",
   CellID->607616997]},
 "4.2.5"->{
  Cell[164589, 4642, 258, 4, 66, "Subsubsection",ExpressionUUID->"2ed84018-8d1a-4b31-b3a3-cd025bc9cb02",
   CellTags->"4.2.5",
   CellID->723417659]},
 "4.2.6"->{
  Cell[183366, 5154, 196, 3, 66, "Subsubsection",ExpressionUUID->"09784536-1a61-4611-8aec-f64e489a6923",
   CellTags->"4.2.6",
   CellID->1220810882]},
 "4.2.8"->{
  Cell[242265, 6783, 273, 5, 66, "Subsubsection",ExpressionUUID->"ccba9749-6a1a-4e5d-84c0-1671f02fb3f0",
   CellTags->"4.2.8",
   CellID->1489440234]},
 "4.2.9"->{
  Cell[244296, 6842, 179, 3, 66, "Subsubsection",ExpressionUUID->"bcca35df-190a-491d-898b-87e231cbb5a4",
   CellTags->"4.2.9",
   CellID->240496004]},
 "4.2.10"->{
  Cell[250285, 7018, 182, 3, 66, "Subsubsection",ExpressionUUID->"e4c2778c-62e3-446b-8d1a-648aa8804d05",
   CellTags->"4.2.10",
   CellID->906436234]},
 "4.3.3.4"->{
  Cell[315509, 8842, 193, 3, 38, "ItemNumbered",ExpressionUUID->"c5b40dd0-b452-4d14-ba43-ca58f2861e0d",
   CellTags->"4.3.3.4",
   CellID->142155476]},
 "4.4.3"->{
  Cell[382931, 10749, 191, 3, 66, "Subsubsection",ExpressionUUID->"cad912e4-7f59-448f-bc82-4017128aa018",
   CellTags->"4.4.3",
   CellID->1848839429]},
 "4.4.7"->{
  Cell[416223, 11690, 195, 3, 66, "Subsubsection",ExpressionUUID->"13c766c3-a4ef-4976-b20d-d241dc8532af",
   CellTags->"4.4.7",
   CellID->126177489]},
 "4.5.2"->{
  Cell[499460, 13848, 206, 3, 66, "Subsubsection",ExpressionUUID->"74efea8e-ed6f-4f85-a7cb-62316ce9eee1",
   CellTags->"4.5.2",
   CellID->1774520151]},
 "4.6.2.3"->{
  Cell[569801, 15845, 207, 3, 38, "ItemNumbered",ExpressionUUID->"abc554a2-52e8-4e1d-bf5e-4f5970b7d3be",
   CellTags->"4.6.2.3",
   CellID->1962519257]},
 "4.7.3"->{
  Cell[699078, 19400, 195, 3, 66, "Subsubsection",ExpressionUUID->"a39aab1f-bfd8-4133-9666-1b9ab75c461a",
   CellTags->"4.7.3",
   CellID->1725655196]},
 "4.8"->{
  Cell[794634, 21854, 226, 5, 68, "Subsection",ExpressionUUID->"2476424b-01fd-4be5-9672-38f9d5796d7f",
   CellTags->"4.8",
   CellID->622892622]},
 "4.9.1"->{
  Cell[813596, 22309, 206, 3, 66, "Subsubsection",ExpressionUUID->"9c5e1f3f-5f2a-4d24-a488-a311a38a7997",
   CellTags->"4.9.1",
   CellID->215800951]},
 "4.9.1.1"->{
  Cell[813805, 22314, 180, 3, 38, "ItemNumbered",ExpressionUUID->"338aa29d-1b11-4875-bf21-b3c0627ef2d8",
   CellTags->"4.9.1.1",
   CellID->1373934472]},
 "4.9.1.3"->{
  Cell[821103, 22520, 186, 3, 38, "ItemNumbered",ExpressionUUID->"a4cea705-01fc-463e-8b20-f1c5c142f61f",
   CellTags->"4.9.1.3",
   CellID->516383228]},
 "4.11"->{
  Cell[896009, 24423, 173, 3, 68, "Subsection",ExpressionUUID->"9d378ef6-78b6-471b-be88-a705686a7a60",
   CellTags->"4.11",
   CellID->1770967983]},
 "4.11.1.6"->{
  Cell[937874, 25520, 205, 3, 38, "ItemNumbered",ExpressionUUID->"860b9005-a64a-4e8c-8e63-f68942a6add3",
   CellTags->"4.11.1.6",
   CellID->2119010718]},
 "4.11.1.8"->{
  Cell[943727, 25678, 226, 4, 38, "ItemNumbered",ExpressionUUID->"7812b7e7-d44a-47fc-a0eb-8b6158a59ba5",
   CellTags->"4.11.1.8",
   CellID->956344080]},
 "4.11.1.11"->{
  Cell[954431, 25949, 200, 3, 38, "ItemNumbered",ExpressionUUID->"8667c2e8-084a-43e1-bde2-c78c4502a93c",
   CellTags->"4.11.1.11",
   CellID->1769251484]},
 "4.11.1.12"->{
  Cell[958178, 26043, 266, 5, 38, "ItemNumbered",ExpressionUUID->"6b98b6e2-05fd-49e3-b53a-30d7e279751b",
   CellTags->"4.11.1.12",
   CellID->2077382498]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"4.2.2", 1042527, 28171},
 {"4.2.4.7", 1042691, 28175},
 {"4.2.5", 1042854, 28179},
 {"4.2.6", 1043017, 28183},
 {"4.2.8", 1043181, 28187},
 {"4.2.9", 1043345, 28191},
 {"4.2.10", 1043509, 28195},
 {"4.3.3.4", 1043675, 28199},
 {"4.4.3", 1043839, 28203},
 {"4.4.7", 1044004, 28207},
 {"4.5.2", 1044168, 28211},
 {"4.6.2.3", 1044335, 28215},
 {"4.7.3", 1044501, 28219},
 {"4.8", 1044664, 28223},
 {"4.9.1", 1044823, 28227},
 {"4.9.1.1", 1044989, 28231},
 {"4.9.1.3", 1045157, 28235},
 {"4.11", 1045321, 28239},
 {"4.11.1.6", 1045485, 28243},
 {"4.11.1.8", 1045655, 28247},
 {"4.11.1.11", 1045825, 28251},
 {"4.11.1.12", 1045997, 28255}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[554, 20, 3721, 95, 130, "Text",ExpressionUUID->"64288676-95ba-4280-aaf9-09f63422eff0",
 CellID->912160115],
Cell[CellGroupData[{
Cell[4300, 119, 353, 10, 135, "Section",ExpressionUUID->"ab1e0e41-9b8d-48e3-9e22-95ddddf79b73",
 CounterAssignments->{{"Section", 3}},
 CellID->190225811],
Cell[CellGroupData[{
Cell[4678, 133, 151, 2, 68, "Subsection",ExpressionUUID->"cd559798-99c6-4816-9623-4454de32afeb",
 CellID->613245002],
Cell[4832, 137, 831, 15, 222, "Text",ExpressionUUID->"bd9910e4-ac85-46fa-83fc-231aab57c2d3",
 CellID->1034726661],
Cell[5666, 154, 869, 17, 222, "Text",ExpressionUUID->"60eb83ac-8927-423a-9d60-35c1ea1a41df",
 CellID->1623209971]
}, Open  ]],
Cell[CellGroupData[{
Cell[6572, 176, 157, 2, 68, "Subsection",ExpressionUUID->"257fd94d-9b99-490d-949c-a17523e36c35",
 CellID->260322594],
Cell[6732, 180, 505, 10, 134, "Text",ExpressionUUID->"999380dc-ac25-4e97-9c50-4a67e50de65f",
 CellID->817648419],
Cell[CellGroupData[{
Cell[7262, 194, 232, 3, 66, "Subsubsection",ExpressionUUID->"9d0a99ef-df5a-433a-8673-b893c38c619e",
 CellID->469120980],
Cell[7497, 199, 182, 2, 38, "ItemNumbered",ExpressionUUID->"d7026aa1-bab4-408a-b342-3e44b6ef1315",
 CellID->1103842723],
Cell[7682, 203, 301, 7, 75, "Text",ExpressionUUID->"0945d691-df00-4b20-bdb0-29b6f51bfc6f",
 CellID->173419028],
Cell[CellGroupData[{
Cell[8008, 214, 367, 9, 54, "Input",ExpressionUUID->"8a63e485-0665-416c-97e8-4794fca069af",
 CellID->783955687],
Cell[8378, 225, 198, 4, 45, "Output",ExpressionUUID->"7bea6169-6335-4bd2-aa04-ced1e9c0ccb4",
 CellID->365669455]
}, Open  ]],
Cell[8591, 232, 402, 7, 75, "Text",ExpressionUUID->"f19d24d3-3ca4-4e20-8acb-0ccdfb5ec82e",
 CellID->1855816118],
Cell[CellGroupData[{
Cell[9018, 243, 233, 4, 31, "Input",ExpressionUUID->"d0c9c555-8bf6-47a3-bf3a-50616f724105",
 CellID->1666717469],
Cell[9254, 249, 359, 11, 45, "Output",ExpressionUUID->"c6927fe5-f9b9-4756-bb68-3f2fd6370cfe",
 CellID->1212024352]
}, Open  ]],
Cell[9628, 263, 191, 2, 38, "ItemNumbered",ExpressionUUID->"3a2cd8ed-7edc-4367-b19e-15c7fd484782",
 CellID->1610892269],
Cell[9822, 267, 967, 18, 252, "Text",ExpressionUUID->"ee843cab-2a29-4092-89ee-f211ab8c6a62",
 CellID->940027354],
Cell[10792, 287, 234, 4, 45, "Text",ExpressionUUID->"24b1dde5-6de5-4d06-88ae-1460266bd00b",
 CellID->1845373151],
Cell[CellGroupData[{
Cell[11051, 295, 364, 8, 54, "Input",ExpressionUUID->"f354e459-3670-4c44-a8c8-de0686f71768",
 CellID->1248386205],
Cell[11418, 305, 200, 4, 45, "Output",ExpressionUUID->"d5e264bf-0947-401d-b267-4065417b0b1e",
 CellID->1953383652]
}, Open  ]],
Cell[11633, 312, 182, 2, 45, "Text",ExpressionUUID->"064aa654-492e-4838-b298-ee2ff80886fa",
 CellID->1936527475],
Cell[CellGroupData[{
Cell[11840, 318, 269, 6, 31, "Input",ExpressionUUID->"9196156d-ca5e-4694-ba28-b7174917e486",
 CellID->1965422758],
Cell[12112, 326, 197, 4, 45, "Output",ExpressionUUID->"449f638a-ab55-480c-9e5c-bd2af34e5780",
 CellID->804685652]
}, Open  ]],
Cell[12324, 333, 300, 6, 75, "Text",ExpressionUUID->"65cca574-082e-4c6b-9512-af0f3cf04944",
 CellID->1647228005],
Cell[CellGroupData[{
Cell[12649, 343, 493, 13, 54, "Input",ExpressionUUID->"b5b360bc-74c5-4d44-b73d-7026b1e5eac1",
 CellID->741269229],
Cell[13145, 358, 304, 8, 45, "Output",ExpressionUUID->"6365770b-f68a-42bd-8aa6-b9168172d846",
 CellID->885914829]
}, Open  ]],
Cell[13464, 369, 217, 4, 38, "ItemNumbered",ExpressionUUID->"1720e2d7-071d-4d51-8fc6-782f828c2d02",
 CellID->1066406352],
Cell[13684, 375, 486, 8, 134, "Text",ExpressionUUID->"d5f2001f-2d29-44e9-811b-d51bf55e5efe",
 CellID->193040202],
Cell[CellGroupData[{
Cell[14195, 387, 469, 13, 54, "Input",ExpressionUUID->"854d4e8a-daa5-4b38-9271-bf20c8e01378",
 CellID->244446558],
Cell[14667, 402, 247, 6, 45, "Output",ExpressionUUID->"bc109720-b275-4707-92fc-36ed154b6383",
 CellID->1229409285]
}, Open  ]],
Cell[14929, 411, 256, 5, 45, "Text",ExpressionUUID->"0f43708d-6791-4394-82ba-db255ecab17f",
 CellID->1741685208],
Cell[CellGroupData[{
Cell[15210, 420, 477, 14, 31, "Input",ExpressionUUID->"afd5bf82-9625-450b-9b2e-913f2d840cd1",
 CellID->1617406220],
Cell[15690, 436, 249, 6, 45, "Output",ExpressionUUID->"7c58c3ca-a8bd-4ccd-aeaa-cca7dca9cd8f",
 CellID->402335347]
}, Open  ]],
Cell[CellGroupData[{
Cell[15976, 447, 589, 18, 31, "Input",ExpressionUUID->"77857337-afc3-4fed-8915-dfd06e2c41c3",
 CellID->1771656273],
Cell[16568, 467, 254, 6, 45, "Output",ExpressionUUID->"e2775010-a068-40e7-a851-42b5a1599aba",
 CellID->861387633]
}, Open  ]],
Cell[16837, 476, 228, 4, 45, "Text",ExpressionUUID->"18d176dd-8b2e-4015-8b9b-3f366f0799eb",
 CellID->1154683404],
Cell[CellGroupData[{
Cell[17090, 484, 318, 8, 31, "Input",ExpressionUUID->"8266c11f-119b-4d55-bfb6-1d49f69a6927",
 CellID->1100967017],
Cell[17411, 494, 255, 6, 45, "Output",ExpressionUUID->"bae07d91-c2ba-4bf3-98c9-aa8335e0942f",
 CellID->2014661462]
}, Open  ]],
Cell[17681, 503, 364, 6, 104, "Text",ExpressionUUID->"04822d15-2dc9-4651-856c-a62c6ab8aef3",
 CellID->1040529585],
Cell[18048, 511, 165, 2, 38, "ItemNumbered",ExpressionUUID->"305902d1-8cb8-4527-ae6a-ee600bc3b71f",
 CellID->924495873],
Cell[18216, 515, 597, 10, 134, "Text",ExpressionUUID->"c21759d6-44c3-4294-92eb-25dadbbb6bed",
 CellID->957951466],
Cell[18816, 527, 161, 2, 38, "ItemNumbered",ExpressionUUID->"8c839261-241e-4e99-a2e0-59f913bc7c20",
 CellID->1989216831],
Cell[18980, 531, 515, 9, 134, "Text",ExpressionUUID->"fa97e36f-3ad7-4d6a-855e-d10edd1813df",
 CellID->2066943831],
Cell[CellGroupData[{
Cell[19520, 544, 224, 4, 31, "Input",ExpressionUUID->"46b1c630-1df4-4e79-a207-96f3d5299870",
 CellID->905434699],
Cell[19747, 550, 200, 4, 45, "Output",ExpressionUUID->"40deb34a-9378-4bad-99d5-7949f5233ac6",
 CellID->2075026260]
}, Open  ]],
Cell[19962, 557, 698, 12, 193, "Text",ExpressionUUID->"3207b285-7e97-4f4f-8b28-ba5fbfd7f1a1",
 CellID->1979408187],
Cell[CellGroupData[{
Cell[20685, 573, 568, 15, 57, "Input",ExpressionUUID->"2c74769c-aa03-4479-9a65-5cf306900adf",
 CellID->1964810583],
Cell[21256, 590, 319, 8, 49, "Output",ExpressionUUID->"fb1f63c2-745c-4a6a-b803-fb07550074c4",
 CellID->995969878]
}, Open  ]],
Cell[21590, 601, 182, 2, 38, "ItemNumbered",ExpressionUUID->"1568178b-d732-4141-b802-6785d9ab0b65",
 CellID->1778194828],
Cell[21775, 605, 619, 10, 163, "Text",ExpressionUUID->"7ee9e121-dbd2-4f17-9ca5-6a218d103118",
 CellID->1738042544],
Cell[CellGroupData[{
Cell[22419, 619, 253, 5, 31, "Input",ExpressionUUID->"212cf736-c82f-4d5b-a3d6-0a3bc85f015b",
 CellID->510766461],
Cell[22675, 626, 205, 4, 45, "Output",ExpressionUUID->"7dcabb77-6c79-4d64-941d-d25fd4d4a5b2",
 CellID->302401712]
}, Open  ]],
Cell[22895, 633, 750, 13, 193, "Text",ExpressionUUID->"7d00578a-6c39-4090-988d-00d82381487f",
 CellID->1519264782],
Cell[23648, 648, 187, 2, 38, "ItemNumbered",ExpressionUUID->"be79d5e2-efb1-4c0d-bfa6-3b731f3bf97e",
 CellID->1483804732],
Cell[23838, 652, 466, 7, 104, "Text",ExpressionUUID->"3ab97639-c7a2-4bb6-8ffe-166e562db291",
 CellID->1726021760],
Cell[CellGroupData[{
Cell[24329, 663, 562, 13, 54, "Input",ExpressionUUID->"00426472-004b-4c37-b22c-833a3d4b89a9",
 CellID->331095680],
Cell[24894, 678, 322, 7, 45, "Output",ExpressionUUID->"0e7dcfc3-3b16-4b59-9812-4dc043b03338",
 CellID->425089268]
}, Open  ]],
Cell[25231, 688, 232, 3, 45, "Text",ExpressionUUID->"e84a9e5f-fd65-46a2-85f0-cb64ca9a5f9d",
 CellID->1944717354],
Cell[CellGroupData[{
Cell[25488, 695, 274, 6, 31, "Input",ExpressionUUID->"266b35ad-ba59-4fa5-b616-fc8c3136008f",
 CellID->1009224625],
Cell[25765, 703, 425, 9, 45, "Output",ExpressionUUID->"f679fb68-bbeb-421a-8ef1-74edde0e61bd",
 CellID->833145771]
}, Open  ]],
Cell[26205, 715, 197, 2, 45, "Text",ExpressionUUID->"a93c01b1-ec58-4338-a7dd-93954eba8249",
 CellID->1087594757],
Cell[CellGroupData[{
Cell[26427, 721, 277, 6, 31, "Input",ExpressionUUID->"d5880860-db86-435c-9f04-823c0a96d725",
 CellID->1571709717],
Cell[26707, 729, 421, 9, 45, "Output",ExpressionUUID->"3ea8a512-5f12-48fb-8cf3-dadbf4ecd055",
 CellID->915900519]
}, Open  ]],
Cell[27143, 741, 665, 10, 193, "Text",ExpressionUUID->"c8997912-3b02-47f9-b0f0-7fd6b494e179",
 CellID->541170187],
Cell[CellGroupData[{
Cell[27833, 755, 388, 10, 54, "Input",ExpressionUUID->"92acb975-7519-453b-acc2-760d4673375e",
 CellID->1069053895],
Cell[28224, 767, 560, 15, 45, "Output",ExpressionUUID->"e5cb0716-8ba2-4a81-9728-66c1e65da083",
 CellID->544282384]
}, Open  ]],
Cell[28799, 785, 230, 4, 45, "Text",ExpressionUUID->"bfc6ca09-8b99-4a5a-96fb-fc36a837189b",
 CellID->1621175315],
Cell[CellGroupData[{
Cell[29054, 793, 385, 10, 54, "Input",ExpressionUUID->"9b6f13f7-9294-41d5-8eaf-fc3016bc3e4f",
 CellID->273591130],
Cell[29442, 805, 561, 15, 45, "Output",ExpressionUUID->"d14874c8-2964-480c-b01b-8ef54449eb11",
 CellID->1237461622]
}, Open  ]],
Cell[30018, 823, 274, 6, 31, "Input",ExpressionUUID->"e82393e4-58a3-4928-a9d8-d8ef935f6bb4",
 CellID->1624618637]
}, Open  ]],
Cell[CellGroupData[{
Cell[30329, 834, 199, 3, 66, "Subsubsection",ExpressionUUID->"95d18353-1193-4fb7-aab0-865ccb031450",
 CellTags->"4.2.2",
 CellID->1695924821],
Cell[30531, 839, 156, 2, 38, "ItemNumbered",ExpressionUUID->"2c773615-30f4-4286-955f-d4c12b37bdf2",
 CellID->2005503563],
Cell[30690, 843, 277, 5, 75, "Text",ExpressionUUID->"dd12b4c4-d7fa-4465-87a1-45e761fd8421",
 CellID->1742543676],
Cell[CellGroupData[{
Cell[30992, 852, 421, 11, 31, "Input",ExpressionUUID->"cbfa7006-8840-4be2-affa-ff8c51bab3a8",
 CellID->1889296566],
Cell[31416, 865, 237, 5, 45, "Output",ExpressionUUID->"0b0f0b3d-797b-4dbe-ae22-287c3828c295",
 CellID->501083776]
}, Open  ]],
Cell[31668, 873, 532, 8, 134, "Text",ExpressionUUID->"dd036a86-9947-420e-874c-8257427726ed",
 CellID->110763387],
Cell[CellGroupData[{
Cell[32225, 885, 543, 16, 31, "Input",ExpressionUUID->"c651149d-8fa0-49cf-a2d1-7e15de50926a",
 CellID->198563597],
Cell[32771, 903, 354, 9, 45, "Output",ExpressionUUID->"afb96748-63df-4363-8310-d40f5aa1e71f",
 CellID->1773625814]
}, Open  ]],
Cell[33140, 915, 330, 8, 75, "Text",ExpressionUUID->"0494c20f-b64e-4a06-b877-6b24cd04b570",
 CellID->108551891],
Cell[CellGroupData[{
Cell[33495, 927, 329, 8, 31, "Input",ExpressionUUID->"8f2d8cab-0eeb-4af9-b6bd-a9315d53e00f",
 CellID->1232516301],
Cell[33827, 937, 481, 15, 45, "Output",ExpressionUUID->"41ea17f6-9acf-4957-a34f-7c4da9374812",
 CellID->1226501675]
}, Open  ]],
Cell[34323, 955, 161, 2, 38, "ItemNumbered",ExpressionUUID->"21aac87b-b40a-4ba0-9a20-d0d927436d01",
 CellID->1260142100],
Cell[34487, 959, 319, 5, 75, "Text",ExpressionUUID->"45fd23b3-e913-446f-8d71-160f54737ca1",
 CellID->724547986],
Cell[CellGroupData[{
Cell[34831, 968, 623, 18, 78, "Input",ExpressionUUID->"96152578-a168-4f94-b1d5-8233bafa904c",
 CellID->874653820],
Cell[35457, 988, 198, 4, 45, "Output",ExpressionUUID->"4e200fd9-8634-4dc7-9639-f911496a865c",
 CellID->1474931173],
Cell[35658, 994, 197, 4, 45, "Output",ExpressionUUID->"abbc43a3-d28e-4a5b-aad0-cd6fb70b609a",
 CellID->764487290]
}, Open  ]],
Cell[35870, 1001, 793, 12, 252, "Text",ExpressionUUID->"e9e4f19c-660e-47a4-a303-968aec4c7910",
 CellID->343223029],
Cell[36666, 1015, 473, 7, 134, "Text",ExpressionUUID->"61051632-0503-4315-b770-94d512d212ff",
 CellID->186228647]
}, Open  ]],
Cell[CellGroupData[{
Cell[37176, 1027, 192, 2, 66, "Subsubsection",ExpressionUUID->"949ae218-618e-4980-b5b6-577dbcfb6c33",
 CellID->1104827655],
Cell[37371, 1031, 1186, 21, 340, "Text",ExpressionUUID->"194232c8-1d6d-41c8-a9ac-f2b2cd7b19d3",
 CellID->1694785623],
Cell[38560, 1054, 190, 2, 38, "ItemNumbered",ExpressionUUID->"a9dbbff1-fcd5-4bbe-8ded-f96bfa140612",
 CellID->1887012361],
Cell[38753, 1058, 207, 4, 45, "Text",ExpressionUUID->"3009f4ba-be1b-4065-9c63-49f3c3496e86",
 CellID->978252431],
Cell[CellGroupData[{
Cell[38985, 1066, 304, 6, 54, "Input",ExpressionUUID->"71916712-d6a8-4b63-ac8e-b827385d0368",
 CellID->41694152],
Cell[39292, 1074, 202, 4, 45, "Output",ExpressionUUID->"977a0ea7-2332-40b4-9766-b66816718f1e",
 CellID->1843852653]
}, Open  ]],
Cell[39509, 1081, 430, 7, 104, "Text",ExpressionUUID->"404e76b5-eabc-4c7a-ad3f-1c89efc3e30d",
 CellID->1442512761],
Cell[CellGroupData[{
Cell[39964, 1092, 272, 6, 31, "Input",ExpressionUUID->"1c366dc3-b0e7-4001-913f-fe003947e401",
 CellID->161495159],
Cell[40239, 1100, 172, 3, 45, "Output",ExpressionUUID->"7e49a6de-ea79-48cd-9d5c-2c47b4ad44cc",
 CellID->1666395349]
}, Open  ]],
Cell[40426, 1106, 522, 10, 134, "Text",ExpressionUUID->"a242ccc4-d25c-4f26-88c0-944c0474a1d1",
 CellID->1772390116],
Cell[CellGroupData[{
Cell[40973, 1120, 276, 6, 31, "Input",ExpressionUUID->"38b20822-ce6c-4192-9765-4a719ee61857",
 CellID->1123601208],
Cell[41252, 1128, 206, 4, 45, "Output",ExpressionUUID->"d7ad9b29-07cd-4c37-99ca-7e7a2ec5ae13",
 CellID->2016606488]
}, Open  ]],
Cell[41473, 1135, 240, 4, 45, "Text",ExpressionUUID->"7eb2aefe-7924-4720-b43e-92f6e6664d83",
 CellID->1518326862],
Cell[CellGroupData[{
Cell[41738, 1143, 305, 7, 31, "Input",ExpressionUUID->"b31e94d1-149e-420f-8bfd-aff6e635e04f",
 CellID->227277659],
Cell[42046, 1152, 211, 3, 45, "Output",ExpressionUUID->"d13be0fb-2115-4a0e-9e92-298b69f5679f",
 CellID->330932192]
}, Open  ]],
Cell[42272, 1158, 243, 4, 45, "Text",ExpressionUUID->"c74338b3-fb1b-4dd8-9229-fc071f31bf1e",
 CellID->1291135160],
Cell[CellGroupData[{
Cell[42540, 1166, 307, 7, 31, "Input",ExpressionUUID->"5f2bd4e1-cad1-4d66-8bf3-f3d8872e21c1",
 CellID->301234079],
Cell[42850, 1175, 187, 3, 45, "Output",ExpressionUUID->"530410b2-103e-452d-b1c4-ac38aa43d0fe",
 CellID->360109348]
}, Open  ]],
Cell[43052, 1181, 892, 14, 252, "Text",ExpressionUUID->"e261b5f8-a009-4ae6-814e-9abf92ac31a4",
 CellID->1074294726],
Cell[43947, 1197, 778, 15, 222, "Text",ExpressionUUID->"abb46f55-c112-4ae3-ba93-1cedeadd92bb",
 CellID->2145590180],
Cell[44728, 1214, 182, 2, 38, "ItemNumbered",ExpressionUUID->"5d4ac652-d8d9-48e7-9e97-a4107bd65d7a",
 CellID->181250411],
Cell[44913, 1218, 167, 2, 45, "Text",ExpressionUUID->"019d87f7-d9b0-4d3f-a5ec-004d148b4342",
 CellID->1143846231],
Cell[CellGroupData[{
Cell[45105, 1224, 584, 15, 54, "Input",ExpressionUUID->"14999f72-d226-40c7-ac89-1083909e2dca",
 CellID->1967802410],
Cell[45692, 1241, 290, 7, 49, "Output",ExpressionUUID->"5416e4bd-2041-436c-a6bb-fb1fa3619c10",
 CellID->1781514677],
Cell[45985, 1250, 279, 7, 49, "Output",ExpressionUUID->"fd7890c5-cd89-4040-8e7a-9e4c6c246d76",
 CellID->1700169865]
}, Open  ]],
Cell[46279, 1260, 490, 8, 134, "Text",ExpressionUUID->"5357b159-fdf2-4f3c-8588-9dd5a01c4379",
 CellID->1714464374],
Cell[CellGroupData[{
Cell[46794, 1272, 442, 11, 31, "Input",ExpressionUUID->"0fe8b636-2b36-40be-8d2b-a22c4a4f6ad0",
 CellID->672492875],
Cell[47239, 1285, 280, 7, 49, "Output",ExpressionUUID->"aefde231-c206-4487-bc89-b9a0e4844e70",
 CellID->2125502753]
}, Open  ]],
Cell[47534, 1295, 856, 14, 252, "Text",ExpressionUUID->"4569d75a-c9b3-4849-b3fe-2531fb9daa64",
 CellID->1002916967],
Cell[CellGroupData[{
Cell[48415, 1313, 439, 11, 31, "Input",ExpressionUUID->"e6a76dba-380d-4497-b034-eb59613a466e",
 CellID->1734117627],
Cell[48857, 1326, 1183, 42, 49, "Output",ExpressionUUID->"0954eeb6-643a-4b25-9408-ccaa6c725279",
 CellID->685079184]
}, Open  ]],
Cell[50055, 1371, 797, 15, 222, "Text",ExpressionUUID->"720f39c8-a219-4be7-963a-83cf48886936",
 CellID->1192777813],
Cell[50855, 1388, 926, 15, 252, "Text",ExpressionUUID->"25cd6226-7885-4862-8ec1-e9bd6f3c7ab1",
 CellID->869041763]
}, Open  ]],
Cell[CellGroupData[{
Cell[51818, 1408, 184, 2, 66, "Subsubsection",ExpressionUUID->"9894d69c-8880-4842-a90c-ac2960d417f5",
 CellID->810450313],
Cell[52005, 1412, 212, 4, 45, "Text",ExpressionUUID->"bd951b4a-60f4-4469-b6d0-fa58e744ff91",
 CellID->1897121317],
Cell[52220, 1418, 202, 3, 38, "ItemNumbered",ExpressionUUID->"e2a321b1-62f1-4d25-9cd2-f809cb6d2fc6",
 CellID->1228267810],
Cell[52425, 1423, 307, 5, 75, "Text",ExpressionUUID->"279671ae-59da-4f27-b247-a0e19312e911",
 CellID->1884267706],
Cell[CellGroupData[{
Cell[52757, 1432, 221, 4, 31, "Input",ExpressionUUID->"4329564c-bc90-498b-8b5e-53434c07c065",
 CellID->201490109],
Cell[52981, 1438, 171, 3, 45, "Output",ExpressionUUID->"3ad708ae-7e4c-4de8-895e-0c453ddcaf4f",
 CellID->1444053053]
}, Open  ]],
Cell[53167, 1444, 334, 10, 75, "Text",ExpressionUUID->"866407ea-5eae-4c46-a4c3-72b2e0257302",
 CellID->1486967024],
Cell[53504, 1456, 243, 5, 31, "Input",ExpressionUUID->"3aced900-e258-4890-864c-f77ed1d392c6",
 CellID->813437585],
Cell[53750, 1463, 274, 6, 45, "Text",ExpressionUUID->"992c7a9e-1258-4f25-aa72-479f78f40c10",
 CellID->205753232],
Cell[CellGroupData[{
Cell[54049, 1473, 753, 20, 54, "Input",ExpressionUUID->"93fe054b-c630-4041-8a0d-39df637dd557",
 CellID->87161493],
Cell[54805, 1495, 173, 3, 45, "Output",ExpressionUUID->"c1af3864-8eb7-4c46-93f8-92d6eb23038f",
 CellID->1442539574]
}, Open  ]],
Cell[54993, 1501, 1096, 21, 281, "Text",ExpressionUUID->"eb92e2e1-41e3-4c0d-bc58-c3c458b23d2c",
 CellID->1819729235],
Cell[CellGroupData[{
Cell[56114, 1526, 331, 8, 31, "Input",ExpressionUUID->"86d4c877-2f88-4dc3-8e7e-dd6429ac42de",
 CellID->1272523969],
Cell[56448, 1536, 552, 17, 45, "Output",ExpressionUUID->"4ad8214a-a15d-431b-92b5-62048eda731b",
 CellID->1463420360]
}, Open  ]],
Cell[57015, 1556, 667, 11, 163, "Text",ExpressionUUID->"8ba60038-ef95-4630-9f31-bd4e3d156318",
 CellID->575781429],
Cell[57685, 1569, 186, 2, 38, "ItemNumbered",ExpressionUUID->"28fbdcbe-ef03-4d8a-8e03-93813e9fdd0f",
 CellID->794401766],
Cell[57874, 1573, 438, 7, 134, "Text",ExpressionUUID->"c0b4ea5a-14c5-4e97-8140-15ac80b9ff5b",
 CellID->604647763],
Cell[CellGroupData[{
Cell[58337, 1584, 437, 12, 31, "Input",ExpressionUUID->"2ff68d43-7f89-42df-8007-3517fa18e9f3",
 CellID->1411675357],
Cell[58777, 1598, 173, 3, 45, "Output",ExpressionUUID->"181ac691-eb1e-40d8-a039-32de7d9e017f",
 CellID->1975192977]
}, Open  ]],
Cell[CellGroupData[{
Cell[58987, 1606, 609, 18, 31, "Input",ExpressionUUID->"c0628537-d301-4009-9a39-5e6183891c21",
 CellID->235832741],
Cell[59599, 1626, 176, 3, 45, "Output",ExpressionUUID->"234dfe71-1f15-4c82-a782-52da93aa5bf4",
 CellID->2112175220]
}, Open  ]],
Cell[CellGroupData[{
Cell[59812, 1634, 412, 11, 31, "Input",ExpressionUUID->"4fe21316-0612-4484-ad3a-a9bb347baf13",
 CellID->1910918468],
Cell[60227, 1647, 174, 3, 45, "Output",ExpressionUUID->"540b7131-6394-4df3-bd80-edc4a81c1c72",
 CellID->192151648]
}, Open  ]],
Cell[60416, 1653, 349, 6, 104, "Text",ExpressionUUID->"e7d589b6-1ed9-4d90-99f1-e656bbf8f25e",
 CellID->1824826495],
Cell[60768, 1661, 192, 2, 38, "ItemNumbered",ExpressionUUID->"94fd4f4b-7d63-4ea8-a721-71f7a2c2ace4",
 CellID->1927037175],
Cell[60963, 1665, 1077, 16, 340, "Text",ExpressionUUID->"793b819e-830d-4531-9915-25aafbcc766f",
 CellID->706355772],
Cell[62043, 1683, 281, 6, 31, "Input",ExpressionUUID->"6885d734-cc77-423f-b528-d73ec25bb307",
 CellID->19227498],
Cell[62327, 1691, 237, 5, 75, "Text",ExpressionUUID->"cdd301ab-837b-47cc-a9a3-c3f4a2f21b57",
 CellID->2034951729],
Cell[62567, 1698, 608, 10, 163, "Text",ExpressionUUID->"b2157fd8-079a-4e7b-9dd8-a34450fce858",
 CellID->609147181],
Cell[CellGroupData[{
Cell[63200, 1712, 824, 25, 54, "Input",ExpressionUUID->"06aa0a91-50dc-4426-855e-e535b8cc45e9",
 CellID->1457721033],
Cell[64027, 1739, 511, 15, 49, "Output",ExpressionUUID->"41bf2047-7105-4d53-9568-11312e4f79c8",
 CellID->1763894734]
}, Open  ]],
Cell[64553, 1757, 323, 6, 75, "Text",ExpressionUUID->"f8715cc9-51ca-4e8b-a31c-0ff679218ada",
 CellID->1722695126],
Cell[64879, 1765, 744, 11, 222, "Text",ExpressionUUID->"4b753e27-0179-4722-98ac-6d93ac121358",
 CellID->1114657992],
Cell[65626, 1778, 429, 7, 104, "Text",ExpressionUUID->"a7ebbec1-c62d-44a1-b64d-9a92a7f30459",
 CellID->1508940567],
Cell[CellGroupData[{
Cell[66080, 1789, 302, 7, 31, "Input",ExpressionUUID->"dfdaa1da-e057-4463-b4f2-4fff0c14e90b",
 CellID->543799706],
Cell[66385, 1798, 176, 3, 45, "Output",ExpressionUUID->"e61bff02-907c-44b9-9391-3b0be03948b4",
 CellID->1194608334]
}, Open  ]],
Cell[CellGroupData[{
Cell[66598, 1806, 299, 7, 31, "Input",ExpressionUUID->"49a0c796-a11d-452d-af24-67133e3af6ae",
 CellID->2043873527],
Cell[66900, 1815, 173, 3, 45, "Output",ExpressionUUID->"42fa4b63-e0cd-494c-a3d9-654f32f04ffe",
 CellID->765377747]
}, Open  ]],
Cell[67088, 1821, 189, 2, 38, "ItemNumbered",ExpressionUUID->"ff4175e8-b9aa-48bc-9d44-1c304c10bebe",
 CellID->276748299],
Cell[67280, 1825, 245, 5, 75, "Text",ExpressionUUID->"8c4e9d11-672c-4e59-8bb1-dc75188d19fe",
 CellID->2006565538],
Cell[CellGroupData[{
Cell[67550, 1834, 325, 7, 54, "Input",ExpressionUUID->"a0249c14-6901-4a03-943c-3635499b0c94",
 CellID->1104809157],
Cell[67878, 1843, 198, 4, 45, "Output",ExpressionUUID->"8ffcf688-c8f2-4efd-bcc4-0e03b7ba16dd",
 CellID->617065477]
}, Open  ]],
Cell[68091, 1850, 538, 8, 134, "Text",ExpressionUUID->"777c598f-09bd-45f0-9452-74411fcba834",
 CellID->809109756],
Cell[CellGroupData[{
Cell[68654, 1862, 698, 18, 54, "Input",ExpressionUUID->"3f05ce58-e23a-4993-9b8f-b2a1d08b7351",
 CellID->708561936],
Cell[69355, 1882, 531, 14, 49, "Output",ExpressionUUID->"d4476b44-a3f7-4b6f-a943-c060a5568195",
 CellID->1479227713]
}, Open  ]],
Cell[69901, 1899, 179, 2, 45, "Text",ExpressionUUID->"a4b1d5d8-2693-41c9-8abe-1fca4eb2dc6b",
 CellID->1134073910],
Cell[CellGroupData[{
Cell[70105, 1905, 695, 19, 31, "Input",ExpressionUUID->"808a22d5-d73a-49a6-acd9-27e45f823171",
 CellID->1462838245],
Cell[70803, 1926, 529, 14, 49, "Output",ExpressionUUID->"b3e623ed-4ff8-4a42-888d-62041000c9f5",
 CellID->524304089]
}, Open  ]],
Cell[71347, 1943, 510, 10, 134, "Text",ExpressionUUID->"7cbae145-7866-4da7-999a-eeeec28e9af3",
 CellID->1388757868],
Cell[CellGroupData[{
Cell[71882, 1957, 598, 15, 31, "Input",ExpressionUUID->"e0bb1b8e-d407-4570-978e-c2e07a2dcd10",
 CellID->1683656172],
Cell[72483, 1974, 796, 23, 45, "Output",ExpressionUUID->"02da1f91-ce6a-466b-8e1a-45c6d5eb9568",
 CellID->1438943120]
}, Open  ]],
Cell[73294, 2000, 539, 9, 104, "Text",ExpressionUUID->"958f69e7-069a-4c61-98d2-579c063bbf53",
 CellID->1735008647],
Cell[73836, 2011, 197, 2, 38, "ItemNumbered",ExpressionUUID->"d0727b7b-efdf-4abc-9b9e-ff82fa0838e4",
 CellID->1562516982],
Cell[74036, 2015, 378, 7, 104, "Text",ExpressionUUID->"9decd79e-d64f-4355-bff6-c386fcc63b81",
 CellID->5461895],
Cell[CellGroupData[{
Cell[74439, 2026, 750, 21, 31, "Input",ExpressionUUID->"d9eda942-845d-4ae9-ab47-1e081a947286",
 CellID->1261367940],
Cell[75192, 2049, 508, 13, 45, "Output",ExpressionUUID->"263909a8-7265-4aba-9120-5c7d271b625a",
 CellID->1005708470]
}, Open  ]],
Cell[75715, 2065, 895, 13, 252, "Text",ExpressionUUID->"23fc8942-5287-4f51-9de7-5c5e63b860ba",
 CellID->437913719],
Cell[CellGroupData[{
Cell[76635, 2082, 281, 6, 31, "Input",ExpressionUUID->"fbf806be-befe-4b06-b93a-e690b9e01b0f",
 CellID->1062488351],
Cell[76919, 2090, 451, 14, 45, "Output",ExpressionUUID->"0f212cb4-28cc-41e4-b167-234cdbe4c813",
 CellID->1218274705]
}, Open  ]],
Cell[77385, 2107, 334, 6, 75, "Text",ExpressionUUID->"ac427c4f-8c2a-4269-91c8-370f0df42790",
 CellID->1433876437],
Cell[CellGroupData[{
Cell[77744, 2117, 879, 26, 54, "Input",ExpressionUUID->"4f819a3a-4854-40e6-b8ae-3a255430cfd0",
 CellID->973363256],
Cell[78626, 2145, 1030, 29, 68, "Output",ExpressionUUID->"e6782c01-fffe-4459-b3a8-b799bf4e4f26",
 CellID->1597423910]
}, Open  ]],
Cell[79671, 2177, 417, 7, 104, "Text",ExpressionUUID->"eecb3068-ce34-49ad-a6b1-4fe658086a6c",
 CellID->1821942861],
Cell[CellGroupData[{
Cell[80113, 2188, 921, 27, 54, "Input",ExpressionUUID->"04a673ba-182c-4196-addb-43f9fda22eb6",
 CellID->1191073087],
Cell[81037, 2217, 509, 13, 45, "Output",ExpressionUUID->"9a0af1e2-c6a8-43ac-9fd2-c9eec2699930",
 CellID->1570960580]
}, Open  ]],
Cell[81561, 2233, 186, 2, 38, "ItemNumbered",ExpressionUUID->"615f4b9c-5cd3-46ab-81f7-6ff1ac000e20",
 CellID->1970511842],
Cell[81750, 2237, 458, 8, 104, "Text",ExpressionUUID->"f570c891-eec2-45c4-80b6-b1ccd2748b03",
 CellID->2047208107],
Cell[CellGroupData[{
Cell[82233, 2249, 1023, 30, 54, "Input",ExpressionUUID->"09e60a08-ebb3-4e16-a31d-38f9aafc664b",
 CellID->622811184],
Cell[83259, 2281, 510, 13, 45, "Output",ExpressionUUID->"ccbc3b9c-7e65-4a6e-b4f3-47bc2ad4898c",
 CellID->1024031273]
}, Open  ]],
Cell[83784, 2297, 237, 4, 45, "Text",ExpressionUUID->"bfaf5605-551d-457b-97c9-ccf275456036",
 CellID->457823318],
Cell[CellGroupData[{
Cell[84046, 2305, 1198, 35, 78, "Input",ExpressionUUID->"8a502053-7cee-4011-9149-5cd5d44f3a47",
 CellID->1515670669],
Cell[85247, 2342, 509, 13, 45, "Output",ExpressionUUID->"94b22418-4f18-4404-a16a-367ec8dfa699",
 CellID->619736021]
}, Open  ]],
Cell[85771, 2358, 225, 4, 38, "ItemNumbered",ExpressionUUID->"42e9bb2c-5815-4169-8f5c-0e3b76c1e99f",
 CellTags->"4.2.4.7",
 CellID->607616997],
Cell[85999, 2364, 489, 8, 134, "Text",ExpressionUUID->"85b4e2ec-796b-4fa3-b0a2-7f7d0f17566e",
 CellID->1788811121],
Cell[CellGroupData[{
Cell[86513, 2376, 228, 4, 31, "Input",ExpressionUUID->"2b74bdc1-9cff-4e9b-a98a-8aa16889677e",
 CellID->1358891586],
Cell[86744, 2382, 172, 3, 45, "Output",ExpressionUUID->"ace32a8c-af60-4e4e-9b61-af1567d436cf",
 CellID->1361051251]
}, Open  ]],
Cell[86931, 2388, 304, 6, 75, "Text",ExpressionUUID->"89fdd994-9ba8-4561-b2e4-966a23c9062b",
 CellID->1773232413],
Cell[CellGroupData[{
Cell[87260, 2398, 531, 15, 31, "Input",ExpressionUUID->"fd0c9417-1772-43d7-b476-a20d204dfd1a",
 CellID->2069583039],
Cell[87794, 2415, 389, 11, 45, "Output",ExpressionUUID->"6a3e5550-400a-4e9a-b07e-f667c0d02368",
 CellID->272145534]
}, Open  ]],
Cell[88198, 2429, 441, 7, 134, "Text",ExpressionUUID->"e3c52b2d-d940-4d5d-9f1a-cb8657d91af2",
 CellID->1957305475],
Cell[CellGroupData[{
Cell[88664, 2440, 493, 14, 31, "Input",ExpressionUUID->"52d1c719-2d0b-4364-94e7-26d3ffe7aa27",
 CellID->237695381],
Cell[89160, 2456, 343, 9, 45, "Output",ExpressionUUID->"7b67c872-7370-4f8d-99ed-6ddce21797c9",
 CellID->562188985]
}, Open  ]],
Cell[89518, 2468, 318, 6, 75, "Text",ExpressionUUID->"3d965327-28f1-4d7f-beeb-c016ae53cc95",
 CellID->1929707742],
Cell[CellGroupData[{
Cell[89861, 2478, 396, 10, 31, "Input",ExpressionUUID->"ce7164f4-cb80-4f58-9eb1-5f3ebaa176da",
 CellID->312295022],
Cell[90260, 2490, 486, 15, 60, "Output",ExpressionUUID->"489c21ce-823d-44cb-8eee-dd51b1e7d025",
 CellID->734701521]
}, Open  ]],
Cell[90761, 2508, 1143, 17, 311, "Text",ExpressionUUID->"1e4d78a8-2595-440f-9482-fd3d97fa48e5",
 CellID->97493197],
Cell[91907, 2527, 190, 2, 38, "ItemNumbered",ExpressionUUID->"a104b8e3-14bc-4aed-87a8-e52cea091680",
 CellID->253985566],
Cell[92100, 2531, 567, 9, 134, "Text",ExpressionUUID->"cb411bf8-a35a-40a7-a742-a488c11fe330",
 CellID->754260115],
Cell[CellGroupData[{
Cell[92692, 2544, 551, 16, 31, "Input",ExpressionUUID->"f5e8d339-4e47-4d57-bc22-987c79bce45b",
 CellID->890219357],
Cell[93246, 2562, 354, 9, 45, "Output",ExpressionUUID->"8f8b0037-82b5-41cf-84a3-c2c52fd65396",
 CellID->1918132560]
}, Open  ]],
Cell[93615, 2574, 171, 2, 45, "Text",ExpressionUUID->"0aef7beb-85bc-4a93-b7a1-4fe6a88205f7",
 CellID->29427156],
Cell[93789, 2578, 176, 2, 38, "ItemNumbered",ExpressionUUID->"cb23c1a4-a6ef-4783-b131-aee6559dd0b4",
 CellID->660972082],
Cell[93968, 2582, 234, 4, 45, "Text",ExpressionUUID->"52e71f80-93e0-4e77-8f4c-744fc63c7f15",
 CellID->24876243],
Cell[CellGroupData[{
Cell[94227, 2590, 551, 15, 31, "Input",ExpressionUUID->"bb1aab30-1e90-493a-a0f3-4342d8030241",
 CellID->2107823752],
Cell[94781, 2607, 378, 9, 45, "Output",ExpressionUUID->"0f90ebbe-6094-4e80-b252-f7ecf3f24b02",
 CellID->1886454439]
}, Open  ]],
Cell[95174, 2619, 383, 6, 104, "Text",ExpressionUUID->"6ad80f54-a992-420f-984c-493bb32b69ae",
 CellID->1668312395],
Cell[95560, 2627, 432, 7, 75, "Text",ExpressionUUID->"ab1fe00d-41a6-4b98-86b1-159f8008dfbb",
 CellID->794844421],
Cell[95995, 2636, 691, 11, 193, "Text",ExpressionUUID->"e3d95ade-3830-45c9-8097-6162872a0582",
 CellID->120851010],
Cell[96689, 2649, 216, 4, 38, "ItemNumbered",ExpressionUUID->"341c9ca0-4607-47e9-8a4d-d133a0afc088",
 CellID->1475107338],
Cell[96908, 2655, 673, 10, 163, "Text",ExpressionUUID->"e8d431d2-6273-444e-9c39-19fed55fe46e",
 CellID->1577808798],
Cell[97584, 2667, 236, 4, 45, "Text",ExpressionUUID->"c88b22d6-3e14-4772-9396-c5ad114bf08a",
 CellID->757372273],
Cell[97823, 2673, 369, 7, 75, "Text",ExpressionUUID->"ea02067a-14bc-42f2-8140-18e834dd8ee6",
 CellID->1020216542],
Cell[CellGroupData[{
Cell[98217, 2684, 905, 26, 54, "Input",ExpressionUUID->"29fac91c-945c-464a-b6bc-b8ff7f72b019",
 CellID->334271056],
Cell[99125, 2712, 1909, 59, 115, "Output",ExpressionUUID->"435ad7d4-8c96-4774-8867-1d9af617f4e4",
 CellID->1143329225]
}, Open  ]],
Cell[101049, 2774, 354, 7, 75, "Text",ExpressionUUID->"c5db1aff-1e3d-4f19-a6b0-19a57dbeb3ba",
 CellID->250611219],
Cell[CellGroupData[{
Cell[101428, 2785, 827, 24, 54, "Input",ExpressionUUID->"f5ed6854-0c66-41f2-9824-23dea3f51843",
 CellID->925828816],
Cell[102258, 2811, 745, 20, 49, "Output",ExpressionUUID->"11823bb5-4cc8-4c41-85ef-5c8c973d2531",
 CellID->1324781660]
}, Open  ]],
Cell[103018, 2834, 433, 7, 134, "Text",ExpressionUUID->"9ff3bcc5-afed-40e1-9c50-52914e66b165",
 CellID->721504762],
Cell[103454, 2843, 223, 4, 45, "Text",ExpressionUUID->"c3415523-80f5-464c-a7ea-0b54eb9996c3",
 CellID->1332728949],
Cell[103680, 2849, 185, 2, 45, "Text",ExpressionUUID->"1c495349-6fa9-4227-ba3b-1e2826f26118",
 CellID->921007633],
Cell[CellGroupData[{
Cell[103890, 2855, 805, 23, 54, "Input",ExpressionUUID->"12df8da8-667b-4ce8-99f3-91225763c2ed",
 CellID->1342386202],
Cell[104698, 2880, 511, 13, 45, "Output",ExpressionUUID->"159989ef-42ea-4d6a-b36c-168e66996002",
 CellID->1005884226]
}, Open  ]],
Cell[105224, 2896, 209, 4, 45, "Text",ExpressionUUID->"c4cb2a91-d335-43f6-8f58-e437c9742dc0",
 CellID->904917198],
Cell[105436, 2902, 192, 2, 31, "SubitemNumbered",ExpressionUUID->"bfbf1e6a-59bb-4b0f-b413-8a53e256ed9b",
 CellID->520760660],
Cell[105631, 2906, 993, 15, 193, "Text",ExpressionUUID->"30e6714f-257b-4292-ac83-29eab8913eee",
 CellID->879485865],
Cell[CellGroupData[{
Cell[106649, 2925, 789, 22, 54, "Input",ExpressionUUID->"4d2f7729-4718-4cdc-a614-e94827ea4b4a",
 CellID->608482746],
Cell[107441, 2949, 511, 13, 45, "Output",ExpressionUUID->"df9cacd1-7b77-4a02-b180-a373928dcbc6",
 CellID->555568285]
}, Open  ]],
Cell[107967, 2965, 473, 8, 104, "Text",ExpressionUUID->"821f2f97-98b5-4b80-b2b9-c370984cfe47",
 CellID->1359985507],
Cell[CellGroupData[{
Cell[108465, 2977, 771, 21, 54, "Input",ExpressionUUID->"2ea6cfb6-1c34-4048-a597-429df14cbf2b",
 CellID->1041483023],
Cell[109239, 3000, 528, 14, 49, "Output",ExpressionUUID->"3d06c936-2983-4908-9997-0e1ad2181a6b",
 CellID->566398151]
}, Open  ]],
Cell[109782, 3017, 515, 8, 104, "Text",ExpressionUUID->"7ab75447-a9f9-4d86-bd33-616a9d6cb3fe",
 CellID->887671738],
Cell[CellGroupData[{
Cell[110322, 3029, 247, 5, 31, "Input",ExpressionUUID->"fed03ad4-e170-40fc-9f9d-30d9a489fc01",
 CellID->512509600],
Cell[110572, 3036, 511, 13, 45, "Output",ExpressionUUID->"4412f982-f33d-4f0b-b0fd-d51273083409",
 CellID->721126482]
}, Open  ]],
Cell[111098, 3052, 345, 6, 75, "Text",ExpressionUUID->"f1f097aa-eda8-4358-b442-01e246561867",
 CellID->220746024],
Cell[111446, 3060, 213, 4, 31, "SubitemNumbered",ExpressionUUID->"c5ade085-7c23-4876-aa48-90574cf0b9c6",
 CellID->1585612355],
Cell[111662, 3066, 380, 7, 75, "Text",ExpressionUUID->"a607a83b-03fc-478a-85a1-268fb351a6d6",
 CellID->1262274862],
Cell[CellGroupData[{
Cell[112067, 3077, 808, 23, 54, "Input",ExpressionUUID->"88f89441-8efb-4be7-bff0-dc4425babb62",
 CellID->2006835554],
Cell[112878, 3102, 528, 14, 49, "Output",ExpressionUUID->"25a94646-dff8-4dda-9d13-ec36478eeabc",
 CellID->299601972]
}, Open  ]],
Cell[113421, 3119, 924, 15, 222, "Text",ExpressionUUID->"db8c2ddc-7e3e-4628-9805-556881cf5ae1",
 CellID->2030828202],
Cell[114348, 3136, 200, 2, 31, "SubitemNumbered",ExpressionUUID->"16d12801-d50a-45f6-9587-70299cc6be64",
 CellID->2096217178],
Cell[114551, 3140, 190, 2, 45, "Text",ExpressionUUID->"d4151167-01c3-4919-bd0f-6d38951b0133",
 CellID->1652881611],
Cell[CellGroupData[{
Cell[114766, 3146, 852, 24, 54, "Input",ExpressionUUID->"ca0507cf-b29d-4d02-89e8-2cdac3e436cf",
 CellID->132778485],
Cell[115621, 3172, 3478, 127, 177, "Output",ExpressionUUID->"9db6ae33-c20e-4bd8-b905-91c0ff666af7",
 CellID->2077431279]
}, Open  ]],
Cell[119114, 3302, 421, 7, 104, "Text",ExpressionUUID->"938cb5ca-cf60-4b33-a538-0787e55b733e",
 CellID->499341597],
Cell[119538, 3311, 193, 2, 38, "ItemNumbered",ExpressionUUID->"e9290740-6c29-4f13-aeaa-a9758f4cab1b",
 CellID->615398885],
Cell[119734, 3315, 203, 3, 45, "Text",ExpressionUUID->"87c4c47d-9f2c-4ac0-9ecd-9acbe6ead9e3",
 CellID->727816243],
Cell[119940, 3320, 603, 9, 163, "Text",ExpressionUUID->"a97bfeaf-9364-4200-b781-1f7ea834ae0f",
 CellID->340742789],
Cell[CellGroupData[{
Cell[120568, 3333, 1085, 30, 101, "Input",ExpressionUUID->"6736b916-a640-4b52-9508-b4c349aaa3c6",
 CellID->780927452],
Cell[121656, 3365, 2072, 62, 185, "Output",ExpressionUUID->"bb0f148b-c792-47fa-9be7-03e068d811c2",
 CellID->377225784]
}, Open  ]],
Cell[123743, 3430, 330, 6, 75, "Text",ExpressionUUID->"858bb96e-cc29-45c6-b91c-090cd9a1bf94",
 CellID->127977162],
Cell[CellGroupData[{
Cell[124098, 3440, 1083, 30, 101, "Input",ExpressionUUID->"0bd12580-aeb8-4f44-ae17-4134d2dfc79c",
 CellID->1765918034],
Cell[125184, 3472, 1908, 59, 115, "Output",ExpressionUUID->"1c9afac9-8dcb-4b73-a89f-b14a7266bf56",
 CellID->974711517]
}, Open  ]],
Cell[127107, 3534, 267, 6, 31, "Input",ExpressionUUID->"c914395f-19df-4592-94f8-000ecd1c6e41",
 CellID->51217874],
Cell[127377, 3542, 193, 3, 45, "Text",ExpressionUUID->"3abe4567-95cd-426c-8395-80b6ee337d95",
 CellID->78484454],
Cell[127573, 3547, 480, 7, 134, "Text",ExpressionUUID->"01c93d96-dcae-4322-8d71-9d2fe72d729a",
 CellID->533259120],
Cell[CellGroupData[{
Cell[128078, 3558, 600, 17, 31, "Input",ExpressionUUID->"0dd53bb3-3d6b-4601-a940-68ff0e2519f5",
 CellID->388780197],
Cell[128681, 3577, 621, 18, 74, "Output",ExpressionUUID->"0e6c40f4-873c-4e89-80ea-92b118acd7ea",
 CellID->1668058186]
}, Open  ]],
Cell[129317, 3598, 180, 2, 45, "Text",ExpressionUUID->"a34a5b6a-30b7-4b29-ad49-9632e4e66091",
 CellID->139349159],
Cell[CellGroupData[{
Cell[129522, 3604, 598, 17, 31, "Input",ExpressionUUID->"250cb1bf-7599-4f88-ab21-33530f7559d5",
 CellID->1284140083],
Cell[130123, 3623, 621, 18, 74, "Output",ExpressionUUID->"2958b386-3846-4c7f-92d6-6f0755c740c2",
 CellID->1328219837]
}, Open  ]],
Cell[130759, 3644, 422, 7, 104, "Text",ExpressionUUID->"885278d5-2504-47d8-99d2-88792eccd983",
 CellID->298289894],
Cell[131184, 3653, 179, 2, 38, "ItemNumbered",ExpressionUUID->"565020ac-4501-4fd6-bc77-d2e5debaa37d",
 CellID->1894551982],
Cell[131366, 3657, 355, 7, 75, "Text",ExpressionUUID->"c9b6f47c-092d-405f-b3ad-b0b9845458da",
 CellID->995127405],
Cell[CellGroupData[{
Cell[131746, 3668, 693, 19, 31, "Input",ExpressionUUID->"56182143-6fc0-4543-822b-6ee825aa330b",
 CellID->1662901366],
Cell[132442, 3689, 529, 14, 49, "Output",ExpressionUUID->"8fa4e93a-d1db-432d-bdbe-6e7ed6f6edd2",
 CellID->998120560]
}, Open  ]],
Cell[CellGroupData[{
Cell[133008, 3708, 691, 19, 31, "Input",ExpressionUUID->"7da10cc7-a13a-416e-8eb3-0b431406a8cd",
 CellID->1637710650],
Cell[133702, 3729, 529, 14, 49, "Output",ExpressionUUID->"53fd9a26-d291-4f51-ba23-910f79671a16",
 CellID->169290767]
}, Open  ]],
Cell[CellGroupData[{
Cell[134268, 3748, 695, 19, 31, "Input",ExpressionUUID->"6c5e40cc-27c4-4563-8392-ad6924a1ef47",
 CellID->1167542403],
Cell[134966, 3769, 506, 13, 45, "Output",ExpressionUUID->"70c45393-2415-4237-92d2-6d16d84237a9",
 CellID->1813231560]
}, Open  ]],
Cell[135487, 3785, 647, 10, 163, "Text",ExpressionUUID->"5c3706b2-9fe3-4ef0-8279-d0ea8ab91969",
 CellID->231934081],
Cell[136137, 3797, 204, 2, 38, "ItemNumbered",ExpressionUUID->"a86df6c9-1767-4780-a215-ee159c064f53",
 CellID->1941757593],
Cell[136344, 3801, 214, 4, 45, "Text",ExpressionUUID->"a3f8e578-c5fb-4a7d-9df7-d5974e9e9ff4",
 CellID->1958365739],
Cell[CellGroupData[{
Cell[136583, 3809, 757, 21, 54, "Input",ExpressionUUID->"d142f23f-c789-4b9a-94d6-cce32fa97dcd",
 CellID->1918601451],
Cell[137343, 3832, 514, 13, 45, "Output",ExpressionUUID->"8af72c81-b72d-4326-8b34-ff98f2d03075",
 CellID->1741357684]
}, Open  ]],
Cell[137872, 3848, 464, 7, 134, "Text",ExpressionUUID->"22cddb9c-18e0-48a4-a05b-1cd27fab0f18",
 CellID->1091453672],
Cell[CellGroupData[{
Cell[138361, 3859, 228, 4, 31, "Input",ExpressionUUID->"80e604e3-2e0e-4966-8861-2480d3df8bb2",
 CellID->1398297786],
Cell[138592, 3865, 173, 3, 45, "Output",ExpressionUUID->"c3a0dbc2-2efa-41b0-a0d5-418494ec1c51",
 CellID->1528244771]
}, Open  ]],
Cell[138780, 3871, 424, 7, 104, "Text",ExpressionUUID->"3be4f758-c918-4a67-914d-78441fcbcbb3",
 CellID->1305448077],
Cell[CellGroupData[{
Cell[139229, 3882, 795, 22, 54, "Input",ExpressionUUID->"81270da5-f0a4-4377-a776-db0198951541",
 CellID->1578965662],
Cell[140027, 3906, 529, 14, 49, "Output",ExpressionUUID->"294aa88a-6111-4211-abbe-1afbb9fc9118",
 CellID->828349579]
}, Open  ]],
Cell[140571, 3923, 298, 5, 75, "Text",ExpressionUUID->"f8db10f9-c5f8-4c97-9c64-0f376f0b03a0",
 CellID->76205940],
Cell[CellGroupData[{
Cell[140894, 3932, 759, 21, 54, "Input",ExpressionUUID->"d479c408-a549-4022-b2cd-b8851b9a1288",
 CellID->1698596940],
Cell[141656, 3955, 511, 13, 45, "Output",ExpressionUUID->"9410831a-b1c1-4a7d-a822-caea1131800e",
 CellID->327501962]
}, Open  ]],
Cell[142182, 3971, 176, 2, 45, "Text",ExpressionUUID->"055f0d77-b133-4391-9c40-5f344608fc54",
 CellID->1109208651],
Cell[CellGroupData[{
Cell[142383, 3977, 796, 22, 54, "Input",ExpressionUUID->"3e24ead3-66b4-4c6f-a2a4-75a350501413",
 CellID->164257750],
Cell[143182, 4001, 505, 13, 45, "Output",ExpressionUUID->"a1a1d8ea-00c8-4dae-9f35-82a1cfb3f5c5",
 CellID->231466176]
}, Open  ]],
Cell[143702, 4017, 365, 6, 104, "Text",ExpressionUUID->"8ef674c2-c741-418c-8723-371d530b7289",
 CellID->472534114],
Cell[144070, 4025, 217, 4, 38, "ItemNumbered",ExpressionUUID->"c0f0e43a-dbbc-4de5-b864-0e785caa4b81",
 CellID->381716862],
Cell[144290, 4031, 262, 5, 75, "Text",ExpressionUUID->"fe2d3f0e-1b89-4632-8ef7-ebf89ea5c550",
 CellID->981646045],
Cell[CellGroupData[{
Cell[144577, 4040, 706, 20, 31, "Input",ExpressionUUID->"6f617126-d3fb-485e-823e-4ba726d0b1e9",
 CellID->244179813],
Cell[145286, 4062, 588, 17, 45, "Output",ExpressionUUID->"64726729-7390-46b3-8729-fc0a2ec4ff51",
 CellID->856240989]
}, Open  ]],
Cell[145889, 4082, 523, 9, 104, "Text",ExpressionUUID->"c91a576d-206f-4e8a-b8a2-cab046936569",
 CellID->554383576],
Cell[CellGroupData[{
Cell[146437, 4095, 621, 17, 31, "Input",ExpressionUUID->"7f904884-6ca2-4f58-9b37-084674831a48",
 CellID->1209279588],
Cell[147061, 4114, 612, 18, 45, "Output",ExpressionUUID->"894431ba-5c4d-473a-8470-be7a3bf627e1",
 CellID->965948]
}, Open  ]],
Cell[147688, 4135, 547, 9, 134, "Text",ExpressionUUID->"ff22546e-988d-492d-aaed-dc1a5136091c",
 CellID->1202302507],
Cell[148238, 4146, 427, 7, 104, "Text",ExpressionUUID->"129bd1ce-1345-4e06-adb3-626cc3ee3f68",
 CellID->960878265],
Cell[CellGroupData[{
Cell[148690, 4157, 233, 4, 31, "Input",ExpressionUUID->"edd53d2a-73bc-4e7b-9bb0-7f5cd8504ed6",
 CellID->1575068124],
Cell[148926, 4163, 173, 3, 45, "Output",ExpressionUUID->"65457e59-4d41-4380-9808-1c1927ac7bff",
 CellID->1400852069]
}, Open  ]],
Cell[149114, 4169, 238, 4, 45, "Text",ExpressionUUID->"020f4ee7-92ee-4ce1-ae5c-269d8c94f1d6",
 CellID->1257501622],
Cell[CellGroupData[{
Cell[149377, 4177, 679, 19, 31, "Input",ExpressionUUID->"43bb397d-f30f-467f-8f22-8683d9f98a44",
 CellID->1443190827],
Cell[150059, 4198, 614, 18, 45, "Output",ExpressionUUID->"6c1dac7b-67e8-4b0f-90d3-c2efe81b913b",
 CellID->1389370231]
}, Open  ]],
Cell[150688, 4219, 212, 4, 45, "Text",ExpressionUUID->"d664c5e7-e92a-4527-9fbd-ff70fc68440c",
 CellID->1586267165],
Cell[150903, 4225, 166, 2, 38, "ItemNumbered",ExpressionUUID->"b04b3eee-bcd8-40eb-af95-f81d8b9185bc",
 CellID->1530248297],
Cell[151072, 4229, 621, 10, 134, "Text",ExpressionUUID->"f56e858f-e687-4109-8b33-d4bff672cdac",
 CellID->618971207],
Cell[CellGroupData[{
Cell[151718, 4243, 456, 12, 57, "Input",ExpressionUUID->"4f7ebdbd-a4fb-4b71-b87e-c8c8dfd9b1cf",
 CellID->1604957631],
Cell[152177, 4257, 730, 22, 47, "Output",ExpressionUUID->"74fde1ca-cf68-4ab3-a592-d5e196ab1984",
 CellID->190372218]
}, Open  ]],
Cell[152922, 4282, 264, 5, 75, "Text",ExpressionUUID->"414dd231-0b43-4bf4-a377-7eefddc7ee4e",
 CellID->255278047],
Cell[CellGroupData[{
Cell[153211, 4291, 237, 4, 31, "Input",ExpressionUUID->"29cb9cf5-6186-4fea-90a2-7726ed1be2c1",
 CellID->1872957697],
Cell[153451, 4297, 1611, 47, 130, "Output",ExpressionUUID->"4bcb9652-19d6-4a07-9fbc-31a7021ac183",
 CellID->526329663]
}, Open  ]],
Cell[155077, 4347, 394, 7, 104, "Text",ExpressionUUID->"cbd91a19-5b71-4723-b432-1957c9980b21",
 CellID->537504048],
Cell[CellGroupData[{
Cell[155496, 4358, 253, 5, 31, "Input",ExpressionUUID->"45e01fe0-61aa-4d5e-8975-0abdddc723c7",
 CellID->794943911],
Cell[155752, 4365, 770, 23, 49, "Output",ExpressionUUID->"754ffb95-2ff2-4ecc-bab1-b7e8b47f3519",
 CellID->1521715091]
}, Open  ]],
Cell[156537, 4391, 564, 9, 134, "Text",ExpressionUUID->"d8cc46de-3d29-48d3-a48f-966fc9295451",
 CellID->1340243056],
Cell[CellGroupData[{
Cell[157126, 4404, 381, 10, 31, "Input",ExpressionUUID->"0f634e83-6ec2-46d7-95fc-509f4cf8adc4",
 CellID->953239710],
Cell[157510, 4416, 640, 18, 49, "Output",ExpressionUUID->"ec6cbbbc-7ae2-46d5-b924-33483d17ab36",
 CellID->1358070797]
}, Open  ]],
Cell[158165, 4437, 284, 5, 45, "Text",ExpressionUUID->"5dca89e2-4f9c-4985-8fba-a39a504026a1",
 CellID->1673334137],
Cell[CellGroupData[{
Cell[158474, 4446, 497, 13, 54, "Input",ExpressionUUID->"1260f789-cfa4-4be0-9b48-198b964587d0",
 CellID->1475452612],
Cell[158974, 4461, 879, 27, 49, "Output",ExpressionUUID->"cfedcd1d-b891-4d3d-935b-32fb19423c72",
 CellID->588656271]
}, Open  ]],
Cell[159868, 4491, 407, 7, 104, "Text",ExpressionUUID->"afc13f9c-116d-4567-b861-d874db3ba853",
 CellID->88784968],
Cell[CellGroupData[{
Cell[160300, 4502, 1004, 29, 101, "Input",ExpressionUUID->"c4599e42-c71e-4e05-b584-8ce780f6fad8",
 CellID->1405997541],
Cell[161307, 4533, 930, 28, 76, "Output",ExpressionUUID->"b18ad989-005c-4034-863d-f09653089ff9",
 CellID->1133823831]
}, Open  ]],
Cell[162252, 4564, 369, 7, 75, "Text",ExpressionUUID->"98586c3d-7dee-4ad8-822f-d2cb857c77f0",
 CellID->2009441282],
Cell[CellGroupData[{
Cell[162646, 4575, 493, 14, 31, "Input",ExpressionUUID->"bd999d88-3c3e-491d-a9c1-982a8ab8e0b4",
 CellID->175503233],
Cell[163142, 4591, 1113, 37, 74, "Output",ExpressionUUID->"91f18f45-e5ab-48c4-afd8-875802d004b7",
 CellID->1430440295]
}, Open  ]],
Cell[164270, 4631, 282, 6, 31, "Input",ExpressionUUID->"da0626db-2c9a-4e6d-a25f-d3ba1d6fe2ff",
 CellID->1020394511]
}, Open  ]],
Cell[CellGroupData[{
Cell[164589, 4642, 258, 4, 66, "Subsubsection",ExpressionUUID->"2ed84018-8d1a-4b31-b3a3-cd025bc9cb02",
 CellTags->"4.2.5",
 CellID->723417659],
Cell[164850, 4648, 956, 15, 252, "Text",ExpressionUUID->"1190430e-6ae1-4842-8dbc-8ac49118c590",
 CellID->1575669146],
Cell[165809, 4665, 176, 2, 38, "ItemNumbered",ExpressionUUID->"2e30b7a1-b508-417a-89a5-22ef1d8c9550",
 CellID->1454782552],
Cell[165988, 4669, 210, 2, 45, "Text",ExpressionUUID->"e8f00a66-6966-473a-bcf3-f029fcacdbdd",
 CellID->1429030369],
Cell[CellGroupData[{
Cell[166223, 4675, 489, 12, 54, "Input",ExpressionUUID->"6cd73bf1-7d0d-40e8-82bf-73b159546ed4",
 CellID->1992161910],
Cell[166715, 4689, 367, 8, 45, "Output",ExpressionUUID->"52accb52-7f65-4082-b163-7378f8550153",
 CellID->737808046]
}, Open  ]],
Cell[167097, 4700, 180, 2, 45, "Text",ExpressionUUID->"1529b607-cb20-48eb-9d51-d01fb4d8166d",
 CellID->769251344],
Cell[CellGroupData[{
Cell[167302, 4706, 443, 11, 31, "Input",ExpressionUUID->"0e0c3778-4093-4ac5-ac47-6b3f57aab729",
 CellID->678428516],
Cell[167748, 4719, 400, 10, 45, "Output",ExpressionUUID->"2b06f6f3-ec13-4d4f-ad74-2d2a7b00f5ff",
 CellID->1777564916]
}, Open  ]],
Cell[168163, 4732, 287, 5, 75, "Text",ExpressionUUID->"8cc65787-8281-436f-a8f6-1cb50a4ce031",
 CellID->1888529795],
Cell[CellGroupData[{
Cell[168475, 4741, 232, 4, 31, "Input",ExpressionUUID->"ed140cd5-a985-4b63-8738-2baf689d0fff",
 CellID->485105927],
Cell[168710, 4747, 367, 8, 45, "Output",ExpressionUUID->"fcd546ec-f324-4a5e-887b-18d5de125610",
 CellID->575402752]
}, Open  ]],
Cell[CellGroupData[{
Cell[169114, 4760, 261, 5, 31, "Input",ExpressionUUID->"51e53eaa-2d8e-4677-8ca2-448ef73b960e",
 CellID->675190423],
Cell[169378, 4767, 366, 8, 45, "Output",ExpressionUUID->"d62aecd8-31ce-4f6b-a152-d0c48bb50a90",
 CellID->1159532695]
}, Open  ]],
Cell[169759, 4778, 210, 2, 45, "Text",ExpressionUUID->"5a9130fb-5b2d-4893-9695-a1525409dc45",
 CellID->1999391987],
Cell[CellGroupData[{
Cell[169994, 4784, 234, 4, 31, "Input",ExpressionUUID->"f1243037-c675-44b8-bbac-4038533f91d5",
 CellID->1290960210],
Cell[170231, 4790, 366, 8, 45, "Output",ExpressionUUID->"faea7af4-5740-42af-8e21-d663567f1304",
 CellID->1343236646]
}, Open  ]],
Cell[170612, 4801, 212, 4, 45, "Text",ExpressionUUID->"b9f8cdb3-be92-41a9-b02f-ef70b37fd3f4",
 CellID->1430212058],
Cell[170827, 4807, 177, 2, 38, "ItemNumbered",ExpressionUUID->"559266ea-0828-4252-bb9d-647e50b42fcd",
 CellID->789597935],
Cell[171007, 4811, 163, 2, 45, "Text",ExpressionUUID->"cf013fd9-cbdf-40bf-9c8b-0e28dd777a7c",
 CellID->1471038732],
Cell[CellGroupData[{
Cell[171195, 4817, 489, 12, 54, "Input",ExpressionUUID->"a3f82e70-6c70-4c5f-b3a7-fa0d9a916ed0",
 CellID->172245161],
Cell[171687, 4831, 355, 8, 45, "Output",ExpressionUUID->"801a1c77-e39f-4834-83b5-da154b2c7cfa",
 CellID->1288573259]
}, Open  ]],
Cell[172057, 4842, 220, 4, 45, "Text",ExpressionUUID->"15fcf467-8b12-48fb-b15f-68f61de50873",
 CellID->1825667665],
Cell[CellGroupData[{
Cell[172302, 4850, 404, 9, 31, "Input",ExpressionUUID->"2f6c68b5-9884-4862-b0c6-90e57b17d6e8",
 CellID->1156632543],
Cell[172709, 4861, 364, 9, 45, "Output",ExpressionUUID->"8b99cdf6-746a-496a-bc2d-48789933d91a",
 CellID->2016336698]
}, Open  ]],
Cell[173088, 4873, 162, 2, 45, "Text",ExpressionUUID->"63e1d4fa-8ba8-4bf6-a3b9-546d6c0a2954",
 CellID->1278933626],
Cell[CellGroupData[{
Cell[173275, 4879, 227, 4, 31, "Input",ExpressionUUID->"ce465d4c-6848-407e-a6cc-e0285d401aec",
 CellID->742942174],
Cell[173505, 4885, 346, 8, 45, "Output",ExpressionUUID->"e8548aed-0d27-4646-a8d2-c494bfa0bbb2",
 CellID->1041760144]
}, Open  ]],
Cell[CellGroupData[{
Cell[173888, 4898, 229, 4, 31, "Input",ExpressionUUID->"b345d757-a7fb-4ebd-9fff-f4515d3a0d1f",
 CellID->252257081],
Cell[174120, 4904, 248, 5, 45, "Output",ExpressionUUID->"71ab2b47-c71e-43a5-a819-7436c2895700",
 CellID->1866475176]
}, Open  ]],
Cell[174383, 4912, 174, 2, 38, "ItemNumbered",ExpressionUUID->"45f2c759-2595-485c-85ea-dc8cd2977982",
 CellID->1554651303],
Cell[174560, 4916, 171, 2, 45, "Text",ExpressionUUID->"fcf87c3d-d06d-404e-940d-7155608d0492",
 CellID->590916472],
Cell[174734, 4920, 593, 16, 54, "Input",ExpressionUUID->"2a1ea21e-dcbd-47b3-9081-e7da7d364667",
 CellID->1512350813],
Cell[175330, 4938, 172, 2, 45, "Text",ExpressionUUID->"ec539d6e-9e29-4fe6-942f-fab48ee4e442",
 CellID->404080913],
Cell[CellGroupData[{
Cell[175527, 4944, 254, 5, 31, "Input",ExpressionUUID->"91bcbfd4-cc9f-44e0-a8db-4b80e7ad4a90",
 CellID->241902147],
Cell[175784, 4951, 226, 5, 45, "Output",ExpressionUUID->"359fb66d-14bd-4e84-897b-b28c3cd0288f",
 CellID->2074496097]
}, Open  ]],
Cell[CellGroupData[{
Cell[176047, 4961, 253, 5, 31, "Input",ExpressionUUID->"dc235547-f879-49d2-bb8e-41054e14b894",
 CellID->238394837],
Cell[176303, 4968, 173, 3, 45, "Output",ExpressionUUID->"a886c380-79e5-40a8-85b0-6dbb22185c36",
 CellID->1213246863]
}, Open  ]],
Cell[176491, 4974, 323, 6, 75, "Text",ExpressionUUID->"baebe0ad-51aa-4e06-8aa1-1f7dc9845f9b",
 CellID->682798176],
Cell[CellGroupData[{
Cell[176839, 4984, 224, 4, 31, "Input",ExpressionUUID->"c960f43d-f693-469a-84be-c58c3a6c0722",
 CellID->1654981903],
Cell[177066, 4990, 202, 4, 45, "Output",ExpressionUUID->"d216e5d2-0be6-498f-ab59-7190b674e78b",
 CellID->928865543]
}, Open  ]],
Cell[177283, 4997, 481, 8, 134, "Text",ExpressionUUID->"e72d8346-b642-42ac-a574-f7974a62114e",
 CellID->1384551158],
Cell[177767, 5007, 248, 5, 31, "Input",ExpressionUUID->"50fea5ac-a103-45bc-bf5f-c49cd65cbaee",
 CellID->582965527],
Cell[178018, 5014, 160, 2, 38, "ItemNumbered",ExpressionUUID->"f153fe81-788a-4936-8635-8c5e47f2bdd8",
 CellID->772310137],
Cell[178181, 5018, 826, 12, 252, "Text",ExpressionUUID->"baf6966f-24d7-4d57-a14f-d94a8629634a",
 CellID->825310091],
Cell[179010, 5032, 173, 2, 45, "Text",ExpressionUUID->"456848cc-d372-448a-89f4-c591f011ff82",
 CellID->409001111],
Cell[179186, 5036, 511, 13, 54, "Input",ExpressionUUID->"6b330841-75ae-4e55-bd65-73382de30d8e",
 CellID->1050200292],
Cell[179700, 5051, 180, 2, 45, "Text",ExpressionUUID->"002b3aad-7946-422d-9952-e4b99d2599cd",
 CellID->545314814],
Cell[CellGroupData[{
Cell[179905, 5057, 282, 7, 31, "Input",ExpressionUUID->"7a4bdc8e-9ff5-4776-9af5-1800174a8ac7",
 CellID->1020617598],
Cell[180190, 5066, 226, 5, 45, "Output",ExpressionUUID->"989be727-8154-4463-88a6-ebe361304f81",
 CellID->975491865]
}, Open  ]],
Cell[CellGroupData[{
Cell[180453, 5076, 544, 15, 54, "Input",ExpressionUUID->"ff7875fd-9ea3-448a-a465-cc527299357a",
 CellID->1201613857],
Cell[181000, 5093, 227, 5, 45, "Output",ExpressionUUID->"dbe304fd-3e0f-42c4-b7a7-c9f669a62360",
 CellID->1073962810]
}, Open  ]],
Cell[CellGroupData[{
Cell[181264, 5103, 544, 15, 54, "Input",ExpressionUUID->"966300f2-aa75-4d3c-b6da-bd8d7021a9c0",
 CellID->492894635],
Cell[181811, 5120, 253, 5, 45, "Output",ExpressionUUID->"3ccaa118-09fc-40aa-8da3-164f7a166a17",
 CellID->1679004104]
}, Open  ]],
Cell[182079, 5128, 872, 13, 281, "Text",ExpressionUUID->"afefe2b5-7cd4-494a-ab7a-2e1f39de90ac",
 CellID->973592604],
Cell[182954, 5143, 375, 6, 104, "Text",ExpressionUUID->"119b7957-f6cd-47ce-88f8-590cb9c43a1a",
 CellID->333502563]
}, Open  ]],
Cell[CellGroupData[{
Cell[183366, 5154, 196, 3, 66, "Subsubsection",ExpressionUUID->"09784536-1a61-4611-8aec-f64e489a6923",
 CellTags->"4.2.6",
 CellID->1220810882],
Cell[183565, 5159, 498, 8, 134, "Text",ExpressionUUID->"cc5a53fc-6e29-4c23-aa15-52a2a7164bc8",
 CellID->1109730336],
Cell[184066, 5169, 534, 9, 163, "Text",ExpressionUUID->"05b1e328-8ea3-4717-be21-9ef4b3c60393",
 CellID->177988772],
Cell[184603, 5180, 188, 2, 38, "ItemNumbered",ExpressionUUID->"9f2fa61a-272c-4bab-8407-19c187772b80",
 CellID->1601231868],
Cell[184794, 5184, 216, 4, 45, "Text",ExpressionUUID->"a830eef0-2e34-47be-aaa6-ce6f47bd8ad8",
 CellID->1786424919],
Cell[185013, 5190, 170, 2, 31, "Subitem",ExpressionUUID->"0ba0c518-d2bf-4869-ae9d-e5344972a72a",
 CellID->1655038174],
Cell[185186, 5194, 149, 2, 45, "Text",ExpressionUUID->"9a7be66e-7851-4543-8a34-2647fdbb6f81",
 CellID->1607776685],
Cell[CellGroupData[{
Cell[185360, 5200, 653, 16, 54, "Input",ExpressionUUID->"10837d03-e71f-4400-8b1b-2e750ce6040e",
 CellID->2089613529],
Cell[186016, 5218, 478, 11, 67, "Output",ExpressionUUID->"68808b3a-02f6-41db-a68b-cea8c747da9c",
 CellID->392390973]
}, Open  ]],
Cell[186509, 5232, 302, 6, 75, "Text",ExpressionUUID->"515aa297-2d36-4a9d-81e4-09f6e2f91406",
 CellID->1142505597],
Cell[CellGroupData[{
Cell[186836, 5242, 254, 5, 31, "Input",ExpressionUUID->"244ede59-f59a-4ac2-bdd4-1a26ab60c80a",
 CellID->366291280],
Cell[187093, 5249, 477, 11, 67, "Output",ExpressionUUID->"8e86f4b9-1505-4646-8f7c-cd9146538cb5",
 CellID->1182504481]
}, Open  ]],
Cell[187585, 5263, 237, 5, 75, "Text",ExpressionUUID->"06537a21-9412-45e4-a3a3-fdb1d7dc236a",
 CellID->1020311376],
Cell[CellGroupData[{
Cell[187847, 5272, 287, 6, 31, "Input",ExpressionUUID->"0f69d54e-3909-49f9-be1c-b4c5ffd08e87",
 CellID->1323602477],
Cell[188137, 5280, 599, 15, 67, "Output",ExpressionUUID->"35915d61-e45f-43d8-bedf-73d42967bca9",
 CellID->1408712066]
}, Open  ]],
Cell[188751, 5298, 172, 2, 31, "Subitem",ExpressionUUID->"591bc252-7369-4afc-a9fb-1018ba0da95a",
 CellID->1095132720],
Cell[188926, 5302, 317, 6, 75, "Text",ExpressionUUID->"8792e9a2-899b-439f-9dc5-6caedf3b97ff",
 CellID->763024792],
Cell[CellGroupData[{
Cell[189268, 5312, 381, 9, 31, "Input",ExpressionUUID->"787bd512-9b1a-4d92-91ff-89774bf6feb5",
 CellID->1098786749],
Cell[189652, 5323, 464, 9, 32, "Message",ExpressionUUID->"f0f31085-27be-4890-af58-5d331248c321",
 CellID->1763802500],
Cell[190119, 5334, 463, 9, 32, "Message",ExpressionUUID->"5e9c0258-9165-4f9f-8d0e-e8e6c7943872",
 CellID->364354312],
Cell[190585, 5345, 466, 9, 32, "Message",ExpressionUUID->"715d710c-2943-42d7-af5f-a35d5e76f1c9",
 CellID->1227044187],
Cell[191054, 5356, 476, 9, 32, "Message",ExpressionUUID->"9607f9b3-9111-4cfc-a05b-d6904c39bf46",
 CellID->646188768],
Cell[191533, 5367, 451, 9, 45, "Output",ExpressionUUID->"68a33b32-1ed8-4266-a31b-6f5012f7e1a1",
 CellID->669820897]
}, Open  ]],
Cell[191999, 5379, 745, 15, 75, "Text",ExpressionUUID->"119a9643-30b5-4b39-8888-9f08e1b6e096",
 CellID->1483162083],
Cell[CellGroupData[{
Cell[192769, 5398, 387, 9, 31, "Input",ExpressionUUID->"149583c5-b799-45b1-90b2-666421bbf611",
 CellID->1376176265],
Cell[193159, 5409, 269, 6, 45, "Output",ExpressionUUID->"d56e4a13-75c7-4303-bf71-547bafcd84d2",
 CellID->1314588865]
}, Open  ]],
Cell[193443, 5418, 169, 2, 31, "Subitem",ExpressionUUID->"afe9ed66-abe4-44d5-a532-1e6a992862c5",
 CellID->507596004],
Cell[193615, 5422, 335, 6, 75, "Text",ExpressionUUID->"a3127c69-c8b6-4ed0-8087-83cc3706ea96",
 CellID->1876623582],
Cell[CellGroupData[{
Cell[193975, 5432, 972, 27, 78, "Input",ExpressionUUID->"5c8554ac-20fc-4c52-859e-3402f7f07513",
 CellID->678405884],
Cell[194950, 5461, 778, 22, 49, "Output",ExpressionUUID->"1d0a0ea1-0a7f-4162-ae1b-cef17a9c8e6a",
 CellID->542943180]
}, Open  ]],
Cell[195743, 5486, 229, 4, 45, "Text",ExpressionUUID->"743c8e3c-5c88-424d-9893-28ea3c6a1849",
 CellID->1136819129],
Cell[CellGroupData[{
Cell[195997, 5494, 280, 6, 31, "Input",ExpressionUUID->"7a01ed55-f8bf-45ed-b830-5ffbbcd816c6",
 CellID->1605245690],
Cell[196280, 5502, 913, 26, 77, "Output",ExpressionUUID->"65565560-6214-4eeb-8b74-c63d2d46155e",
 CellID->337515367]
}, Open  ]],
Cell[197208, 5531, 169, 2, 31, "Subitem",ExpressionUUID->"1e41f949-6570-438f-8537-6b34167d7b8f",
 CellID->282494594],
Cell[197380, 5535, 353, 6, 104, "Text",ExpressionUUID->"4a13ffe7-e754-4cae-a26a-1c999b9e16c5",
 CellID->309859911],
Cell[197736, 5543, 251, 5, 31, "Input",ExpressionUUID->"6eaf9465-6c33-4b8a-a174-344220af43ad",
 CellID->1903699844],
Cell[197990, 5550, 256, 5, 75, "Text",ExpressionUUID->"26d6bf2d-5278-4c50-9d55-f508e26137b5",
 CellID->631891846],
Cell[CellGroupData[{
Cell[198271, 5559, 292, 6, 31, "Input",ExpressionUUID->"ce079675-0275-4d32-91ee-f5058dfffeac",
 CellID->1136559802],
Cell[198566, 5567, 715, 21, 45, "Output",ExpressionUUID->"17374af1-d410-426b-b5e2-61546d24216c",
 CellID->675237074]
}, Open  ]],
Cell[CellGroupData[{
Cell[199318, 5593, 277, 6, 31, "Input",ExpressionUUID->"0e2f30d6-7d93-433f-91d7-8e7eb84808bd",
 CellID->399911849],
Cell[199598, 5601, 587, 16, 45, "Output",ExpressionUUID->"a952310a-2a32-4392-b70b-c406523b1f64",
 CellID->1601730685]
}, Open  ]],
Cell[CellGroupData[{
Cell[200222, 5622, 282, 6, 31, "Input",ExpressionUUID->"ed26c8c0-cffe-4ce3-b436-1098bfa2b0f1",
 CellID->1086494748],
Cell[200507, 5630, 400, 10, 45, "Output",ExpressionUUID->"ee68297d-9dc2-4d57-9e7f-0e3ca17d90d3",
 CellID->691515309]
}, Open  ]],
Cell[200922, 5643, 476, 7, 134, "Text",ExpressionUUID->"d482399f-4ec9-484a-83c8-bf4cb2027d8a",
 CellID->116300799],
Cell[201401, 5652, 1049, 15, 281, "Text",ExpressionUUID->"466f04d2-1dda-43fb-86c0-b52e372ba027",
 CellID->1726904470],
Cell[202453, 5669, 221, 4, 38, "ItemNumbered",ExpressionUUID->"98b68ae4-5709-4dd6-b2dc-650c2a1a4ecb",
 CellID->336267753],
Cell[202677, 5675, 545, 8, 163, "Text",ExpressionUUID->"138a873b-9e27-4d06-96fc-e37ca0ee1d13",
 CellID->1622649414],
Cell[CellGroupData[{
Cell[203247, 5687, 261, 5, 31, "Input",ExpressionUUID->"25e10cfd-f633-4073-ab81-6849b5cd01d7",
 CellID->1853460764],
Cell[203511, 5694, 197, 4, 45, "Output",ExpressionUUID->"4bf50d4e-da51-4324-9548-3aaa6c56e040",
 CellID->759187083]
}, Open  ]],
Cell[203723, 5701, 339, 6, 75, "Text",ExpressionUUID->"ade6e1c4-e34d-4de7-aebe-0fc3e205e9c6",
 CellID->1456957154],
Cell[CellGroupData[{
Cell[204087, 5711, 285, 6, 31, "Input",ExpressionUUID->"7ce492e3-decb-4791-ae71-4f34ecfc2be9",
 CellID->1658992629],
Cell[204375, 5719, 229, 5, 45, "Output",ExpressionUUID->"203f7c77-2eb0-4c18-9462-f0413ddd36fe",
 CellID->1086743711]
}, Open  ]],
Cell[204619, 5727, 426, 7, 134, "Text",ExpressionUUID->"057fb315-132e-418c-b79a-4da7d3156bfe",
 CellID->553133042],
Cell[205048, 5736, 938, 14, 252, "Text",ExpressionUUID->"c8bf49a1-2c1d-4668-9498-2df28e3df73b",
 CellID->1452646491],
Cell[205989, 5752, 160, 2, 45, "Text",ExpressionUUID->"e8d9c72d-6165-4dc3-bb11-f7134bb8991e",
 CellID->968668434],
Cell[206152, 5756, 168, 2, 31, "Subitem",ExpressionUUID->"4b21fe62-8449-45be-9b99-b17f5b28c672",
 CellID->336842331],
Cell[206323, 5760, 252, 5, 75, "Text",ExpressionUUID->"514d35f7-d3ae-4199-bbd4-99933a043608",
 CellID->1131580228],
Cell[CellGroupData[{
Cell[206600, 5769, 540, 14, 54, "Input",ExpressionUUID->"c61aaea6-1692-47b2-8645-d35e8dc669d8",
 CellID->2108383503],
Cell[207143, 5785, 655, 20, 67, "Output",ExpressionUUID->"7cd52e13-4220-4de1-b9cd-51b88338eb49",
 CellID->128455942]
}, Open  ]],
Cell[207813, 5808, 154, 2, 45, "Text",ExpressionUUID->"0757feaf-0470-4fdc-af24-6e0a0b45d70a",
 CellID->920813046],
Cell[CellGroupData[{
Cell[207992, 5814, 311, 7, 31, "Input",ExpressionUUID->"dda77dc5-e5fc-420c-81f7-b395f3bcd4e6",
 CellID->782138437],
Cell[208306, 5823, 656, 20, 67, "Output",ExpressionUUID->"c3523b4e-04fc-4fe5-8e95-0e328b0000b7",
 CellID->1568019166]
}, Open  ]],
Cell[208977, 5846, 162, 2, 45, "Text",ExpressionUUID->"009a6d1c-c2a4-4c1e-be40-04f59cf7d761",
 CellID->739586769],
Cell[CellGroupData[{
Cell[209164, 5852, 341, 8, 31, "Input",ExpressionUUID->"9e1f9c9f-fc8d-4e6a-86c7-9968b02bc5d9",
 CellID->1152639968],
Cell[209508, 5862, 657, 20, 67, "Output",ExpressionUUID->"715025b3-e294-4fde-8c5a-95acfb2897a8",
 CellID->333589677]
}, Open  ]],
Cell[210180, 5885, 162, 2, 45, "Text",ExpressionUUID->"12845b92-6797-455c-8299-dbd2e3dec730",
 CellID->1709382669],
Cell[CellGroupData[{
Cell[210367, 5891, 430, 11, 31, "Input",ExpressionUUID->"4a14f869-efc1-4a97-b372-b6e1d1cd52af",
 CellID->1310601475],
Cell[210800, 5904, 656, 20, 67, "Output",ExpressionUUID->"eefbcb93-7da9-4bcd-a11c-46e35dc9a74e",
 CellID->1706469783]
}, Open  ]],
Cell[211471, 5927, 251, 5, 31, "Input",ExpressionUUID->"23b5d7d3-c59a-4de9-841a-bc4dd8925c9b",
 CellID->1694297747],
Cell[211725, 5934, 171, 2, 31, "Subitem",ExpressionUUID->"4d52822b-13b0-4769-ae26-008c1bdbf0ae",
 CellID->735533086],
Cell[211899, 5938, 427, 8, 104, "Text",ExpressionUUID->"7df36a0a-6020-4170-86af-310d299d4f63",
 CellID->873822635],
Cell[212329, 5948, 449, 11, 54, "Input",ExpressionUUID->"c0d4e3b9-321a-4374-aecb-aa470fdbb3be",
 CellID->1761894528],
Cell[212781, 5961, 178, 2, 45, "Text",ExpressionUUID->"b437fa9f-e685-4915-a1da-a1a2895453c4",
 CellID->132685100],
Cell[CellGroupData[{
Cell[212984, 5967, 524, 14, 54, "Input",ExpressionUUID->"a355d50a-f0d1-44ff-851d-d655ee42b1b0",
 CellID->1231699612],
Cell[213511, 5983, 388, 8, 45, "Output",ExpressionUUID->"435a9149-40b8-4f4e-ac0b-dd58b610762f",
 CellID->2003825507]
}, Open  ]],
Cell[213914, 5994, 254, 5, 75, "Text",ExpressionUUID->"9eb46a5a-800e-4d14-be04-611f33642d64",
 CellID->606337282],
Cell[CellGroupData[{
Cell[214193, 6003, 436, 11, 31, "Input",ExpressionUUID->"96460f26-01e7-483c-963f-7ca91ccba152",
 CellID->2025118410],
Cell[214632, 6016, 251, 5, 45, "Output",ExpressionUUID->"b1150ca0-2aec-44d4-860e-bae61d1bacfc",
 CellID->1802513612]
}, Open  ]],
Cell[214898, 6024, 450, 8, 104, "Text",ExpressionUUID->"2cc6f2e7-2eea-49ed-8c82-608896d63b84",
 CellID->1194415610],
Cell[CellGroupData[{
Cell[215373, 6036, 341, 8, 31, "Input",ExpressionUUID->"9427bf95-0d03-4d89-bf4a-cdd8793d2a84",
 CellID->2089590359],
Cell[215717, 6046, 229, 5, 45, "Output",ExpressionUUID->"f260d5b1-9a4e-4201-97b1-6af9a6e6ca7e",
 CellID->1457702041]
}, Open  ]],
Cell[215961, 6054, 177, 2, 45, "Text",ExpressionUUID->"b144dbcb-fd59-40de-aa24-b452e5c39675",
 CellID->120299844],
Cell[CellGroupData[{
Cell[216163, 6060, 313, 7, 31, "Input",ExpressionUUID->"ad5b5877-a1ed-4d4e-aa83-4e1a26aef7de",
 CellID->845524331],
Cell[216479, 6069, 225, 5, 45, "Output",ExpressionUUID->"c27dc5dc-ba86-4cb2-b671-726fe7a16c15",
 CellID->54234589]
}, Open  ]],
Cell[216719, 6077, 634, 10, 163, "Text",ExpressionUUID->"c7c3988a-ca42-4a2c-ad1f-52fb8c66205e",
 CellID->858272015],
Cell[217356, 6089, 194, 2, 45, "Text",ExpressionUUID->"4cd996f1-7685-4490-bcfc-21519249f12b",
 CellID->1945522786],
Cell[217553, 6093, 508, 13, 54, "Input",ExpressionUUID->"b61f2fb8-73bd-4c56-a045-e45b4470c30c",
 CellID->112894406],
Cell[218064, 6108, 166, 2, 45, "Text",ExpressionUUID->"de135f87-3044-4f9c-99f3-3b5e0d9dcd1b",
 CellID->1312704461],
Cell[CellGroupData[{
Cell[218255, 6114, 266, 5, 31, "Input",ExpressionUUID->"1b1af147-f01f-46a7-8773-60eed2b27bdf",
 CellID->1983643951],
Cell[218524, 6121, 229, 5, 45, "Output",ExpressionUUID->"dedc23c5-465e-4681-b358-c319f0187932",
 CellID->1919442609]
}, Open  ]],
Cell[218768, 6129, 607, 11, 134, "Text",ExpressionUUID->"77910239-c016-4d4a-885c-70fd2e05a910",
 CellID->572584229],
Cell[219378, 6142, 220, 3, 45, "Text",ExpressionUUID->"5a034509-8512-44f5-bb06-5c3109f07961",
 CellID->1902964616],
Cell[219601, 6147, 314, 5, 75, "Text",ExpressionUUID->"e7fe1b82-c76c-4cde-a7e3-c3dbbad05181",
 CellID->652346341],
Cell[CellGroupData[{
Cell[219940, 6156, 1195, 36, 101, "Input",ExpressionUUID->"e54ffbea-6f60-4407-be69-e82be7f9636b",
 CellID->373782444],
Cell[221138, 6194, 252, 5, 45, "Output",ExpressionUUID->"b3523b7a-f6d6-4c03-96e8-269eb1390e2a",
 CellID->849438994],
Cell[221393, 6201, 249, 5, 45, "Output",ExpressionUUID->"7d51fe1f-3e9c-4164-b27e-3d9a92ce5a3c",
 CellID->49886902],
Cell[221645, 6208, 249, 5, 45, "Output",ExpressionUUID->"86b085e4-f660-40a7-b2cc-fd578350be5a",
 CellID->930539584]
}, Open  ]],
Cell[221909, 6216, 225, 5, 45, "Text",ExpressionUUID->"394a3448-5d8c-4317-a84c-8314120e1fc8",
 CellID->1415239070],
Cell[CellGroupData[{
Cell[222159, 6225, 1364, 38, 148, "Input",ExpressionUUID->"0e46934d-d959-4535-b1f8-f54e62716f95",
 CellID->2065002278],
Cell[223526, 6265, 225, 5, 45, "Output",ExpressionUUID->"ac1cc7e8-33a3-4a9f-a4f3-6d1272fa8dfc",
 CellID->254712638]
}, Open  ]],
Cell[223766, 6273, 475, 8, 134, "Text",ExpressionUUID->"828ab468-a268-48dc-884e-56219f2c5848",
 CellID->1020398395],
Cell[224244, 6283, 814, 14, 252, "Text",ExpressionUUID->"195f343e-2fcf-4e9d-a440-ba1caa2ab9e4",
 CellID->45676509],
Cell[225061, 6299, 477, 12, 75, "Text",ExpressionUUID->"adceb201-0ba7-47c8-8240-71d8985619b3",
 CellID->751228912],
Cell[225541, 6313, 173, 2, 31, "Subitem",ExpressionUUID->"c4b3a3fd-d99e-4543-8d8d-abd688b2b21c",
 CellID->201829668],
Cell[225717, 6317, 369, 6, 104, "Text",ExpressionUUID->"c93f95d5-bd7a-46d8-be46-62ad7969f327",
 CellID->1993379669],
Cell[CellGroupData[{
Cell[226111, 6327, 344, 7, 54, "Input",ExpressionUUID->"543ebf26-0829-4ab5-98dd-74dd28f35a88",
 CellID->1069155629],
Cell[226458, 6336, 536, 10, 68, "Output",ExpressionUUID->"936601d0-8848-4313-8667-817c0076356c",
 CellID->1279508168]
}, Open  ]],
Cell[CellGroupData[{
Cell[227031, 6351, 304, 7, 31, "Input",ExpressionUUID->"e5b936cf-cc05-480a-8c63-aae5244ed187",
 CellID->708314754],
Cell[227338, 6360, 535, 10, 68, "Output",ExpressionUUID->"436888d6-c0c6-44e3-9cab-b5a489cda6f1",
 CellID->882926569]
}, Open  ]],
Cell[227888, 6373, 430, 8, 104, "Text",ExpressionUUID->"fe0b92bc-4fd9-42f2-8612-89976fd0d4fd",
 CellID->752840013],
Cell[CellGroupData[{
Cell[228343, 6385, 402, 10, 31, "Input",ExpressionUUID->"be59b614-ceb9-4c2a-9406-26d75ffccd51",
 CellID->1463958844],
Cell[228748, 6397, 646, 13, 68, "Output",ExpressionUUID->"29c61f20-b1ab-4f72-942e-278d7cbf780c",
 CellID->941312758]
}, Open  ]],
Cell[229409, 6413, 223, 5, 45, "Text",ExpressionUUID->"9bc34cf2-bde1-4e5a-921d-22f89fcb82fa",
 CellID->1369935424],
Cell[229635, 6420, 169, 2, 31, "Subitem",ExpressionUUID->"ea39b3e6-1c40-4a66-95d2-1396cd7f9110",
 CellID->1332491681],
Cell[229807, 6424, 388, 8, 75, "Text",ExpressionUUID->"0e8cb4a9-d483-4d5e-b200-aa90c94f93a3",
 CellID->1622961247],
Cell[CellGroupData[{
Cell[230220, 6436, 442, 11, 31, "Input",ExpressionUUID->"e8edf965-e3b6-4fd6-a477-6486e1f60b60",
 CellID->2039009746],
Cell[230665, 6449, 405, 9, 45, "Output",ExpressionUUID->"a777c967-0720-4df3-af76-408d2a867bda",
 CellID->154214974]
}, Open  ]],
Cell[231085, 6461, 359, 6, 104, "Text",ExpressionUUID->"3b2b7889-1d61-4329-88cd-71743b308ffe",
 CellID->1429299625],
Cell[231447, 6469, 171, 2, 31, "Subitem",ExpressionUUID->"926b4e32-a97a-4e46-8cd3-dfa46fb7d19d",
 CellID->571997208],
Cell[231621, 6473, 300, 5, 75, "Text",ExpressionUUID->"4ce17b90-147e-47b7-bc25-3b1727ff61cc",
 CellID->1315031362],
Cell[CellGroupData[{
Cell[231946, 6482, 561, 14, 54, "Input",ExpressionUUID->"ae7c4f01-5928-4f28-b07d-10173b8153c7",
 CellID->2105786761],
Cell[232510, 6498, 824, 25, 68, "Output",ExpressionUUID->"365c27a1-55ed-47be-a3e8-cc1bb5f92dc8",
 CellID->1122329786]
}, Open  ]],
Cell[233349, 6526, 401, 7, 104, "Text",ExpressionUUID->"6ed46d8e-b604-429d-90e6-f29011bcc5f2",
 CellID->1773250672],
Cell[233753, 6535, 530, 15, 31, "Input",ExpressionUUID->"6c479077-aa7b-4dbe-8ea0-19c18c818e35",
 CellID->679291209],
Cell[234286, 6552, 168, 2, 45, "Text",ExpressionUUID->"fcd1d49a-6afc-4cca-9695-c1844a4ee1e4",
 CellID->1845070393],
Cell[CellGroupData[{
Cell[234479, 6558, 274, 4, 54, "Input",ExpressionUUID->"5dc507e7-f4f1-4c9e-8ce3-de2fa61bed62",
 CellID->1783552704],
Cell[234756, 6564, 822, 25, 68, "Output",ExpressionUUID->"625b7db5-9708-4241-9cf0-4eb2a8964574",
 CellID->1201759105],
Cell[235581, 6591, 823, 25, 68, "Output",ExpressionUUID->"e2613448-fa06-4576-bba0-0b24c99c826e",
 CellID->881577700]
}, Open  ]],
Cell[236419, 6619, 304, 7, 31, "Input",ExpressionUUID->"cb182cab-0982-4910-9099-834c6c3bff93",
 CellID->1576982640]
}, Open  ]],
Cell[CellGroupData[{
Cell[236760, 6631, 163, 2, 66, "Subsubsection",ExpressionUUID->"2e0a85f0-8c16-48a4-b30b-7578a7662ad6",
 CellID->1773852468],
Cell[236926, 6635, 415, 7, 104, "Text",ExpressionUUID->"5d3f8cc7-a6e2-4d64-a301-f59026f58e7d",
 CellID->1770442022],
Cell[237344, 6644, 368, 6, 104, "Text",ExpressionUUID->"a7e064e3-b9e4-4627-bf86-035397fbd20f",
 CellID->2046805974],
Cell[237715, 6652, 395, 8, 31, "Input",ExpressionUUID->"78d7edef-6d62-4d09-a842-b829e46771de",
 CellID->51311546],
Cell[238113, 6662, 200, 2, 45, "Text",ExpressionUUID->"e055998c-1f05-4440-9efb-012aae695082",
 CellID->168001231],
Cell[CellGroupData[{
Cell[238338, 6668, 698, 18, 54, "Input",ExpressionUUID->"88d6c941-5ce3-4565-bcd6-6eab23344666",
 CellID->1803177259],
Cell[239039, 6688, 476, 14, 82, "Output",ExpressionUUID->"ef0443ec-329f-4eb2-b84f-2cff486c4817",
 CellID->557771357]
}, Open  ]],
Cell[239530, 6705, 570, 11, 134, "Text",ExpressionUUID->"fa729007-1b98-419a-b3a5-22f21dc72c67",
 CellID->1265710423],
Cell[CellGroupData[{
Cell[240125, 6720, 252, 5, 31, "Input",ExpressionUUID->"3e93fab1-1a4e-4da2-a043-864542f2a345",
 CellID->913750275],
Cell[240380, 6727, 193, 4, 45, "Output",ExpressionUUID->"01a5a628-fc70-4cc0-9b42-ba2c540b921a",
 CellID->1554530224]
}, Open  ]],
Cell[240588, 6734, 201, 2, 45, "Text",ExpressionUUID->"6bbaae14-825d-4f0b-930b-94a4665466de",
 CellID->703425366],
Cell[CellGroupData[{
Cell[240814, 6740, 545, 13, 31, "Input",ExpressionUUID->"498e4c43-a324-4759-a5e7-f0880c1dd7f0",
 CellID->572649627],
Cell[241362, 6755, 477, 14, 82, "Output",ExpressionUUID->"e01039c9-8fcf-4f1d-b093-5d5020ccd51e",
 CellID->1990331648]
}, Open  ]],
Cell[241854, 6772, 374, 6, 104, "Text",ExpressionUUID->"967a3415-a7e8-4802-b140-24262cd58943",
 CellID->347916962]
}, Open  ]],
Cell[CellGroupData[{
Cell[242265, 6783, 273, 5, 66, "Subsubsection",ExpressionUUID->"ccba9749-6a1a-4e5d-84c0-1671f02fb3f0",
 CellTags->"4.2.8",
 CellID->1489440234],
Cell[242541, 6790, 418, 7, 104, "Text",ExpressionUUID->"c5732be3-f100-4bc2-a74c-0937e834c3db",
 CellID->1952623406],
Cell[CellGroupData[{
Cell[242984, 6801, 597, 15, 31, "Input",ExpressionUUID->"65e1c889-5e68-421a-9d31-76ec71bd7a8e",
 CellID->1232575608],
Cell[243584, 6818, 474, 14, 82, "Output",ExpressionUUID->"ef6847a2-bd4a-4a04-a2e2-7709cfa75d4e",
 CellID->419941670]
}, Open  ]],
Cell[244073, 6835, 186, 2, 45, "Text",ExpressionUUID->"3bdd3b9e-ec66-468a-a85f-b4814f932998",
 CellID->383717135]
}, Open  ]],
Cell[CellGroupData[{
Cell[244296, 6842, 179, 3, 66, "Subsubsection",ExpressionUUID->"bcca35df-190a-491d-898b-87e231cbb5a4",
 CellTags->"4.2.9",
 CellID->240496004],
Cell[244478, 6847, 604, 9, 163, "Text",ExpressionUUID->"fb9620b0-140e-47ba-bb23-96713dbac660",
 CellID->452115574],
Cell[245085, 6858, 453, 7, 134, "Text",ExpressionUUID->"29480310-d004-4315-863c-16c8075b88ea",
 CellID->1424688115],
Cell[245541, 6867, 338, 6, 75, "Text",ExpressionUUID->"fa5b90fb-3c4e-424a-88c9-fe3cdf8c4164",
 CellID->347912861],
Cell[245882, 6875, 362, 9, 31, "Input",ExpressionUUID->"3ed4348b-588f-4368-afb5-4df72005002c",
 CellID->927070430],
Cell[246247, 6886, 195, 2, 45, "Text",ExpressionUUID->"dcbbde7c-d78f-4d62-90a3-6e46833203d5",
 CellID->1210220889],
Cell[CellGroupData[{
Cell[246467, 6892, 684, 21, 31, "Input",ExpressionUUID->"b99f55f8-53ce-41cc-8491-4ac9e5c02e01",
 CellID->1364860686],
Cell[247154, 6915, 387, 11, 45, "Output",ExpressionUUID->"39f2caea-a529-4b54-8dc0-23f891148dcd",
 CellID->479107668]
}, Open  ]],
Cell[247556, 6929, 401, 7, 104, "Text",ExpressionUUID->"40132725-8745-4f87-b890-f2cf363fb893",
 CellID->1446383473],
Cell[CellGroupData[{
Cell[247982, 6940, 685, 21, 31, "Input",ExpressionUUID->"c47cd30a-fb49-497e-805d-662031c12c5e",
 CellID->1815162723],
Cell[248670, 6963, 364, 10, 45, "Output",ExpressionUUID->"2e784519-2829-4bc5-a59f-0dcce12a92c6",
 CellID->688872624]
}, Open  ]],
Cell[249049, 6976, 201, 2, 45, "Text",ExpressionUUID->"f771403a-9e6e-4fd6-af0c-cbd554c6b243",
 CellID->797850591],
Cell[CellGroupData[{
Cell[249275, 6982, 570, 17, 31, "Input",ExpressionUUID->"dd4fed94-e20e-4548-91aa-92e8a22f08d2",
 CellID->586991069],
Cell[249848, 7001, 388, 11, 45, "Output",ExpressionUUID->"6e4b379c-98b6-4727-93f3-e84c61c2a9b2",
 CellID->1300912563]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250285, 7018, 182, 3, 66, "Subsubsection",ExpressionUUID->"e4c2778c-62e3-446b-8d1a-648aa8804d05",
 CellTags->"4.2.10",
 CellID->906436234],
Cell[250470, 7023, 375, 6, 104, "Text",ExpressionUUID->"aed4986f-9d8c-467a-afb0-79917642bb64",
 CellID->224793020],
Cell[250848, 7031, 274, 5, 75, "Text",ExpressionUUID->"9da0f9d1-0b9c-426b-86a5-e44d8ed509ad",
 CellID->598011004],
Cell[CellGroupData[{
Cell[251147, 7040, 535, 15, 31, "Input",ExpressionUUID->"48e78747-00f5-4ac9-8b50-32c886b9a609",
 CellID->1827689794],
Cell[251685, 7057, 280, 7, 67, "Output",ExpressionUUID->"15ef7bdb-44a4-4b22-aa78-13c50c29aa55",
 CellID->1209203589]
}, Open  ]],
Cell[251980, 7067, 317, 5, 75, "Text",ExpressionUUID->"c880070e-c95f-43b8-afaa-9fab70c89301",
 CellID->1446968762],
Cell[CellGroupData[{
Cell[252322, 7076, 875, 26, 54, "Input",ExpressionUUID->"6f2ef044-f1d2-4aa4-86e5-1e3dd9c3aec1",
 CellID->1246421185],
Cell[253200, 7104, 374, 9, 45, "Output",ExpressionUUID->"96db1962-1fd1-4ba3-b189-4a39c531083e",
 CellID->99045026]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[253635, 7120, 177, 2, 68, "Subsection",ExpressionUUID->"43e48320-95a9-4e24-98d7-c4968cba4e22",
 CellID->349925557],
Cell[253815, 7124, 319, 5, 75, "Text",ExpressionUUID->"613ed713-f6e8-4703-b7c3-0bf27722c980",
 CellID->1388611013],
Cell[CellGroupData[{
Cell[254159, 7133, 149, 2, 66, "Subsubsection",ExpressionUUID->"aa02dc52-d979-450c-aa2f-c73e8bfdad8c",
 CellID->518105050],
Cell[254311, 7137, 1187, 17, 370, "Text",ExpressionUUID->"42b7f4df-9620-479c-ae17-0d57108f7831",
 CellID->1892870412],
Cell[255501, 7156, 174, 2, 45, "Text",ExpressionUUID->"ab440671-2c35-4ee1-ab76-17178587cd0b",
 CellID->1258569927],
Cell[255678, 7160, 180, 2, 38, "ItemNumbered",ExpressionUUID->"8030a750-fa15-4761-ab8c-2ab5097dd877",
 CellID->70840139],
Cell[255861, 7164, 234, 5, 75, "Text",ExpressionUUID->"bd1a0410-d63f-4c38-95eb-a78ca686c099",
 CellID->904275735],
Cell[CellGroupData[{
Cell[256120, 7173, 625, 15, 101, "Input",ExpressionUUID->"cb9a94dd-e0d7-4607-9f0e-29f65e18bb7e",
 CellID->328401935],
Cell[256748, 7190, 240, 5, 45, "Output",ExpressionUUID->"51ecc349-111e-471e-ae37-9ea588643575",
 CellID->981599561]
}, Open  ]],
Cell[257003, 7198, 339, 6, 75, "Text",ExpressionUUID->"ccf1487c-52c2-426f-90bc-971622afaa42",
 CellID->774445473],
Cell[257345, 7206, 165, 2, 38, "ItemNumbered",ExpressionUUID->"b0baf3c2-63ce-400c-a291-93cbcafd9d65",
 CellID->1193803709],
Cell[257513, 7210, 378, 7, 75, "Text",ExpressionUUID->"ed7f219a-2ac5-41c6-ad6c-cf880c44f0b4",
 CellID->319223242],
Cell[CellGroupData[{
Cell[257916, 7221, 406, 10, 54, "Input",ExpressionUUID->"8e000a2e-0383-4881-a88d-83797928dea3",
 CellID->514130564],
Cell[258325, 7233, 497, 10, 68, "Output",ExpressionUUID->"17a900e1-72fa-4ea2-9bfd-7267d7af9453",
 CellID->1260920020]
}, Open  ]],
Cell[258837, 7246, 194, 2, 45, "Text",ExpressionUUID->"13ccca85-dd7a-40bf-a739-5112b4db1fe7",
 CellID->914147544],
Cell[CellGroupData[{
Cell[259056, 7252, 304, 7, 31, "Input",ExpressionUUID->"7892e0af-7727-45ab-9ec4-93b5f4db2619",
 CellID->2092224041],
Cell[259363, 7261, 343, 8, 45, "Output",ExpressionUUID->"a74a5e19-9a53-4cc7-8c24-b91b093af15d",
 CellID->1691006867]
}, Open  ]],
Cell[259721, 7272, 163, 2, 38, "ItemNumbered",ExpressionUUID->"cf52efb2-1b25-426b-b80a-85a1a8757dfd",
 CellID->1446401735],
Cell[259887, 7276, 591, 9, 193, "Text",ExpressionUUID->"d2a69f33-3343-4984-942a-e5e65e648216",
 CellID->159076105],
Cell[CellGroupData[{
Cell[260503, 7289, 434, 12, 31, "Input",ExpressionUUID->"0e6cd92f-6397-4129-bd2e-58058c9ca821",
 CellID->1106043982],
Cell[260940, 7303, 450, 13, 45, "Output",ExpressionUUID->"1a603bad-26ee-4773-90ff-19e265fc6980",
 CellID->1489636325]
}, Open  ]],
Cell[261405, 7319, 423, 7, 104, "Text",ExpressionUUID->"b6303b32-02dc-476e-a565-2761248a7c54",
 CellID->953357549],
Cell[261831, 7328, 249, 5, 31, "Input",ExpressionUUID->"9fd99ba6-1a18-445c-aa4e-dbff5acd7f30",
 CellID->2102842138],
Cell[262083, 7335, 209, 2, 38, "ItemNumbered",ExpressionUUID->"a506ffa8-13c2-4b99-9a88-d8e40d101f56",
 CellID->244529761],
Cell[262295, 7339, 212, 4, 45, "Text",ExpressionUUID->"1c89e709-be57-4fd8-8b8d-35d380a784d1",
 CellID->1675476416],
Cell[CellGroupData[{
Cell[262532, 7347, 425, 11, 31, "Input",ExpressionUUID->"a7282b52-780a-42c8-bcd8-c4e92f69e960",
 CellID->1818230317],
Cell[262960, 7360, 445, 11, 45, "Output",ExpressionUUID->"1de7cfaf-b023-4a4a-a7f9-c60cf823c409",
 CellID->797890478]
}, Open  ]],
Cell[263420, 7374, 210, 4, 45, "Text",ExpressionUUID->"c8bc83c4-c121-4d75-b4b1-b6a9b23af072",
 CellID->1257371878],
Cell[CellGroupData[{
Cell[263655, 7382, 286, 6, 31, "Input",ExpressionUUID->"b36513c6-0b78-4467-a50f-dce541629c3b",
 CellID->1515133617],
Cell[263944, 7390, 304, 7, 45, "Output",ExpressionUUID->"2e5f2eb0-6334-4898-a9ea-d8dbc11e3ca9",
 CellID->1225162324]
}, Open  ]],
Cell[264263, 7400, 172, 2, 45, "Text",ExpressionUUID->"e44b838a-f179-4138-a3b4-93841b733b3b",
 CellID->1229972032],
Cell[CellGroupData[{
Cell[264460, 7406, 306, 7, 31, "Input",ExpressionUUID->"d1c9d98e-ed5e-46d4-b5e6-df63b7b9ef54",
 CellID->1218129368],
Cell[264769, 7415, 246, 5, 45, "Output",ExpressionUUID->"715fceef-e3d2-4d20-a475-69bff94ae795",
 CellID->800793016]
}, Open  ]],
Cell[265030, 7423, 167, 2, 45, "Text",ExpressionUUID->"efbdd74b-d9cf-4cce-a2f8-45b71b84192a",
 CellID->648204163],
Cell[CellGroupData[{
Cell[265222, 7429, 369, 9, 31, "Input",ExpressionUUID->"15cd4c15-64f4-49d1-8798-5e2375628102",
 CellID->1860176960],
Cell[265594, 7440, 263, 7, 45, "Output",ExpressionUUID->"943e35b6-68d0-476e-8b5c-dc2ad7ce4b95",
 CellID->578182414]
}, Open  ]],
Cell[265872, 7450, 193, 2, 45, "Text",ExpressionUUID->"4a58cc2a-3a99-4f7c-99ef-0f9c1f713990",
 CellID->148329423],
Cell[266068, 7454, 162, 2, 38, "ItemNumbered",ExpressionUUID->"22ebe13c-4a87-45e3-87e2-52882098fa11",
 CellID->1891581841],
Cell[266233, 7458, 181, 2, 45, "Text",ExpressionUUID->"317fd639-6603-4dec-9669-a0279e0190a9",
 CellID->468091499],
Cell[CellGroupData[{
Cell[266439, 7464, 503, 13, 54, "Input",ExpressionUUID->"68bddef2-d30b-4c72-bd32-0b82d24c7e7e",
 CellID->917145411],
Cell[266945, 7479, 472, 13, 45, "Output",ExpressionUUID->"14d35aa6-9e34-4382-a2d1-e480a953b73e",
 CellID->1631050232]
}, Open  ]],
Cell[267432, 7495, 193, 2, 45, "Text",ExpressionUUID->"d2e11206-e147-4e6b-988c-8706fff45409",
 CellID->1415112247],
Cell[CellGroupData[{
Cell[267650, 7501, 286, 6, 31, "Input",ExpressionUUID->"5e313921-ebb1-43fb-8e4b-f2bc617eb973",
 CellID->2028697605],
Cell[267939, 7509, 188, 4, 45, "Output",ExpressionUUID->"70d8dcba-fdc0-4b31-90a6-7d605088af01",
 CellID->1339916304]
}, Open  ]],
Cell[268142, 7516, 336, 6, 75, "Text",ExpressionUUID->"50c8e683-8299-454e-baf9-e3c426cb81da",
 CellID->1284835362],
Cell[CellGroupData[{
Cell[268503, 7526, 234, 4, 31, "Input",ExpressionUUID->"190d9329-caa3-466b-8f77-2ac41e472b70",
 CellID->262892965],
Cell[268740, 7532, 663, 19, 60, "Output",ExpressionUUID->"fb3a08cc-6be5-49ef-b433-9a65e91bf7e5",
 CellID->1155324758]
}, Open  ]],
Cell[269418, 7554, 185, 2, 45, "Text",ExpressionUUID->"20580d8e-2572-4636-bb9c-9c0e1329a03b",
 CellID->2143555179],
Cell[CellGroupData[{
Cell[269628, 7560, 294, 6, 31, "Input",ExpressionUUID->"68c70bdb-f402-43e6-b734-bb8c3a3d3302",
 CellID->18229542],
Cell[269925, 7568, 258, 6, 45, "Output",ExpressionUUID->"688fa5a9-66fb-4f00-8fdf-0c0aea5631e7",
 CellID->840595769]
}, Open  ]],
Cell[270198, 7577, 471, 8, 104, "Text",ExpressionUUID->"39c8140a-c466-4029-a6bb-67174f62e258",
 CellID->1745659617],
Cell[CellGroupData[{
Cell[270694, 7589, 321, 7, 31, "Input",ExpressionUUID->"11f87743-6ef4-42f5-b38c-2a052803c447",
 CellID->743337082],
Cell[271018, 7598, 258, 6, 45, "Output",ExpressionUUID->"9139f838-2dfb-43a2-80a1-3be4761ecd61",
 CellID->1590611079]
}, Open  ]],
Cell[271291, 7607, 304, 6, 75, "Text",ExpressionUUID->"ceaab182-1a7a-4ccc-9d54-39d270a2ac5d",
 CellID->764546380],
Cell[CellGroupData[{
Cell[271620, 7617, 261, 5, 31, "Input",ExpressionUUID->"964a5fe1-47ac-4719-80c5-addbdd3e10c0",
 CellID->1702839229],
Cell[271884, 7624, 471, 13, 45, "Output",ExpressionUUID->"5786e2fd-9761-4291-8df8-2d7f6423fea7",
 CellID->904802157]
}, Open  ]],
Cell[272370, 7640, 361, 6, 104, "Text",ExpressionUUID->"9fb55e6e-bb99-4719-9c1b-684906c8e229",
 CellID->678148292],
Cell[CellGroupData[{
Cell[272756, 7650, 402, 9, 54, "Input",ExpressionUUID->"bdad0466-bfe3-4875-8594-0dd7ad03ce9d",
 CellID->1444550990],
Cell[273161, 7661, 611, 17, 45, "Output",ExpressionUUID->"0b7a4946-9934-4a27-8569-16faeb9e6066",
 CellID->1252931869]
}, Open  ]],
Cell[273787, 7681, 271, 5, 75, "Text",ExpressionUUID->"d03e3712-979b-4b3d-b8b8-b0e81cf3bb93",
 CellID->1813124110],
Cell[CellGroupData[{
Cell[274083, 7690, 396, 10, 31, "Input",ExpressionUUID->"7c0f6bb2-c65b-4aa2-a590-3e6fc1ebe464",
 CellID->125513645],
Cell[274482, 7702, 404, 11, 45, "Output",ExpressionUUID->"171aabaf-d3c3-4065-b6bb-10b849834447",
 CellID->425785916]
}, Open  ]],
Cell[274901, 7716, 345, 6, 104, "Text",ExpressionUUID->"423c3002-30af-4267-9734-0cb4c3f292f2",
 CellID->768378408],
Cell[275249, 7724, 192, 2, 45, "Text",ExpressionUUID->"f0652d75-311b-4d73-ba2e-f7199671d1ef",
 CellID->526750580],
Cell[CellGroupData[{
Cell[275466, 7730, 291, 6, 31, "Input",ExpressionUUID->"62ab0431-87ff-4552-9fbf-2cc8ef905312",
 CellID->421615338],
Cell[275760, 7738, 187, 4, 45, "Output",ExpressionUUID->"1c8e4195-2c32-4f0f-8977-c322f504d8ad",
 CellID->674827156]
}, Open  ]],
Cell[275962, 7745, 222, 5, 45, "Text",ExpressionUUID->"ca6a9b04-58f6-4315-a08c-9146a550ccea",
 CellID->958871085],
Cell[276187, 7752, 224, 4, 38, "ItemNumbered",ExpressionUUID->"4717691e-080f-43a2-bcba-a0900d3bbd3f",
 CellID->1029038507],
Cell[276414, 7758, 863, 16, 163, "Text",ExpressionUUID->"f29bb700-ec73-40af-a291-06964a7b3d73",
 CellID->1364377858],
Cell[277280, 7776, 153, 2, 45, "Text",ExpressionUUID->"1e225de3-76d1-464d-8d9f-af35ac40fa90",
 CellID->1008166631],
Cell[CellGroupData[{
Cell[277458, 7782, 372, 8, 54, "Input",ExpressionUUID->"c14d4154-53c1-414b-92be-75164c52c6d5",
 CellID->1549382943],
Cell[277833, 7792, 628, 17, 45, "Output",ExpressionUUID->"f8620740-755a-4160-b17e-9191bcbc27d5",
 CellID->1655331753]
}, Open  ]],
Cell[278476, 7812, 158, 2, 45, "Text",ExpressionUUID->"c2fb318a-897b-4622-b8da-b382c78f478e",
 CellID->510125786],
Cell[CellGroupData[{
Cell[278659, 7818, 411, 10, 31, "Input",ExpressionUUID->"ce78ba6f-02a7-45d6-982c-43fffe2569f6",
 CellID->1213831115],
Cell[279073, 7830, 503, 13, 45, "Output",ExpressionUUID->"de3244e8-5f0f-4119-8a1a-eb5db993e8ad",
 CellID->416129783]
}, Open  ]],
Cell[279591, 7846, 536, 8, 163, "Text",ExpressionUUID->"aef94870-8a38-4956-a15c-c153c920c703",
 CellID->1891949389],
Cell[280130, 7856, 290, 5, 75, "Text",ExpressionUUID->"b118bff9-ff90-44e5-9ec2-3c24d7c72455",
 CellID->811511310],
Cell[CellGroupData[{
Cell[280445, 7865, 593, 17, 31, "Input",ExpressionUUID->"e4c2ae19-c808-4ecd-99f4-31531ea08f27",
 CellID->626028769],
Cell[281041, 7884, 697, 22, 45, "Output",ExpressionUUID->"47146df1-29e4-460f-a6f5-adf1590754ff",
 CellID->607361473]
}, Open  ]],
Cell[281753, 7909, 181, 2, 38, "ItemNumbered",ExpressionUUID->"74b30298-5197-4abf-9959-c79f508f10b9",
 CellID->934502520],
Cell[281937, 7913, 233, 5, 45, "Text",ExpressionUUID->"24abb249-cddc-4555-9cc4-74cdd49ef6cf",
 CellID->1635943129],
Cell[CellGroupData[{
Cell[282195, 7922, 404, 10, 31, "Input",ExpressionUUID->"264ba3e9-d538-4027-90cf-2be113cc95fb",
 CellID->1539038141],
Cell[282602, 7934, 543, 10, 68, "Output",ExpressionUUID->"40607509-6e16-4be8-b01a-60f9e6d34059",
 CellID->1060469894]
}, Open  ]],
Cell[283160, 7947, 190, 2, 45, "Text",ExpressionUUID->"6f873a1e-21d6-401c-bd9c-16bc0062e996",
 CellID->1683511820],
Cell[CellGroupData[{
Cell[283375, 7953, 305, 6, 31, "Input",ExpressionUUID->"29a9be26-ac9d-4350-b53d-760c5fbc69d9",
 CellID->248412793],
Cell[283683, 7961, 228, 5, 45, "Output",ExpressionUUID->"4cbd8bbf-3bed-46ea-b21d-e85aa98dd1b2",
 CellID->402283409]
}, Open  ]],
Cell[283926, 7969, 473, 8, 134, "Text",ExpressionUUID->"8f400743-0997-431a-bec3-2b875f59d762",
 CellID->898734307],
Cell[CellGroupData[{
Cell[284424, 7981, 296, 6, 31, "Input",ExpressionUUID->"512f46cd-5c57-4518-bdcd-3c3e1609a3f0",
 CellID->1008629630],
Cell[284723, 7989, 289, 7, 45, "Output",ExpressionUUID->"5e911815-4212-4845-a517-05b0dcac1481",
 CellID->1791308027]
}, Open  ]],
Cell[285027, 7999, 161, 2, 38, "ItemNumbered",ExpressionUUID->"bfe8311d-f822-412e-a629-5a6f6f612989",
 CellID->940762496],
Cell[285191, 8003, 300, 5, 75, "Text",ExpressionUUID->"7c873138-8cfc-4eb6-bb45-aac7a7368337",
 CellID->1620661058],
Cell[285494, 8010, 720, 14, 104, "Text",ExpressionUUID->"16cd3e4e-ebe4-4251-a1da-ca032297f5db",
 CellID->1930767452],
Cell[286217, 8026, 426, 7, 134, "Text",ExpressionUUID->"cd5b567d-7704-46eb-a552-22196e5ebe9b",
 CellID->2064240397],
Cell[286646, 8035, 420, 9, 104, "Text",ExpressionUUID->"5a27bf0b-ab55-40c2-a758-0ed9418a29d5",
 CellID->1426550719],
Cell[287069, 8046, 199, 3, 38, "ItemNumbered",ExpressionUUID->"d330751e-63a6-415a-a7ee-ae22dd3ae383",
 CellID->539670109],
Cell[287271, 8051, 592, 10, 163, "Text",ExpressionUUID->"1487fe4c-dbd6-4672-afaf-4a04d9439bb5",
 CellID->1412080682],
Cell[CellGroupData[{
Cell[287888, 8065, 746, 21, 81, "Input",ExpressionUUID->"8c8f5071-4124-4737-bb65-d9c359550e27",
 CellID->279811955],
Cell[288637, 8088, 2204, 65, 105, "Output",ExpressionUUID->"ec84c175-7d15-41bd-aacd-e2786db22cc1",
 CellID->1699148678]
}, Open  ]],
Cell[290856, 8156, 236, 5, 75, "Text",ExpressionUUID->"1eb1e659-6c44-4191-90ec-81570da067c3",
 CellID->1783495896]
}, Open  ]],
Cell[CellGroupData[{
Cell[291129, 8166, 153, 2, 66, "Subsubsection",ExpressionUUID->"f1d97d10-165c-4ff7-8f9f-17c3dbccf6a7",
 CellID->519231233],
Cell[291285, 8170, 506, 8, 134, "Text",ExpressionUUID->"a458f0d3-dbbb-437f-a1f8-6335095ec4d8",
 CellID->1493275270],
Cell[291794, 8180, 182, 2, 38, "ItemNumbered",ExpressionUUID->"dce95d09-139c-4bd8-89ae-63a77ccd7df2",
 CellID->630954520],
Cell[291979, 8184, 181, 2, 45, "Text",ExpressionUUID->"324a16dd-5855-494d-8c95-934bb40ff78a",
 CellID->178368754],
Cell[CellGroupData[{
Cell[292185, 8190, 402, 9, 54, "Input",ExpressionUUID->"ad632d6c-08c3-492a-9902-68ab7cc5275d",
 CellID->805333289],
Cell[292590, 8201, 303, 7, 45, "Output",ExpressionUUID->"6fd41b1b-4e05-4709-a4c0-852c798479fb",
 CellID->1176931056]
}, Open  ]],
Cell[292908, 8211, 284, 5, 75, "Text",ExpressionUUID->"25405883-2d94-4117-842a-f0b147afa6d4",
 CellID->547916908],
Cell[CellGroupData[{
Cell[293217, 8220, 204, 3, 31, "Input",ExpressionUUID->"adf18352-5f6e-4121-875a-e0f87abc0cc2",
 CellID->213040000],
Cell[293424, 8225, 362, 8, 45, "Output",ExpressionUUID->"c06757b7-a8a7-40dd-9fef-8271f656d876",
 CellID->643025018]
}, Open  ]],
Cell[293801, 8236, 496, 10, 104, "Text",ExpressionUUID->"be82bfae-da7f-4c92-bc78-accf179eff46",
 CellID->721078521],
Cell[CellGroupData[{
Cell[294322, 8250, 322, 7, 31, "Input",ExpressionUUID->"84eb2eb6-5052-4332-a8b6-2a836df11ec2",
 CellID->1683231392],
Cell[294647, 8259, 274, 7, 45, "Output",ExpressionUUID->"36702765-a904-4b91-92a1-afd2d0b9514b",
 CellID->685996243]
}, Open  ]],
Cell[294936, 8269, 398, 7, 104, "Text",ExpressionUUID->"da1c87ae-fc1f-4a71-aca7-363a36c92386",
 CellID->2097048629],
Cell[CellGroupData[{
Cell[295359, 8280, 485, 13, 31, "Input",ExpressionUUID->"b015c4b4-c773-4ee5-aa02-5835e9564f11",
 CellID->2092073629],
Cell[295847, 8295, 428, 11, 45, "Output",ExpressionUUID->"5cd1cedc-0b9f-4d0b-9c5f-f39e435c1721",
 CellID->891200592]
}, Open  ]],
Cell[296290, 8309, 207, 2, 45, "Text",ExpressionUUID->"baa5bec0-304c-461c-9e31-e00f913b7749",
 CellID->1204648637],
Cell[CellGroupData[{
Cell[296522, 8315, 1405, 40, 125, "Input",ExpressionUUID->"434ae698-e2c0-479a-8365-568882e106d1",
 CellID->430914014],
Cell[297930, 8357, 428, 11, 45, "Output",ExpressionUUID->"83686b6f-811c-46c1-aae3-cdb737f1c2ef",
 CellID->1228892736]
}, Open  ]],
Cell[298373, 8371, 480, 9, 104, "Text",ExpressionUUID->"ca8ba501-90a6-4168-8473-fc044a820105",
 CellID->1649980753],
Cell[298856, 8382, 182, 2, 38, "ItemNumbered",ExpressionUUID->"c4d5d3fd-92d2-4ea0-aeaa-ac7b14258c22",
 CellID->1044038983],
Cell[299041, 8386, 349, 6, 104, "Text",ExpressionUUID->"fdd40d99-9a50-4eb7-8118-1d186a8d1b73",
 CellID->74307644],
Cell[299393, 8394, 199, 2, 45, "Text",ExpressionUUID->"79d83388-1848-408f-8923-da665a794226",
 CellID->287526195],
Cell[CellGroupData[{
Cell[299617, 8400, 400, 10, 31, "Input",ExpressionUUID->"df7118b8-b230-4129-b1e4-d3c5e98f9b3c",
 CellID->1553748882],
Cell[300020, 8412, 406, 8, 45, "Output",ExpressionUUID->"e19f22e2-dfcd-47f1-837e-53b1acc77816",
 CellID->176700257]
}, Open  ]],
Cell[300441, 8423, 705, 13, 75, "Text",ExpressionUUID->"82ad94eb-822a-4c59-93ee-ca1e1d3cef2f",
 CellID->2083293273],
Cell[CellGroupData[{
Cell[301171, 8440, 331, 8, 31, "Input",ExpressionUUID->"ed1fb2ea-38d2-49dc-be32-027e54673f11",
 CellID->1657664781],
Cell[301505, 8450, 515, 13, 45, "Output",ExpressionUUID->"49514b4a-61ec-4d6f-9627-356224df44b8",
 CellID->1233916921]
}, Open  ]],
Cell[302035, 8466, 310, 6, 75, "Text",ExpressionUUID->"d9bd5b7d-1c45-48e5-be4d-749fb7ead6da",
 CellID->1823912269],
Cell[CellGroupData[{
Cell[302370, 8476, 321, 7, 31, "Input",ExpressionUUID->"d6fdce7d-3b2e-47db-8c93-0d486a148246",
 CellID->1445727038],
Cell[302694, 8485, 494, 13, 45, "Output",ExpressionUUID->"4ce99d40-b4ff-4b6f-b796-c803d8e8b287",
 CellID->2126168509]
}, Open  ]],
Cell[303203, 8501, 383, 6, 104, "Text",ExpressionUUID->"a175f962-1451-483e-9e71-7ffc164be0cc",
 CellID->633544080],
Cell[CellGroupData[{
Cell[303611, 8511, 305, 7, 31, "Input",ExpressionUUID->"ecfc5f1f-e7b2-4263-be6c-e15faaa29fa3",
 CellID->211655334],
Cell[303919, 8520, 492, 13, 45, "Output",ExpressionUUID->"e1eaa8b9-1f1a-4f43-8a9b-a5ac60fd12a7",
 CellID->889514580]
}, Open  ]],
Cell[304426, 8536, 203, 2, 45, "Text",ExpressionUUID->"aba84494-c179-4e75-9395-b00c8412a674",
 CellID->1437879293],
Cell[304632, 8540, 774, 21, 78, "Input",ExpressionUUID->"83561493-09ba-44b8-9d23-21aabed7d82c",
 CellID->1756812690],
Cell[305409, 8563, 260, 5, 75, "Text",ExpressionUUID->"fa015004-591a-4d40-8422-c280e170a48b",
 CellID->1610243174],
Cell[CellGroupData[{
Cell[305694, 8572, 247, 4, 31, "Input",ExpressionUUID->"88ac0ae0-4063-466d-bb21-87c6464ee2ee",
 CellID->1032062551],
Cell[305944, 8578, 517, 13, 45, "Output",ExpressionUUID->"580327e2-c779-41c3-8cc4-9da7cc509041",
 CellID->1267048687]
}, Open  ]],
Cell[306476, 8594, 192, 2, 38, "ItemNumbered",ExpressionUUID->"55a059b1-016e-44ab-a864-4b4386676d75",
 CellID->839438757],
Cell[306671, 8598, 1100, 18, 311, "Text",ExpressionUUID->"fb8ccbc2-4e9d-4677-9737-36f9b303883c",
 CellID->1627111756],
Cell[307774, 8618, 250, 5, 31, "Input",ExpressionUUID->"dbddd32d-d345-4680-b7f3-4fd94db63995",
 CellID->1181230401]
}, Open  ]],
Cell[CellGroupData[{
Cell[308061, 8628, 150, 2, 66, "Subsubsection",ExpressionUUID->"854907db-69b8-444f-8ca4-342ec52e5eb1",
 CellID->1202945745],
Cell[308214, 8632, 371, 6, 104, "Text",ExpressionUUID->"5962d1f6-4d6a-45c9-862f-5759f520bb51",
 CellID->1498083357],
Cell[308588, 8640, 250, 4, 31, "Input",ExpressionUUID->"e1f71844-6bec-4dee-a110-5ab908ca13ff",
 CellID->1376541282],
Cell[308841, 8646, 319, 6, 75, "Text",ExpressionUUID->"5f678770-57af-4595-8e77-c3a7ad2d2da2",
 CellID->1474293230],
Cell[309163, 8654, 184, 2, 38, "ItemNumbered",ExpressionUUID->"59f3e164-c56c-4c9d-9931-7ba3ad63b8e3",
 CellID->1178204580],
Cell[CellGroupData[{
Cell[309372, 8660, 357, 8, 31, "Input",ExpressionUUID->"65436d6e-2f52-4b1a-9275-e2a68cfeaa7b",
 CellID->930608092],
Cell[309732, 8670, 174, 3, 45, "Output",ExpressionUUID->"f64e5441-6ea9-44c2-b632-f9839c165391",
 CellID->971752998]
}, Open  ]],
Cell[309921, 8676, 186, 2, 45, "Text",ExpressionUUID->"9e4cf00a-d701-4556-bda4-a6f1482dfe5b",
 CellID->639501951],
Cell[310110, 8680, 188, 2, 38, "ItemNumbered",ExpressionUUID->"57322ce0-29c5-4195-9f11-b06f70fe2979",
 CellID->2101120869],
Cell[CellGroupData[{
Cell[310323, 8686, 470, 12, 54, "Input",ExpressionUUID->"1507e99a-1d5e-4411-b4e0-b4231b8b8b73",
 CellID->1567034604],
Cell[310796, 8700, 174, 3, 45, "Output",ExpressionUUID->"84a1a8e3-e18e-486c-adb8-e6d8d304be94",
 CellID->1241810334]
}, Open  ]],
Cell[310985, 8706, 185, 2, 38, "ItemNumbered",ExpressionUUID->"264a605d-aea2-467c-9e4e-ddc88732178d",
 CellID->1860201992],
Cell[311173, 8710, 214, 4, 45, "Text",ExpressionUUID->"7daf92fc-bc6b-4aaa-be16-7462a870b028",
 CellID->1347946518],
Cell[CellGroupData[{
Cell[311412, 8718, 284, 6, 31, "Input",ExpressionUUID->"a18a1085-031e-4ac9-931a-1d7cd07e825b",
 CellID->1101664741],
Cell[311699, 8726, 629, 17, 45, "Output",ExpressionUUID->"bc9d5a4f-f2a3-48f9-adfd-1451b4599168",
 CellID->506712790]
}, Open  ]],
Cell[CellGroupData[{
Cell[312365, 8748, 265, 5, 31, "Input",ExpressionUUID->"5441b90e-9390-4624-b32f-b1f8299e6205",
 CellID->622153169],
Cell[312633, 8755, 174, 3, 45, "Output",ExpressionUUID->"6db662cd-d5a8-48aa-9c62-c978032f8821",
 CellID->358200158]
}, Open  ]],
Cell[312822, 8761, 220, 5, 45, "Text",ExpressionUUID->"43cfc577-97dc-4cee-a410-1186e7746cb9",
 CellID->873392965],
Cell[CellGroupData[{
Cell[313067, 8770, 263, 5, 31, "Input",ExpressionUUID->"62babc71-6812-4d71-8e36-b138546beb1e",
 CellID->1709186119],
Cell[313333, 8777, 174, 3, 45, "Output",ExpressionUUID->"fee90bc8-1cb7-4f84-8d55-ba95629aaba6",
 CellID->1319941799]
}, Open  ]],
Cell[313522, 8783, 252, 5, 45, "Text",ExpressionUUID->"95bcc582-967c-449e-8965-2dd0c9f3caa7",
 CellID->755742283],
Cell[CellGroupData[{
Cell[313799, 8792, 457, 11, 31, "Input",ExpressionUUID->"3714e089-6a39-401e-bc36-a81ee4dc81d2",
 CellID->521033182],
Cell[314259, 8805, 225, 5, 45, "Output",ExpressionUUID->"3dbee524-7201-4391-b2bd-5faf078d6b60",
 CellID->1822776766]
}, Open  ]],
Cell[314499, 8813, 338, 6, 75, "Text",ExpressionUUID->"479aa2b8-4e5c-4b07-9fba-c21634d71a42",
 CellID->1554881707],
Cell[CellGroupData[{
Cell[314862, 8823, 408, 9, 31, "Input",ExpressionUUID->"171b7459-a0a4-4fa9-ba48-4648828b9f29",
 CellID->1209142143],
Cell[315273, 8834, 221, 5, 45, "Output",ExpressionUUID->"53724ef9-b8f2-4057-be1d-6f64bb3a8782",
 CellID->353776597]
}, Open  ]],
Cell[315509, 8842, 193, 3, 38, "ItemNumbered",ExpressionUUID->"c5b40dd0-b452-4d14-ba43-ca58f2861e0d",
 CellTags->"4.3.3.4",
 CellID->142155476],
Cell[315705, 8847, 671, 10, 193, "Text",ExpressionUUID->"be34d7c4-01c3-49cc-8c04-97b6a4362bdc",
 CellID->800066200],
Cell[316379, 8859, 176, 2, 45, "Text",ExpressionUUID->"9b4fcd80-6ed1-4fcd-8587-8d298d8f7ca3",
 CellID->698323671],
Cell[CellGroupData[{
Cell[316580, 8865, 632, 17, 54, "Input",ExpressionUUID->"ea9a14da-d183-496d-9fe2-9aea87429501",
 CellID->907039929],
Cell[317215, 8884, 430, 9, 45, "Output",ExpressionUUID->"7900e8f7-85c1-4257-af00-63979f0edfaa",
 CellID->1818034661],
Cell[317648, 8895, 418, 8, 45, "Output",ExpressionUUID->"81a80b92-62fe-47f5-8473-c05ec640d950",
 CellID->1311217911]
}, Open  ]],
Cell[318081, 8906, 182, 2, 45, "Text",ExpressionUUID->"54f2e597-7f21-467e-825d-07bea55f5041",
 CellID->162244663],
Cell[CellGroupData[{
Cell[318288, 8912, 343, 8, 31, "Input",ExpressionUUID->"c53967bf-5505-47d9-bccb-edee34af7a68",
 CellID->851595863],
Cell[318634, 8922, 299, 7, 45, "Output",ExpressionUUID->"7de468d5-aebb-4307-9f99-a27239e7915b",
 CellID->943212304]
}, Open  ]],
Cell[318948, 8932, 292, 5, 75, "Text",ExpressionUUID->"d45c1801-ddca-4c94-9cf5-c751f1b0ab2b",
 CellID->1992394821],
Cell[CellGroupData[{
Cell[319265, 8941, 325, 7, 31, "Input",ExpressionUUID->"288e5644-0b74-4033-b31c-f8e8ee39ff11",
 CellID->1420389823],
Cell[319593, 8950, 299, 7, 45, "Output",ExpressionUUID->"88bdb301-2479-4eaa-b692-db4e9abcb15c",
 CellID->481035277]
}, Open  ]],
Cell[319907, 8960, 342, 6, 75, "Text",ExpressionUUID->"34124692-c4eb-4778-90e5-058d99b9a7a9",
 CellID->998068916],
Cell[CellGroupData[{
Cell[320274, 8970, 262, 5, 31, "Input",ExpressionUUID->"aa23061e-bb75-4fd0-9d19-6dc88e6b80c9",
 CellID->266885787],
Cell[320539, 8977, 392, 7, 45, "Output",ExpressionUUID->"14a60f3d-35d6-4175-9683-e9af5677ed45",
 CellID->1835311877]
}, Open  ]],
Cell[320946, 8987, 737, 11, 193, "Text",ExpressionUUID->"b946e0cb-ce07-4b6f-9ca5-a41927675935",
 CellID->1779094878]
}, Open  ]],
Cell[CellGroupData[{
Cell[321720, 9003, 174, 2, 66, "Subsubsection",ExpressionUUID->"2dca1705-fe2d-438f-9109-035cbcc67a62",
 CellID->528710979],
Cell[321897, 9007, 533, 8, 163, "Text",ExpressionUUID->"57cbd500-50a2-4550-91f6-34a44d752a63",
 CellID->1905576414],
Cell[322433, 9017, 186, 2, 38, "ItemNumbered",ExpressionUUID->"51153823-95f6-4af8-b968-2f3a1ce45f51",
 CellID->1441634581],
Cell[CellGroupData[{
Cell[322644, 9023, 458, 11, 54, "Input",ExpressionUUID->"5cb9d693-e826-4ed2-863a-ec4396b19118",
 CellID->204956341],
Cell[323105, 9036, 536, 10, 68, "Output",ExpressionUUID->"e2ef12c0-d0a6-4e63-838e-7ddee2fd7d52",
 CellID->1547201375],
Cell[323644, 9048, 543, 15, 45, "Output",ExpressionUUID->"2fe3c0e2-3398-4d1b-9250-cb6d228502ce",
 CellID->2081511749]
}, Open  ]],
Cell[324202, 9066, 177, 2, 38, "ItemNumbered",ExpressionUUID->"41e1b884-d5ad-4f31-a9cc-4ff8c46bf1fe",
 CellID->1459355813],
Cell[CellGroupData[{
Cell[324404, 9072, 328, 8, 31, "Input",ExpressionUUID->"c3c8dbf6-f44a-484c-afed-5203faadc31d",
 CellID->1623265992],
Cell[324735, 9082, 729, 22, 47, "Output",ExpressionUUID->"e8ca0cd1-6790-4425-ab69-b4bb127253af",
 CellID->2127054460]
}, Open  ]],
Cell[CellGroupData[{
Cell[325501, 9109, 231, 4, 31, "Input",ExpressionUUID->"f67cf311-33a0-46d7-b232-afee75adb8d9",
 CellID->1993845954],
Cell[325735, 9115, 1612, 47, 115, "Output",ExpressionUUID->"4b526beb-2d53-4033-915d-b0d017d545bd",
 CellID->1562833790]
}, Open  ]],
Cell[CellGroupData[{
Cell[327384, 9167, 305, 7, 31, "Input",ExpressionUUID->"d713ca02-2d15-4dbb-97c4-8a4645187ce5",
 CellID->2087357457],
Cell[327692, 9176, 457, 13, 45, "Output",ExpressionUUID->"fe2bab68-1500-468e-a7e0-84f45b832d46",
 CellID->1614612700]
}, Open  ]],
Cell[328164, 9192, 319, 5, 75, "Text",ExpressionUUID->"6d23a509-6e6a-409c-bb61-1d265384901e",
 CellID->866923097],
Cell[CellGroupData[{
Cell[328508, 9201, 375, 9, 31, "Input",ExpressionUUID->"eff603e8-c620-473e-8796-801cd508c25d",
 CellID->1437962691],
Cell[328886, 9212, 360, 9, 49, "Output",ExpressionUUID->"01594dc3-e415-4729-bb17-b06b42b71e39",
 CellID->2083003322]
}, Open  ]],
Cell[329261, 9224, 187, 2, 45, "Text",ExpressionUUID->"b7b49edb-980b-42af-ac59-081b309a9411",
 CellID->1081964920],
Cell[CellGroupData[{
Cell[329473, 9230, 321, 7, 31, "Input",ExpressionUUID->"37bb8b96-e565-4e1c-9797-2af5c474fe1b",
 CellID->913320096],
Cell[329797, 9239, 335, 9, 49, "Output",ExpressionUUID->"06ed45d2-82f0-403b-8a67-caa7853b75ee",
 CellID->464007414]
}, Open  ]],
Cell[330147, 9251, 385, 7, 104, "Text",ExpressionUUID->"d905ee89-9e4e-4958-9e23-9f39204d0e21",
 CellID->1059484841],
Cell[CellGroupData[{
Cell[330557, 9262, 526, 14, 31, "Input",ExpressionUUID->"fdc9760e-e973-4516-8c34-69931027b6c7",
 CellID->1384178945],
Cell[331086, 9278, 443, 13, 49, "Output",ExpressionUUID->"41c4409c-638f-49b0-8337-8eb8f17b9f68",
 CellID->1038135641]
}, Open  ]],
Cell[331544, 9294, 375, 6, 104, "Text",ExpressionUUID->"daba1e19-1ec7-4dd1-9ebd-a09694c66b23",
 CellID->1788570059],
Cell[331922, 9302, 242, 5, 75, "Text",ExpressionUUID->"f9c582fd-f53c-4ac7-b15b-927be1ffbf54",
 CellID->1501272722]
}, Open  ]],
Cell[CellGroupData[{
Cell[332201, 9312, 148, 2, 66, "Subsubsection",ExpressionUUID->"00e50bef-6904-425e-a1db-4d7719d6ff7d",
 CellID->1105270051],
Cell[332352, 9316, 378, 6, 104, "Text",ExpressionUUID->"17cd6620-e40f-4693-9ac1-e1862b4ed687",
 CellID->540200607],
Cell[332733, 9324, 160, 2, 38, "ItemNumbered",ExpressionUUID->"c6c2acd4-c9c1-4332-b210-33e3e3a9476f",
 CellID->2143995719],
Cell[332896, 9328, 220, 4, 45, "Text",ExpressionUUID->"c34e99f0-d40f-4ccd-afd7-2cfe7db01768",
 CellID->1507936220],
Cell[CellGroupData[{
Cell[333141, 9336, 396, 10, 31, "Input",ExpressionUUID->"061f0951-ada2-40bf-a9a3-067dc74ddb5b",
 CellID->85398815],
Cell[333540, 9348, 170, 3, 45, "Output",ExpressionUUID->"f3d27b61-9291-4d55-b2f5-a80d97bb4791",
 CellID->864129985]
}, Open  ]],
Cell[333725, 9354, 212, 4, 38, "ItemNumbered",ExpressionUUID->"b0269ad0-7872-46a6-a5b6-d79df3f586e4",
 CellID->753234],
Cell[333940, 9360, 219, 3, 45, "Text",ExpressionUUID->"247d5d16-33b2-4c34-a3b6-68bee5ef7cdf",
 CellID->1298045851],
Cell[CellGroupData[{
Cell[334184, 9367, 307, 7, 31, "Input",ExpressionUUID->"61db9568-d3a4-47d3-aa9d-80c7eb63a94b",
 CellID->319876139],
Cell[334494, 9376, 897, 14, 45, "Output",ExpressionUUID->"d167cd38-f429-416f-a65c-cf2f9a21753c",
 CellID->825930150]
}, Open  ]],
Cell[CellGroupData[{
Cell[335428, 9395, 259, 5, 31, "Input",ExpressionUUID->"e0d45b0f-686c-4909-ac02-fd6d0c98bf4f",
 CellID->929341161],
Cell[335690, 9402, 171, 3, 45, "Output",ExpressionUUID->"e6515510-2a0a-43e8-bb4a-16c9fa8fb141",
 CellID->38922178]
}, Open  ]],
Cell[335876, 9408, 220, 4, 45, "Text",ExpressionUUID->"65cb96f4-b315-4158-8117-4182ab4a8970",
 CellID->1330016958],
Cell[CellGroupData[{
Cell[336121, 9416, 748, 21, 78, "Input",ExpressionUUID->"c6762c88-38d3-47ee-b2b1-c104c076b74c",
 CellID->1821543806],
Cell[336872, 9439, 865, 25, 45, "Output",ExpressionUUID->"a772d0d6-5ecf-45f9-9790-4464f57c8c22",
 CellID->731971765]
}, Open  ]],
Cell[337752, 9467, 205, 4, 45, "Text",ExpressionUUID->"6c0db834-0182-4cf7-917e-ac12dddf046c",
 CellID->1463124339],
Cell[CellGroupData[{
Cell[337982, 9475, 416, 11, 31, "Input",ExpressionUUID->"637f21fb-6bb8-43d8-9a5b-8060f699f17c",
 CellID->709726478],
Cell[338401, 9488, 868, 25, 45, "Output",ExpressionUUID->"ea96efee-50a8-4fef-98e0-6cd575f6f45b",
 CellID->1001520639]
}, Open  ]],
Cell[339284, 9516, 327, 6, 75, "Text",ExpressionUUID->"9742ec5d-962e-49b3-824d-db1b25b52ce6",
 CellID->580554487],
Cell[339614, 9524, 608, 14, 75, "Text",ExpressionUUID->"35189af2-1298-4325-b106-27721ed59e8d",
 CellID->250333372]
}, Open  ]],
Cell[CellGroupData[{
Cell[340259, 9543, 147, 2, 66, "Subsubsection",ExpressionUUID->"05605aca-b7ce-418b-b1a4-bdd72fc35bc6",
 CellID->507595900],
Cell[340409, 9547, 827, 14, 222, "Text",ExpressionUUID->"7c21af09-a516-4a0e-842f-c520f1573eaf",
 CellID->1359245416],
Cell[341239, 9563, 659, 11, 163, "Text",ExpressionUUID->"42cdb1aa-229a-4644-9281-674f2a392745",
 CellID->531447905],
Cell[341901, 9576, 1094, 30, 125, "Input",ExpressionUUID->"6af0330f-3506-485c-9194-1db35198a3d9",
 CellID->1586326293],
Cell[342998, 9608, 170, 2, 45, "Text",ExpressionUUID->"59b52fc3-f1e1-4adb-baf2-33082d00ef6b",
 CellID->947143250],
Cell[CellGroupData[{
Cell[343193, 9614, 797, 23, 54, "Input",ExpressionUUID->"249a1e1a-b34e-4f10-8922-2262a066186d",
 CellID->230062855],
Cell[343993, 9639, 807, 24, 68, "Output",ExpressionUUID->"1832ba82-5f24-4142-b589-fe4fdf894736",
 CellID->908096791]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[344849, 9669, 168, 2, 66, "Subsubsection",ExpressionUUID->"567c5a48-04f4-4c12-9b67-5ce0bcfd95b5",
 CellID->746960847],
Cell[345020, 9673, 1184, 24, 281, "Text",ExpressionUUID->"e45ac8a6-6fe2-4712-8f26-5e6d2c34ee6d",
 CellID->2129038814]
}, Open  ]],
Cell[CellGroupData[{
Cell[346241, 9702, 191, 2, 66, "Subsubsection",ExpressionUUID->"4da33684-ef88-4569-995d-7a04ef19e578",
 CellID->718926505],
Cell[346435, 9706, 180, 2, 38, "ItemNumbered",ExpressionUUID->"6686e084-d352-4587-bee6-e399912618e1",
 CellID->1254771513],
Cell[346618, 9710, 421, 7, 104, "Text",ExpressionUUID->"501ad3d2-f3d4-4c35-953e-85b116191966",
 CellID->655405451],
Cell[CellGroupData[{
Cell[347064, 9721, 341, 8, 31, "Input",ExpressionUUID->"76ef8e9c-a8e1-4e5c-aaf9-6978c89e179d",
 CellID->121715696],
Cell[347408, 9731, 407, 8, 45, "Output",ExpressionUUID->"6b7012b1-1901-45d4-b777-25eccafdc1a6",
 CellID->1303255563]
}, Open  ]],
Cell[347830, 9742, 207, 2, 45, "Text",ExpressionUUID->"63bd3777-dc63-4e2c-ba79-70e759ea4efd",
 CellID->1932561709],
Cell[CellGroupData[{
Cell[348062, 9748, 526, 14, 31, "Input",ExpressionUUID->"e23b9a95-de56-487c-86ed-9be7769c1dd9",
 CellID->1400239417],
Cell[348591, 9764, 175, 3, 45, "Output",ExpressionUUID->"8869e2a7-a2cf-49dd-aa65-bc89ef78ae18",
 CellID->1512215598]
}, Open  ]],
Cell[348781, 9770, 169, 2, 45, "Text",ExpressionUUID->"04917ae1-aa62-4f00-a581-f70d57b6e94f",
 CellID->338593341],
Cell[CellGroupData[{
Cell[348975, 9776, 525, 14, 31, "Input",ExpressionUUID->"4faedbdd-f364-48bf-8884-06bc717b304c",
 CellID->2054101284],
Cell[349503, 9792, 175, 3, 45, "Output",ExpressionUUID->"a4d72c16-5fe7-4f1f-b0f0-1a6e74c58bc7",
 CellID->1227207814]
}, Open  ]],
Cell[349693, 9798, 153, 2, 45, "Text",ExpressionUUID->"042cea71-3391-449f-ab3c-e88a466e84c5",
 CellID->878137080],
Cell[CellGroupData[{
Cell[349871, 9804, 525, 14, 31, "Input",ExpressionUUID->"84aa9a59-37b5-4419-b29e-bebb31d5366a",
 CellID->1342281376],
Cell[350399, 9820, 173, 3, 45, "Output",ExpressionUUID->"1ea66dca-cd5d-43cc-bebf-bc710df4acb5",
 CellID->1959169733]
}, Open  ]],
Cell[350587, 9826, 325, 6, 75, "Text",ExpressionUUID->"c44a540a-41c3-4370-bd38-7e765ef01e10",
 CellID->584002128],
Cell[CellGroupData[{
Cell[350937, 9836, 549, 14, 31, "Input",ExpressionUUID->"09533e44-c489-4866-8167-55926d988bb8",
 CellID->193327292],
Cell[351489, 9852, 220, 5, 45, "Output",ExpressionUUID->"757c57c8-6e09-4a39-afa3-741f65295aa9",
 CellID->946552199]
}, Open  ]],
Cell[351724, 9860, 251, 5, 75, "Text",ExpressionUUID->"b5519537-ee29-4761-b2df-8366f7575052",
 CellID->143951617],
Cell[CellGroupData[{
Cell[352000, 9869, 593, 15, 55, "Input",ExpressionUUID->"feec0fb1-08cb-45a8-ad22-63b5babe410d",
 CellID->643841814],
Cell[352596, 9886, 407, 8, 45, "Output",ExpressionUUID->"239cbdf4-4b20-46bb-9ec9-df0f23e8335c",
 CellID->1988655490],
Cell[353006, 9896, 1438, 41, 91, "Output",ExpressionUUID->"6bf61259-037f-46ee-a23a-d67dc80f2b0b",
 CellID->2044822169]
}, Open  ]],
Cell[354459, 9940, 682, 11, 163, "Text",ExpressionUUID->"8efb4a9d-fb8e-47ed-81c6-efc12c16710a",
 CellID->1145391442],
Cell[CellGroupData[{
Cell[355166, 9955, 731, 20, 55, "Input",ExpressionUUID->"9f9aa8e8-f486-4259-a852-2ebc9a0d37da",
 CellID->1775140983],
Cell[355900, 9977, 174, 3, 45, "Output",ExpressionUUID->"daadf87c-88ff-422d-aa60-1223ba61c7b4",
 CellID->84761373]
}, Open  ]],
Cell[356089, 9983, 206, 2, 45, "Text",ExpressionUUID->"0f459718-d9c9-4132-9180-f0400e3d2bcd",
 CellID->1950908776],
Cell[CellGroupData[{
Cell[356320, 9989, 329, 8, 31, "Input",ExpressionUUID->"020d94b3-ceab-4a3b-b923-2ba09fc7740b",
 CellID->567218649],
Cell[356652, 9999, 224, 5, 45, "Output",ExpressionUUID->"6182072b-1dcc-49db-9693-cb221433b66d",
 CellID->752990012]
}, Open  ]],
Cell[356891, 10007, 865, 14, 222, "Text",ExpressionUUID->"331340ec-18ca-47a3-8395-4b2bd5f88f04",
 CellID->381999913],
Cell[357759, 10023, 158, 2, 45, "Text",ExpressionUUID->"4fbcf920-57e5-4ac2-99ac-17184f015fc0",
 CellID->731645504],
Cell[CellGroupData[{
Cell[357942, 10029, 591, 16, 31, "Input",ExpressionUUID->"202e66b3-e98b-4a89-b1f5-57eb355d74ac",
 CellID->1680336100],
Cell[358536, 10047, 681, 18, 68, "Output",ExpressionUUID->"4faf83d0-698b-4560-a4a8-fe5e2e6f57fa",
 CellID->776669104]
}, Open  ]],
Cell[359232, 10068, 318, 6, 75, "Text",ExpressionUUID->"e48a9f47-0169-4921-a5fb-6dd560060342",
 CellID->1072024462],
Cell[359553, 10076, 175, 2, 38, "ItemNumbered",ExpressionUUID->"4185ede3-6951-478d-90c1-91f7eebcb737",
 CellID->404599648],
Cell[359731, 10080, 489, 8, 104, "Text",ExpressionUUID->"39d21e3c-5c9c-4033-93c3-77aff41182dd",
 CellID->1173057534],
Cell[CellGroupData[{
Cell[360245, 10092, 835, 23, 101, "Input",ExpressionUUID->"33c8832f-25c2-4d7b-bc9a-13dbde548351",
 CellID->653117313],
Cell[361083, 10117, 697, 19, 68, "Output",ExpressionUUID->"45c0c133-bd02-44d5-ace0-f694f82f8835",
 CellID->1175216988],
Cell[361783, 10138, 1162, 33, 68, "Output",ExpressionUUID->"047460ed-eb20-430a-be7e-9d8ab94e9322",
 CellID->1464815857]
}, Open  ]],
Cell[362960, 10174, 161, 2, 45, "Text",ExpressionUUID->"9bd39efe-40fb-4d44-a94c-760a12c43095",
 CellID->407579391],
Cell[CellGroupData[{
Cell[363146, 10180, 316, 7, 31, "Input",ExpressionUUID->"394d228f-0a40-41a4-ab66-159678df66bc",
 CellID->1755478955],
Cell[363465, 10189, 1161, 33, 68, "Output",ExpressionUUID->"6b3d9f4c-8464-4331-ab20-3e025de5f210",
 CellID->527063228]
}, Open  ]],
Cell[364641, 10225, 406, 7, 104, "Text",ExpressionUUID->"93e4c582-a498-4e09-bc29-b5e8b813676c",
 CellID->2129112768],
Cell[CellGroupData[{
Cell[365072, 10236, 394, 10, 31, "Input",ExpressionUUID->"cd3233b3-c04b-4730-859d-600719bfdb7e",
 CellID->116391531],
Cell[365469, 10248, 2293, 75, 115, "Output",ExpressionUUID->"7fafff2f-2ba3-4d43-b1e2-1fae6b69453b",
 CellID->2096243908]
}, Open  ]],
Cell[367777, 10326, 244, 5, 75, "Text",ExpressionUUID->"2cfa9726-d6f6-4590-8737-03efb81eab24",
 CellID->1733554915],
Cell[CellGroupData[{
Cell[368046, 10335, 282, 6, 31, "Input",ExpressionUUID->"2dfd29df-4d1e-4ff3-8bb3-f03c683e1327",
 CellID->308839422],
Cell[368331, 10343, 1934, 62, 91, "Output",ExpressionUUID->"b6565028-54b7-4dba-af32-b14e73ef7cce",
 CellID->1932968211]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[370326, 10412, 182, 2, 68, "Subsection",ExpressionUUID->"065cd662-2ab8-45eb-85be-ea5fb5bc4086",
 CellID->1858458054],
Cell[CellGroupData[{
Cell[370533, 10418, 174, 2, 66, "Subsubsection",ExpressionUUID->"1a40e94a-ea90-44cf-81cf-fa5e953bd031",
 CellID->2102351610],
Cell[370710, 10422, 542, 10, 134, "Text",ExpressionUUID->"b6aa0427-f1b3-4ebf-9f38-8b1f774a4ad5",
 CellID->1675065179],
Cell[371255, 10434, 170, 2, 45, "Text",ExpressionUUID->"e6f0a1b3-d662-4b01-af3e-b4dd12f909c3",
 CellID->705934127],
Cell[371428, 10438, 392, 10, 54, "Input",ExpressionUUID->"750b2af7-2971-43d1-b9f6-c507efbf364b",
 CellID->1375156212],
Cell[371823, 10450, 1017, 19, 193, "Text",ExpressionUUID->"dac19a14-1e6b-46b7-919c-aa986f441b94",
 CellID->275358048],
Cell[372843, 10471, 201, 3, 31, "Input",ExpressionUUID->"4dcf288e-40c7-499a-96fb-c3d13c264e87",
 CellID->18894041],
Cell[373047, 10476, 215, 2, 45, "Text",ExpressionUUID->"b921316e-76d0-4909-a43a-ad6de6f60482",
 CellID->2095253799],
Cell[CellGroupData[{
Cell[373287, 10482, 343, 8, 31, "Input",ExpressionUUID->"649b335e-f34b-4629-a766-f536b15ad2e7",
 CellID->1876390440],
Cell[373633, 10492, 336, 8, 49, "Output",ExpressionUUID->"22a5ed88-263e-4d6e-83ea-d542f0cd71b6",
 CellID->1109804409]
}, Open  ]],
Cell[373984, 10503, 240, 4, 45, "Text",ExpressionUUID->"86c47dab-85d7-4219-a49e-1cf43c0c9e88",
 CellID->112857035],
Cell[374227, 10509, 241, 5, 75, "Text",ExpressionUUID->"0894aa72-844f-4ff4-94f1-93a7c704be73",
 CellID->629537283],
Cell[CellGroupData[{
Cell[374493, 10518, 244, 5, 31, "Input",ExpressionUUID->"ce871d2d-7c7c-407d-8f29-dd511a68b3c6",
 CellID->1630967640],
Cell[374740, 10525, 243, 5, 45, "Output",ExpressionUUID->"c535d179-d097-46e1-86eb-5cf7eeaa7b35",
 CellID->77123511]
}, Open  ]],
Cell[374998, 10533, 389, 8, 75, "Text",ExpressionUUID->"72d349f8-3702-4ef8-88be-88f2bf5ce5af",
 CellID->1282210236],
Cell[375390, 10543, 821, 12, 252, "Text",ExpressionUUID->"2a99aac8-c4a6-4ad6-b1d8-87eae35afbeb",
 CellID->811678358],
Cell[376214, 10557, 395, 8, 104, "Text",ExpressionUUID->"1b5ef19f-dae2-4d17-8c3f-625383c74e6c",
 CellID->1807567640]
}, Open  ]],
Cell[CellGroupData[{
Cell[376646, 10570, 189, 2, 66, "Subsubsection",ExpressionUUID->"54e60f1f-dff4-4512-aebb-8238383804f7",
 CellID->319836502],
Cell[376838, 10574, 161, 2, 45, "Text",ExpressionUUID->"3443dd34-d958-4583-8e16-e0c9da04a6a2",
 CellID->340520673],
Cell[377002, 10578, 367, 9, 54, "Input",ExpressionUUID->"cbd44ae4-beb3-4b06-b8b5-99fec8a7d77b",
 CellID->308040185],
Cell[377372, 10589, 333, 6, 75, "Text",ExpressionUUID->"b6b783b2-bec1-4578-a9d7-c101a91e5212",
 CellID->1590071948],
Cell[CellGroupData[{
Cell[377730, 10599, 250, 5, 31, "Input",ExpressionUUID->"870b0986-6b62-43c4-a481-9250b7db3305",
 CellID->639994131],
Cell[377983, 10606, 175, 3, 45, "Output",ExpressionUUID->"d31d0dea-a481-415d-8e5b-087971795047",
 CellID->1436244052]
}, Open  ]],
Cell[378173, 10612, 225, 5, 45, "Text",ExpressionUUID->"1ed3aad1-6f20-458b-907f-2055b29df1db",
 CellID->1237589684],
Cell[CellGroupData[{
Cell[378423, 10621, 286, 6, 31, "Input",ExpressionUUID->"00f96f9e-0c17-4cbe-892a-88ef952ba6ae",
 CellID->1421977893],
Cell[378712, 10629, 510, 19, 49, "Output",ExpressionUUID->"64e77969-b969-47c6-ba33-44d1698bebbd",
 CellID->437376507]
}, Open  ]],
Cell[379237, 10651, 970, 18, 163, "Text",ExpressionUUID->"9b51cfd2-bc9c-4828-8513-3c1d848f98d9",
 CellID->150429468],
Cell[CellGroupData[{
Cell[380232, 10673, 249, 5, 31, "Input",ExpressionUUID->"94b42046-e8b8-4f19-9df1-212d49da26b7",
 CellID->75482933],
Cell[380484, 10680, 359, 11, 45, "Output",ExpressionUUID->"65f4d98b-2a1b-4235-b22d-37f0b01f5d07",
 CellID->437238671]
}, Open  ]],
Cell[380858, 10694, 898, 17, 134, "Text",ExpressionUUID->"9c808b03-7187-4e4c-b576-a29d35d0a63c",
 CellID->2128787110],
Cell[CellGroupData[{
Cell[381781, 10715, 291, 6, 31, "Input",ExpressionUUID->"ff1ddb6f-64f0-4739-995a-f1881d09096c",
 CellID->1360077831],
Cell[382075, 10723, 171, 3, 45, "Output",ExpressionUUID->"c76c72f9-7f2f-4946-bf33-238db7188ce3",
 CellID->1396231518]
}, Open  ]],
Cell[382261, 10729, 633, 15, 45, "Text",ExpressionUUID->"392cef6b-6405-4481-8f83-dff1977f003c",
 CellID->909312257]
}, Open  ]],
Cell[CellGroupData[{
Cell[382931, 10749, 191, 3, 66, "Subsubsection",ExpressionUUID->"cad912e4-7f59-448f-bc82-4017128aa018",
 CellTags->"4.4.3",
 CellID->1848839429],
Cell[383125, 10754, 557, 9, 163, "Text",ExpressionUUID->"90ee1283-a304-49a8-8b4e-4496f0c74f12",
 CellID->1503394760],
Cell[383685, 10765, 366, 9, 54, "Input",ExpressionUUID->"fc8b253a-a30f-41fc-ac5e-f5a8f096930a",
 CellID->815001549],
Cell[384054, 10776, 277, 5, 75, "Text",ExpressionUUID->"3c4323b3-2613-49ec-976c-0e7ea2b2be43",
 CellID->1569410423],
Cell[CellGroupData[{
Cell[384356, 10785, 299, 7, 31, "Input",ExpressionUUID->"0d1e11c7-509f-4790-956b-3e3e67766563",
 CellID->1183234175],
Cell[384658, 10794, 270, 7, 49, "Output",ExpressionUUID->"f0d48150-7322-4be4-a26b-5296975be72c",
 CellID->1365928174]
}, Open  ]],
Cell[384943, 10804, 397, 7, 104, "Text",ExpressionUUID->"694da292-15dd-452b-8d15-370be92d9e73",
 CellID->554633988],
Cell[CellGroupData[{
Cell[385365, 10815, 377, 9, 31, "Input",ExpressionUUID->"a661ef3a-39aa-4711-943b-417f427b7130",
 CellID->225421151],
Cell[385745, 10826, 351, 9, 49, "Output",ExpressionUUID->"736b78c9-0736-4fd5-b49d-814afa7a9483",
 CellID->111308344]
}, Open  ]],
Cell[386111, 10838, 366, 7, 75, "Text",ExpressionUUID->"c12fabae-ffc8-48a2-8cdf-ca2b801e42b8",
 CellID->301081071],
Cell[CellGroupData[{
Cell[386502, 10849, 292, 6, 54, "Input",ExpressionUUID->"92900826-5195-4750-bc63-b1281e1a220f",
 CellID->281568593],
Cell[386797, 10857, 198, 4, 45, "Output",ExpressionUUID->"acd3f8a5-e377-4cf1-b31b-e10e996c363a",
 CellID->1112950166]
}, Open  ]],
Cell[387010, 10864, 356, 7, 75, "Text",ExpressionUUID->"e993df40-3c29-4c55-9ac3-792aa5cdc00a",
 CellID->770874592],
Cell[387369, 10873, 868, 17, 134, "Text",ExpressionUUID->"f6b87f3a-3ce9-4e35-93ee-d50e9567c99d",
 CellID->913364793],
Cell[388240, 10892, 335, 6, 75, "Text",ExpressionUUID->"dc0b1f21-5741-4e8e-b52f-24dbc4684152",
 CellID->1644366425],
Cell[388578, 10900, 392, 10, 54, "Input",ExpressionUUID->"c779f02d-ff24-4346-b088-7917909fea3d",
 CellID->792034791],
Cell[388973, 10912, 684, 11, 163, "Text",ExpressionUUID->"310bb5d7-ca15-4120-a9e1-69121828ef88",
 CellID->1323818443]
}, Open  ]],
Cell[CellGroupData[{
Cell[389694, 10928, 191, 2, 66, "Subsubsection",ExpressionUUID->"b4fc0f32-2b3a-4291-aeba-a3482bf42c63",
 CellID->1263995082],
Cell[389888, 10932, 334, 6, 75, "Text",ExpressionUUID->"a67611c9-1f6f-44ac-afcd-538136958833",
 CellID->1057107050],
Cell[CellGroupData[{
Cell[390247, 10942, 288, 7, 31, "Input",ExpressionUUID->"f835cfd4-9e82-463f-85cc-a5651d4fba7d",
 CellID->2018008211],
Cell[390538, 10951, 248, 6, 45, "Output",ExpressionUUID->"bff6f8b2-ab24-42a5-8eba-45ba85bcc056",
 CellID->1059433611]
}, Open  ]],
Cell[390801, 10960, 470, 10, 104, "Text",ExpressionUUID->"38c2dc4a-3e84-4370-9f54-61d17cd6289d",
 CellID->1113782800],
Cell[CellGroupData[{
Cell[391296, 10974, 327, 8, 31, "Input",ExpressionUUID->"324b9ea2-fce5-4756-b57e-72170a09485b",
 CellID->330860084],
Cell[391626, 10984, 427, 13, 45, "Output",ExpressionUUID->"68df6010-690a-4b5e-9e38-7cf2f90ab9c7",
 CellID->531906413]
}, Open  ]],
Cell[392068, 11000, 419, 9, 104, "Text",ExpressionUUID->"8f24959d-2d3c-4fad-8d85-c81da6214fff",
 CellID->1924144477],
Cell[392490, 11011, 612, 11, 163, "Text",ExpressionUUID->"3e1159e7-d875-42ca-b123-fb8dc8043f77",
 CellID->1229368697]
}, Open  ]],
Cell[CellGroupData[{
Cell[393139, 11027, 190, 2, 66, "Subsubsection",ExpressionUUID->"5e8adaa6-5baf-4d27-8e7a-cf2dfc7bd9a9",
 CellID->844332971],
Cell[393332, 11031, 192, 2, 38, "ItemNumbered",ExpressionUUID->"1bfd57e3-6ac1-4259-8e3d-0ac5161771b0",
 CellID->132304221],
Cell[393527, 11035, 390, 6, 104, "Text",ExpressionUUID->"63f9b372-50d2-46c6-befd-beffa001ee42",
 CellID->991467702],
Cell[393920, 11043, 392, 10, 54, "Input",ExpressionUUID->"988832aa-3571-4546-9491-86b9b7282561",
 CellID->687493492],
Cell[CellGroupData[{
Cell[394337, 11057, 377, 9, 31, "Input",ExpressionUUID->"f0d20c83-aff8-4eb5-8a3f-bfe9bc40600a",
 CellID->497205785],
Cell[394717, 11068, 289, 7, 49, "Output",ExpressionUUID->"3bc09b36-9246-45f7-9046-7ccd856eb977",
 CellID->1390011132]
}, Open  ]],
Cell[395021, 11078, 658, 10, 163, "Text",ExpressionUUID->"2a97583e-a701-4ca8-ac51-aa6f11db5f80",
 CellID->1589983458],
Cell[395682, 11090, 460, 12, 78, "Input",ExpressionUUID->"22fc40ff-4b6b-4aa8-81b2-60c8d7e1b36d",
 CellID->965740122],
Cell[CellGroupData[{
Cell[396167, 11106, 376, 9, 31, "Input",ExpressionUUID->"6518e0b8-f830-46ca-8d61-cd927d67adb6",
 CellID->1309034425],
Cell[396546, 11117, 240, 5, 45, "Output",ExpressionUUID->"b8c3158f-1fc5-4ab0-993c-5199e5a3007b",
 CellID->1322407666]
}, Open  ]],
Cell[396801, 11125, 430, 7, 75, "Text",ExpressionUUID->"c7881c18-c4b4-4553-a2b8-e60e11e10613",
 CellID->1397379659],
Cell[CellGroupData[{
Cell[397256, 11136, 229, 4, 31, "Input",ExpressionUUID->"a316693c-6554-468e-b3cf-b8ed3723862d",
 CellID->1003907078],
Cell[397488, 11142, 305, 8, 45, "Output",ExpressionUUID->"cd56dccb-5e4f-4872-9e51-f8681d64ffbc",
 CellID->2128831291]
}, Open  ]],
Cell[397808, 11153, 1306, 23, 281, "Text",ExpressionUUID->"ec396239-5fe9-4eb1-8bfc-37f3a9bdc69d",
 CellID->42465170],
Cell[399117, 11178, 379, 6, 104, "Text",ExpressionUUID->"8a578012-ffcf-4211-8af0-4bc13313203f",
 CellID->568964059],
Cell[399499, 11186, 169, 2, 38, "ItemNumbered",ExpressionUUID->"a6c2f861-c5bc-45a7-b3d5-e159645883ad",
 CellID->253593970],
Cell[399671, 11190, 531, 9, 163, "Text",ExpressionUUID->"478e1070-2f45-484b-897d-bde273e1fe6d",
 CellID->1546298142],
Cell[CellGroupData[{
Cell[400227, 11203, 393, 10, 31, "Input",ExpressionUUID->"593ee59d-83c9-4668-ad31-20b1ebda4ddf",
 CellID->779187926],
Cell[400623, 11215, 378, 12, 82, "Output",ExpressionUUID->"77951894-15af-4c45-adef-392aee53196f",
 CellID->1331237103]
}, Open  ]],
Cell[401016, 11230, 530, 14, 54, "Input",ExpressionUUID->"5820fd94-f48f-4f4b-afbe-3118f70f8b61",
 CellID->48825999],
Cell[401549, 11246, 191, 2, 45, "Text",ExpressionUUID->"1c0f35c0-dd5b-443c-b89b-7e9a905f3a7f",
 CellID->760748736],
Cell[CellGroupData[{
Cell[401765, 11252, 361, 9, 31, "Input",ExpressionUUID->"70da07f8-cf66-4757-a3cb-4e331c3ea419",
 CellID->142054982],
Cell[402129, 11263, 2697, 94, 363, "Output",ExpressionUUID->"10ea4607-c7b2-43c0-a812-1cf733f04585",
 CellID->2075414899]
}, Open  ]],
Cell[404841, 11360, 513, 9, 134, "Text",ExpressionUUID->"1c2f81b0-8198-40f5-87af-eee711d3cfdd",
 CellID->2068812919],
Cell[405357, 11371, 584, 16, 54, "Input",ExpressionUUID->"82909fa1-8e2c-4136-928e-4f41d089b8ae",
 CellID->477261443],
Cell[405944, 11389, 373, 6, 104, "Text",ExpressionUUID->"43c9250f-f939-4f54-ae28-dc64aa63bf01",
 CellID->228136857],
Cell[CellGroupData[{
Cell[406342, 11399, 470, 13, 31, "Input",ExpressionUUID->"9019c79f-967a-4f6f-880e-405c8b6665d6",
 CellID->725950880],
Cell[406815, 11414, 894, 28, 82, "Output",ExpressionUUID->"80e172ea-355a-4583-a684-caae5d521c03",
 CellID->624689363]
}, Open  ]],
Cell[407724, 11445, 479, 8, 104, "Text",ExpressionUUID->"d2d6225a-86ee-4508-a453-82ffb81eca04",
 CellID->106573758],
Cell[CellGroupData[{
Cell[408228, 11457, 965, 29, 78, "Input",ExpressionUUID->"0695cb6e-ff63-4393-b199-83383ff1a609",
 CellID->1613029728],
Cell[409196, 11488, 894, 28, 82, "Output",ExpressionUUID->"5bb79393-75a3-4bb1-99ed-b455ab4ac357",
 CellID->428175696]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[410139, 11522, 187, 2, 66, "Subsubsection",ExpressionUUID->"5b8e87a2-b0af-4ebc-92ba-ac7eebd7d091",
 CellID->1572307210],
Cell[410329, 11526, 425, 7, 134, "Text",ExpressionUUID->"aa0c5e3c-793c-4a74-ab32-3d8ed95ebe23",
 CellID->981002135],
Cell[CellGroupData[{
Cell[410779, 11537, 492, 12, 101, "Input",ExpressionUUID->"b779f999-eee4-4961-a860-25c53b19be9b",
 CellID->1363513404],
Cell[411274, 11551, 199, 4, 45, "Output",ExpressionUUID->"086f98d2-4e63-4a62-b049-815eef54815c",
 CellID->916783648]
}, Open  ]],
Cell[411488, 11558, 381, 6, 75, "Text",ExpressionUUID->"c8bf8db7-4e65-487e-8424-6f1c6eeea8f9",
 CellID->187604711],
Cell[CellGroupData[{
Cell[411894, 11568, 229, 4, 31, "Input",ExpressionUUID->"ba0c4e7d-5101-407e-8247-561ddcee6451",
 CellID->215738557],
Cell[412126, 11574, 326, 8, 49, "Output",ExpressionUUID->"e30e1c24-8789-4437-94e5-9edc6cc41c1a",
 CellID->1306583401]
}, Open  ]],
Cell[412467, 11585, 460, 8, 104, "Text",ExpressionUUID->"940372d7-88f7-46d0-a501-3cefc175ed95",
 CellID->1726930032],
Cell[CellGroupData[{
Cell[412952, 11597, 232, 4, 31, "Input",ExpressionUUID->"1643ea34-ad96-44c8-bedf-e7eb9b246752",
 CellID->510325955],
Cell[413187, 11603, 273, 7, 45, "Output",ExpressionUUID->"8bdc21af-639b-4bc4-9077-f5e04fadb87c",
 CellID->1616450627]
}, Open  ]],
Cell[413475, 11613, 216, 2, 45, "Text",ExpressionUUID->"5068cbaa-be9a-4288-81a7-11b314e16fb9",
 CellID->2017553439],
Cell[CellGroupData[{
Cell[413716, 11619, 255, 5, 31, "Input",ExpressionUUID->"a2c385e5-730f-4f61-841b-9506c6c0dcf9",
 CellID->1775321459],
Cell[413974, 11626, 387, 14, 45, "Output",ExpressionUUID->"235b91a6-88ab-48a4-ae26-37f2701664fa",
 CellID->1371479158]
}, Open  ]],
Cell[414376, 11643, 855, 17, 75, "Text",ExpressionUUID->"b3404f55-d580-4694-8c95-237c5c3f3dd1",
 CellID->1508225255],
Cell[CellGroupData[{
Cell[415256, 11664, 287, 6, 54, "Input",ExpressionUUID->"bd1124bb-92fe-4224-8104-e925a098f1ac",
 CellID->2025059235],
Cell[415546, 11672, 172, 3, 45, "Output",ExpressionUUID->"b3ebda49-6af2-47a4-853c-491ef0e36ba4",
 CellID->1643072826]
}, Open  ]],
Cell[415733, 11678, 453, 7, 134, "Text",ExpressionUUID->"02cd8383-bc94-4641-9e53-8ba7b54910ba",
 CellID->632769809]
}, Open  ]],
Cell[CellGroupData[{
Cell[416223, 11690, 195, 3, 66, "Subsubsection",ExpressionUUID->"13c766c3-a4ef-4976-b20d-d241dc8532af",
 CellTags->"4.4.7",
 CellID->126177489],
Cell[416421, 11695, 169, 2, 38, "ItemNumbered",ExpressionUUID->"ea814e00-27a2-4bfd-90e3-f015b037eab5",
 CellID->1098698034],
Cell[416593, 11699, 924, 15, 281, "Text",ExpressionUUID->"5358cf09-dcc4-4d9b-b30a-7fc00c56b9d8",
 CellID->1753460532],
Cell[417520, 11716, 963, 14, 311, "Text",ExpressionUUID->"37acfc29-e03b-47f3-a133-b18e27f73bb1",
 CellID->1170190779],
Cell[418486, 11732, 390, 6, 104, "Text",ExpressionUUID->"2387fe91-e045-4772-90e6-de349e57f865",
 CellID->2039689010],
Cell[418879, 11740, 857, 17, 134, "Text",ExpressionUUID->"bec0865d-671b-4f05-91f2-cb108d084d81",
 CellID->1242788193],
Cell[419739, 11759, 373, 6, 104, "Text",ExpressionUUID->"cd8b8011-8f8e-48fe-bbaa-1ab63a27dff7",
 CellID->229259617],
Cell[420115, 11767, 343, 6, 104, "Text",ExpressionUUID->"04e63339-e0a0-4b9e-900c-51f1d686572a",
 CellID->1998726239],
Cell[420461, 11775, 668, 10, 193, "Text",ExpressionUUID->"5b3184ab-cdaf-4a24-a9a5-58595bcb8ae2",
 CellID->1249340395],
Cell[421132, 11787, 522, 8, 134, "Text",ExpressionUUID->"3668a0a8-189b-4fdd-bc6c-f5a448242d36",
 CellID->1124913699],
Cell[421657, 11797, 649, 10, 193, "Text",ExpressionUUID->"b9757bf0-d7a0-4f0f-ae12-3473cc3f52d3",
 CellID->2092726308],
Cell[422309, 11809, 212, 4, 45, "Text",ExpressionUUID->"c942e8e8-7b26-4115-8979-47f39e3d9137",
 CellID->523713205],
Cell[422524, 11815, 177, 2, 38, "ItemNumbered",ExpressionUUID->"9702d9ce-bfe3-4e83-b097-a102d5506ee3",
 CellID->1659851029],
Cell[422704, 11819, 268, 5, 75, "Text",ExpressionUUID->"e3cc0dbb-d9d7-42de-b3cb-95024a44618a",
 CellID->1303669873],
Cell[422975, 11826, 447, 11, 54, "Input",ExpressionUUID->"d50fc002-bd10-4f55-b5fd-f084a02e1cc7",
 CellID->506970161],
Cell[423425, 11839, 218, 2, 45, "Text",ExpressionUUID->"cc366086-bc59-4bb2-8689-409681909fd1",
 CellID->1983945314],
Cell[CellGroupData[{
Cell[423668, 11845, 169, 3, 31, "Input",ExpressionUUID->"2287a8af-7566-4b60-9dbf-442b97fbf4de",
 CellID->860194820],
Cell[423840, 11850, 170, 3, 45, "Output",ExpressionUUID->"356080d2-0269-4be3-ae5b-c8f6f1b32d5e",
 CellID->250393612]
}, Open  ]],
Cell[424025, 11856, 238, 5, 31, "Input",ExpressionUUID->"a18dd550-c93d-42e0-a292-d4a9c8d348c7",
 CellID->1906231401],
Cell[CellGroupData[{
Cell[424288, 11865, 169, 3, 31, "Input",ExpressionUUID->"6e7b59ac-e2fa-4b4a-9923-d473a5b83e66",
 CellID->842221190],
Cell[424460, 11870, 170, 3, 45, "Output",ExpressionUUID->"7c769f8f-c2ee-4d25-a877-7b2c78d5c528",
 CellID->1351699859]
}, Open  ]],
Cell[424645, 11876, 224, 5, 45, "Text",ExpressionUUID->"87ad23d1-b7f7-478d-ab23-39240ddaf1d9",
 CellID->1937512247],
Cell[CellGroupData[{
Cell[424894, 11885, 384, 9, 78, "Input",ExpressionUUID->"6a26a394-ba84-48d1-a8d2-4dd39e0fa224",
 CellID->1010768978],
Cell[425281, 11896, 216, 5, 45, "Output",ExpressionUUID->"a4a4828f-49d4-4a31-9f13-316db58326bd",
 CellID->2146543607]
}, Open  ]],
Cell[425512, 11904, 432, 8, 75, "Text",ExpressionUUID->"1b35819c-7015-4e38-abc3-5f2b2a202d8a",
 CellID->1380616896],
Cell[CellGroupData[{
Cell[425969, 11916, 213, 4, 31, "Input",ExpressionUUID->"30e591ef-e89c-4eb1-803e-ed685c03243e",
 CellID->1043984281],
Cell[426185, 11922, 9987, 255, 244, "Output",ExpressionUUID->"742e69ee-77f2-4e18-b0a9-5ecd729f3bee",
 CellID->443793282]
}, Open  ]],
Cell[436187, 12180, 238, 4, 45, "Text",ExpressionUUID->"069f617c-f22d-4306-a001-0d9ecd52a8c1",
 CellID->622984543],
Cell[CellGroupData[{
Cell[436450, 12188, 276, 6, 54, "Input",ExpressionUUID->"ad5643ed-da18-4116-97bc-893e3fdfc2cd",
 CellID->1790145031],
Cell[436729, 12196, 170, 3, 45, "Output",ExpressionUUID->"e5a97bab-147b-4331-9713-fb8222239f94",
 CellID->695982837]
}, Open  ]],
Cell[436914, 12202, 606, 10, 134, "Text",ExpressionUUID->"869c0d22-b91e-468f-bc11-61e766f4c671",
 CellID->40116250],
Cell[CellGroupData[{
Cell[437545, 12216, 300, 6, 54, "Input",ExpressionUUID->"ba576c00-d5a9-440f-bffc-44f1d0680e67",
 CellID->1215433189],
Cell[437848, 12224, 171, 3, 45, "Output",ExpressionUUID->"ab92b3a1-8a12-439a-9b03-e6debe8b9d4d",
 CellID->1938098432]
}, Open  ]],
Cell[438034, 12230, 170, 2, 45, "Text",ExpressionUUID->"5afe0f82-e201-4b60-a67c-16468ecc062d",
 CellID->588388928],
Cell[CellGroupData[{
Cell[438229, 12236, 222, 4, 31, "Input",ExpressionUUID->"018bed85-eaa3-4825-b460-15257bcbab05",
 CellID->337259506],
Cell[438454, 12242, 370, 8, 32, "Message",ExpressionUUID->"d26f389c-a969-47fb-94ee-589f5045fd37",
 CellID->32585283],
Cell[438827, 12252, 171, 3, 45, "Output",ExpressionUUID->"8e239c89-16fd-4be9-9f89-a351fe547808",
 CellID->52521396]
}, Open  ]],
Cell[439013, 12258, 509, 9, 104, "Text",ExpressionUUID->"cc81a49c-b7aa-48d9-978e-b0607ef4ba07",
 CellID->744560346],
Cell[439525, 12269, 192, 2, 45, "Text",ExpressionUUID->"48befbc7-3896-496a-84de-badaf9ac81ce",
 CellID->285562538],
Cell[CellGroupData[{
Cell[439742, 12275, 317, 7, 54, "Input",ExpressionUUID->"4b86ad54-7ed0-484c-a80b-2715e0fdc8db",
 CellID->1342325154],
Cell[440062, 12284, 422, 9, 32, "Message",ExpressionUUID->"a65cea39-c1a1-4a17-9358-907bd04b0a5d",
 CellID->956863976],
Cell[440487, 12295, 171, 3, 45, "Output",ExpressionUUID->"2c52e55c-0643-44a4-9b50-752fc3ef318b",
 CellID->1655295896]
}, Open  ]],
Cell[440673, 12301, 472, 8, 75, "Text",ExpressionUUID->"20e6fc17-c005-471f-b2fe-0e4ac589a533",
 CellID->1313446893],
Cell[CellGroupData[{
Cell[441170, 12313, 245, 5, 31, "Input",ExpressionUUID->"cdadc449-7b71-4ed2-ad34-c25ca17cc10b",
 CellID->319403704],
Cell[441418, 12320, 358, 11, 60, "Output",ExpressionUUID->"5fe2d8aa-cc86-4f24-8c7b-7f1869399bf5",
 CellID->90100112]
}, Open  ]],
Cell[441791, 12334, 512, 8, 134, "Text",ExpressionUUID->"591d2998-3716-4f6d-a46a-b6d95c7cfd10",
 CellID->336611249],
Cell[442306, 12344, 193, 2, 45, "Text",ExpressionUUID->"d38a26c9-6604-44ed-bb47-b5045891f959",
 CellID->1633734771],
Cell[442502, 12348, 413, 10, 78, "Input",ExpressionUUID->"ca6a7714-5fc9-4494-95bf-3174cffa6c5d",
 CellID->407854853],
Cell[442918, 12360, 175, 2, 45, "Text",ExpressionUUID->"18b40bc3-2bad-40a0-b948-3805a4d36c08",
 CellID->1078460845],
Cell[CellGroupData[{
Cell[443118, 12366, 220, 4, 31, "Input",ExpressionUUID->"afd588eb-b20b-4592-9b9a-bf8758cfd4c7",
 CellID->322788367],
Cell[443341, 12372, 373, 8, 32, "Message",ExpressionUUID->"78b6daa7-1012-430f-8880-0dd946d2b2f4",
 CellID->417670558],
Cell[443717, 12382, 173, 3, 45, "Output",ExpressionUUID->"135054af-50db-4286-a4ab-27df6cd88b4c",
 CellID->1812509910]
}, Open  ]],
Cell[443905, 12388, 442, 8, 104, "Text",ExpressionUUID->"7c869b91-3271-4909-ac96-a91997c465fb",
 CellID->798524675],
Cell[444350, 12398, 178, 2, 45, "Text",ExpressionUUID->"0446b75e-cd1d-45dc-859e-6a9ee66ec82a",
 CellID->216687089],
Cell[444531, 12402, 346, 8, 54, "Input",ExpressionUUID->"5016d511-a6c7-45bc-9ef1-4390cdea8246",
 CellID->872396781],
Cell[444880, 12412, 163, 2, 45, "Text",ExpressionUUID->"20b9ca3e-ad7c-40a5-a32a-e332dac6bd70",
 CellID->671055160],
Cell[CellGroupData[{
Cell[445068, 12418, 224, 4, 31, "Input",ExpressionUUID->"2614a4c2-cf32-4eb6-afb0-f1e095224b14",
 CellID->325755355],
Cell[445295, 12424, 200, 4, 45, "Output",ExpressionUUID->"3e3d81ac-320e-4ee6-ae11-f615c31eb99a",
 CellID->1015369391]
}, Open  ]],
Cell[CellGroupData[{
Cell[445532, 12433, 232, 4, 31, "Input",ExpressionUUID->"42316055-62c8-4548-a77a-4e74096dced3",
 CellID->1804774738],
Cell[445767, 12439, 300, 8, 45, "Output",ExpressionUUID->"a9579e54-955e-43a2-9162-ee9745e0264f",
 CellID->820485720]
}, Open  ]],
Cell[446082, 12450, 662, 13, 134, "Text",ExpressionUUID->"c9abd5ec-6125-48a5-95b2-07b774b047a3",
 CellID->910998653],
Cell[446747, 12465, 178, 2, 38, "ItemNumbered",ExpressionUUID->"e157673f-f9dd-4fa7-abaf-0456dbd7b063",
 CellID->736405000],
Cell[446928, 12469, 338, 6, 75, "Text",ExpressionUUID->"9ed50c40-949e-43b8-8d47-4cd182ff0c68",
 CellID->1295853170],
Cell[447269, 12477, 489, 12, 78, "Input",ExpressionUUID->"8cdca424-d0df-42fd-86c4-91e00915a5b1",
 CellID->75817266],
Cell[447761, 12491, 171, 2, 45, "Text",ExpressionUUID->"3768d5fd-4b60-417f-ae34-4dca23d85eaa",
 CellID->1571500011],
Cell[CellGroupData[{
Cell[447957, 12497, 351, 8, 78, "Input",ExpressionUUID->"a1334728-fba9-4140-bd91-ef5ee14b6896",
 CellID->1402113760],
Cell[448311, 12507, 171, 3, 45, "Output",ExpressionUUID->"2f9f6d0d-63cc-45fa-a30b-4b9e79da324c",
 CellID->1274635497]
}, Open  ]],
Cell[448497, 12513, 177, 2, 45, "Text",ExpressionUUID->"a1683242-df84-4f8e-9d41-bebab7c043aa",
 CellID->1649419254],
Cell[CellGroupData[{
Cell[448699, 12519, 272, 6, 54, "Input",ExpressionUUID->"a51ddfcd-d81e-4695-9089-ad179a0d9eb6",
 CellID->648862473],
Cell[448974, 12527, 171, 3, 45, "Output",ExpressionUUID->"3cbbc621-d51a-40ef-906e-65c9d19d239f",
 CellID->1558244395]
}, Open  ]],
Cell[449160, 12533, 237, 3, 45, "Text",ExpressionUUID->"cfc4a09e-652e-44f6-b6ec-0eb46597b693",
 CellID->850471600],
Cell[CellGroupData[{
Cell[449422, 12540, 340, 8, 78, "Input",ExpressionUUID->"b5379bd3-851c-4160-8954-fdbaba593f3f",
 CellID->306187409],
Cell[449765, 12550, 171, 3, 45, "Output",ExpressionUUID->"b12a6605-b6b5-469b-ba5d-b8fdd53aa863",
 CellID->1746067571]
}, Open  ]],
Cell[449951, 12556, 549, 9, 134, "Text",ExpressionUUID->"04c278a4-049f-4899-a693-3a8e650f712a",
 CellID->1331493814],
Cell[450503, 12567, 175, 2, 45, "Text",ExpressionUUID->"e98d74ca-7a97-4a4b-9ca5-4da371d2a3ce",
 CellID->245512514],
Cell[CellGroupData[{
Cell[450703, 12573, 485, 12, 101, "Input",ExpressionUUID->"868b213d-ac09-4d3b-8b05-4aed8d2a7cf0",
 CellID->113877055],
Cell[451191, 12587, 218, 5, 45, "Output",ExpressionUUID->"06c1fbb2-f209-4e2d-9e1a-22eda0aae5d3",
 CellID->1932411078]
}, Open  ]],
Cell[451424, 12595, 714, 11, 163, "Text",ExpressionUUID->"d46afedd-68ad-4ec0-ac57-4ed6455c988a",
 CellID->1637794365],
Cell[CellGroupData[{
Cell[452163, 12610, 211, 4, 31, "Input",ExpressionUUID->"b41dd634-6ea5-4865-8607-269169e1ec7d",
 CellID->2098991006],
Cell[452377, 12616, 9971, 254, 244, "Output",ExpressionUUID->"c20a1a4a-13a0-4b77-8af4-500fd4972c58",
 CellID->1735238801]
}, Open  ]],
Cell[462363, 12873, 293, 5, 75, "Text",ExpressionUUID->"3c108f31-442f-4b49-9c2f-ac29559a7126",
 CellID->1330602147],
Cell[CellGroupData[{
Cell[462681, 12882, 251, 5, 31, "Input",ExpressionUUID->"4af81576-ba55-4264-afcd-232331774296",
 CellID->119356049],
Cell[462935, 12889, 436, 9, 32, "Message",ExpressionUUID->"07a9096d-0a12-45f4-be30-08e54845c53b",
 CellID->2052876290],
Cell[463374, 12900, 173, 3, 45, "Output",ExpressionUUID->"5e8c603d-5f05-4435-b023-e5da77f6c049",
 CellID->1219533328]
}, Open  ]],
Cell[463562, 12906, 536, 9, 104, "Text",ExpressionUUID->"17275f02-1fea-4c04-8169-46ed067201c9",
 CellID->1112716728],
Cell[464101, 12917, 393, 10, 54, "Input",ExpressionUUID->"50700547-8fe9-440d-abfa-dcf25867b7b0",
 CellID->194623946],
Cell[464497, 12929, 188, 2, 45, "Text",ExpressionUUID->"2be16463-889c-4437-be46-05865a67392e",
 CellID->572162213],
Cell[CellGroupData[{
Cell[464710, 12935, 322, 7, 54, "Input",ExpressionUUID->"e006f9af-0d74-40c6-8b3d-fb53a54a3ca6",
 CellID->2055397740],
Cell[465035, 12944, 173, 3, 45, "Output",ExpressionUUID->"5ceb6b4e-c9fa-41bc-8794-cc4b561cff2d",
 CellID->1160696862]
}, Open  ]],
Cell[465223, 12950, 244, 3, 45, "Text",ExpressionUUID->"5898770c-98c2-4e59-b2a8-b4045fe9fb0b",
 CellID->90710286],
Cell[CellGroupData[{
Cell[465492, 12957, 209, 4, 31, "Input",ExpressionUUID->"0aacfac1-5d7f-44a6-bc69-4b209815c366",
 CellID->1888569300],
Cell[465704, 12963, 10261, 260, 296, "Output",ExpressionUUID->"33d95a18-1731-4bf7-b1b5-0423740c283d",
 CellID->1270400374]
}, Open  ]],
Cell[475980, 13226, 1046, 17, 252, "Text",ExpressionUUID->"e2dd51a6-9742-431e-9c8d-d230a85b2134",
 CellID->280674639],
Cell[477029, 13245, 832, 16, 222, "Text",ExpressionUUID->"41bce59f-ca56-46ff-b64b-a2de5afe6b0a",
 CellID->1445029806],
Cell[477864, 13263, 149, 2, 38, "ItemNumbered",ExpressionUUID->"1ce41045-ce13-472c-a91e-248bade80963",
 CellID->2074329913],
Cell[478016, 13267, 906, 14, 252, "Text",ExpressionUUID->"aa6a918b-ab03-4d3d-bf7e-00edb3e76296",
 CellID->1013322393],
Cell[478925, 13283, 596, 10, 163, "Text",ExpressionUUID->"76d56cea-09c8-4c3e-b585-990eb38af18a",
 CellID->48652285]
}, Open  ]],
Cell[CellGroupData[{
Cell[479558, 13298, 186, 2, 66, "Subsubsection",ExpressionUUID->"f6f7cba7-c2cc-4ac3-bdff-1aee634933bd",
 CellID->2004949258],
Cell[479747, 13302, 549, 8, 134, "Text",ExpressionUUID->"a3c47fca-898e-4674-85ae-2a2f8fbc28a1",
 CellID->1016274129],
Cell[CellGroupData[{
Cell[480321, 13314, 529, 14, 78, "Input",ExpressionUUID->"b9d68679-9fc8-4111-97cc-97029f265faa",
 CellID->1812868006],
Cell[480853, 13330, 229, 5, 45, "Output",ExpressionUUID->"f3a7ac84-e66b-4e63-867c-43dbcf57d0fa",
 CellID->1537446661]
}, Open  ]],
Cell[481097, 13338, 333, 6, 75, "Text",ExpressionUUID->"649cc0ab-cafc-4e2c-a2e9-12984fbf7acb",
 CellID->1342790723],
Cell[CellGroupData[{
Cell[481455, 13348, 464, 13, 31, "Input",ExpressionUUID->"9764eaa5-144b-4b54-88ba-5704148db44a",
 CellID->535869860],
Cell[481922, 13363, 222, 5, 45, "Output",ExpressionUUID->"ce1eaf15-1c7a-4bf5-9287-1f7893b37a02",
 CellID->717962706]
}, Open  ]],
Cell[482159, 13371, 450, 7, 134, "Text",ExpressionUUID->"b42afecc-17af-45bb-ac6a-44fa7593db8e",
 CellID->1974984769],
Cell[CellGroupData[{
Cell[482634, 13382, 267, 5, 31, "Input",ExpressionUUID->"d8757e71-d8e4-471f-ad25-c890541d536a",
 CellID->1525847843],
Cell[482904, 13389, 669, 19, 108, "Output",ExpressionUUID->"fc656a8c-9c22-4e58-b74e-83e5d8b2c791",
 CellID->1689043800]
}, Open  ]],
Cell[483588, 13411, 405, 7, 104, "Text",ExpressionUUID->"b1585042-c787-468e-a0ee-831b0e92cb6e",
 CellID->172816907],
Cell[483996, 13420, 288, 5, 75, "Text",ExpressionUUID->"43d1cb44-18ca-4e44-8954-b10eb42f6ba6",
 CellID->1491393233],
Cell[CellGroupData[{
Cell[484309, 13429, 336, 9, 31, "Input",ExpressionUUID->"81284bb1-a912-4705-85ba-c9b85dcdad87",
 CellID->139993473],
Cell[484648, 13440, 345, 10, 49, "Output",ExpressionUUID->"1e0871d3-1395-44d0-9003-e442944da816",
 CellID->1059005102]
}, Open  ]],
Cell[485008, 13453, 389, 7, 104, "Text",ExpressionUUID->"25eed20b-1acc-4f7e-aee9-67e4a297e108",
 CellID->1570530450],
Cell[CellGroupData[{
Cell[485422, 13464, 387, 11, 31, "Input",ExpressionUUID->"a333dd82-b803-4208-835c-153346131f37",
 CellID->176725394],
Cell[485812, 13477, 343, 10, 49, "Output",ExpressionUUID->"1b8bef24-c178-479c-a0e2-7758ae8808ea",
 CellID->570522883]
}, Open  ]],
Cell[486170, 13490, 148, 2, 45, "Text",ExpressionUUID->"ed0bbc0c-4d64-4020-a51e-e34efd73e98b",
 CellID->263610726],
Cell[CellGroupData[{
Cell[486343, 13496, 296, 7, 31, "Input",ExpressionUUID->"1cec7003-26bf-4b36-9752-1bddca32b44b",
 CellID->1779950937],
Cell[486642, 13505, 671, 19, 108, "Output",ExpressionUUID->"9713247c-7ace-4b87-b4fc-525150df35c5",
 CellID->1309498539]
}, Open  ]],
Cell[CellGroupData[{
Cell[487350, 13529, 227, 4, 31, "Input",ExpressionUUID->"2fa9cbab-4d54-4c60-9f4d-3cf0daccfd6d",
 CellID->852052184],
Cell[487580, 13535, 704, 20, 93, "Output",ExpressionUUID->"2a0970c6-1407-4f5c-bb64-e3e514c46a60",
 CellID->1489864006]
}, Open  ]],
Cell[488299, 13558, 378, 7, 104, "Text",ExpressionUUID->"9ab99d36-17b2-4e22-8aab-dddb4282c399",
 CellID->485024822],
Cell[CellGroupData[{
Cell[488702, 13569, 230, 4, 31, "Input",ExpressionUUID->"dd8ae426-bbcd-4608-865d-88d4aa9e084b",
 CellID->803259504],
Cell[488935, 13575, 627, 18, 45, "Output",ExpressionUUID->"7ca00804-ad9a-42f6-846d-d22d3122c49d",
 CellID->852088521]
}, Open  ]],
Cell[489577, 13596, 198, 2, 45, "Text",ExpressionUUID->"ed3d6e19-8d54-44cc-8f18-3d81604182e9",
 CellID->968974905],
Cell[CellGroupData[{
Cell[489800, 13602, 320, 8, 31, "Input",ExpressionUUID->"830fa27d-a5dd-4f53-850a-c87bb3697098",
 CellID->625834100],
Cell[490123, 13612, 668, 19, 108, "Output",ExpressionUUID->"247fb12a-c599-46e7-ab8e-1c1e03e886c6",
 CellID->797213182]
}, Open  ]],
Cell[CellGroupData[{
Cell[490828, 13636, 228, 4, 31, "Input",ExpressionUUID->"5be71c90-d767-4085-ae19-2c0c0573c2e6",
 CellID->1371931592],
Cell[491059, 13642, 171, 3, 45, "Output",ExpressionUUID->"7de445cb-5ddd-4afe-934e-6375ef79c2f3",
 CellID->1516059575]
}, Open  ]],
Cell[491245, 13648, 479, 8, 134, "Text",ExpressionUUID->"5ebd6d61-4c95-4ef1-9bf2-cde7741f64c0",
 CellID->519805370]
}, Open  ]],
Cell[CellGroupData[{
Cell[491761, 13661, 167, 2, 66, "Subsubsection",ExpressionUUID->"2a14c8fe-35a2-4cac-8f73-fea8bdb694c5",
 CellID->2115538522],
Cell[491931, 13665, 770, 16, 104, "Text",ExpressionUUID->"59123467-7a26-43da-aef8-360b6e348153",
 CellID->2116679522],
Cell[492704, 13683, 376, 9, 54, "Input",ExpressionUUID->"ef5b37de-a74c-459e-bc19-1e9b898d0201",
 CellID->1304996667],
Cell[493083, 13694, 204, 2, 45, "Text",ExpressionUUID->"17bd2992-5428-4a76-a1d8-8628f99419d0",
 CellID->204118774],
Cell[CellGroupData[{
Cell[493312, 13700, 316, 7, 31, "Input",ExpressionUUID->"768176b3-68d9-464a-9b3b-80aff910ee07",
 CellID->2135297045],
Cell[493631, 13709, 439, 13, 49, "Output",ExpressionUUID->"65f5fb62-8527-4eac-8052-e9b29977aa57",
 CellID->1889344180]
}, Open  ]],
Cell[494085, 13725, 585, 9, 163, "Text",ExpressionUUID->"314b546d-7d2a-44ab-aea4-87cc9691797b",
 CellID->1514428718],
Cell[494673, 13736, 972, 14, 252, "Text",ExpressionUUID->"5fcd2d63-ef08-452b-9c07-6f43437cb6b3",
 CellID->642871087]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[495694, 13756, 181, 2, 68, "Subsection",ExpressionUUID->"59cda628-e95a-4334-9b97-98765b117125",
 CellID->907664421],
Cell[495878, 13760, 813, 14, 222, "Text",ExpressionUUID->"b858c466-5b17-4c8c-b787-827d5101196d",
 CellID->1539579106],
Cell[496694, 13776, 1193, 19, 340, "Text",ExpressionUUID->"6810d6ac-5426-43c2-a56a-5a1db7895b4b",
 CellID->616646470],
Cell[497890, 13797, 205, 4, 45, "Text",ExpressionUUID->"69005d8f-8f3e-4cf2-bf84-f11f4cb754f5",
 CellID->1652328134],
Cell[CellGroupData[{
Cell[498120, 13805, 178, 2, 66, "Subsubsection",ExpressionUUID->"f82d6289-90d4-4517-a5a9-f4ea01d870c6",
 CellID->1567908781],
Cell[498301, 13809, 279, 7, 45, "Text",ExpressionUUID->"1b6461f4-e8d8-4cff-a9a8-39f6234b4dd8",
 CellID->71049930],
Cell[CellGroupData[{
Cell[498605, 13820, 579, 15, 78, "Input",ExpressionUUID->"8faa27ef-4b21-41b2-a62a-16dbedacf8fe",
 CellID->1374232320],
Cell[499187, 13837, 224, 5, 45, "Output",ExpressionUUID->"5829da13-f89c-4b3a-b9b9-14d7fb9c2aba",
 CellID->47804105]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[499460, 13848, 206, 3, 66, "Subsubsection",ExpressionUUID->"74efea8e-ed6f-4f85-a7cb-62316ce9eee1",
 CellTags->"4.5.2",
 CellID->1774520151],
Cell[499669, 13853, 197, 2, 45, "Text",ExpressionUUID->"ba4f2bd6-a402-4bf2-986e-086493e57609",
 CellID->107288321],
Cell[CellGroupData[{
Cell[499891, 13859, 518, 13, 78, "Input",ExpressionUUID->"c5754ae0-5646-4ab4-ad04-785ff310fa7a",
 CellID->940456133],
Cell[500412, 13874, 228, 5, 45, "Output",ExpressionUUID->"be96cc8f-1be7-45b2-af4c-b0863c43b7f6",
 CellID->2099284235]
}, Open  ]],
Cell[500655, 13882, 525, 8, 134, "Text",ExpressionUUID->"c141b288-ccab-441e-b4f4-84715b54528a",
 CellID->1661301082],
Cell[CellGroupData[{
Cell[501205, 13894, 231, 4, 31, "Input",ExpressionUUID->"df2d956b-d260-40af-83fd-c2a60d6b6297",
 CellID->345092253],
Cell[501439, 13900, 188, 4, 45, "Output",ExpressionUUID->"968fb31b-f414-4ced-99e3-2f213b4059a8",
 CellID->2042592355]
}, Open  ]],
Cell[501642, 13907, 187, 2, 45, "Text",ExpressionUUID->"8e6b6efe-08f5-4e2f-a92a-a1da2296512f",
 CellID->176129543],
Cell[CellGroupData[{
Cell[501854, 13913, 229, 4, 31, "Input",ExpressionUUID->"185c7e0f-3c3c-43b7-b5bd-0aec81194ef6",
 CellID->1101415777],
Cell[502086, 13919, 280, 7, 45, "Output",ExpressionUUID->"27915a88-8e3f-46b4-8b37-399c3eb0133e",
 CellID->513349099]
}, Open  ]],
Cell[502381, 13929, 421, 7, 104, "Text",ExpressionUUID->"7ee985c9-f7d2-4d61-9d24-1c8843d27cdd",
 CellID->1416496894],
Cell[502805, 13938, 402, 7, 104, "Text",ExpressionUUID->"86c2f10e-fbc8-4e46-8142-264894209de9",
 CellID->2102673885],
Cell[CellGroupData[{
Cell[503232, 13949, 425, 10, 101, "Input",ExpressionUUID->"676e85e8-87f2-4bc6-a7db-f763f9e8dc34",
 CellID->744118639],
Cell[503660, 13961, 170, 3, 45, "Output",ExpressionUUID->"bf8f5f07-28f9-44ca-a966-503b76a7408e",
 CellID->932914461]
}, Open  ]],
Cell[503845, 13967, 206, 2, 45, "Text",ExpressionUUID->"391df451-e0f7-4228-94ac-83f838dd115a",
 CellID->715239280],
Cell[504054, 13971, 393, 9, 54, "Input",ExpressionUUID->"ddab5d5f-6624-4147-b3cb-d32fe245b0bb",
 CellID->1899042896],
Cell[504450, 13982, 196, 2, 45, "Text",ExpressionUUID->"59ac4bc1-3035-42a4-b222-87f45811f911",
 CellID->595366960],
Cell[CellGroupData[{
Cell[504671, 13988, 225, 4, 31, "Input",ExpressionUUID->"42183b23-44cd-4edb-a494-39cacb6aba20",
 CellID->111499349],
Cell[504899, 13994, 411, 8, 32, "Message",ExpressionUUID->"1bd19467-9d99-4878-baa4-05b56e81349c",
 CellID->2105107103],
Cell[505313, 14004, 188, 4, 45, "Output",ExpressionUUID->"1a1b10ae-8c9a-40df-8793-1792f20d4e6e",
 CellID->741995796]
}, Open  ]],
Cell[505516, 14011, 165, 2, 45, "Text",ExpressionUUID->"02781395-7514-4734-b707-0d1a0b81331c",
 CellID->285805243],
Cell[505684, 14015, 337, 7, 54, "Input",ExpressionUUID->"67b049b2-8b33-4cc6-a795-03f7df90891b",
 CellID->1082203224],
Cell[506024, 14024, 165, 2, 45, "Text",ExpressionUUID->"4cb9d37f-d9bf-4e4d-9914-177e0b475fab",
 CellID->1566538805],
Cell[506192, 14028, 246, 5, 31, "Input",ExpressionUUID->"85fea1c3-7325-4b43-9cdc-d7243dd5bab3",
 CellID->535010021],
Cell[CellGroupData[{
Cell[506463, 14037, 169, 3, 31, "Input",ExpressionUUID->"1a4fc672-9b2f-463b-b1cd-a16a7e981bd3",
 CellID->148825905],
Cell[506635, 14042, 171, 3, 45, "Output",ExpressionUUID->"ad775f99-1942-4c9c-a913-f319c9d025c9",
 CellID->1929497750]
}, Open  ]],
Cell[506821, 14048, 1195, 21, 252, "Text",ExpressionUUID->"5a2ea4f6-ba90-43f9-bb6a-46fe02aa1b9a",
 CellID->2065614550],
Cell[508019, 14071, 509, 8, 134, "Text",ExpressionUUID->"d887c55a-4299-4ab2-a835-15f1d87fb4f6",
 CellID->774786183],
Cell[508531, 14081, 488, 8, 134, "Text",ExpressionUUID->"84dc4d70-5221-4804-81bb-f2fa2b366c68",
 CellID->1708766547]
}, Open  ]],
Cell[CellGroupData[{
Cell[509056, 14094, 179, 2, 66, "Subsubsection",ExpressionUUID->"70de6487-f80a-4643-bb46-a66c4cc35c63",
 CellID->1623026380],
Cell[509238, 14098, 439, 11, 54, "Input",ExpressionUUID->"a3d22941-7fd2-4ee9-a9e5-f9d568209bfb",
 CellID->264591520],
Cell[CellGroupData[{
Cell[509702, 14113, 298, 7, 31, "Input",ExpressionUUID->"e64422c8-934f-4a10-8d19-df01d7971be8",
 CellID->1029213165],
Cell[510003, 14122, 330, 8, 45, "Output",ExpressionUUID->"bb8bab1c-cdf7-4a33-8ad4-ac187dd12b9e",
 CellID->1310503409]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[510382, 14136, 195, 2, 66, "Subsubsection",ExpressionUUID->"4309f065-275f-4f4b-b39d-5baf0dd37ab4",
 CellID->1038511431],
Cell[510580, 14140, 391, 9, 54, "Input",ExpressionUUID->"533a009d-bccd-4453-bd87-8a58c717273b",
 CellID->1278041407],
Cell[CellGroupData[{
Cell[510996, 14153, 242, 4, 31, "Input",ExpressionUUID->"a2b63df0-f181-41d7-bf64-bbc0c05e5d3f",
 CellID->1344800995],
Cell[511241, 14159, 195, 3, 45, "Output",ExpressionUUID->"d625d6b1-5720-4d4c-82a5-21b36519a17c",
 CellID->1978356133]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[511485, 14168, 173, 2, 66, "Subsubsection",ExpressionUUID->"c5e67af3-03cf-4a84-b302-02f9b672fff9",
 CellID->841845767],
Cell[511661, 14172, 451, 12, 54, "Input",ExpressionUUID->"5929c564-ca64-4f8d-bf4b-422f932221c5",
 CellID->319690073],
Cell[CellGroupData[{
Cell[512137, 14188, 434, 11, 31, "Input",ExpressionUUID->"051f1529-4a18-4ba4-a90e-d176d1bfe335",
 CellID->797652878],
Cell[512574, 14201, 408, 11, 45, "Output",ExpressionUUID->"c8539707-1e0b-4cc8-8920-bc294d46dbb0",
 CellID->1668225528]
}, Open  ]],
Cell[512997, 14215, 987, 14, 222, "Text",ExpressionUUID->"d4fef4a0-a46b-475c-940f-1c86b73482c1",
 CellID->319953864],
Cell[513987, 14231, 463, 12, 54, "Input",ExpressionUUID->"847c9e0f-f639-49b1-9ca2-a67754691591",
 CellID->1554710469],
Cell[CellGroupData[{
Cell[514475, 14247, 437, 11, 31, "Input",ExpressionUUID->"cd557ef6-389a-49a3-80ba-f6866d9f996c",
 CellID->1707474881],
Cell[514915, 14260, 404, 11, 45, "Output",ExpressionUUID->"99bb6a13-bb8b-498f-b403-a5de2070e749",
 CellID->1755947026]
}, Open  ]],
Cell[515334, 14274, 303, 6, 75, "Text",ExpressionUUID->"6ecb179b-c9ae-457f-9f8e-96a0d30fbcf7",
 CellID->1481388908],
Cell[515640, 14282, 390, 10, 54, "Input",ExpressionUUID->"3708c730-411c-4de5-92f1-be8de6b4347d",
 CellID->269484363],
Cell[CellGroupData[{
Cell[516055, 14296, 398, 10, 31, "Input",ExpressionUUID->"8cb642f8-e47f-4bbb-a29e-c1d495dbdc8b",
 CellID->1682177651],
Cell[516456, 14308, 269, 7, 71, "Output",ExpressionUUID->"e13f6501-93fc-48a5-ad9b-d2f796755d73",
 CellID->141992976]
}, Open  ]],
Cell[516740, 14318, 1240, 18, 340, "Text",ExpressionUUID->"abdac175-6e5b-43f4-bd2c-8d6fba64bc25",
 CellID->621615815],
Cell[CellGroupData[{
Cell[518005, 14340, 437, 11, 31, "Input",ExpressionUUID->"91aab883-6884-42fa-ad79-22ba801621fd",
 CellID->611963593],
Cell[518445, 14353, 1420, 57, 71, "Output",ExpressionUUID->"bd47176f-bd6a-4fa1-8237-988ff36b4917",
 CellID->2139606244]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[519914, 14416, 221, 4, 66, "Subsubsection",ExpressionUUID->"847c42ea-1ca2-40ce-9256-bfd9c99c0b35",
 CellID->748473893],
Cell[520138, 14422, 251, 5, 75, "Text",ExpressionUUID->"64a8c1da-0360-4249-a4f1-63c1ac27fbe5",
 CellID->1788999172],
Cell[520392, 14429, 448, 12, 54, "Input",ExpressionUUID->"9d667cb0-de8a-4092-8d8e-9c377b5db6de",
 CellID->160708710],
Cell[CellGroupData[{
Cell[520865, 14445, 427, 11, 31, "Input",ExpressionUUID->"66e1f154-d4c0-4e18-9357-8075e74c2c36",
 CellID->1039145612],
Cell[521295, 14458, 312, 8, 45, "Output",ExpressionUUID->"e8fe91e6-f5f7-48ae-9707-118904f81ca9",
 CellID->593668196]
}, Open  ]],
Cell[521622, 14469, 423, 7, 104, "Text",ExpressionUUID->"29139436-2e4c-4320-b073-d2b0cda0293a",
 CellID->572346210],
Cell[522048, 14478, 565, 15, 78, "Input",ExpressionUUID->"ff0184d0-3bc7-4bb9-a745-5adeb3b8fd11",
 CellID->1551312572],
Cell[CellGroupData[{
Cell[522638, 14497, 468, 12, 31, "Input",ExpressionUUID->"4bb77f8e-b4b4-4d24-8fe1-0a7205f321ea",
 CellID->1419720811],
Cell[523109, 14511, 351, 8, 45, "Output",ExpressionUUID->"74ee09cf-313c-4676-bbb9-fa1aa3d44527",
 CellID->1921471558]
}, Open  ]],
Cell[523475, 14522, 421, 7, 75, "Text",ExpressionUUID->"2baac438-f249-471f-866b-a2df27436ece",
 CellID->313391720]
}, Open  ]],
Cell[CellGroupData[{
Cell[523933, 14534, 181, 2, 66, "Subsubsection",ExpressionUUID->"4896c83d-60bf-473e-bcfc-4b6cb05288ba",
 CellID->1441353389],
Cell[524117, 14538, 327, 7, 75, "Text",ExpressionUUID->"94f33d09-ca61-4948-8521-8b963678f6be",
 CellID->1210870763],
Cell[524447, 14547, 575, 16, 78, "Input",ExpressionUUID->"5649e175-e0cb-4ee2-9354-e71ffb324520",
 CellID->28262428],
Cell[525025, 14565, 163, 2, 45, "Text",ExpressionUUID->"7ee1dbc8-b67f-4310-bf85-4e8f2ddb577f",
 CellID->417688398],
Cell[CellGroupData[{
Cell[525213, 14571, 364, 9, 31, "Input",ExpressionUUID->"f1f22257-15fb-41ec-b482-2c345a7a0e1c",
 CellID->738811446],
Cell[525580, 14582, 279, 7, 45, "Output",ExpressionUUID->"575bbc8c-07b4-4b02-ac63-ab11e256606a",
 CellID->1285307189]
}, Open  ]],
Cell[525874, 14592, 537, 9, 134, "Text",ExpressionUUID->"9194cecb-e06e-431e-a9ee-67734d051376",
 CellID->619920350],
Cell[CellGroupData[{
Cell[526436, 14605, 234, 4, 31, "Input",ExpressionUUID->"67d0cb8f-a5bb-4671-84f4-d2fb90b36c8d",
 CellID->612215456],
Cell[526673, 14611, 570, 16, 45, "Output",ExpressionUUID->"7d5b87e8-1bf6-4c50-9899-cadd76b3b5b2",
 CellID->883586892]
}, Open  ]],
Cell[527258, 14630, 176, 2, 45, "Text",ExpressionUUID->"0ddbb588-6ab9-4b26-b8a4-aa30cc10b7f6",
 CellID->595474839],
Cell[527437, 14634, 351, 6, 104, "Text",ExpressionUUID->"cd8afcb1-3e60-4e06-95ed-44dc4ddae57d",
 CellID->871824053],
Cell[527791, 14642, 325, 6, 75, "Text",ExpressionUUID->"132833ad-ecac-4171-ae30-2064334582a3",
 CellID->1249042068]
}, Open  ]],
Cell[CellGroupData[{
Cell[528153, 14653, 181, 2, 66, "Subsubsection",ExpressionUUID->"2adad933-2781-4856-b142-01b9ccae7c4f",
 CellID->1981024122],
Cell[528337, 14657, 633, 13, 163, "Text",ExpressionUUID->"82d19daa-5dd5-4100-9761-1e41513ce29b",
 CellID->485955366],
Cell[528973, 14672, 676, 19, 101, "Input",ExpressionUUID->"63770e37-806d-4132-b982-a05ea544f689",
 CellID->1556513504],
Cell[529652, 14693, 170, 2, 45, "Text",ExpressionUUID->"334a2066-be8d-4f40-ac08-042a4094d44d",
 CellID->2135525723],
Cell[CellGroupData[{
Cell[529847, 14699, 364, 8, 54, "Input",ExpressionUUID->"f047ee1a-580f-48ac-a99f-e6644a288e8e",
 CellID->1444306290],
Cell[530214, 14709, 384, 8, 32, "Message",ExpressionUUID->"35c22ed8-a84d-4fc7-8ba8-0a1da970ca15",
 CellID->2025917506],
Cell[530601, 14719, 241, 5, 45, "Output",ExpressionUUID->"ea431846-88bc-4d6f-b554-6be75aa211f3",
 CellID->1242300157]
}, Open  ]],
Cell[CellGroupData[{
Cell[530879, 14729, 368, 8, 54, "Input",ExpressionUUID->"ce2b6a32-69a8-4c0c-bcd8-6486060c59fb",
 CellID->1850461235],
Cell[531250, 14739, 386, 8, 32, "Message",ExpressionUUID->"99f82bfd-cd34-4108-ab9d-a176afa2cc78",
 CellID->1404765171],
Cell[531639, 14749, 242, 5, 45, "Output",ExpressionUUID->"c6b342a9-e774-4b7e-963c-b3ff01bb36ab",
 CellID->453013879]
}, Open  ]],
Cell[531896, 14757, 741, 13, 193, "Text",ExpressionUUID->"56adaa1b-8c5f-4cc7-b0bf-f98dc20cf9ca",
 CellID->974735738],
Cell[532640, 14772, 304, 5, 75, "Text",ExpressionUUID->"fc5a66a0-ca80-40fa-b510-448562010406",
 CellID->732661238],
Cell[532947, 14779, 431, 11, 54, "Input",ExpressionUUID->"ab0acb7f-7080-4f9e-bd51-d410e1d92fe1",
 CellID->1715414064],
Cell[CellGroupData[{
Cell[533403, 14794, 408, 10, 31, "Input",ExpressionUUID->"f0ceb044-05b1-4a5a-bb44-e54e3913cba2",
 CellID->1681719544],
Cell[533814, 14806, 408, 8, 32, "Message",ExpressionUUID->"d6cd8669-bf13-43e2-939b-74352b89f0ab",
 CellID->2042084576],
Cell[534225, 14816, 263, 5, 45, "Output",ExpressionUUID->"5fb64091-724e-4e7d-91cd-25304101ad50",
 CellID->231822478]
}, Open  ]],
Cell[534503, 14824, 611, 11, 134, "Text",ExpressionUUID->"ce3b7c8a-66b6-451b-be4f-4b6aa2c3c3e9",
 CellID->373884153]
}, Open  ]],
Cell[CellGroupData[{
Cell[535151, 14840, 201, 3, 66, "Subsubsection",ExpressionUUID->"ffa066fe-d611-4ab3-8faf-a74dee8f91f9",
 CellID->209459322],
Cell[535355, 14845, 477, 9, 134, "Text",ExpressionUUID->"4e06bd4c-9c94-4c00-855b-1925667f8f3e",
 CellID->657127421],
Cell[535835, 14856, 576, 16, 78, "Input",ExpressionUUID->"e16855c1-4417-4cf4-95da-68d9404cc4da",
 CellID->713321052],
Cell[536414, 14874, 170, 2, 45, "Text",ExpressionUUID->"515fa774-caac-4308-9225-36c3e5559216",
 CellID->627314569],
Cell[CellGroupData[{
Cell[536609, 14880, 336, 7, 54, "Input",ExpressionUUID->"dc972577-9bbb-4334-9eb5-34680a3e2566",
 CellID->784105753],
Cell[CellGroupData[{
Cell[536970, 14891, 437, 11, 28, "Print",ExpressionUUID->"4b29efd1-fbce-4b93-8e65-2037da302aaf",
 CellID->717951194],
Cell[537410, 14904, 191, 3, 28, "Print",ExpressionUUID->"fb86ddac-2e00-48f2-a115-4fa68e51c432",
 CellID->2042588712]
}, Open  ]]
}, Open  ]],
Cell[537628, 14911, 169, 2, 45, "Text",ExpressionUUID->"10cbe558-cc09-405e-a5e2-9be8ef6a00f1",
 CellID->114901642],
Cell[CellGroupData[{
Cell[537822, 14917, 271, 6, 54, "Input",ExpressionUUID->"7221a804-8947-417b-8de2-3f38d0101d4d",
 CellID->573401340],
Cell[538096, 14925, 207, 4, 28, "Print",ExpressionUUID->"5b52c96f-55ed-411d-b772-f77a3a321ea2",
 CellID->553543532],
Cell[538306, 14931, 197, 4, 45, "Output",ExpressionUUID->"4061878d-382f-4f66-9565-11fb6456062b",
 CellID->506983520]
}, Open  ]],
Cell[538518, 14938, 591, 9, 163, "Text",ExpressionUUID->"e6d7f067-f69f-40ba-880d-198d30b1ef1c",
 CellID->1804392991],
Cell[CellGroupData[{
Cell[539134, 14951, 674, 20, 78, "Input",ExpressionUUID->"ecada2b8-710e-4816-ad94-dabdd3693460",
 CellID->1080344262],
Cell[539811, 14973, 191, 3, 28, "Print",ExpressionUUID->"31b3fdbf-f507-46ab-bb14-58ef2c9d5d21",
 CellID->1664043935]
}, Open  ]],
Cell[540017, 14979, 249, 5, 45, "Text",ExpressionUUID->"9667501b-f67a-435f-9d10-6f109276c7c1",
 CellID->906880664],
Cell[540269, 14986, 431, 7, 104, "Text",ExpressionUUID->"ba18e6a5-6204-4536-9f83-560ecc2801e6",
 CellID->1251877089]
}, Open  ]],
Cell[CellGroupData[{
Cell[540737, 14998, 190, 2, 66, "Subsubsection",ExpressionUUID->"3146ebfb-a785-4970-8bd5-8e27bbaa7fd0",
 CellID->674665640],
Cell[540930, 15002, 692, 13, 193, "Text",ExpressionUUID->"9884e578-9e79-4e00-8088-0e835dcb76a3",
 CellID->391755320],
Cell[541625, 15017, 447, 11, 54, "Input",ExpressionUUID->"811dc5e6-193d-428c-92d2-6a6e1cd54932",
 CellID->844943952],
Cell[542075, 15030, 175, 2, 45, "Text",ExpressionUUID->"6a4e9ece-0546-40a9-875c-47640f11f858",
 CellID->265683610],
Cell[CellGroupData[{
Cell[542275, 15036, 223, 4, 31, "Input",ExpressionUUID->"b4df8da5-4cef-404d-9a39-2f0e3879afce",
 CellID->1460037810],
Cell[542501, 15042, 221, 3, 28, "Print",ExpressionUUID->"008407a4-7fff-4022-b7b2-ee0f735c7bae",
 CellID->1902341890],
Cell[542725, 15047, 199, 4, 45, "Output",ExpressionUUID->"c96d811e-4c0a-4345-bc84-1dd4e2361bcb",
 CellID->923608694]
}, Open  ]],
Cell[CellGroupData[{
Cell[542961, 15056, 222, 4, 31, "Input",ExpressionUUID->"91cb243f-bccb-4155-aa3e-c1c955f73099",
 CellID->1543092538],
Cell[543186, 15062, 220, 3, 28, "Print",ExpressionUUID->"25dec604-a4e8-41c6-a13f-1ae138fbf63e",
 CellID->501753860],
Cell[543409, 15067, 171, 3, 45, "Output",ExpressionUUID->"2d38ce52-aa83-441b-ae88-511549706124",
 CellID->1956326898]
}, Open  ]],
Cell[CellGroupData[{
Cell[543617, 15075, 272, 6, 31, "Input",ExpressionUUID->"f5f29441-40f1-4851-abb6-67acda307c0a",
 CellID->102867891],
Cell[543892, 15083, 221, 3, 28, "Print",ExpressionUUID->"132e8984-00d7-46ba-8ac6-65c37ed83eaa",
 CellID->1600952913],
Cell[544116, 15088, 200, 4, 45, "Output",ExpressionUUID->"2da8e000-5c57-4d72-8c4a-0dcaba7ecad4",
 CellID->1392995528]
}, Open  ]],
Cell[CellGroupData[{
Cell[544353, 15097, 303, 7, 31, "Input",ExpressionUUID->"6e596dd6-8966-411b-a6fc-931f53ec7360",
 CellID->1388223622],
Cell[544659, 15106, 223, 3, 28, "Print",ExpressionUUID->"d7f88b0c-f03b-4e14-bddb-26f0e743d7fc",
 CellID->1279934989],
Cell[544885, 15111, 823, 24, 56, "Output",ExpressionUUID->"3bedb388-6a10-45a7-9225-2607a245336b",
 CellID->523668124]
}, Open  ]],
Cell[545723, 15138, 401, 8, 104, "Text",ExpressionUUID->"3da681b5-39f5-417e-8b79-c987b31c4cf4",
 CellID->902174662]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[546173, 15152, 170, 2, 68, "Subsection",ExpressionUUID->"3ee283e2-c15f-4b1d-ae99-7a35ffd97773",
 CellID->1198915665],
Cell[546346, 15156, 285, 5, 75, "Text",ExpressionUUID->"20a4bce0-e81b-4d56-9496-42556102106b",
 CellID->336521854],
Cell[CellGroupData[{
Cell[546656, 15165, 176, 2, 66, "Subsubsection",ExpressionUUID->"2626316d-aa8f-4668-a4f8-5738826d45b2",
 CellID->723696666],
Cell[546835, 15169, 465, 8, 134, "Text",ExpressionUUID->"21bd3006-9f11-4b4b-a791-ef1a44daf06b",
 CellID->1969972501],
Cell[547303, 15179, 554, 15, 55, "Input",ExpressionUUID->"1c39e50c-8cb2-4857-a230-0812bf122345",
 CellID->1007636549],
Cell[CellGroupData[{
Cell[547882, 15198, 554, 16, 31, "Input",ExpressionUUID->"169c17f1-021b-4661-a426-d7130d9e92fd",
 CellID->1655156150],
Cell[548439, 15216, 295, 7, 45, "Output",ExpressionUUID->"08b69366-b597-4e3d-a15a-e1d628cde78f",
 CellID->791467692]
}, Open  ]],
Cell[548749, 15226, 866, 13, 252, "Text",ExpressionUUID->"ff116bce-67e7-4471-8b98-ce2066f1dc2c",
 CellID->683789926],
Cell[CellGroupData[{
Cell[549640, 15243, 384, 10, 31, "Input",ExpressionUUID->"f80134f0-af7f-4fab-b467-5d2854a48fdf",
 CellID->981252767],
Cell[550027, 15255, 423, 9, 32, "Message",ExpressionUUID->"1cee753f-5138-43b8-9aeb-166f2031c2f4",
 CellID->1077251683],
Cell[550453, 15266, 218, 5, 45, "Output",ExpressionUUID->"3af65b6d-cee6-4d2e-94ce-217d966bbca5",
 CellID->2081891971]
}, Open  ]],
Cell[550686, 15274, 171, 2, 45, "Text",ExpressionUUID->"d6c85c3b-b5d8-46e4-8224-abdc42d7c3f1",
 CellID->1407296026],
Cell[550860, 15278, 614, 17, 55, "Input",ExpressionUUID->"ae847350-acc2-4822-8d2f-8d319a075069",
 CellID->1122506392],
Cell[CellGroupData[{
Cell[551499, 15299, 473, 13, 31, "Input",ExpressionUUID->"29ad3e3a-1e59-4949-b25d-e01651072444",
 CellID->1509586313],
Cell[551975, 15314, 370, 10, 45, "Output",ExpressionUUID->"d7d72b40-5469-4fc9-a10a-387f9e623be5",
 CellID->528880911]
}, Open  ]],
Cell[552360, 15327, 214, 4, 45, "Text",ExpressionUUID->"1191c8dd-f9bf-4327-822d-d9d14c094ed9",
 CellID->1875829843],
Cell[552577, 15333, 468, 12, 54, "Input",ExpressionUUID->"8119233e-6372-4292-bd64-8bd735005529",
 CellID->1033289231],
Cell[CellGroupData[{
Cell[553070, 15349, 405, 12, 31, "Input",ExpressionUUID->"246daa86-f1f8-47b1-b33a-489f897baad2",
 CellID->75151898],
Cell[553478, 15363, 372, 10, 45, "Output",ExpressionUUID->"ac9e1257-b60d-4dcd-a2b8-a582c6086b2c",
 CellID->218738976]
}, Open  ]],
Cell[553865, 15376, 249, 5, 75, "Text",ExpressionUUID->"910fe586-9ced-4171-ac4e-7745c438c889",
 CellID->2001449615],
Cell[554117, 15383, 392, 8, 75, "Text",ExpressionUUID->"4c1d63b1-53a1-4a5a-8b31-6f6c129cfec5",
 CellID->179832697],
Cell[554512, 15393, 200, 3, 45, "Text",ExpressionUUID->"c2cc5340-57be-4e58-8d71-d0d2d0ff2658",
 CellID->2057046207],
Cell[554715, 15398, 427, 11, 54, "Input",ExpressionUUID->"c4e1763d-2b13-40a7-b159-50a3a54a5bed",
 CellID->380254267],
Cell[555145, 15411, 168, 2, 45, "Text",ExpressionUUID->"6e235612-7a76-4a73-a64b-bf4196182482",
 CellID->1879030538],
Cell[CellGroupData[{
Cell[555338, 15417, 657, 18, 31, "Input",ExpressionUUID->"13ff3cbb-a8a3-46d1-bcf8-360903b308ec",
 CellID->561082781],
Cell[555998, 15437, 410, 9, 45, "Output",ExpressionUUID->"c8a52080-9e73-433d-9252-55f832422606",
 CellID->454452275]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[556457, 15452, 179, 2, 66, "Subsubsection",ExpressionUUID->"3afed456-ba2b-4ec7-8501-3aef3cdce0d0",
 CellID->1527537193],
Cell[556639, 15456, 665, 13, 163, "Text",ExpressionUUID->"99d7100a-a336-4854-a0c1-cef1249c2d62",
 CellID->187744649],
Cell[557307, 15471, 176, 2, 38, "ItemNumbered",ExpressionUUID->"374a55b3-f3a2-4d8e-ab61-00160d0d30a1",
 CellID->372718511],
Cell[557486, 15475, 332, 6, 75, "Text",ExpressionUUID->"52cf2ed3-14f9-4b28-bb88-7b394b124d02",
 CellID->70216078],
Cell[557821, 15483, 441, 11, 54, "Input",ExpressionUUID->"ff8edc89-607b-4d41-8f39-4765426d1da1",
 CellID->516387320],
Cell[CellGroupData[{
Cell[558287, 15498, 591, 17, 31, "Input",ExpressionUUID->"c9360f7b-c499-4d10-b273-4bc4685d6761",
 CellID->1075443448],
Cell[558881, 15517, 495, 12, 45, "Output",ExpressionUUID->"b0de0b3e-440c-4540-99f9-7d4d8c241260",
 CellID->61369633]
}, Open  ]],
Cell[559391, 15532, 236, 4, 45, "Text",ExpressionUUID->"fd7fc5ed-8d8a-4224-b75b-956d9e997e62",
 CellID->1786081182],
Cell[559630, 15538, 491, 13, 54, "Input",ExpressionUUID->"ddee79ea-7cac-4312-8ce3-5a0535eba2a8",
 CellID->267172622],
Cell[CellGroupData[{
Cell[560146, 15555, 590, 17, 31, "Input",ExpressionUUID->"2b6de69b-cc18-45db-a4a3-7d7bd155f476",
 CellID->409216556],
Cell[560739, 15574, 440, 10, 45, "Output",ExpressionUUID->"c610a9be-94ae-43b0-99c2-20a64e970143",
 CellID->1382811659]
}, Open  ]],
Cell[561194, 15587, 441, 7, 134, "Text",ExpressionUUID->"83144904-8887-40f9-8651-d1ba38a7c36d",
 CellID->847524979],
Cell[561638, 15596, 496, 13, 54, "Input",ExpressionUUID->"bcc150fb-0195-4ef5-b2ff-7d4148623687",
 CellID->1102969779],
Cell[CellGroupData[{
Cell[562159, 15613, 591, 17, 31, "Input",ExpressionUUID->"96a0329a-4f79-404b-ab00-41f0f8198519",
 CellID->1785980644],
Cell[562753, 15632, 411, 9, 45, "Output",ExpressionUUID->"3fac1074-2695-4204-8bf2-8ca85c571fed",
 CellID->2026608099]
}, Open  ]],
Cell[563179, 15644, 331, 6, 75, "Text",ExpressionUUID->"bac7aa50-a25c-47f2-b29c-8a50e3f6dba3",
 CellID->2111678473],
Cell[563513, 15652, 628, 17, 54, "Input",ExpressionUUID->"782fa358-c322-4d28-86b0-e91525fd19ca",
 CellID->2069059205],
Cell[CellGroupData[{
Cell[564166, 15673, 590, 17, 31, "Input",ExpressionUUID->"bb25f8d9-9952-4648-96fd-d080e0d3cf97",
 CellID->662265144],
Cell[564759, 15692, 516, 13, 45, "Output",ExpressionUUID->"cfad32d4-1e81-403b-becb-5ff586bd12bf",
 CellID->1096634163]
}, Open  ]],
Cell[565290, 15708, 248, 5, 75, "Text",ExpressionUUID->"21fb7331-438c-43df-a9b3-8ea09a0b0f7d",
 CellID->1425718987],
Cell[565541, 15715, 184, 2, 38, "ItemNumbered",ExpressionUUID->"4e454e2f-88a3-46dc-be4c-863f0a9cc73b",
 CellID->436481283],
Cell[565728, 15719, 850, 17, 222, "Text",ExpressionUUID->"4b686dd9-a591-4bdc-8f49-3c1fc603c251",
 CellID->136785229],
Cell[566581, 15738, 533, 15, 54, "Input",ExpressionUUID->"d4005706-4c01-4fa4-9374-97328ac3bc89",
 CellID->926076409],
Cell[CellGroupData[{
Cell[567139, 15757, 505, 14, 31, "Input",ExpressionUUID->"02ffc914-be8a-4b95-9d8d-d5a21f3f73c9",
 CellID->1337617144],
Cell[567647, 15773, 413, 12, 49, "Output",ExpressionUUID->"1f893e54-47b3-4ab7-90b7-cef159c46614",
 CellID->873869424]
}, Open  ]],
Cell[568075, 15788, 217, 4, 45, "Text",ExpressionUUID->"968e4b02-de54-44b4-aaf9-40df0396a49c",
 CellID->482747335],
Cell[568295, 15794, 601, 17, 54, "Input",ExpressionUUID->"7f8a0481-9509-4af8-a150-6eac489050d1",
 CellID->341240979],
Cell[CellGroupData[{
Cell[568921, 15815, 435, 13, 31, "Input",ExpressionUUID->"c6d015ce-dd4f-4795-ac7e-0fd3c1fe2ccd",
 CellID->1990240330],
Cell[569359, 15830, 427, 12, 49, "Output",ExpressionUUID->"7eed96a8-e9c4-4e3d-91e4-16816413ed6b",
 CellID->1707677395]
}, Open  ]],
Cell[569801, 15845, 207, 3, 38, "ItemNumbered",ExpressionUUID->"abc554a2-52e8-4e1d-bf5e-4f5970b7d3be",
 CellTags->"4.6.2.3",
 CellID->1962519257],
Cell[570011, 15850, 439, 7, 75, "Text",ExpressionUUID->"a8b6d877-5186-4e5c-aa1a-8c52e34b8ad6",
 CellID->859818126],
Cell[570453, 15859, 550, 15, 54, "Input",ExpressionUUID->"d05b0f09-8b61-4dba-8852-d2baa198fe5e",
 CellID->269207854],
Cell[CellGroupData[{
Cell[571028, 15878, 531, 15, 31, "Input",ExpressionUUID->"72065d14-c226-4101-8171-c8c2254cb088",
 CellID->1791766595],
Cell[571562, 15895, 421, 12, 45, "Output",ExpressionUUID->"58576d34-4a52-408d-a6cf-1f5f466f41d3",
 CellID->1141240317]
}, Open  ]],
Cell[571998, 15910, 245, 5, 45, "Text",ExpressionUUID->"a711b82a-2b79-4d3f-b930-f52b5cdc2971",
 CellID->81574064],
Cell[CellGroupData[{
Cell[572268, 15919, 530, 15, 31, "Input",ExpressionUUID->"8193e540-f456-4a71-a4c8-29a165f49c3f",
 CellID->920726862],
Cell[572801, 15936, 567, 11, 32, "Message",ExpressionUUID->"0e75a439-30f8-41ba-b152-1a154efd8ece",
 CellID->811145672],
Cell[573371, 15949, 419, 12, 45, "Output",ExpressionUUID->"a003cd58-0dc3-4586-b192-f63b7f39f318",
 CellID->699118148]
}, Open  ]],
Cell[573805, 15964, 261, 5, 75, "Text",ExpressionUUID->"99575259-12db-43b1-b473-7dfc818cb363",
 CellID->718702772],
Cell[CellGroupData[{
Cell[574091, 15973, 334, 8, 31, "Input",ExpressionUUID->"76ac51b2-674e-4a8a-bf74-f3f6441c12da",
 CellID->2064252144],
Cell[574428, 15983, 672, 12, 53, "Message",ExpressionUUID->"adb623e9-49cf-4bce-83be-64d52a608381",
 CellID->55248003],
Cell[575103, 15997, 311, 8, 45, "Output",ExpressionUUID->"13e9899d-ddb2-4a47-8f84-95b5a3c2b5bf",
 CellID->840250917]
}, Open  ]],
Cell[575429, 16008, 212, 2, 45, "Text",ExpressionUUID->"23b66d55-7259-4e49-a928-e188e4062373",
 CellID->209920345],
Cell[575644, 16012, 560, 15, 54, "Input",ExpressionUUID->"cd45d30d-850f-4386-824b-dcfda06ff814",
 CellID->1863050226],
Cell[CellGroupData[{
Cell[576229, 16031, 578, 15, 78, "Input",ExpressionUUID->"c635239f-4d36-415c-baf7-404ad11bd34d",
 CellID->1375117233],
Cell[576810, 16048, 215, 5, 45, "Output",ExpressionUUID->"9376adb9-b3e2-4357-bdaf-0d06f6b22800",
 CellID->520513661],
Cell[577028, 16055, 224, 5, 45, "Output",ExpressionUUID->"93f651af-c14d-4003-b3ef-4fbd0a77d212",
 CellID->1572206196],
Cell[577255, 16062, 310, 8, 45, "Output",ExpressionUUID->"200757b2-aa35-49da-8263-ee3b0d234e80",
 CellID->1430743484]
}, Open  ]],
Cell[577580, 16073, 665, 12, 193, "Text",ExpressionUUID->"0668b9c9-c788-4445-b77b-9ee3d8368d77",
 CellID->1131340129],
Cell[578248, 16087, 745, 21, 78, "Input",ExpressionUUID->"7b853725-ddda-41dc-aa0b-897a35f42d51",
 CellID->877094966],
Cell[CellGroupData[{
Cell[579018, 16112, 511, 14, 78, "Input",ExpressionUUID->"afaadf7c-dce5-4e4f-b10d-80d746702c63",
 CellID->543949663],
Cell[579532, 16128, 215, 5, 45, "Output",ExpressionUUID->"706cf3b2-7486-4655-a8c3-226fe9590342",
 CellID->792410179],
Cell[CellGroupData[{
Cell[579772, 16137, 233, 3, 28, "Print",ExpressionUUID->"912dfa51-4811-4bce-858a-bb8587434328",
 CellID->1491783406],
Cell[580008, 16142, 232, 3, 28, "Print",ExpressionUUID->"6d69c2e2-9a89-486a-ad97-15c31e24d4dd",
 CellID->532125917]
}, Open  ]]
}, Open  ]],
Cell[580267, 16149, 327, 6, 75, "Text",ExpressionUUID->"9b0b9534-2070-40d9-a982-11f2860ca4f4",
 CellID->1318380911],
Cell[580597, 16157, 176, 2, 38, "ItemNumbered",ExpressionUUID->"b48f4fd6-7299-43ea-95e9-1afbfd4086a9",
 CellID->2068268363],
Cell[580776, 16161, 776, 12, 222, "Text",ExpressionUUID->"dc5784aa-ccef-434f-a083-8a707e838178",
 CellID->68582952],
Cell[CellGroupData[{
Cell[581577, 16177, 344, 8, 31, "Input",ExpressionUUID->"f5ea0fb3-e638-42f1-96cc-0ab8f698e289",
 CellID->243848204],
Cell[581924, 16187, 249, 5, 45, "Output",ExpressionUUID->"992b1615-c308-48d5-bf17-2a9a9f14ed1a",
 CellID->904832476]
}, Open  ]],
Cell[582188, 16195, 504, 8, 134, "Text",ExpressionUUID->"6202f7a6-3650-4514-96ef-dfa89bec8282",
 CellID->1203685350],
Cell[CellGroupData[{
Cell[582717, 16207, 346, 8, 31, "Input",ExpressionUUID->"0b98ebb3-7141-4c39-ad14-4c8503cef850",
 CellID->1227981032],
Cell[583066, 16217, 588, 11, 32, "Message",ExpressionUUID->"1957f679-e64b-45e4-940b-00da554b735c",
 CellID->792654696],
Cell[583657, 16230, 323, 8, 45, "Output",ExpressionUUID->"bcb9add6-a69a-4427-ab59-dabc5ce968a6",
 CellID->1306413331]
}, Open  ]],
Cell[583995, 16241, 349, 6, 104, "Text",ExpressionUUID->"27fd64a5-0dc4-4c32-91e6-4a50d4ddbde9",
 CellID->133814966]
}, Open  ]],
Cell[CellGroupData[{
Cell[584381, 16252, 199, 2, 66, "Subsubsection",ExpressionUUID->"0e747866-ba7d-4150-8b73-63f3da8d0c41",
 CellID->1071481418],
Cell[584583, 16256, 629, 10, 193, "Text",ExpressionUUID->"c611b909-157f-4c4a-a13c-0877540fcc2b",
 CellID->1737812231],
Cell[585215, 16268, 184, 2, 38, "ItemNumbered",ExpressionUUID->"4d474c81-3aa8-42fa-8ecf-6fb59d454e18",
 CellID->988346941],
Cell[585402, 16272, 248, 5, 75, "Text",ExpressionUUID->"f3c68c75-9138-4e2e-80bb-31f8e2b97adc",
 CellID->361027842],
Cell[585653, 16279, 769, 20, 78, "Input",ExpressionUUID->"e4ec9154-6170-4376-a1b7-145bd70c3139",
 CellID->1706778117],
Cell[586425, 16301, 249, 7, 45, "Text",ExpressionUUID->"4155337e-4256-4146-a74d-a1bcd770c2d3",
 CellID->81217638],
Cell[586677, 16310, 1277, 22, 148, "Input",ExpressionUUID->"d494add3-e428-4a52-9640-89dfbfd288e4",
 CellID->1345187228],
Cell[587957, 16334, 172, 2, 45, "Text",ExpressionUUID->"ed6412cc-461e-47a0-85fb-fdf96a8b6a6a",
 CellID->1133308933],
Cell[CellGroupData[{
Cell[588154, 16340, 270, 5, 31, "Input",ExpressionUUID->"6593435b-b67d-47ed-abcf-2e46d7dc02e0",
 CellID->222689380],
Cell[588427, 16347, 321, 6, 45, "Output",ExpressionUUID->"d6468da6-5730-4c7c-91fa-658fb83e3366",
 CellID->1184744436]
}, Open  ]],
Cell[CellGroupData[{
Cell[588785, 16358, 271, 5, 31, "Input",ExpressionUUID->"1c679819-e5ac-41e6-b63a-90dbf99fa0b2",
 CellID->1345104250],
Cell[589059, 16365, 325, 7, 45, "Output",ExpressionUUID->"47097378-88b7-4415-97b4-2a39999d8322",
 CellID->2125806536]
}, Open  ]],
Cell[CellGroupData[{
Cell[589421, 16377, 269, 5, 31, "Input",ExpressionUUID->"ccf4f592-339b-4df2-a145-72b6cfbd4297",
 CellID->1644384281],
Cell[589693, 16384, 295, 6, 45, "Output",ExpressionUUID->"b8e0ccd5-baf2-4ea3-9a19-ee356634d73d",
 CellID->1465422344]
}, Open  ]],
Cell[590003, 16393, 417, 7, 75, "Text",ExpressionUUID->"eac02a51-3748-46b1-b9ec-ad5d76161b55",
 CellID->2010871812],
Cell[590423, 16402, 839, 22, 101, "Input",ExpressionUUID->"cc903159-5b62-40d1-a885-b9b8f0047e0a",
 CellID->1400306004],
Cell[591265, 16426, 426, 7, 104, "Text",ExpressionUUID->"29d2c1e2-0879-4c3c-bee2-c35975f5001c",
 CellID->1175320811],
Cell[591694, 16435, 201, 3, 38, "ItemNumbered",ExpressionUUID->"1e45e9bb-6056-4a67-bf60-146ec6757149",
 CellID->2063087650],
Cell[591898, 16440, 241, 5, 75, "Text",ExpressionUUID->"5bda2198-ccae-4bb5-ad6b-66f7f5bb3eb9",
 CellID->1043169088],
Cell[592142, 16447, 701, 19, 78, "Input",ExpressionUUID->"7dd5058f-361c-4edd-983b-395c74edd666",
 CellID->1062669274],
Cell[592846, 16468, 171, 2, 45, "Text",ExpressionUUID->"80e303d4-763f-4030-8b0e-815472468f6a",
 CellID->204534616],
Cell[CellGroupData[{
Cell[593042, 16474, 263, 5, 31, "Input",ExpressionUUID->"b6ba2e4b-7b40-42ef-9653-4322f515ec76",
 CellID->1182995625],
Cell[593308, 16481, 173, 3, 45, "Output",ExpressionUUID->"3379edf3-4632-4bd4-b4ab-f099ce7f6720",
 CellID->1306148385]
}, Open  ]],
Cell[CellGroupData[{
Cell[593518, 16489, 266, 5, 31, "Input",ExpressionUUID->"31366bfd-1c0d-41bf-9b68-93c20e402b72",
 CellID->1180404622],
Cell[593787, 16496, 175, 3, 45, "Output",ExpressionUUID->"d9ee6a35-7598-4752-81b8-c612776a1455",
 CellID->1868674135]
}, Open  ]],
Cell[593977, 16502, 273, 5, 75, "Text",ExpressionUUID->"5b575fdb-bbf6-485e-9f8e-9520d700a4c7",
 CellID->1158970044],
Cell[CellGroupData[{
Cell[594275, 16511, 483, 12, 54, "Input",ExpressionUUID->"49f600d1-478a-4377-beab-e466c21b58c9",
 CellID->240406624],
Cell[594761, 16525, 249, 5, 45, "Output",ExpressionUUID->"d8b8e30d-7bcc-48d7-a6a4-f07823da69f2",
 CellID->2022927692]
}, Open  ]],
Cell[595025, 16533, 193, 2, 38, "ItemNumbered",ExpressionUUID->"f8de2c99-14b2-47ca-8379-cfea82f0abe9",
 CellID->1912918331],
Cell[595221, 16537, 426, 7, 104, "Text",ExpressionUUID->"700d57dd-db59-45c4-8a0b-d6b64177d296",
 CellID->440709880],
Cell[595650, 16546, 741, 20, 78, "Input",ExpressionUUID->"bbb821ac-728c-4078-aac5-a96b032d901c",
 CellID->1292715372],
Cell[596394, 16568, 175, 2, 45, "Text",ExpressionUUID->"1a5ff8da-7a53-4a24-9036-336feb20227c",
 CellID->977692222],
Cell[596572, 16572, 181, 2, 45, "Text",ExpressionUUID->"82e670be-511a-492a-abf6-b1a7b1c5a576",
 CellID->1679646806],
Cell[596756, 16576, 348, 8, 54, "Input",ExpressionUUID->"b9a58233-32fb-49eb-a8a7-650cc03d5894",
 CellID->70448519],
Cell[597107, 16586, 217, 2, 45, "Text",ExpressionUUID->"e5d77427-c4f0-419e-bad4-18610d4e5083",
 CellID->1356710324],
Cell[CellGroupData[{
Cell[597349, 16592, 272, 5, 31, "Input",ExpressionUUID->"b401fe20-f8cb-4880-bb51-2039c0846263",
 CellID->364982951],
Cell[597624, 16599, 541, 15, 45, "Output",ExpressionUUID->"75352b40-1417-4cf3-afd9-2dca1728f55a",
 CellID->2058837639]
}, Open  ]],
Cell[CellGroupData[{
Cell[598202, 16619, 276, 5, 31, "Input",ExpressionUUID->"9e7a9135-c169-4177-aeea-0a4822a75fa9",
 CellID->480194562],
Cell[598481, 16626, 355, 9, 45, "Output",ExpressionUUID->"a70e42a8-2702-4f56-beb7-efeba5a592ce",
 CellID->1234145394]
}, Open  ]],
Cell[CellGroupData[{
Cell[598873, 16640, 275, 5, 31, "Input",ExpressionUUID->"05917b2c-98fc-4e6f-905a-d1d43d1595c7",
 CellID->1884574232],
Cell[599151, 16647, 188, 4, 45, "Output",ExpressionUUID->"ac78b8a5-4e05-4e25-86dc-ff098b63a9d8",
 CellID->888211624]
}, Open  ]],
Cell[599354, 16654, 211, 2, 45, "Text",ExpressionUUID->"07e91475-31bf-4cfc-9675-e82abc5ddfe7",
 CellID->1026908910],
Cell[CellGroupData[{
Cell[599590, 16660, 637, 19, 54, "Input",ExpressionUUID->"e77d3a3f-8794-4bac-88a9-d96e92eab3b7",
 CellID->1729798891],
Cell[600230, 16681, 311, 8, 45, "Output",ExpressionUUID->"774cbeb6-b138-4d2e-b3ca-0e335cbeb384",
 CellID->1336199000],
Cell[600544, 16691, 311, 8, 45, "Output",ExpressionUUID->"3048f15c-0c5e-4ea3-bede-c42f9cba0571",
 CellID->1260096321]
}, Open  ]],
Cell[600870, 16702, 185, 2, 45, "Text",ExpressionUUID->"e5b3bb8f-c259-42e9-99f2-4bcc03d1fd7d",
 CellID->2102623980],
Cell[CellGroupData[{
Cell[601080, 16708, 275, 5, 31, "Input",ExpressionUUID->"4739df4d-6609-455a-b821-bd14902d3d79",
 CellID->1344283991],
Cell[601358, 16715, 1935, 49, 115, "Output",ExpressionUUID->"1fab50ce-efdc-4178-bc3d-04c86ba08ea4",
 CellID->1998587256]
}, Open  ]],
Cell[CellGroupData[{
Cell[603330, 16769, 275, 5, 31, "Input",ExpressionUUID->"fa153d5a-a341-4244-9de8-43dde7ff87b8",
 CellID->1464288865],
Cell[603608, 16776, 273, 7, 45, "Output",ExpressionUUID->"d891af53-a22f-49bc-aa3c-f67856904208",
 CellID->922737074]
}, Open  ]],
Cell[CellGroupData[{
Cell[603918, 16788, 273, 5, 31, "Input",ExpressionUUID->"249e6cc5-c4b1-4f5d-8b1f-3829c0011ecb",
 CellID->1462587731],
Cell[604194, 16795, 189, 4, 45, "Output",ExpressionUUID->"2c35aa61-5eb7-444a-8c28-d48e931db21d",
 CellID->1102105539]
}, Open  ]],
Cell[604398, 16802, 182, 2, 38, "ItemNumbered",ExpressionUUID->"91a99e35-f54e-415f-9a3a-a4507afc5350",
 CellID->1909168277],
Cell[604583, 16806, 485, 8, 134, "Text",ExpressionUUID->"c9de1af4-c7c8-4b8d-ac54-8457bc3a6cb1",
 CellID->1838061712],
Cell[605071, 16816, 203, 2, 45, "Text",ExpressionUUID->"fa89bd23-5dda-4716-a821-2c2b283a3a6a",
 CellID->236468812],
Cell[CellGroupData[{
Cell[605299, 16822, 403, 10, 31, "Input",ExpressionUUID->"9ce09620-2a48-46bb-ba7b-5d784dbbadc8",
 CellID->1063696340],
Cell[605705, 16834, 419, 9, 45, "Output",ExpressionUUID->"14b849a2-81da-4108-bb91-208dcd3e37b9",
 CellID->669833959]
}, Open  ]],
Cell[606139, 16846, 212, 2, 45, "Text",ExpressionUUID->"0f0f4228-5461-4b28-8b18-5f2158889685",
 CellID->837605172],
Cell[CellGroupData[{
Cell[606376, 16852, 717, 19, 78, "Input",ExpressionUUID->"0ac6e53e-815b-4075-aabb-03043ac0d832",
 CellID->1421969871],
Cell[607096, 16873, 563, 17, 45, "Output",ExpressionUUID->"9fe9ec3a-80a9-4cbd-a081-33887ec86b95",
 CellID->1701371051]
}, Open  ]],
Cell[607674, 16893, 337, 6, 75, "Text",ExpressionUUID->"9fde9b2d-93d3-44fd-b1a4-c9fc96b1774a",
 CellID->285039588],
Cell[608014, 16901, 1247, 34, 125, "Input",ExpressionUUID->"6e039ccd-10a2-487c-828f-4b9b9bf53ae9",
 CellID->1565686361],
Cell[609264, 16937, 172, 2, 45, "Text",ExpressionUUID->"876bc6fa-4c82-4216-b651-7620c53a79e6",
 CellID->625734889],
Cell[CellGroupData[{
Cell[609461, 16943, 294, 6, 31, "Input",ExpressionUUID->"4e68dd2c-a82d-490e-a5f4-19ce76fd1b05",
 CellID->1491070200],
Cell[609758, 16951, 1337, 43, 91, "Output",ExpressionUUID->"003dbbab-4eb5-456b-99aa-98a64804a4da",
 CellID->2060852065]
}, Open  ]],
Cell[611110, 16997, 260, 5, 75, "Text",ExpressionUUID->"6738c683-bd7b-46c5-95c6-48f6647a050b",
 CellID->2124397639],
Cell[611373, 17004, 1615, 47, 172, "Input",ExpressionUUID->"d80ebf46-207c-4be0-aa80-c5323ed3f582",
 CellID->1225406909],
Cell[612991, 17053, 170, 2, 45, "Text",ExpressionUUID->"e4cec36a-0339-4eaa-af09-dfe465d0271b",
 CellID->2103051359],
Cell[CellGroupData[{
Cell[613186, 17059, 269, 5, 31, "Input",ExpressionUUID->"0048281e-fec4-49ea-ab23-4ea9ae903abc",
 CellID->2089906751],
Cell[613458, 17066, 2263, 78, 91, "Output",ExpressionUUID->"988883ce-3b90-4f0a-ab38-17681e6ef8f0",
 CellID->949158791]
}, Open  ]],
Cell[615736, 17147, 192, 2, 45, "Text",ExpressionUUID->"c81e0350-b624-442b-a61b-6196fd4e01f3",
 CellID->753449733],
Cell[615931, 17151, 1735, 47, 149, "Input",ExpressionUUID->"8e42ac90-ace5-41db-bacc-498b24538ae6",
 CellID->764244700],
Cell[617669, 17200, 170, 2, 45, "Text",ExpressionUUID->"ff5a2e8b-ee66-4e22-9a9d-19694d69a3d3",
 CellID->1144900471],
Cell[CellGroupData[{
Cell[617864, 17206, 272, 5, 31, "Input",ExpressionUUID->"bfa52a77-bdb2-4a78-b3b5-127af8c65e26",
 CellID->2021629502],
Cell[618139, 17213, 2678, 90, 138, "Output",ExpressionUUID->"ea9a28de-c582-4f02-a1e5-51087eae67ee",
 CellID->1337817548]
}, Open  ]],
Cell[620832, 17306, 401, 6, 104, "Text",ExpressionUUID->"0b8dee94-fb4d-413d-bdc0-5c44d7478cce",
 CellID->847631831],
Cell[621236, 17314, 216, 3, 45, "Text",ExpressionUUID->"07aaa1d4-c127-481e-b178-e6c1b4671fc6",
 CellID->1643943729],
Cell[621455, 17319, 301, 5, 75, "Text",ExpressionUUID->"4f15c953-112e-4b9b-8753-3f42816e312c",
 CellID->237651001],
Cell[621759, 17326, 2083, 61, 219, "Input",ExpressionUUID->"bd3a2a76-faf0-4489-ac65-78b587f20a90",
 CellID->581982381],
Cell[623845, 17389, 994, 15, 252, "Text",ExpressionUUID->"ee5efd23-4c4b-4edc-b444-1b6cf18435f4",
 CellID->351481770],
Cell[624842, 17406, 382, 7, 104, "Text",ExpressionUUID->"488535bd-1ba8-48c1-a4e3-5c0d2d8c7ac7",
 CellID->1763992955],
Cell[625227, 17415, 1926, 57, 195, "Input",ExpressionUUID->"0badf6f0-e862-495c-90ba-c5458189dbdb",
 CellID->1290267838],
Cell[627156, 17474, 757, 19, 134, "Text",ExpressionUUID->"03020622-b03f-43eb-a03c-1a283f5ce9ce",
 CellID->1919753362],
Cell[627916, 17495, 219, 4, 45, "Text",ExpressionUUID->"a2b058a2-15f4-40c0-9837-1f1e597cb9e8",
 CellID->1706884601],
Cell[CellGroupData[{
Cell[628160, 17503, 574, 17, 31, "Input",ExpressionUUID->"8ca9c3c6-7c4a-4e58-a866-1d68e300bde0",
 CellID->66938874],
Cell[628737, 17522, 516, 16, 45, "Output",ExpressionUUID->"d77f2e6e-8340-42eb-8ec9-f40798cfb6ac",
 CellID->1524212935]
}, Open  ]],
Cell[CellGroupData[{
Cell[629290, 17543, 582, 17, 31, "Input",ExpressionUUID->"6ca48b6e-532a-4e06-9d02-182b10f719a0",
 CellID->114373482],
Cell[629875, 17562, 517, 16, 45, "Output",ExpressionUUID->"08efb6e4-a230-48fb-b60d-d068bd8ae7ab",
 CellID->1215055776]
}, Open  ]],
Cell[630407, 17581, 150, 2, 45, "Text",ExpressionUUID->"7abb6f27-e081-4d95-8cfb-7ad29be685eb",
 CellID->120702344],
Cell[630560, 17585, 232, 4, 45, "Text",ExpressionUUID->"682600fb-a559-4864-826d-528b5e0d09a5",
 CellID->1419732840],
Cell[CellGroupData[{
Cell[630817, 17593, 657, 17, 54, "Input",ExpressionUUID->"cfe4920a-85ec-46c9-848f-8b7b8d166377",
 CellID->1133475661],
Cell[631477, 17612, 529, 14, 45, "Output",ExpressionUUID->"42d62c73-efcb-4853-91ec-7bc61c04b765",
 CellID->2109346561]
}, Open  ]],
Cell[CellGroupData[{
Cell[632043, 17631, 537, 14, 31, "Input",ExpressionUUID->"5dac0500-b798-41bb-ae49-cdc9d5309569",
 CellID->1955127673],
Cell[632583, 17647, 512, 14, 45, "Output",ExpressionUUID->"64e01a5d-5191-4062-948f-3799d171869d",
 CellID->57136655]
}, Open  ]],
Cell[633110, 17664, 177, 2, 45, "Text",ExpressionUUID->"5ead2ccd-ca57-4635-b4a8-c02985ee7b6a",
 CellID->1310870095],
Cell[CellGroupData[{
Cell[633312, 17670, 521, 14, 31, "Input",ExpressionUUID->"1ac14f56-4b5f-4c41-b686-d924b5acf70b",
 CellID->758952092],
Cell[633836, 17686, 1846, 61, 91, "Output",ExpressionUUID->"e7010f5f-c744-4427-ae66-9a8dff98744b",
 CellID->1130267820]
}, Open  ]],
Cell[635697, 17750, 235, 4, 45, "Text",ExpressionUUID->"0c690f4d-fc46-4bc0-8709-7a6ca5e80544",
 CellID->112095117],
Cell[CellGroupData[{
Cell[635957, 17758, 606, 16, 54, "Input",ExpressionUUID->"257cb295-d2b2-4b70-9d83-60a1aea195b6",
 CellID->639473000],
Cell[636566, 17776, 505, 14, 45, "Output",ExpressionUUID->"8dd5aabd-a07c-4872-a97a-308cad4ec5aa",
 CellID->1137212630]
}, Open  ]],
Cell[CellGroupData[{
Cell[637108, 17795, 535, 14, 31, "Input",ExpressionUUID->"5e967c57-dd4c-417a-af05-abc4c0b870e5",
 CellID->1493383985],
Cell[637646, 17811, 511, 14, 45, "Output",ExpressionUUID->"9347e09b-872b-4b25-a278-f96ed6bd05ce",
 CellID->934552468]
}, Open  ]],
Cell[638172, 17828, 173, 2, 45, "Text",ExpressionUUID->"35d74044-0446-46b0-8929-4ad5c735eac1",
 CellID->406649278],
Cell[CellGroupData[{
Cell[638370, 17834, 496, 14, 31, "Input",ExpressionUUID->"a8f57568-86e1-464d-b2d6-11eaa9ecf017",
 CellID->1261450592],
Cell[638869, 17850, 903, 16, 32, "Message",ExpressionUUID->"c3533e27-1b89-45f6-aa25-19fb0fb96099",
 CellID->935686976],
Cell[639775, 17868, 943, 16, 32, "Message",ExpressionUUID->"8651c01d-27ef-4c34-8bbe-8d9f15d6baaf",
 CellID->68258651],
Cell[640721, 17886, 943, 16, 32, "Message",ExpressionUUID->"854020e1-dc96-40b5-999e-a3bbf5275ee2",
 CellID->466879859],
Cell[641667, 17904, 476, 9, 32, "Message",ExpressionUUID->"088c9030-984e-4605-a4c7-baee265c4e2a",
 CellID->2092027722],
Cell[642146, 17915, 3397, 101, 188, "Output",ExpressionUUID->"92439078-8cd6-4742-a593-7ba6b40dbd8a",
 CellID->2107654970]
}, Open  ]],
Cell[645558, 18019, 235, 4, 45, "Text",ExpressionUUID->"586c984c-e13c-4b8f-a4d2-537ae88443bb",
 CellID->1685620895],
Cell[CellGroupData[{
Cell[645818, 18027, 563, 15, 31, "Input",ExpressionUUID->"c94f1f3b-55b4-4a75-8595-8e264a295ff6",
 CellID->626111041],
Cell[646384, 18044, 541, 15, 45, "Output",ExpressionUUID->"9cde3b93-9d7a-4286-b57b-5c331cd8579d",
 CellID->1047256308]
}, Open  ]],
Cell[CellGroupData[{
Cell[646962, 18064, 572, 15, 31, "Input",ExpressionUUID->"ece652e7-55c5-45d8-8738-c2d0a458e644",
 CellID->460797744],
Cell[647537, 18081, 571, 15, 45, "Output",ExpressionUUID->"11f19d1f-38b7-4281-8ad6-a113b7861b04",
 CellID->271958236]
}, Open  ]],
Cell[648123, 18099, 176, 2, 45, "Text",ExpressionUUID->"aec1d28e-b7d3-4a23-9368-919f2bba7ab2",
 CellID->149857354],
Cell[CellGroupData[{
Cell[648324, 18105, 532, 15, 31, "Input",ExpressionUUID->"02ee7083-bde2-4462-9ca4-fe513a9e6529",
 CellID->1801714394],
Cell[648859, 18122, 425, 9, 32, "Message",ExpressionUUID->"84ffae37-27f3-4843-a407-b6d8c2bd7d9b",
 CellID->1066177284],
Cell[649287, 18133, 424, 9, 32, "Message",ExpressionUUID->"22ae60a2-a9f7-42ba-b35f-abb056cabada",
 CellID->638061620],
Cell[649714, 18144, 425, 9, 32, "Message",ExpressionUUID->"e1e8be1a-0c78-421e-af31-f36107cb09ba",
 CellID->1515797869],
Cell[650142, 18155, 469, 9, 32, "Message",ExpressionUUID->"ea4bb77d-3145-4625-806c-d3ea0d4d4988",
 CellID->416279922],
Cell[650614, 18166, 1097, 18, 32, "Message",ExpressionUUID->"22f0df75-c921-40fd-bc0a-1a11d1353206",
 CellID->2062410775],
Cell[651714, 18186, 1141, 19, 32, "Message",ExpressionUUID->"59d110ea-a8a3-4536-b42b-5a78721f6481",
 CellID->404349198],
Cell[652858, 18207, 1187, 20, 32, "Message",ExpressionUUID->"8ec15689-ea10-4bce-9503-2fbde5f07153",
 CellID->1258711678],
Cell[654048, 18229, 473, 9, 32, "Message",ExpressionUUID->"413181e3-3936-4051-bc82-7ea43a02e7ef",
 CellID->305765549],
Cell[654524, 18240, 466, 9, 32, "Message",ExpressionUUID->"3a182197-1b7d-4a40-83a1-77ad23410724",
 CellID->73214772],
Cell[654993, 18251, 466, 9, 32, "Message",ExpressionUUID->"e757605a-d9b1-4072-a3c7-a052c77baa49",
 CellID->12543273],
Cell[655462, 18262, 467, 9, 32, "Message",ExpressionUUID->"62510a14-52f9-4f2b-b2d3-006b040e0706",
 CellID->361391905],
Cell[655932, 18273, 471, 9, 32, "Message",ExpressionUUID->"372653ca-964a-4869-8045-fffb1e887b13",
 CellID->829993619],
Cell[656406, 18284, 4845, 146, 191, "Output",ExpressionUUID->"33568055-3d26-4524-a5e0-3e742d016248",
 CellID->1796467268]
}, Open  ]],
Cell[661266, 18433, 686, 10, 193, "Text",ExpressionUUID->"39628990-ebf4-4801-aa44-f7ba94121fd8",
 CellID->1752780103]
}, Open  ]],
Cell[CellGroupData[{
Cell[661989, 18448, 187, 2, 66, "Subsubsection",ExpressionUUID->"c52481bd-164f-46cf-a266-2a38c0485ec0",
 CellID->571933779],
Cell[662179, 18452, 691, 10, 222, "Text",ExpressionUUID->"7716b359-e294-4427-b0a8-a9f431642af1",
 CellID->354219681],
Cell[662873, 18464, 226, 4, 45, "Text",ExpressionUUID->"793aa102-23b1-410e-b6e7-f860bd49245e",
 CellID->197224172],
Cell[CellGroupData[{
Cell[663124, 18472, 639, 16, 78, "Input",ExpressionUUID->"1529c40e-c533-4cff-8ab6-6c4e4eab8190",
 CellID->758592971],
Cell[663766, 18490, 228, 5, 45, "Output",ExpressionUUID->"c1853675-650a-421a-a235-9ef84cd679eb",
 CellID->236299772]
}, Open  ]],
Cell[664009, 18498, 275, 6, 45, "Text",ExpressionUUID->"36e8d9e1-5dac-4d10-9c10-3933a623f58b",
 CellID->431294802],
Cell[CellGroupData[{
Cell[664309, 18508, 221, 4, 31, "Input",ExpressionUUID->"d75b7662-ed5c-402c-ae06-b4f09b4c0ac4",
 CellID->628621790],
Cell[664533, 18514, 171, 3, 45, "Output",ExpressionUUID->"b29861ef-8d19-4834-90e1-56f8b40740c2",
 CellID->744332423]
}, Open  ]],
Cell[664719, 18520, 264, 5, 75, "Text",ExpressionUUID->"7ca72d05-2818-4ba7-b661-122aacdbda9e",
 CellID->902789586],
Cell[CellGroupData[{
Cell[665008, 18529, 222, 4, 31, "Input",ExpressionUUID->"5c6c5d6a-649b-4a8a-8f43-a3dcb376683f",
 CellID->646660499],
Cell[665233, 18535, 199, 4, 45, "Output",ExpressionUUID->"64f9e121-646d-4f5b-b40e-0a213be3b6eb",
 CellID->752119985]
}, Open  ]],
Cell[665447, 18542, 313, 6, 75, "Text",ExpressionUUID->"a733cda4-6e42-48bf-9a18-7a34b88588ee",
 CellID->526501512],
Cell[665763, 18550, 366, 9, 54, "Input",ExpressionUUID->"a1640511-5b54-49e9-aff3-8a930b5a9133",
 CellID->735540420],
Cell[666132, 18561, 167, 2, 45, "Text",ExpressionUUID->"cabf68e1-406b-4af1-8c96-aee8441f99e2",
 CellID->317320287],
Cell[CellGroupData[{
Cell[666324, 18567, 222, 4, 31, "Input",ExpressionUUID->"022859ae-84d0-4df6-89a2-6b39ea8de0fc",
 CellID->807063002],
Cell[666549, 18573, 174, 3, 45, "Output",ExpressionUUID->"0e893c0a-66c7-4b27-b5a0-031fdfa58d70",
 CellID->1136260138]
}, Open  ]],
Cell[666738, 18579, 261, 5, 75, "Text",ExpressionUUID->"cb1a5e34-cb8f-44f6-8f1c-c44069268873",
 CellID->1699550242],
Cell[667002, 18586, 458, 12, 54, "Input",ExpressionUUID->"82a54467-e607-4c8b-8398-480298c52bf9",
 CellID->169403379],
Cell[667463, 18600, 228, 4, 45, "Text",ExpressionUUID->"dafac20b-5e42-4af8-a64b-8206948a155c",
 CellID->941884910],
Cell[CellGroupData[{
Cell[667716, 18608, 435, 10, 31, "Input",ExpressionUUID->"fed90a97-6c58-4d5d-9263-7102e32b056d",
 CellID->1609951476],
Cell[668154, 18620, 227, 5, 45, "Output",ExpressionUUID->"8ef95363-bb38-44b9-8f03-f3125473a297",
 CellID->1154392252]
}, Open  ]],
Cell[668396, 18628, 516, 8, 104, "Text",ExpressionUUID->"cdcfb0af-5dd9-4178-889a-49890db71f11",
 CellID->1503312366],
Cell[668915, 18638, 353, 6, 75, "Text",ExpressionUUID->"ff601374-7a1d-49ab-b1f4-ca5ddddd2dc3",
 CellID->1441407590],
Cell[669271, 18646, 588, 16, 54, "Input",ExpressionUUID->"1fe1082b-bffd-4beb-8848-138d6da620b1",
 CellID->979931908],
Cell[669862, 18664, 361, 7, 75, "Text",ExpressionUUID->"cb1979dd-aece-481f-8886-2866c0ac25e5",
 CellID->1549397776],
Cell[CellGroupData[{
Cell[670248, 18675, 441, 10, 31, "Input",ExpressionUUID->"6ec4be02-08d3-48e4-9740-b11f1466a9bc",
 CellID->878279892],
Cell[670692, 18687, 226, 5, 45, "Output",ExpressionUUID->"00919331-36cb-468d-84e1-1b0655fb6e0b",
 CellID->113921891]
}, Open  ]],
Cell[670933, 18695, 233, 4, 45, "Text",ExpressionUUID->"1bbe8bec-a73e-4ad5-8795-b962d1b955e3",
 CellID->1198977484],
Cell[671169, 18701, 462, 12, 54, "Input",ExpressionUUID->"97d9fdfa-a1ba-40ef-af75-d657c17911b5",
 CellID->444849982],
Cell[CellGroupData[{
Cell[671656, 18717, 442, 11, 31, "Input",ExpressionUUID->"6000bd50-a656-4b7f-910e-a5e1c6c6501b",
 CellID->1396946531],
Cell[672101, 18730, 226, 5, 45, "Output",ExpressionUUID->"618ef780-bd05-4a54-b334-ae70d49ffc1b",
 CellID->561800719]
}, Open  ]],
Cell[672342, 18738, 664, 10, 163, "Text",ExpressionUUID->"7a6dd9f8-6dae-4079-a22b-8fc08cc9b730",
 CellID->1846572021],
Cell[673009, 18750, 770, 14, 193, "Text",ExpressionUUID->"b8b1e50f-76a1-43b5-8f4b-0bb03fdba219",
 CellID->618793958]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[673828, 18770, 175, 2, 68, "Subsection",ExpressionUUID->"e311e2a1-7eb2-433b-be71-aed9118a4f01",
 CellID->1611371354],
Cell[674006, 18774, 769, 13, 222, "Text",ExpressionUUID->"87fcff01-965e-4205-8ffe-1758d8030546",
 CellID->652370286],
Cell[CellGroupData[{
Cell[674800, 18791, 175, 2, 66, "Subsubsection",ExpressionUUID->"138351db-c99f-4566-bc67-29a159912ed2",
 CellID->783420168],
Cell[674978, 18795, 431, 8, 104, "Text",ExpressionUUID->"216a446d-0c31-416b-bd1d-b46601ac42b3",
 CellID->720523819],
Cell[675412, 18805, 472, 13, 78, "Input",ExpressionUUID->"e1f81cc1-2a9e-417d-80fb-059b075c618c",
 CellID->232221635],
Cell[675887, 18820, 166, 2, 45, "Text",ExpressionUUID->"9ab1ca41-0d28-4afa-addd-368954872672",
 CellID->779052552],
Cell[CellGroupData[{
Cell[676078, 18826, 497, 12, 31, "Input",ExpressionUUID->"f0297b98-e99a-4c22-abeb-d0cb5c7e9c87",
 CellID->1317622131],
Cell[676578, 18840, 343, 9, 45, "Output",ExpressionUUID->"228a4b53-bad3-4f07-ac1f-bd9e0dfa9bf2",
 CellID->1467239346]
}, Open  ]],
Cell[676936, 18852, 523, 8, 134, "Text",ExpressionUUID->"912e2500-40d0-41b9-8462-482c3e46dccc",
 CellID->336969721],
Cell[677462, 18862, 578, 9, 163, "Text",ExpressionUUID->"0ba0d6c1-cffd-48bd-b946-e934b61aa72e",
 CellID->2127851136],
Cell[CellGroupData[{
Cell[678065, 18875, 338, 8, 31, "Input",ExpressionUUID->"cd24240b-6d96-4921-aac6-96b4c0912dee",
 CellID->753908443],
Cell[678406, 18885, 7999, 175, 197, "Output",ExpressionUUID->"61f82b4b-9e49-4523-b179-813849da42ee",
 CellID->605338381]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[686454, 19066, 166, 2, 66, "Subsubsection",ExpressionUUID->"8fea059e-6094-424c-ab58-1c9507ff94e5",
 CellID->1535247332],
Cell[686623, 19070, 260, 5, 75, "Text",ExpressionUUID->"d7b2fbb8-f8be-480f-ae5e-839608f65aa9",
 CellID->885890219],
Cell[686886, 19077, 302, 7, 31, "Input",ExpressionUUID->"17e09586-1e8e-4513-8c7c-67b1eaf34d6d",
 CellID->2029211298],
Cell[687191, 19086, 168, 2, 45, "Text",ExpressionUUID->"888f89fc-061b-4e75-8bde-955798d4dae8",
 CellID->1895680850],
Cell[CellGroupData[{
Cell[687384, 19092, 432, 11, 31, "Input",ExpressionUUID->"88acb78e-e853-48fe-8683-3a41c0f2d8f0",
 CellID->1870441211],
Cell[687819, 19105, 343, 9, 45, "Output",ExpressionUUID->"16c19088-e542-403a-9b0a-15583b32c264",
 CellID->1899498952]
}, Open  ]],
Cell[CellGroupData[{
Cell[688199, 19119, 211, 4, 31, "Input",ExpressionUUID->"7ab73eb1-f8b9-4cb9-b423-d9ef3ec7e95d",
 CellID->1363840997],
Cell[688413, 19125, 10616, 269, 345, "Output",ExpressionUUID->"b88f4291-3d59-4719-9df1-234a2a730cd1",
 CellID->422321135]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[699078, 19400, 195, 3, 66, "Subsubsection",ExpressionUUID->"a39aab1f-bfd8-4133-9666-1b9ab75c461a",
 CellTags->"4.7.3",
 CellID->1725655196],
Cell[699276, 19405, 456, 7, 134, "Text",ExpressionUUID->"635afbe0-b20a-4db2-9ea7-7af3676185b0",
 CellID->1320226437],
Cell[699735, 19414, 544, 8, 134, "Text",ExpressionUUID->"7e815159-ea70-4ab6-a3ee-8945659b3c38",
 CellID->643784967],
Cell[700282, 19424, 300, 7, 31, "Input",ExpressionUUID->"07f9d904-6cd0-4f85-8334-2f6aaa1ca067",
 CellID->96386466],
Cell[700585, 19433, 165, 2, 45, "Text",ExpressionUUID->"6e38b85e-ece6-495a-8835-f56919cddd32",
 CellID->1774624309],
Cell[CellGroupData[{
Cell[700775, 19439, 212, 4, 31, "Input",ExpressionUUID->"7ab5b628-a78e-4ee6-9f50-fa73b3007188",
 CellID->1622354949],
Cell[700990, 19445, 10616, 269, 345, "Output",ExpressionUUID->"1d0e51c9-4d50-4c9d-9a9b-cd743ee1e365",
 CellID->827878225]
}, Open  ]],
Cell[711621, 19717, 412, 7, 104, "Text",ExpressionUUID->"9314f24e-0b85-4d9d-9116-f430be2bd45a",
 CellID->602778662],
Cell[712036, 19726, 299, 7, 31, "Input",ExpressionUUID->"5a4bee64-c3d6-44eb-a5c2-772248ffcf29",
 CellID->242238371],
Cell[712338, 19735, 168, 2, 45, "Text",ExpressionUUID->"cfd75c11-45ac-4af4-810d-64a0a1bd91e2",
 CellID->1160992854],
Cell[CellGroupData[{
Cell[712531, 19741, 213, 4, 31, "Input",ExpressionUUID->"4e8510ff-c5df-4eb9-9c18-7010a030077e",
 CellID->482200629],
Cell[712747, 19747, 10616, 269, 345, "Output",ExpressionUUID->"7e646b56-b241-4ae5-bfca-b7a829c2ed05",
 CellID->224240728]
}, Open  ]],
Cell[723378, 20019, 419, 9, 104, "Text",ExpressionUUID->"3958825e-9f3c-4ff6-97b0-b3c745aeb1a7",
 CellID->2127598658]
}, Open  ]],
Cell[CellGroupData[{
Cell[723834, 20033, 169, 2, 66, "Subsubsection",ExpressionUUID->"72f9240f-2661-46dc-995e-7cabd4587d8f",
 CellID->949616047],
Cell[724006, 20037, 774, 12, 222, "Text",ExpressionUUID->"5463f5df-ab4c-4cf2-ae2a-7f8f63d61924",
 CellID->98437425]
}, Open  ]],
Cell[CellGroupData[{
Cell[724817, 20054, 179, 2, 66, "Subsubsection",ExpressionUUID->"463dcea1-d86f-4595-827a-9c35ab06dcba",
 CellID->1035586234],
Cell[724999, 20058, 638, 10, 134, "Text",ExpressionUUID->"4697903b-a32e-40b2-a967-b631efe917fb",
 CellID->1890359550],
Cell[725640, 20070, 334, 6, 75, "Text",ExpressionUUID->"73d72ac8-4dab-47d3-bdeb-07e7e9231852",
 CellID->783855497],
Cell[725977, 20078, 280, 6, 31, "Input",ExpressionUUID->"8b8ec68c-8d22-450c-a7d4-c7c194256c2c",
 CellID->642617907],
Cell[726260, 20086, 170, 2, 45, "Text",ExpressionUUID->"770dbc49-8ecb-4655-a232-6ccc872953ae",
 CellID->324951508],
Cell[CellGroupData[{
Cell[726455, 20092, 212, 4, 31, "Input",ExpressionUUID->"02b3ef27-6d3b-4eaf-87b3-1cf256bb1d54",
 CellID->1901000864],
Cell[726670, 20098, 10325, 262, 295, "Output",ExpressionUUID->"2267caa8-9a79-485f-ad45-f5da71a7afe8",
 CellID->129259353]
}, Open  ]],
Cell[737010, 20363, 587, 10, 163, "Text",ExpressionUUID->"0f9266a1-45c1-4920-b553-10cca637790e",
 CellID->1355978754]
}, Open  ]],
Cell[CellGroupData[{
Cell[737634, 20378, 183, 2, 66, "Subsubsection",ExpressionUUID->"0f39afb0-54b3-49f6-8d7d-07f77c4bb8d0",
 CellID->875087534],
Cell[737820, 20382, 151, 2, 38, "ItemNumbered",ExpressionUUID->"01735cdb-005b-4d8d-a6c7-125e61dbe49e",
 CellID->410407917],
Cell[737974, 20386, 486, 8, 104, "Text",ExpressionUUID->"be8b262c-808d-4a76-8dab-fdeaf4198e11",
 CellID->8386855],
Cell[738463, 20396, 1294, 23, 148, "Input",ExpressionUUID->"4d8d0e29-e4de-4e67-8fc5-cb90ed7ee575",
 CellID->589437071],
Cell[739760, 20421, 154, 2, 38, "ItemNumbered",ExpressionUUID->"2777cf25-cc9d-4854-9962-1881828b3cc5",
 CellID->2134838466],
Cell[739917, 20425, 340, 6, 75, "Text",ExpressionUUID->"b79e27ba-2ffa-450b-9326-edd2758e2117",
 CellID->73323986],
Cell[740260, 20433, 592, 15, 78, "Input",ExpressionUUID->"b709ec9e-16b8-4a4f-8b24-491bd9b1ed01",
 CellID->142064860],
Cell[740855, 20450, 170, 2, 45, "Text",ExpressionUUID->"a102951b-ea7f-4b68-9163-100b37f67675",
 CellID->1260111235],
Cell[CellGroupData[{
Cell[741050, 20456, 281, 5, 31, "Input",ExpressionUUID->"be58542f-f934-498d-91a8-736f5dc2e5cc",
 CellID->513384132],
Cell[741334, 20463, 172, 3, 45, "Output",ExpressionUUID->"0af2f65a-d965-4284-adb8-5cb5b356abbf",
 CellID->1311860782]
}, Open  ]],
Cell[741521, 20469, 161, 2, 38, "ItemNumbered",ExpressionUUID->"42497ca4-a16d-44dc-9c0d-be3e4e267277",
 CellID->229559325],
Cell[741685, 20473, 375, 7, 75, "Text",ExpressionUUID->"9cb137e0-545b-41d7-907d-4a486a0b81e9",
 CellID->1322945263],
Cell[CellGroupData[{
Cell[742085, 20484, 641, 17, 31, "Input",ExpressionUUID->"375c58ba-e935-4bd6-8dca-9c984ceabfc5",
 CellID->1493591992],
Cell[742729, 20503, 2801, 77, 162, "Output",ExpressionUUID->"2d142309-c6bd-4c5c-8a61-e360d148c4f0",
 CellID->2042616186]
}, Open  ]],
Cell[745545, 20583, 192, 2, 45, "Text",ExpressionUUID->"70f59894-8a85-491a-b798-74e88a73cb51",
 CellID->1175905668],
Cell[CellGroupData[{
Cell[745762, 20589, 415, 11, 31, "Input",ExpressionUUID->"7ef3b432-1210-46a9-828f-625a03a59035",
 CellID->1360929922],
Cell[746180, 20602, 2774, 77, 162, "Output",ExpressionUUID->"990b6149-b740-4cf6-b6e1-51d3daf69088",
 CellID->668174257]
}, Open  ]],
Cell[748969, 20682, 180, 2, 38, "ItemNumbered",ExpressionUUID->"9dcfbe8a-743d-4db1-9b34-0c66dca17d9a",
 CellID->89805612],
Cell[749152, 20686, 835, 14, 163, "Text",ExpressionUUID->"62264f0f-fd6a-4bce-bed3-529958634015",
 CellID->1829400690],
Cell[749990, 20702, 670, 18, 78, "Input",ExpressionUUID->"92bcdefb-1593-4f41-9a57-645172fbe776",
 CellID->1185450359],
Cell[750663, 20722, 276, 5, 45, "Text",ExpressionUUID->"dbfcf602-a6e1-46c6-8ed8-32db851a8d23",
 CellID->777970762],
Cell[CellGroupData[{
Cell[750964, 20731, 222, 4, 31, "Input",ExpressionUUID->"d3f9a010-d64f-4468-b52f-43307a42be16",
 CellID->599846970],
Cell[751189, 20737, 11433, 285, 394, "Output",ExpressionUUID->"74bf2f2b-3170-43d3-bfa9-4d7b64bfa2d5",
 CellID->1054569890]
}, Open  ]],
Cell[762637, 21025, 787, 14, 193, "Text",ExpressionUUID->"ad1c298d-496b-4334-a4df-b1f9463e79e5",
 CellID->2047314658],
Cell[CellGroupData[{
Cell[763449, 21043, 840, 24, 55, "Input",ExpressionUUID->"6c8c5cd4-281e-4ceb-b695-137ab2765d72",
 CellID->1445798879],
Cell[764292, 21069, 2777, 77, 162, "Output",ExpressionUUID->"91ebb479-4bac-4a67-ba6d-2d974d7c259e",
 CellID->2079999777]
}, Open  ]],
Cell[767084, 21149, 191, 2, 45, "Text",ExpressionUUID->"2d3f53a2-7feb-4957-83bd-d20e9737dd8c",
 CellID->261552982],
Cell[767278, 21153, 654, 18, 78, "Input",ExpressionUUID->"e0107f24-1afd-4613-b6b9-368348668216",
 CellID->21943065],
Cell[767935, 21173, 171, 2, 45, "Text",ExpressionUUID->"0c5def4b-a111-49ee-973a-e4f9961e0e02",
 CellID->1201553377],
Cell[CellGroupData[{
Cell[768131, 21179, 225, 4, 31, "Input",ExpressionUUID->"3fd74f7e-bcd9-4149-aed4-651b93db092f",
 CellID->2059858937],
Cell[768359, 21185, 10637, 269, 245, "Output",ExpressionUUID->"f9edf3d4-6be5-4e26-a4d3-1825b2b3ec34",
 CellID->315990097]
}, Open  ]],
Cell[779011, 21457, 162, 2, 45, "Text",ExpressionUUID->"e3b3f75e-b67b-429c-9923-c866519de65a",
 CellID->118501248],
Cell[779176, 21461, 176, 2, 38, "ItemNumbered",ExpressionUUID->"f0ec89bf-52a0-45bf-a43c-0eaa19cfa7f6",
 CellID->933134367],
Cell[779355, 21465, 338, 6, 75, "Text",ExpressionUUID->"c5fbcd35-87e2-4abf-83c7-bd8fa76967bc",
 CellID->116232128],
Cell[779696, 21473, 985, 28, 78, "Input",ExpressionUUID->"b192beb6-ad54-4c58-8414-c3869f52fa97",
 CellID->1131411086],
Cell[780684, 21503, 553, 9, 134, "Text",ExpressionUUID->"ff9fedc3-b521-45cf-8f52-47447ed5b730",
 CellID->1832769553],
Cell[781240, 21514, 657, 16, 78, "Input",ExpressionUUID->"3ed28ae6-7cc0-4851-86eb-51fe43b26f33",
 CellID->577095815],
Cell[781900, 21532, 173, 2, 45, "Text",ExpressionUUID->"174a5a19-10f5-4959-99b1-4b515e0df983",
 CellID->1262075122],
Cell[CellGroupData[{
Cell[782098, 21538, 221, 4, 31, "Input",ExpressionUUID->"13949987-fb8a-4398-b8a0-d84a9ff71363",
 CellID->436354442],
Cell[782322, 21544, 11433, 285, 394, "Output",ExpressionUUID->"8a662b1c-d9fe-45fb-871f-17fa86d6e8b8",
 CellID->552711279]
}, Open  ]],
Cell[793770, 21832, 344, 6, 104, "Text",ExpressionUUID->"8e5e3ff7-7920-4e58-bc6e-2ec5fbc9e4f3",
 CellID->62123235],
Cell[794117, 21840, 468, 8, 134, "Text",ExpressionUUID->"e79d8370-997b-4e09-8124-9e71b87452bc",
 CellID->1984700371]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[794634, 21854, 226, 5, 68, "Subsection",ExpressionUUID->"2476424b-01fd-4be5-9672-38f9d5796d7f",
 CellTags->"4.8",
 CellID->622892622],
Cell[794863, 21861, 1234, 24, 340, "Text",ExpressionUUID->"3792cb29-0298-4c43-812a-53acdf139f55",
 CellID->2121002476],
Cell[CellGroupData[{
Cell[796122, 21889, 149, 2, 66, "Subsubsection",ExpressionUUID->"3b76ee7d-ff0c-48fa-bebf-4ecebd7f560f",
 CellID->1235506013],
Cell[796274, 21893, 1110, 17, 340, "Text",ExpressionUUID->"ac64a218-f32a-4dd2-a5a3-e7a0dba688c1",
 CellID->1130177648],
Cell[797387, 21912, 1672, 24, 488, "Text",ExpressionUUID->"81887a3e-f767-4b22-8fd3-c4511d76cd5c",
 CellID->942271196],
Cell[799062, 21938, 363, 6, 104, "Text",ExpressionUUID->"f17a120b-d648-41e8-8580-8338ef780030",
 CellID->944635559],
Cell[799428, 21946, 654, 11, 193, "Text",ExpressionUUID->"40db4cbb-dd5b-4b35-889a-4ad458c3842e",
 CellID->653438905],
Cell[800085, 21959, 260, 5, 75, "Text",ExpressionUUID->"8644bcb5-e761-43d4-ac4c-bc86ad5c4473",
 CellID->501586391],
Cell[800348, 21966, 741, 21, 101, "Input",ExpressionUUID->"d37277ee-3b6b-4d5f-a91d-9447675dd1c8",
 CellID->1056301114],
Cell[CellGroupData[{
Cell[801114, 21991, 228, 4, 31, "Input",ExpressionUUID->"90335e84-6ea2-48fd-ae06-273b72587dd4",
 CellID->31684054],
Cell[801345, 21997, 173, 3, 45, "Output",ExpressionUUID->"2946ca76-8da5-4111-984f-bd4af0391940",
 CellID->1143107460]
}, Open  ]],
Cell[CellGroupData[{
Cell[801555, 22005, 242, 5, 31, "Input",ExpressionUUID->"5c2bd63b-6e17-4c6a-a6ce-881cf63c9205",
 CellID->1324666820],
Cell[801800, 22012, 222, 5, 45, "Output",ExpressionUUID->"ca8c7ccf-af9a-4adc-9304-042e277de0ca",
 CellID->1625676237]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[802071, 22023, 146, 2, 66, "Subsubsection",ExpressionUUID->"d60d815a-16ed-454d-ad9c-100951747856",
 CellID->306074478],
Cell[802220, 22027, 823, 12, 222, "Text",ExpressionUUID->"649355dd-9253-47a9-8228-69291d27c211",
 CellID->970417181],
Cell[803046, 22041, 919, 13, 281, "Text",ExpressionUUID->"c5c286be-c61c-4bea-9221-00528446fd91",
 CellID->1821256223],
Cell[803968, 22056, 194, 2, 45, "Text",ExpressionUUID->"319c36db-a88a-4497-a0af-3165041b04f5",
 CellID->368420064],
Cell[CellGroupData[{
Cell[804187, 22062, 594, 16, 125, "Input",ExpressionUUID->"16ece427-de64-420f-8bf3-27cc62ae0157",
 CellID->700345416],
Cell[804784, 22080, 172, 3, 45, "Output",ExpressionUUID->"a16b74e4-a73c-4adb-a644-c8853b0323d2",
 CellID->2140894538],
Cell[804959, 22085, 172, 3, 45, "Output",ExpressionUUID->"1ca27e10-abb9-4106-8742-343769f7350b",
 CellID->925994681]
}, Open  ]],
Cell[805146, 22091, 447, 8, 104, "Text",ExpressionUUID->"cb5194f6-134b-4dfe-87fe-a60f9c57ae53",
 CellID->117538014],
Cell[805596, 22101, 1275, 27, 134, "Text",ExpressionUUID->"cf5ade2d-9c2c-436e-904a-31bb416ba172",
 CellID->1743654614]
}, Open  ]],
Cell[CellGroupData[{
Cell[806908, 22133, 146, 2, 66, "Subsubsection",ExpressionUUID->"7196450f-7f79-4708-9fea-84a275890224",
 CellID->806058976],
Cell[807057, 22137, 984, 14, 252, "Text",ExpressionUUID->"853f47b7-3e0f-4820-be09-542046fb9fcc",
 CellID->1106364356],
Cell[808044, 22153, 319, 8, 31, "Input",ExpressionUUID->"2628f686-ebd5-4cde-82cb-59e6ebcbb57a",
 CellID->369714399],
Cell[808366, 22163, 232, 4, 45, "Text",ExpressionUUID->"d5d10ecb-2d01-4877-81c2-372307ad3beb",
 CellID->979174100],
Cell[CellGroupData[{
Cell[808623, 22171, 354, 9, 31, "Input",ExpressionUUID->"d2d046c3-cfd1-45a1-abb9-eda114f90985",
 CellID->811911739],
Cell[808980, 22182, 374, 8, 32, "Message",ExpressionUUID->"8d9e6b42-9b00-4609-b3b7-2690733bcec4",
 CellID->1955850832],
Cell[809357, 22192, 1874, 61, 156, "Output",ExpressionUUID->"8c1fe38a-661d-42ed-b59e-ebcdada65127",
 CellID->452748795]
}, Open  ]],
Cell[811246, 22256, 745, 11, 222, "Text",ExpressionUUID->"dae8aa13-4356-4eed-8349-c5b65a73f962",
 CellID->1138483256],
Cell[811994, 22269, 609, 11, 134, "Text",ExpressionUUID->"2f8207fe-5afa-4f1c-a80d-dfaf2d49eef5",
 CellID->1854179269]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[812652, 22286, 159, 2, 68, "Subsection",ExpressionUUID->"d6a17d81-69a8-4895-be76-62268df1b3c6",
 CellID->2061790856],
Cell[812814, 22290, 757, 15, 193, "Text",ExpressionUUID->"7b2791d4-686f-48c4-80f3-faa6f5f790c4",
 CellID->722788800],
Cell[CellGroupData[{
Cell[813596, 22309, 206, 3, 66, "Subsubsection",ExpressionUUID->"9c5e1f3f-5f2a-4d24-a488-a311a38a7997",
 CellTags->"4.9.1",
 CellID->215800951],
Cell[813805, 22314, 180, 3, 38, "ItemNumbered",ExpressionUUID->"338aa29d-1b11-4875-bf21-b3c0627ef2d8",
 CellTags->"4.9.1.1",
 CellID->1373934472],
Cell[813988, 22319, 414, 7, 104, "Text",ExpressionUUID->"3cd44d88-44b7-4e78-ae64-b6be1940517d",
 CellID->1972498360],
Cell[814405, 22328, 496, 12, 78, "Input",ExpressionUUID->"761d9655-7520-49d3-946e-900ffa8ccc4b",
 CellID->70410329],
Cell[814904, 22342, 260, 5, 75, "Text",ExpressionUUID->"a6991260-86bf-42d1-9c40-638d3835ab8c",
 CellID->490248049],
Cell[CellGroupData[{
Cell[815189, 22351, 376, 8, 54, "Input",ExpressionUUID->"a866f809-47df-4564-8f66-25da5a0f3ca6",
 CellID->14952033],
Cell[815568, 22361, 304, 7, 45, "Output",ExpressionUUID->"f0a7fa00-3c11-4a4c-8ed3-1294f6ee8491",
 CellID->457698248],
Cell[815875, 22370, 529, 15, 45, "Output",ExpressionUUID->"71a738ac-60f9-476d-83da-ed4c939555c5",
 CellID->248030582]
}, Open  ]],
Cell[CellGroupData[{
Cell[816441, 22390, 234, 4, 31, "Input",ExpressionUUID->"928bc0c0-e91a-4969-b5a9-a76ca1321788",
 CellID->1911610732],
Cell[816678, 22396, 311, 7, 45, "Output",ExpressionUUID->"914f065c-058b-400c-a31d-65313a44df7f",
 CellID->810130209]
}, Open  ]],
Cell[CellGroupData[{
Cell[817026, 22408, 235, 4, 31, "Input",ExpressionUUID->"7d301815-4a5a-431b-9a02-1e4cccdc1f06",
 CellID->1717602496],
Cell[817264, 22414, 533, 15, 45, "Output",ExpressionUUID->"805e9d03-7a56-4380-92b5-82eb59777829",
 CellID->1827378903]
}, Open  ]],
Cell[817812, 22432, 179, 2, 38, "ItemNumbered",ExpressionUUID->"55f674f7-8cee-4d92-b361-7a1e66663ccf",
 CellID->1593586974],
Cell[817994, 22436, 377, 6, 104, "Text",ExpressionUUID->"79bcc1e5-0588-4f69-83a1-0c6a2ae32b4d",
 CellID->226634],
Cell[818374, 22444, 458, 11, 54, "Input",ExpressionUUID->"e35e5971-226b-4f4d-ba98-6f76b12300fb",
 CellID->1839513767],
Cell[818835, 22457, 244, 5, 45, "Text",ExpressionUUID->"6c9ab999-0572-4e97-a09e-282378e1c0aa",
 CellID->813317165],
Cell[819082, 22464, 298, 6, 31, "Input",ExpressionUUID->"a4c0e11a-09c6-4c62-b870-c919c6f0411d",
 CellID->2025013905],
Cell[819383, 22472, 195, 2, 45, "Text",ExpressionUUID->"81288441-08b6-4ce3-aa25-b4cdbaa44349",
 CellID->1193707841],
Cell[CellGroupData[{
Cell[819603, 22478, 444, 12, 31, "Input",ExpressionUUID->"0b4dbd83-3cb0-4a57-a6f3-27892c9a146d",
 CellID->202495626],
Cell[820050, 22492, 639, 17, 68, "Output",ExpressionUUID->"75f81a20-2c7a-41a7-86a7-876d7fcea454",
 CellID->1660262909]
}, Open  ]],
Cell[820704, 22512, 396, 6, 104, "Text",ExpressionUUID->"df88408a-1963-429b-91b1-f4a189553809",
 CellID->1783686092],
Cell[821103, 22520, 186, 3, 38, "ItemNumbered",ExpressionUUID->"a4cea705-01fc-463e-8b20-f1c5c142f61f",
 CellTags->"4.9.1.3",
 CellID->516383228],
Cell[821292, 22525, 703, 11, 163, "Text",ExpressionUUID->"62a28393-e489-4643-a3ac-6728286c440e",
 CellID->871495469],
Cell[CellGroupData[{
Cell[822020, 22540, 551, 14, 78, "Input",ExpressionUUID->"970e2e27-7800-472b-8734-f2f6647aa9e1",
 CellID->1706374754],
Cell[822574, 22556, 616, 11, 32, "Message",ExpressionUUID->"96d08e57-e9a0-4476-9c8e-514e8e0439fb",
 CellID->872493054],
Cell[823193, 22569, 331, 9, 45, "Output",ExpressionUUID->"61a82180-4d28-4c22-8292-c671b45004c8",
 CellID->972416862]
}, Open  ]],
Cell[823539, 22581, 574, 9, 134, "Text",ExpressionUUID->"180c229d-7d08-4715-a6b1-0d8fd095b373",
 CellID->1059645964],
Cell[824116, 22592, 940, 27, 101, "Input",ExpressionUUID->"f52d9589-ae5d-4c79-b319-f403a4c66909",
 CellID->2142382755],
Cell[825059, 22621, 164, 2, 45, "Text",ExpressionUUID->"109bd9c6-31e4-4e5e-a3ba-8fa38a334f74",
 CellID->2147096552],
Cell[CellGroupData[{
Cell[825248, 22627, 454, 11, 54, "Input",ExpressionUUID->"80c6d0c1-a985-4a61-8158-206f6585d5c7",
 CellID->565462644],
Cell[825705, 22640, 474, 13, 45, "Output",ExpressionUUID->"fef3829b-5a01-43bc-8516-fad89004bc09",
 CellID->737425565]
}, Open  ]],
Cell[826194, 22656, 1448, 25, 281, "Text",ExpressionUUID->"80a47ded-7b50-4137-94b3-736498d25ff9",
 CellID->783344118],
Cell[827645, 22683, 429, 7, 104, "Text",ExpressionUUID->"fda6ee8b-38f6-4abb-9360-876a2818dff2",
 CellID->2045181427],
Cell[828077, 22692, 206, 2, 38, "ItemNumbered",ExpressionUUID->"f47fe9e9-d2a4-498b-afe2-dafc1db42d5f",
 CellID->556336596],
Cell[828286, 22696, 275, 5, 75, "Text",ExpressionUUID->"3389801f-cc61-46ba-a976-321e21813c20",
 CellID->71086556],
Cell[828564, 22703, 488, 8, 134, "Text",ExpressionUUID->"ec4c70a0-aba4-462e-858f-d1c4702d1189",
 CellID->736490948],
Cell[CellGroupData[{
Cell[829077, 22715, 605, 18, 31, "Input",ExpressionUUID->"a1023443-c558-4536-9bc7-2157f7b4283b",
 CellID->1599938831],
Cell[829685, 22735, 518, 10, 32, "Message",ExpressionUUID->"fc7424aa-b5bc-4f7d-b104-6f44e93a6f33",
 CellID->1522418648],
Cell[830206, 22747, 574, 11, 32, "Message",ExpressionUUID->"c732cf74-5c35-4b04-8fb8-164a29c5459b",
 CellID->22562931],
Cell[830783, 22760, 538, 10, 32, "Message",ExpressionUUID->"01591c4e-9271-47c6-bfba-bdf3b4ecd53a",
 CellID->1258059445],
Cell[831324, 22772, 470, 9, 32, "Message",ExpressionUUID->"04573dc1-f061-48a3-a60d-22e1b509dd3d",
 CellID->81103753],
Cell[831797, 22783, 573, 18, 45, "Output",ExpressionUUID->"a4bb8fb9-96e0-4717-b92b-1a294d7d75f2",
 CellID->1606144473]
}, Open  ]],
Cell[832385, 22804, 459, 7, 134, "Text",ExpressionUUID->"4a9b866d-7d4f-4664-9738-a8fce94d32e2",
 CellID->681403162],
Cell[832847, 22813, 755, 11, 193, "Text",ExpressionUUID->"d103bf8a-b1c0-45b3-9a14-8d96ade93007",
 CellID->1873255980],
Cell[833605, 22826, 333, 6, 75, "Text",ExpressionUUID->"d365b02b-d023-4584-80a3-b4589bd096a7",
 CellID->1390243839],
Cell[CellGroupData[{
Cell[833963, 22836, 570, 16, 31, "Input",ExpressionUUID->"ca6c0921-6d77-4d42-b112-2070e3ce46a5",
 CellID->1685947835],
Cell[834536, 22854, 440, 11, 45, "Output",ExpressionUUID->"b596215b-5f4f-4e38-b471-bc433965039e",
 CellID->1715047493]
}, Open  ]],
Cell[834991, 22868, 336, 6, 75, "Text",ExpressionUUID->"f13e85a2-36de-4398-af0d-ca95154ca445",
 CellID->1951818559],
Cell[CellGroupData[{
Cell[835352, 22878, 491, 14, 31, "Input",ExpressionUUID->"25c68ce8-168c-4d39-a14f-30ed10c52aa0",
 CellID->919066180],
Cell[835846, 22894, 471, 11, 45, "Output",ExpressionUUID->"a312dfc4-8719-4b64-9685-c83137c6d42b",
 CellID->486047692]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[836366, 22911, 185, 2, 66, "Subsubsection",ExpressionUUID->"1bf98c1c-aff9-4e4a-9130-073726555782",
 CellID->2123249903],
Cell[836554, 22915, 546, 9, 134, "Text",ExpressionUUID->"d8832c48-fe01-435e-93d5-e7be2e602f13",
 CellID->725357522],
Cell[CellGroupData[{
Cell[837125, 22928, 386, 9, 54, "Input",ExpressionUUID->"020c246f-bc59-47ae-8d21-48463d2103ef",
 CellID->1184371236],
Cell[837514, 22939, 406, 10, 45, "Output",ExpressionUUID->"45c91dc7-102f-4156-a27d-12dd962fd731",
 CellID->364310330]
}, Open  ]],
Cell[837935, 22952, 441, 7, 104, "Text",ExpressionUUID->"d40e6c29-1cf8-46a4-91ca-0d0c72a43c00",
 CellID->487838713],
Cell[CellGroupData[{
Cell[838401, 22963, 392, 9, 54, "Input",ExpressionUUID->"a24fe240-654e-4252-aa08-e32fcdfac0c5",
 CellID->1966183080],
Cell[838796, 22974, 282, 7, 45, "Output",ExpressionUUID->"63991574-0914-4f05-ab1e-0241b8d28c28",
 CellID->2082191988]
}, Open  ]],
Cell[839093, 22984, 401, 7, 104, "Text",ExpressionUUID->"5ff9dc0b-466f-40c6-831c-28e61222057e",
 CellID->7230804]
}, Open  ]],
Cell[CellGroupData[{
Cell[839531, 22996, 162, 2, 66, "Subsubsection",ExpressionUUID->"b516a6c9-6984-45e7-b883-03561ca7aae5",
 CellID->2062309938],
Cell[839696, 23000, 896, 15, 252, "Text",ExpressionUUID->"a23b9bba-3f8c-49b8-9e77-b18b00614868",
 CellID->857065386],
Cell[840595, 23017, 374, 8, 54, "Input",ExpressionUUID->"d9b06bf0-f9b6-4c2d-9853-d8b2b3477cd7",
 CellID->1298210758],
Cell[CellGroupData[{
Cell[840994, 23029, 401, 10, 31, "Input",ExpressionUUID->"e40523cc-a0e4-4d7c-9d10-067ee4ce7fb5",
 CellID->1432558288],
Cell[841398, 23041, 420, 9, 45, "Output",ExpressionUUID->"bef75b47-64e3-4bac-8c81-482d8af61bf0",
 CellID->1917305451]
}, Open  ]],
Cell[CellGroupData[{
Cell[841855, 23055, 259, 5, 31, "Input",ExpressionUUID->"28a5643e-7e19-4af0-b2d6-5fe391e0267c",
 CellID->471105953],
Cell[842117, 23062, 430, 9, 45, "Output",ExpressionUUID->"f697c934-4faf-42b2-bfd1-b1d8e77d8d80",
 CellID->1348205583]
}, Open  ]],
Cell[842562, 23074, 435, 7, 75, "Text",ExpressionUUID->"33136f37-2546-4907-b99a-71f56865cee7",
 CellID->1191273984]
}, Open  ]],
Cell[CellGroupData[{
Cell[843034, 23086, 159, 2, 66, "Subsubsection",ExpressionUUID->"3a408d91-ae4d-4d45-a8f1-32da96a6bd96",
 CellID->1992559048],
Cell[843196, 23090, 650, 10, 193, "Text",ExpressionUUID->"e1fda85f-cbee-4877-9701-d273dae07d91",
 CellID->1079928418],
Cell[CellGroupData[{
Cell[843871, 23104, 399, 9, 54, "Input",ExpressionUUID->"f284364e-3b97-4007-9c3f-22c96fd090ec",
 CellID->1848455827],
Cell[844273, 23115, 715, 21, 45, "Output",ExpressionUUID->"6b5e4993-92b5-477d-90c3-e5d876f5df81",
 CellID->1883531094]
}, Open  ]],
Cell[845003, 23139, 258, 4, 45, "Text",ExpressionUUID->"968b97cd-54c9-49ad-b44d-ec1950c2d021",
 CellID->450656431],
Cell[845264, 23145, 280, 6, 31, "Input",ExpressionUUID->"07fb1e58-4741-4945-9bec-3c6d5dec2316",
 CellID->314033869],
Cell[CellGroupData[{
Cell[845569, 23155, 203, 3, 31, "Input",ExpressionUUID->"5a0bfbe9-6ff1-4a26-81d4-22028eb9cc08",
 CellID->989068106],
Cell[845775, 23160, 402, 10, 45, "Output",ExpressionUUID->"a45fc09c-4ca1-4439-83be-ad96b1aa93f1",
 CellID->1145522215]
}, Open  ]],
Cell[846192, 23173, 177, 2, 45, "Text",ExpressionUUID->"8bb2e7e2-571e-4b8b-ae4d-caceca80816f",
 CellID->600972150],
Cell[CellGroupData[{
Cell[846394, 23179, 680, 17, 54, "Input",ExpressionUUID->"551cfd9b-136b-4be5-b929-a9f2d0d2dae6",
 CellID->744410441],
Cell[847077, 23198, 298, 7, 45, "Output",ExpressionUUID->"1449c7e0-4ec6-4d9c-bed6-63ec52e5f5b6",
 CellID->792480783]
}, Open  ]],
Cell[847390, 23208, 1099, 16, 340, "Text",ExpressionUUID->"f98a77d6-66e3-4f38-937b-3812a9ba0edd",
 CellID->990296531],
Cell[CellGroupData[{
Cell[848514, 23228, 233, 4, 31, "Input",ExpressionUUID->"c72b98cf-a377-4dae-97f4-23c43a7efabc",
 CellID->560802157],
Cell[848750, 23234, 315, 7, 45, "Output",ExpressionUUID->"892e14e6-96cc-402c-9553-8ffabec113a0",
 CellID->334669836]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[849114, 23247, 161, 2, 66, "Subsubsection",ExpressionUUID->"4d59d50e-f532-46bf-b156-263a90a45aa8",
 CellID->536262159],
Cell[849278, 23251, 432, 7, 134, "Text",ExpressionUUID->"0df7b358-6d82-471f-82c2-b6125af63944",
 CellID->2116723501],
Cell[CellGroupData[{
Cell[849735, 23262, 240, 5, 31, "Input",ExpressionUUID->"8105ec5a-89b5-468a-81f5-387ed69aa89d",
 CellID->2102634394],
Cell[849978, 23269, 426, 9, 32, "Message",ExpressionUUID->"ecb0f72c-1042-438b-8c51-e127fd28fd77",
 CellID->1358590720],
Cell[850407, 23280, 171, 3, 45, "Output",ExpressionUUID->"aa6f9fd1-0f8a-48df-b4ff-e4ecf24f4cd2",
 CellID->1788096136]
}, Open  ]],
Cell[850593, 23286, 342, 6, 75, "Text",ExpressionUUID->"56b060e7-6527-4ba5-8ac2-6cf17b075bf0",
 CellID->645601634],
Cell[850938, 23294, 723, 11, 222, "Text",ExpressionUUID->"fc1cb1c2-c5c1-464b-8442-da3f56263e96",
 CellID->2057233396],
Cell[851664, 23307, 575, 15, 101, "Input",ExpressionUUID->"d94f174c-16e6-4743-b79b-1c2917779397",
 CellID->212547489],
Cell[852242, 23324, 177, 2, 45, "Text",ExpressionUUID->"d4f46a77-c790-4a63-90e5-c8b0f3e409e8",
 CellID->1058569075],
Cell[CellGroupData[{
Cell[852444, 23330, 219, 4, 31, "Input",ExpressionUUID->"ac947c61-24cb-4436-bc76-bbd8997feb1f",
 CellID->1551036077],
Cell[852666, 23336, 171, 3, 45, "Output",ExpressionUUID->"b932c18d-d6f4-4112-91e9-90226c585869",
 CellID->827711685]
}, Open  ]],
Cell[852852, 23342, 804, 13, 252, "Text",ExpressionUUID->"e6076cf2-7f9c-45a7-8d6f-45b8ac92f4b9",
 CellID->2098708176],
Cell[CellGroupData[{
Cell[853681, 23359, 467, 10, 101, "Input",ExpressionUUID->"fd039596-fbf0-430b-b84d-1510951d0f30",
 CellID->1473440504],
Cell[854151, 23371, 193, 4, 45, "Output",ExpressionUUID->"6e1d3b04-9456-48f3-9af4-40c9db00f03c",
 CellID->854844625]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[854393, 23381, 178, 2, 66, "Subsubsection",ExpressionUUID->"8ef247d1-826e-4050-9be5-b2784d6e965c",
 CellID->383485588],
Cell[854574, 23385, 952, 14, 311, "Text",ExpressionUUID->"bf700ff6-8874-44ba-af18-9fa86dac7d09",
 CellID->643852869]
}, Open  ]],
Cell[CellGroupData[{
Cell[855563, 23404, 186, 2, 66, "Subsubsection",ExpressionUUID->"36d8df3e-18b0-4aef-a3c8-07f89e041dea",
 CellID->287815514],
Cell[855752, 23408, 173, 2, 38, "ItemNumbered",ExpressionUUID->"1a9e179d-4f48-45cd-9b89-86ca7bd05c44",
 CellID->1182170754],
Cell[855928, 23412, 1749, 32, 370, "Text",ExpressionUUID->"21c47b5c-3197-43f6-8f30-6320b71218ad",
 CellID->225160434],
Cell[857680, 23446, 764, 11, 222, "Text",ExpressionUUID->"cc08d19f-c0a8-4492-8bc9-4cd250a4f4f1",
 CellID->1094518709],
Cell[858447, 23459, 374, 9, 54, "Input",ExpressionUUID->"fabbc445-9646-4bc8-b8b6-b33231cebf1b",
 CellID->1106999795],
Cell[858824, 23470, 200, 2, 45, "Text",ExpressionUUID->"17bd0d57-b20e-49c2-a2ec-f7d266de4c0b",
 CellID->393789770],
Cell[CellGroupData[{
Cell[859049, 23476, 398, 9, 78, "Input",ExpressionUUID->"d208ef26-8cc6-4b37-82ec-4c3cc195c71c",
 CellID->728439685],
Cell[859450, 23487, 480, 19, 49, "Output",ExpressionUUID->"d23ef685-f48d-4ed0-8bb5-f58ac1c4a781",
 CellID->304009218]
}, Open  ]],
Cell[859945, 23509, 332, 7, 75, "Text",ExpressionUUID->"5338da88-4ccc-4567-a5f8-5cf330866394",
 CellID->238056382],
Cell[860280, 23518, 284, 6, 31, "Input",ExpressionUUID->"55f04827-863c-4c69-83f6-fd077e6955be",
 CellID->2022166495],
Cell[860567, 23526, 166, 2, 45, "Text",ExpressionUUID->"1710ca00-2144-488d-a325-bbf18919a7fa",
 CellID->1122406004],
Cell[CellGroupData[{
Cell[860758, 23532, 251, 5, 31, "Input",ExpressionUUID->"9a7f1ea9-595e-4be0-82b7-ec112141b8e2",
 CellID->873240184],
Cell[861012, 23539, 541, 22, 49, "Output",ExpressionUUID->"d908f304-92aa-4ac8-8562-dd4f97ef3123",
 CellID->49868952]
}, Open  ]],
Cell[861568, 23564, 526, 8, 134, "Text",ExpressionUUID->"8255ed58-8137-4689-a96d-87363d5045d8",
 CellID->628853934],
Cell[862097, 23574, 331, 6, 75, "Text",ExpressionUUID->"ee6fb2e3-b199-4e17-a3a2-4594731fada0",
 CellID->888379969],
Cell[862431, 23582, 196, 2, 38, "ItemNumbered",ExpressionUUID->"59f8a237-4ba5-4479-957d-76bd4610975b",
 CellID->1520114833],
Cell[862630, 23586, 447, 7, 134, "Text",ExpressionUUID->"39ea4891-c637-47c1-9736-411652741613",
 CellID->2104533519],
Cell[863080, 23595, 472, 11, 78, "Input",ExpressionUUID->"dc0aed61-b42b-4738-91fc-4ba05475e15e",
 CellID->1490873518],
Cell[863555, 23608, 291, 5, 75, "Text",ExpressionUUID->"df77e297-fac7-4c54-8e9f-42d254a596e4",
 CellID->1408236595],
Cell[CellGroupData[{
Cell[863871, 23617, 504, 13, 54, "Input",ExpressionUUID->"4ecb6f4e-f0f9-43dd-b963-7ca1d8f276f8",
 CellID->197163733],
Cell[864378, 23632, 317, 8, 49, "Output",ExpressionUUID->"090a5328-c628-4670-8e0b-e123fe66033d",
 CellID->157909997]
}, Open  ]],
Cell[864710, 23643, 344, 6, 75, "Text",ExpressionUUID->"fd25fb6c-c5a2-4cfc-bdc6-ee668816bf99",
 CellID->2053169346],
Cell[865057, 23651, 285, 6, 31, "Input",ExpressionUUID->"6f7dbbce-c751-49cf-85fe-d20746d59570",
 CellID->440869063],
Cell[865345, 23659, 163, 2, 45, "Text",ExpressionUUID->"cfb80e97-85e7-467e-809a-d4fa10bfbbb3",
 CellID->413047873],
Cell[CellGroupData[{
Cell[865533, 23665, 439, 12, 54, "Input",ExpressionUUID->"3560cb1e-a37b-445b-823d-144c10deb0e6",
 CellID->1428454407],
Cell[865975, 23679, 301, 8, 49, "Output",ExpressionUUID->"cd0e895c-16ff-4b37-8bdf-e368a2dfdb8d",
 CellID->949510167]
}, Open  ]],
Cell[866291, 23690, 497, 8, 104, "Text",ExpressionUUID->"a2146f8a-aad3-4b4b-8022-c4e0434c11da",
 CellID->466395912],
Cell[866791, 23700, 320, 6, 75, "Text",ExpressionUUID->"6beca507-85b6-40b5-a15f-95bca093a450",
 CellID->767094825],
Cell[CellGroupData[{
Cell[867136, 23710, 472, 12, 78, "Input",ExpressionUUID->"8e9cd706-6c7f-41ca-8576-ee514d7f30b2",
 CellID->855273221],
Cell[867611, 23724, 265, 7, 45, "Output",ExpressionUUID->"16910df4-8c8c-4aed-9172-77dfcea840bc",
 CellID->1840657767]
}, Open  ]],
Cell[867891, 23734, 1098, 16, 340, "Text",ExpressionUUID->"3eddb5b7-4cee-4cc0-a2af-456119540d19",
 CellID->1433154934],
Cell[868992, 23752, 734, 20, 101, "Input",ExpressionUUID->"bb752d13-8b73-485e-ab88-7794f4e5265c",
 CellID->1445701317],
Cell[869729, 23774, 341, 6, 75, "Text",ExpressionUUID->"6e63e676-6c08-40ce-bbd7-cd412c5ae725",
 CellID->1563232066],
Cell[CellGroupData[{
Cell[870095, 23784, 471, 12, 78, "Input",ExpressionUUID->"626fdcbc-f640-4eac-af8e-d6f4dd777f77",
 CellID->1923152022],
Cell[870569, 23798, 307, 8, 49, "Output",ExpressionUUID->"478a91d8-6549-49cc-8c87-914706a9d702",
 CellID->1862718241]
}, Open  ]],
Cell[870891, 23809, 195, 2, 45, "Text",ExpressionUUID->"2dd0dded-e51e-4c2f-8e62-eebf41792f36",
 CellID->688870521],
Cell[CellGroupData[{
Cell[871111, 23815, 252, 5, 31, "Input",ExpressionUUID->"0569aa3c-174d-44cf-b750-b7a3198c15d7",
 CellID->1394512641],
Cell[871366, 23822, 187, 3, 45, "Output",ExpressionUUID->"47a74289-54fe-460d-bcc7-0f2661ca991a",
 CellID->1698921453]
}, Open  ]],
Cell[871568, 23828, 516, 8, 134, "Text",ExpressionUUID->"7f77b5c4-a187-4651-b61a-5607d67bfd84",
 CellID->830290059],
Cell[872087, 23838, 862, 24, 125, "Input",ExpressionUUID->"43287ee8-32fe-4335-b49d-9da64e13f79d",
 CellID->1711352525],
Cell[CellGroupData[{
Cell[872974, 23866, 329, 8, 31, "Input",ExpressionUUID->"ccb7b100-d2eb-4534-a573-27df6496501f",
 CellID->290242599],
Cell[873306, 23876, 273, 7, 49, "Output",ExpressionUUID->"53dacd89-bfd9-4878-b4da-3f5d7aec336c",
 CellID->2088163722]
}, Open  ]],
Cell[873594, 23886, 967, 16, 252, "Text",ExpressionUUID->"b9585c0a-ed1a-4c80-bf72-7c1f65fdf794",
 CellID->1589916380],
Cell[874564, 23904, 182, 2, 38, "ItemNumbered",ExpressionUUID->"f5adb849-e1af-49d9-a0cb-46149a7027fb",
 CellID->1758319652],
Cell[874749, 23908, 814, 12, 252, "Text",ExpressionUUID->"36eea206-bca5-4fd3-8bcd-b9365a8a0b09",
 CellID->555924797]
}, Open  ]],
Cell[CellGroupData[{
Cell[875600, 23925, 180, 2, 66, "Subsubsection",ExpressionUUID->"3c5fa788-5b6d-4dcb-b9d5-3faecdea47ba",
 CellID->1308710383],
Cell[875783, 23929, 543, 9, 163, "Text",ExpressionUUID->"735b5f83-57a0-4e5c-9315-0afea02e1536",
 CellID->967894507],
Cell[876329, 23940, 461, 7, 134, "Text",ExpressionUUID->"a26586b5-f8ff-447d-bf18-c1684a7bb41a",
 CellID->1921642775],
Cell[876793, 23949, 466, 7, 134, "Text",ExpressionUUID->"d89d3c34-356e-480e-bc00-5be8ca839415",
 CellID->1137746886],
Cell[877262, 23958, 642, 10, 193, "Text",ExpressionUUID->"f4108ac1-01ce-42b3-9c8d-71ade7165d78",
 CellID->941925622],
Cell[877907, 23970, 412, 7, 104, "Text",ExpressionUUID->"7b0959e6-c49f-49bb-b132-50e11533a863",
 CellID->833321009]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[878368, 23983, 193, 2, 68, "Subsection",ExpressionUUID->"c01b7c78-72a2-4218-b365-7558e81134ed",
 CellID->1068019174],
Cell[878564, 23987, 540, 12, 104, "Text",ExpressionUUID->"78bf75c8-2b97-4704-b3a9-cc70463fa969",
 CellID->1529935792],
Cell[879107, 24001, 597, 9, 163, "Text",ExpressionUUID->"1e1d1d94-3736-4002-830f-07be910f2e81",
 CellID->1326963058],
Cell[879707, 24012, 587, 16, 78, "Input",ExpressionUUID->"2394f6c0-c78a-4906-a249-97c3ff0dbe53",
 CellID->1425690124],
Cell[880297, 24030, 421, 7, 104, "Text",ExpressionUUID->"baaefbf3-7ad0-4dc7-8d71-f57853c75a7e",
 CellID->1895357486],
Cell[CellGroupData[{
Cell[880743, 24041, 225, 4, 31, "Input",ExpressionUUID->"38ef97e9-684b-4822-89e4-646913c7b899",
 CellID->1897942137],
Cell[880971, 24047, 601, 11, 53, "Message",ExpressionUUID->"455138a5-5a6d-4c2e-9e1a-0dcbe572519e",
 CellID->928715055],
Cell[881575, 24060, 310, 8, 45, "Output",ExpressionUUID->"03d1157c-51bd-4a55-a97f-f6273bfa7b87",
 CellID->1002782989]
}, Open  ]],
Cell[881900, 24071, 950, 16, 252, "Text",ExpressionUUID->"4889da76-8734-4ba1-ab90-f07dcfb2f8f9",
 CellID->322034467],
Cell[882853, 24089, 332, 7, 75, "Text",ExpressionUUID->"5b7e84b5-482b-4bca-8088-ab8d9f5a9ebf",
 CellID->334682315],
Cell[883188, 24098, 269, 5, 45, "Text",ExpressionUUID->"c0b1624c-b4c8-4898-85f8-a08c3aa25244",
 CellID->1991136981],
Cell[CellGroupData[{
Cell[883482, 24107, 223, 4, 31, "Input",ExpressionUUID->"724afe3e-ed6c-49c0-a1df-af5fbffbdb64",
 CellID->796290431],
Cell[883708, 24113, 600, 11, 53, "Message",ExpressionUUID->"a8cdd178-f820-4ecd-8e77-ff526b565638",
 CellID->1549758945],
Cell[884311, 24126, 310, 8, 45, "Output",ExpressionUUID->"e5006cda-cbde-4178-8e80-94f187dabcab",
 CellID->2116917799]
}, Open  ]],
Cell[884636, 24137, 361, 6, 75, "Text",ExpressionUUID->"005d978d-ceeb-465d-bdbf-4537bbc3d05f",
 CellID->1675867944],
Cell[885000, 24145, 325, 6, 75, "Text",ExpressionUUID->"bbb384b6-328a-4a81-b2c6-5649f5c54c5a",
 CellID->1292526861],
Cell[885328, 24153, 764, 20, 78, "Input",ExpressionUUID->"513931d6-303a-4548-9e87-d6b96f852fe7",
 CellID->540392628],
Cell[886095, 24175, 290, 5, 75, "Text",ExpressionUUID->"eb99fcab-4bd4-4f82-afdb-26f24bd93b2c",
 CellID->1734284026],
Cell[CellGroupData[{
Cell[886410, 24184, 227, 4, 31, "Input",ExpressionUUID->"1cb24679-f2a4-4b7e-b840-893d5efd2083",
 CellID->1700947526],
Cell[886640, 24190, 598, 11, 53, "Message",ExpressionUUID->"1be4f287-a133-4dc5-aadd-9b343af9c69b",
 CellID->70615319],
Cell[887241, 24203, 424, 10, 45, "Output",ExpressionUUID->"b7823bdb-e051-4d1b-a927-6027907e367e",
 CellID->1420693289]
}, Open  ]],
Cell[887680, 24216, 388, 6, 75, "Text",ExpressionUUID->"dbaf7b26-2bb5-446f-b232-ef9feec6392e",
 CellID->1857358717],
Cell[CellGroupData[{
Cell[888093, 24226, 226, 4, 31, "Input",ExpressionUUID->"76594554-d4ca-4b15-a27c-f93e789c8dd5",
 CellID->907546054],
Cell[888322, 24232, 439, 9, 28, "Print",ExpressionUUID->"12b9ff52-b219-4daf-a902-541c66412184",
 CellID->886761983]
}, Open  ]],
Cell[888776, 24244, 476, 7, 134, "Text",ExpressionUUID->"99b473fb-93df-4cac-b6d6-5e0536816d96",
 CellID->272138101],
Cell[889255, 24253, 453, 9, 104, "Text",ExpressionUUID->"53df41fc-0b1a-4e8b-98c2-450141d57ba6",
 CellID->1256046419],
Cell[889711, 24264, 355, 8, 31, "Input",ExpressionUUID->"32a5da7e-7c86-41d7-a3a8-330a79fe4715",
 CellID->1632956482],
Cell[890069, 24274, 524, 10, 104, "Text",ExpressionUUID->"64b49c0b-3999-4318-9ad2-b88ae0c6cb94",
 CellID->1529175810],
Cell[890596, 24286, 505, 9, 134, "Text",ExpressionUUID->"8e47e561-3228-4712-8103-c6a08bf48ac4",
 CellID->236649443],
Cell[891104, 24297, 507, 9, 134, "Text",ExpressionUUID->"edb114b3-47d5-4477-877a-e9acd36477db",
 CellID->58665129],
Cell[891614, 24308, 406, 7, 104, "Text",ExpressionUUID->"65113da8-ba23-4a93-9b83-679c1c71952d",
 CellID->1524194844],
Cell[892023, 24317, 381, 7, 104, "Text",ExpressionUUID->"a46b3fef-c916-439c-92c6-24384722f291",
 CellID->596229950],
Cell[CellGroupData[{
Cell[892429, 24328, 257, 5, 31, "Input",ExpressionUUID->"c40387c8-7fc6-4504-88d1-bc85fd221db0",
 CellID->1013780969],
Cell[892689, 24335, 727, 13, 53, "Message",ExpressionUUID->"e2ea8d65-ed78-425a-959a-162605b40ea5",
 CellID->2124968381],
Cell[893419, 24350, 492, 13, 45, "Output",ExpressionUUID->"fbcd944c-22e3-4039-bd55-28c0c57bf05a",
 CellID->1690529857]
}, Open  ]],
Cell[893926, 24366, 298, 9, 45, "Text",ExpressionUUID->"58b3e25d-117f-4f9c-b61e-4c0417754f5f",
 CellID->1526656789],
Cell[894227, 24377, 369, 6, 104, "Text",ExpressionUUID->"0aa6a5e5-0ac4-44ab-84a7-1b57027a0e53",
 CellID->2004847479],
Cell[894599, 24385, 336, 6, 75, "Text",ExpressionUUID->"247e67cd-9c21-4cb2-bb80-7fd58f147e8b",
 CellID->690834992],
Cell[894938, 24393, 281, 5, 75, "Text",ExpressionUUID->"f4c36faf-4b6f-496c-bf57-1e93d92435a5",
 CellID->468441416],
Cell[895222, 24400, 750, 18, 163, "Text",ExpressionUUID->"0c91975d-6146-432c-ace9-2540d3b75cf8",
 CellID->502110178]
}, Open  ]],
Cell[CellGroupData[{
Cell[896009, 24423, 173, 3, 68, "Subsection",ExpressionUUID->"9d378ef6-78b6-471b-be88-a705686a7a60",
 CellTags->"4.11",
 CellID->1770967983],
Cell[896185, 24428, 1140, 18, 311, "Text",ExpressionUUID->"f0a40c11-ff41-4277-aef5-8b1bb889dd4e",
 CellID->535542861],
Cell[897328, 24448, 464, 10, 104, "Text",ExpressionUUID->"071999a5-16f4-4d77-a357-6ecde0600c30",
 CellID->404815332],
Cell[CellGroupData[{
Cell[897817, 24462, 185, 2, 66, "Subsubsection",ExpressionUUID->"75356982-2647-4b5c-9d38-17b877effe7e",
 CellID->1593721781],
Cell[898005, 24466, 1148, 16, 370, "Text",ExpressionUUID->"23e85ea6-26d5-446d-a6fd-cdab71779173",
 CellID->118444236],
Cell[899156, 24484, 201, 2, 45, "Text",ExpressionUUID->"e44ebad0-35e1-4b8d-a9f6-253f1b0b8efa",
 CellID->612828379],
Cell[899360, 24488, 176, 2, 38, "ItemNumbered",ExpressionUUID->"85f0776d-dce9-4647-831e-90f763cf43ae",
 CellID->474994841],
Cell[CellGroupData[{
Cell[899561, 24494, 674, 22, 31, "Input",ExpressionUUID->"ac866441-539d-4b7d-bf5b-265a1d13e445",
 CellID->307145944],
Cell[900238, 24518, 267, 6, 49, "Output",ExpressionUUID->"7aeff30d-55c9-4aae-b03f-0b5b853221e5",
 CellID->246328943]
}, Open  ]],
Cell[900520, 24527, 188, 2, 45, "Text",ExpressionUUID->"84069597-4eb8-410d-9c59-72c276fe8b92",
 CellID->1849557232],
Cell[900711, 24531, 386, 10, 54, "Input",ExpressionUUID->"ad91b14c-a6f7-43a5-88d5-a8c896372147",
 CellID->733316219],
Cell[CellGroupData[{
Cell[901122, 24545, 377, 9, 31, "Input",ExpressionUUID->"1b243226-0f40-45aa-8f78-ad1e9dfb0e61",
 CellID->573758931],
Cell[901502, 24556, 267, 6, 49, "Output",ExpressionUUID->"fc8580e9-f8ff-43bc-8177-c5e6f1b97ef6",
 CellID->903077333]
}, Open  ]],
Cell[901784, 24565, 384, 6, 104, "Text",ExpressionUUID->"4643f604-d1f3-41db-8991-72fd2e1d0263",
 CellID->361843076],
Cell[902171, 24573, 510, 8, 134, "Text",ExpressionUUID->"505a2b70-6ce1-4e20-93ee-b35738731d30",
 CellID->1166055030],
Cell[CellGroupData[{
Cell[902706, 24585, 231, 4, 31, "Input",ExpressionUUID->"17376041-9f76-4222-8056-c8248331a4da",
 CellID->1267047073],
Cell[902940, 24591, 189, 4, 45, "Output",ExpressionUUID->"5661dc7d-9c85-4b05-a567-86a91df3d178",
 CellID->2052391398]
}, Open  ]],
Cell[903144, 24598, 312, 6, 75, "Text",ExpressionUUID->"6ba93031-c0f8-45d7-a6d3-ff64d3513052",
 CellID->1659888072],
Cell[CellGroupData[{
Cell[903481, 24608, 213, 4, 31, "Input",ExpressionUUID->"7176b49e-010b-4659-888b-e40f394653e8",
 CellID->431558075],
Cell[903697, 24614, 10042, 255, 247, "Output",ExpressionUUID->"8824eabd-037a-4a4d-9852-88e4716c56da",
 CellID->67387654]
}, Open  ]],
Cell[913754, 24872, 180, 2, 45, "Text",ExpressionUUID->"a0ac1400-5638-46ed-95b6-bac200649f16",
 CellID->860418809],
Cell[CellGroupData[{
Cell[913959, 24878, 323, 8, 54, "Input",ExpressionUUID->"3ded89b9-3389-4888-9576-ab068470b6cf",
 CellID->27138652],
Cell[914285, 24888, 10044, 255, 247, "Output",ExpressionUUID->"741bcd19-1bd8-44af-94dc-8bdee55af336",
 CellID->1969651879]
}, Open  ]],
Cell[924344, 25146, 692, 11, 193, "Text",ExpressionUUID->"8d570614-93fd-4521-8fd3-318818c3a350",
 CellID->357529007],
Cell[925039, 25159, 210, 4, 38, "ItemNumbered",ExpressionUUID->"3af5785f-aa05-4b65-aeba-764ef6f94b18",
 CellID->990870684],
Cell[925252, 25165, 404, 10, 55, "Input",ExpressionUUID->"69cd705e-07d5-47ee-a8e3-2af2bf2149bb",
 CellID->234647430],
Cell[925659, 25177, 167, 2, 45, "Text",ExpressionUUID->"6e0d91fe-e5b1-45f7-8b3b-2e80331d6a8e",
 CellID->1190739010],
Cell[CellGroupData[{
Cell[925851, 25183, 265, 5, 31, "Input",ExpressionUUID->"4debda34-9f87-4795-b69e-28cabeedc1bb",
 CellID->1423953500],
Cell[926119, 25190, 174, 3, 45, "Output",ExpressionUUID->"0ce2db95-8b44-4369-84d9-90df05307eea",
 CellID->1819370121]
}, Open  ]],
Cell[926308, 25196, 557, 9, 163, "Text",ExpressionUUID->"2c527300-0194-4875-b7d6-3a709e4829eb",
 CellID->133974014],
Cell[CellGroupData[{
Cell[926890, 25209, 227, 4, 31, "Input",ExpressionUUID->"dc6f2375-288f-4010-9452-ff84cf95741c",
 CellID->153210484],
Cell[927120, 25215, 468, 9, 32, "Message",ExpressionUUID->"35359588-0d87-4756-8668-383497ff1127",
 CellID->2101217906],
Cell[927591, 25226, 241, 5, 45, "Output",ExpressionUUID->"7a3d3ce8-e83a-458e-b4a4-5abe4716a00d",
 CellID->1948254874]
}, Open  ]],
Cell[927847, 25234, 236, 4, 45, "Text",ExpressionUUID->"cde4cc50-02ca-4bf4-ae40-f7d489bb98bd",
 CellID->1636501509],
Cell[928086, 25240, 427, 11, 31, "Input",ExpressionUUID->"e8666d04-ad91-4447-8127-1ba22202e027",
 CellID->1689669905],
Cell[928516, 25253, 236, 5, 45, "Text",ExpressionUUID->"1053e36f-c95b-4d2e-a4bc-f5ad2106d680",
 CellID->1643127904],
Cell[CellGroupData[{
Cell[928777, 25262, 387, 10, 31, "Input",ExpressionUUID->"7d1c5186-cdfe-4442-afdd-c1c6999833c7",
 CellID->664795709],
Cell[929167, 25274, 219, 5, 45, "Output",ExpressionUUID->"acbba291-e09e-4fc8-92fb-df81474342ba",
 CellID->1981786266]
}, Open  ]],
Cell[929401, 25282, 216, 2, 45, "Text",ExpressionUUID->"7f3cce54-7040-4c4f-a428-353e7bc0a711",
 CellID->326140990],
Cell[929620, 25286, 425, 11, 31, "Input",ExpressionUUID->"562ebf63-2f7c-4b67-8171-21053028e34c",
 CellID->960832502],
Cell[CellGroupData[{
Cell[930070, 25301, 390, 10, 31, "Input",ExpressionUUID->"e02bb69d-efc9-415c-a227-1b1aa134bc9a",
 CellID->1903396821],
Cell[930463, 25313, 255, 6, 45, "Output",ExpressionUUID->"24b0b169-462a-421a-a2c9-993c8f669078",
 CellID->1201190339]
}, Open  ]],
Cell[930733, 25322, 820, 15, 163, "Text",ExpressionUUID->"7aeb4227-172b-4e9f-8305-fb65cc381fa6",
 CellID->1071172330],
Cell[931556, 25339, 435, 7, 104, "Text",ExpressionUUID->"f4f37b64-fba8-461d-ad00-635436e5bd3d",
 CellID->1942728189],
Cell[931994, 25348, 178, 2, 38, "ItemNumbered",ExpressionUUID->"275cd7ac-4878-4d95-aa88-e7b8a0740ce1",
 CellID->1784192165],
Cell[932175, 25352, 186, 2, 45, "Text",ExpressionUUID->"492b76d2-b234-4219-98f7-080c530bf6f7",
 CellID->1603554094],
Cell[CellGroupData[{
Cell[932386, 25358, 279, 6, 31, "Input",ExpressionUUID->"665b896e-1873-4a41-8c93-437514cf7156",
 CellID->1487516580],
Cell[932668, 25366, 228, 5, 45, "Output",ExpressionUUID->"d9646db8-c7f0-45cd-8600-8a0e0e24bd59",
 CellID->1035671133]
}, Open  ]],
Cell[932911, 25374, 147, 2, 45, "Text",ExpressionUUID->"bc819517-ca0b-4d86-911e-24714427e97f",
 CellID->1169773396],
Cell[CellGroupData[{
Cell[933083, 25380, 468, 12, 31, "Input",ExpressionUUID->"7316ab02-62b2-4b5d-bd3e-4ffc83056308",
 CellID->168678287],
Cell[933554, 25394, 219, 5, 45, "Output",ExpressionUUID->"f385fbb7-6681-406d-8570-ea72b175b564",
 CellID->1858637525]
}, Open  ]],
Cell[933788, 25402, 193, 2, 38, "ItemNumbered",ExpressionUUID->"15df1f57-f6de-46d9-a6c2-5346ebf32f67",
 CellID->84016588],
Cell[933984, 25406, 231, 4, 45, "Text",ExpressionUUID->"91c5e1a3-8ba5-418b-a652-610032166997",
 CellID->1170038437],
Cell[934218, 25412, 285, 6, 31, "Input",ExpressionUUID->"fbd725cf-0d12-4c8a-8ade-bc79c405d4b8",
 CellID->482887905],
Cell[934506, 25420, 168, 2, 45, "Text",ExpressionUUID->"ad441158-36e5-42d3-be3b-1194cf55efe1",
 CellID->1956610601],
Cell[CellGroupData[{
Cell[934699, 25426, 607, 16, 54, "Input",ExpressionUUID->"3d787fee-7101-45c4-ba63-01520e91b5d3",
 CellID->1531179839],
Cell[935309, 25444, 648, 20, 45, "Output",ExpressionUUID->"c241528e-4251-4578-acb3-a363b6983304",
 CellID->603503043]
}, Open  ]],
Cell[935972, 25467, 183, 2, 38, "ItemNumbered",ExpressionUUID->"b10a5a7c-6ae4-4a08-b644-e9e55c88bb4d",
 CellID->2084716605],
Cell[936158, 25471, 202, 2, 45, "Text",ExpressionUUID->"0a9863f2-7aca-4aa1-9c57-14325920e7c8",
 CellID->1636279430],
Cell[936363, 25475, 267, 6, 31, "Input",ExpressionUUID->"849f94b5-3cf1-44a0-a98a-63e9e6c0146b",
 CellID->1946168475],
Cell[936633, 25483, 169, 2, 45, "Text",ExpressionUUID->"fa576489-4649-4990-bb84-2244c77a6953",
 CellID->688883556],
Cell[CellGroupData[{
Cell[936827, 25489, 415, 11, 31, "Input",ExpressionUUID->"da0d11d7-4bab-4048-9906-3e74df577279",
 CellID->981584715],
Cell[937245, 25502, 311, 8, 45, "Output",ExpressionUUID->"4598ba9b-3a62-4f41-b703-617ac359aa78",
 CellID->1080202328]
}, Open  ]],
Cell[937571, 25513, 300, 5, 75, "Text",ExpressionUUID->"5928d788-6b79-4b5f-948d-18537bfacef1",
 CellID->1198766175],
Cell[937874, 25520, 205, 3, 38, "ItemNumbered",ExpressionUUID->"860b9005-a64a-4e8c-8e63-f68942a6add3",
 CellTags->"4.11.1.6",
 CellID->2119010718],
Cell[938082, 25525, 252, 5, 75, "Text",ExpressionUUID->"dbe09aba-ffa4-45fb-b764-9fed46578bc9",
 CellID->344335578],
Cell[CellGroupData[{
Cell[938359, 25534, 416, 12, 31, "Input",ExpressionUUID->"1f614e62-5440-44a4-a68b-1b535202294f",
 CellID->768590829],
Cell[938778, 25548, 171, 3, 45, "Output",ExpressionUUID->"89138b76-39ff-4638-b4f5-9a5b0f007db8",
 CellID->582359695]
}, Open  ]],
Cell[938964, 25554, 543, 8, 163, "Text",ExpressionUUID->"c6928282-c504-4079-a92c-7b8d3b61ee21",
 CellID->1636414486],
Cell[939510, 25564, 709, 11, 222, "Text",ExpressionUUID->"70f2eb66-9201-410f-a817-8e5dc39349f6",
 CellID->803109544],
Cell[940222, 25577, 315, 6, 75, "Text",ExpressionUUID->"981d0b0d-0616-457b-95c1-21a77ea41fd6",
 CellID->153328035],
Cell[CellGroupData[{
Cell[940562, 25587, 291, 7, 31, "Input",ExpressionUUID->"644ef107-10d9-40e7-b4c5-61a1eb7bca69",
 CellID->1031464849],
Cell[940856, 25596, 624, 12, 32, "Message",ExpressionUUID->"ef4420c4-a094-4994-b297-0a35cabd7283",
 CellID->1026185945],
Cell[941483, 25610, 193, 4, 45, "Output",ExpressionUUID->"368a24d7-b53a-4321-a6ba-ef4b90bf7090",
 CellID->666008558]
}, Open  ]],
Cell[941691, 25617, 212, 4, 38, "ItemNumbered",ExpressionUUID->"80d1def0-ada7-4fa7-a758-86ceb2eeec23",
 CellID->14330853],
Cell[941906, 25623, 378, 7, 104, "Text",ExpressionUUID->"84dd3243-2f36-432f-bc0a-eedd40facb57",
 CellID->340477907],
Cell[CellGroupData[{
Cell[942309, 25634, 267, 6, 31, "Input",ExpressionUUID->"1c3d0962-3e67-4bd9-80c9-7826a24b9316",
 CellID->1447187432],
Cell[942579, 25642, 178, 3, 45, "Output",ExpressionUUID->"d3b396bb-70ec-4504-91e1-2605fb9eca6f",
 CellID->709974502]
}, Open  ]],
Cell[942772, 25648, 204, 2, 45, "Text",ExpressionUUID->"b5221ece-1311-455a-ac76-1cb14d67ccc2",
 CellID->1122312382],
Cell[CellGroupData[{
Cell[943001, 25654, 272, 6, 31, "Input",ExpressionUUID->"2d8572c4-f0e6-451b-97cd-8c3e0fb13188",
 CellID->717191382],
Cell[943276, 25662, 436, 13, 60, "Output",ExpressionUUID->"de0395b7-e94c-4462-bb0d-bd9933270839",
 CellID->1734449894]
}, Open  ]],
Cell[943727, 25678, 226, 4, 38, "ItemNumbered",ExpressionUUID->"7812b7e7-d44a-47fc-a0eb-8b6158a59ba5",
 CellTags->"4.11.1.8",
 CellID->956344080],
Cell[943956, 25684, 540, 9, 163, "Text",ExpressionUUID->"c745e055-ad35-48ef-a37a-016cc9a004ab",
 CellID->1507338412],
Cell[944499, 25695, 378, 9, 54, "Input",ExpressionUUID->"d3db522d-dac8-44ab-b70e-bb6510ec1378",
 CellID->456546040],
Cell[944880, 25706, 172, 2, 45, "Text",ExpressionUUID->"843b948e-7b2e-4d48-a7ce-6ae2e9f05f6d",
 CellID->513031352],
Cell[CellGroupData[{
Cell[945077, 25712, 419, 10, 31, "Input",ExpressionUUID->"d8730148-fb5f-4f6d-b0e4-85551464e574",
 CellID->1470475577],
Cell[945499, 25724, 226, 5, 45, "Output",ExpressionUUID->"be8cdd66-28dc-4e23-bcd1-5d5794a4abd4",
 CellID->288401540]
}, Open  ]],
Cell[945740, 25732, 574, 9, 163, "Text",ExpressionUUID->"180b84b5-7bcf-4b34-8f70-32698563c989",
 CellID->294091501],
Cell[946317, 25743, 545, 16, 31, "Input",ExpressionUUID->"56951bad-7004-47e5-924d-f7781f730cfe",
 CellID->1570272723],
Cell[CellGroupData[{
Cell[946887, 25763, 546, 12, 54, "Input",ExpressionUUID->"1d447e1c-0b24-4c1f-bb89-115e95dab00e",
 CellID->348922083],
Cell[947436, 25777, 237, 5, 45, "Output",ExpressionUUID->"eb78499b-2035-4d52-bddd-573cc0c00dba",
 CellID->804780412]
}, Open  ]],
Cell[947688, 25785, 568, 9, 163, "Text",ExpressionUUID->"aa34a7e2-d16e-4327-9a72-3c15f7d1ade5",
 CellID->395792656],
Cell[948259, 25796, 359, 9, 31, "Input",ExpressionUUID->"d4237573-218d-4060-9c95-1cf9e1baa20c",
 CellID->964627163],
Cell[948621, 25807, 188, 2, 45, "Text",ExpressionUUID->"0a7370ab-c772-498d-887e-f62103a196da",
 CellID->1362889470],
Cell[CellGroupData[{
Cell[948834, 25813, 551, 12, 54, "Input",ExpressionUUID->"fab22c97-3e85-4988-a5c9-830ba3b67af9",
 CellID->1022743388],
Cell[949388, 25827, 259, 5, 45, "Output",ExpressionUUID->"850b214f-d86d-46f3-b641-fae77fffc7c8",
 CellID->764201774]
}, Open  ]],
Cell[949662, 25835, 357, 6, 104, "Text",ExpressionUUID->"8431142e-8aa2-4ccb-a16c-7ea82d74d6c2",
 CellID->885113256],
Cell[950022, 25843, 539, 8, 163, "Text",ExpressionUUID->"8257b783-ec51-4b5c-93b8-779c19300075",
 CellID->1356337231],
Cell[950564, 25853, 168, 2, 38, "ItemNumbered",ExpressionUUID->"b7de9d20-f54e-42a8-bf1f-84afd7aa4b54",
 CellID->678075001],
Cell[950735, 25857, 593, 9, 163, "Text",ExpressionUUID->"ec23fe4c-41dc-4b19-84fb-c689e2c13f3f",
 CellID->1858310825],
Cell[951331, 25868, 178, 2, 38, "ItemNumbered",ExpressionUUID->"ab4ac2fb-6e4c-4ac0-84ca-cd504e1a82da",
 CellID->88098115],
Cell[951512, 25872, 650, 10, 193, "Text",ExpressionUUID->"007d8e2e-166b-4be5-aff2-cdacfdb020a6",
 CellID->1048786022],
Cell[952165, 25884, 599, 17, 54, "Input",ExpressionUUID->"ffb2da55-147c-48fd-afb1-d775c4a823de",
 CellID->20174886],
Cell[952767, 25903, 657, 10, 193, "Text",ExpressionUUID->"791416ed-31b5-4d90-9f5f-dd49a392885b",
 CellID->1477523768],
Cell[CellGroupData[{
Cell[953449, 25917, 507, 14, 31, "Input",ExpressionUUID->"5812eaf0-6ac5-412b-855f-39dad7dabead",
 CellID->1221156122],
Cell[953959, 25933, 457, 13, 45, "Output",ExpressionUUID->"30fdf0e9-8b4e-43be-8598-a1ad035d62e4",
 CellID->1432071925]
}, Open  ]],
Cell[954431, 25949, 200, 3, 38, "ItemNumbered",ExpressionUUID->"8667c2e8-084a-43e1-bde2-c78c4502a93c",
 CellTags->"4.11.1.11",
 CellID->1769251484],
Cell[954634, 25954, 652, 10, 163, "Text",ExpressionUUID->"f3ab62fe-f747-43b6-ae73-451b00e6fd6f",
 CellID->1751115226],
Cell[955289, 25966, 489, 8, 134, "Text",ExpressionUUID->"118611df-8ea9-45a6-b23b-504c4a31c578",
 CellID->219671154],
Cell[CellGroupData[{
Cell[955803, 25978, 274, 6, 31, "Input",ExpressionUUID->"ff157ceb-f9c9-4726-a2e6-0768bd9fc4c9",
 CellID->1636116991],
Cell[956080, 25986, 587, 15, 45, "Output",ExpressionUUID->"f91e2aee-1cfd-42f9-a897-0a10d0c77aab",
 CellID->969899031]
}, Open  ]],
Cell[956682, 26004, 471, 8, 104, "Text",ExpressionUUID->"97e65d40-62cd-4ed4-a8ba-198536925aa3",
 CellID->1751070020],
Cell[CellGroupData[{
Cell[957178, 26016, 293, 7, 31, "Input",ExpressionUUID->"c2f068cb-43a9-4846-b9b9-62f5d98a2c8f",
 CellID->1460711895],
Cell[957474, 26025, 303, 7, 45, "Output",ExpressionUUID->"519b8c46-b238-471b-ba34-e0a2b8c1769c",
 CellID->361954151]
}, Open  ]],
Cell[957792, 26035, 383, 6, 104, "Text",ExpressionUUID->"6dbba646-d092-40e6-b367-a0fef62dc3f6",
 CellID->1689727553],
Cell[958178, 26043, 266, 5, 38, "ItemNumbered",ExpressionUUID->"6b98b6e2-05fd-49e3-b53a-30d7e279751b",
 CellTags->"4.11.1.12",
 CellID->2077382498],
Cell[958447, 26050, 1135, 17, 340, "Text",ExpressionUUID->"5bf33a0f-4c1b-4aa1-9dd3-b857eb158774",
 CellID->778510960],
Cell[959585, 26069, 610, 9, 193, "Text",ExpressionUUID->"c1626132-84bd-44c6-a8bf-25708c9f3837",
 CellID->1764550724],
Cell[960198, 26080, 626, 11, 163, "Text",ExpressionUUID->"40a0ab7c-905b-426b-b6d6-1ff5aafc37e5",
 CellID->1345982386],
Cell[960827, 26093, 430, 11, 54, "Input",ExpressionUUID->"3ea482f7-c083-42ba-bea3-18822f353534",
 CellID->1944630282],
Cell[961260, 26106, 233, 4, 45, "Text",ExpressionUUID->"721bbb79-aba5-4846-ae10-e8f748a4fef3",
 CellID->1994995678],
Cell[CellGroupData[{
Cell[961518, 26114, 265, 6, 31, "Input",ExpressionUUID->"eb05740d-1684-41bb-8ef7-948e376d14d6",
 CellID->1802375076],
Cell[961786, 26122, 248, 6, 45, "Output",ExpressionUUID->"5afe63ef-9eb2-46f0-9514-488ac5ac8e90",
 CellID->1831032876]
}, Open  ]],
Cell[962049, 26131, 171, 2, 45, "Text",ExpressionUUID->"e674b2c6-5c3c-4bf2-85d1-0ffdf0070973",
 CellID->728885422],
Cell[CellGroupData[{
Cell[962245, 26137, 294, 7, 31, "Input",ExpressionUUID->"b97746ec-5ad6-4fb6-b993-1cbf55fa46d6",
 CellID->223100995],
Cell[962542, 26146, 169, 3, 45, "Output",ExpressionUUID->"fc061a64-c600-4ae9-be34-ad3e6feb5bf4",
 CellID->7306324]
}, Open  ]],
Cell[962726, 26152, 290, 5, 75, "Text",ExpressionUUID->"4d1f9b7d-956e-4aa6-84db-101a1b182eb8",
 CellID->390819589]
}, Open  ]],
Cell[CellGroupData[{
Cell[963053, 26162, 181, 2, 66, "Subsubsection",ExpressionUUID->"c58b14ae-6e38-45c8-8689-9fbde9b75156",
 CellID->1499839797],
Cell[963237, 26166, 450, 7, 134, "Text",ExpressionUUID->"88f50db8-b94c-47f6-bd10-3a5ba3e68546",
 CellID->644419693],
Cell[963690, 26175, 207, 3, 45, "Text",ExpressionUUID->"b98c33ae-c2b2-4fd9-a0cc-81aded0b58c9",
 CellID->929461030],
Cell[963900, 26180, 402, 10, 54, "Input",ExpressionUUID->"eb916197-9277-4c90-90be-5407d782de9b",
 CellID->110529014],
Cell[CellGroupData[{
Cell[964327, 26194, 379, 9, 31, "Input",ExpressionUUID->"a96bda36-dffd-4d71-adc1-6587ec0e5644",
 CellID->272692407],
Cell[964709, 26205, 291, 6, 49, "Output",ExpressionUUID->"40ed195f-2436-49ac-9d3f-3aca6b12319a",
 CellID->818802385]
}, Open  ]],
Cell[965015, 26214, 200, 2, 45, "Text",ExpressionUUID->"6d2109f0-5f7f-4a58-92df-42f9b0eb28c6",
 CellID->1190498448],
Cell[965218, 26218, 535, 14, 54, "Input",ExpressionUUID->"96401381-286b-417a-ac66-0cc10674badc",
 CellID->610819497],
Cell[CellGroupData[{
Cell[965778, 26236, 377, 9, 31, "Input",ExpressionUUID->"b1e62536-ad51-46ca-abc4-453787c81f35",
 CellID->1259055799],
Cell[966158, 26247, 240, 5, 45, "Output",ExpressionUUID->"17046c6d-690a-4b18-8a17-92e7be1cc6e8",
 CellID->606536172]
}, Open  ]],
Cell[966413, 26255, 189, 2, 45, "Text",ExpressionUUID->"15cf0aae-ffb6-45bc-8cdc-af3adaa8513e",
 CellID->1186513109],
Cell[966605, 26259, 506, 13, 54, "Input",ExpressionUUID->"de66062f-509d-4247-9fc9-dc0695914d46",
 CellID->2063155218],
Cell[CellGroupData[{
Cell[967136, 26276, 607, 17, 31, "Input",ExpressionUUID->"54982cb0-49d9-4387-8d0c-39ee8e9899b8",
 CellID->585291613],
Cell[967746, 26295, 308, 8, 45, "Output",ExpressionUUID->"81cfbee5-a112-413b-95dc-2b3ad0b75262",
 CellID->2097091541]
}, Open  ]],
Cell[968069, 26306, 201, 2, 45, "Text",ExpressionUUID->"ed2082ed-1944-4d62-a088-bba2ae124d14",
 CellID->1531135002],
Cell[968273, 26310, 609, 17, 54, "Input",ExpressionUUID->"8caeb8ab-a208-4a08-9a4b-e0598a57c0c4",
 CellID->1098786681],
Cell[CellGroupData[{
Cell[968907, 26331, 368, 9, 31, "Input",ExpressionUUID->"5b540ddd-ac9b-4999-9897-c87cae17d8c6",
 CellID->4895737],
Cell[969278, 26342, 635, 20, 45, "Output",ExpressionUUID->"acd99ad3-c5cc-4fc3-830e-88f5e117d228",
 CellID->1583284827]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[969962, 26368, 251, 4, 66, "Subsubsection",ExpressionUUID->"387d5c7f-08df-407a-ab2f-c9c69bce2c95",
 CellID->309700675],
Cell[970216, 26374, 466, 7, 134, "Text",ExpressionUUID->"70fc6377-cf57-4637-aa4d-4ad1c379441c",
 CellID->1786368044],
Cell[970685, 26383, 1103, 20, 311, "Text",ExpressionUUID->"f524917f-352d-4dc6-98af-6413bc3d9fe4",
 CellID->1724988471],
Cell[971791, 26405, 161, 2, 38, "ItemNumbered",ExpressionUUID->"73886bfd-0092-449c-9c59-0d26f90118b2",
 CellID->2075606115],
Cell[971955, 26409, 322, 6, 75, "Text",ExpressionUUID->"854a3a99-7ad1-46df-8bf5-fb374d63d555",
 CellID->1000444024],
Cell[CellGroupData[{
Cell[972302, 26419, 452, 11, 54, "Input",ExpressionUUID->"779aae09-e2f5-40fb-aa90-7a6f27db7122",
 CellID->198890389],
Cell[972757, 26432, 312, 8, 45, "Output",ExpressionUUID->"5161210d-1a0b-4b8b-99ec-05eb197e62dd",
 CellID->1208097979]
}, Open  ]],
Cell[973084, 26443, 290, 5, 45, "Text",ExpressionUUID->"b2fc82cc-6a7e-4bc3-a22f-2d323d759833",
 CellID->1707367236],
Cell[CellGroupData[{
Cell[973399, 26452, 251, 5, 31, "Input",ExpressionUUID->"94b1556e-58c2-4e3d-905d-5fabccaf2f4f",
 CellID->1656893841],
Cell[973653, 26459, 253, 6, 45, "Output",ExpressionUUID->"2deaebf2-3a2f-41c4-bfe8-c7e102921412",
 CellID->1961812434]
}, Open  ]],
Cell[CellGroupData[{
Cell[973943, 26470, 345, 8, 31, "Input",ExpressionUUID->"a590bcd1-ce86-453b-a48a-f9e75cb4ddf2",
 CellID->598702030],
Cell[974291, 26480, 226, 5, 45, "Output",ExpressionUUID->"226fdc51-419e-43ff-8d1e-d29373876295",
 CellID->1335112869]
}, Open  ]],
Cell[974532, 26488, 503, 11, 104, "Text",ExpressionUUID->"1b6d6cea-333f-4678-b7b7-7dd0368d6f20",
 CellID->185361780],
Cell[975038, 26501, 226, 4, 45, "Text",ExpressionUUID->"93f33849-816b-4924-bc92-8bb9fe3f64b0",
 CellID->971526499],
Cell[CellGroupData[{
Cell[975289, 26509, 253, 5, 31, "Input",ExpressionUUID->"b7b2634d-5fb0-409c-9267-d05976f9753e",
 CellID->1719992689],
Cell[975545, 26516, 168, 3, 45, "Output",ExpressionUUID->"177b946e-0998-4c89-b805-00226a3f7355",
 CellID->752765219]
}, Open  ]],
Cell[975728, 26522, 500, 8, 134, "Text",ExpressionUUID->"36eee68f-6f58-4343-a7f8-3f603b92d95c",
 CellID->898871256],
Cell[976231, 26532, 664, 10, 193, "Text",ExpressionUUID->"66f4687c-62dc-4677-8996-ce056f3ed1f6",
 CellID->1776975286],
Cell[976898, 26544, 633, 10, 163, "Text",ExpressionUUID->"6209bb74-f75f-46bf-a7f8-e3bdc7d8689a",
 CellID->154445522],
Cell[977534, 26556, 173, 2, 38, "ItemNumbered",ExpressionUUID->"60f01171-5b8a-44d6-b264-68c74803a857",
 CellID->1172538514],
Cell[977710, 26560, 674, 10, 193, "Text",ExpressionUUID->"e393bf0f-e38f-4cc2-806a-afc918005aac",
 CellID->1544859926],
Cell[978387, 26572, 477, 11, 54, "Input",ExpressionUUID->"6221cc4f-73fd-4c0a-80a1-1883bd6deb9e",
 CellID->569517316],
Cell[978867, 26585, 478, 8, 134, "Text",ExpressionUUID->"0a11a488-2ab8-4834-bba3-32e684c0ba19",
 CellID->688838211],
Cell[CellGroupData[{
Cell[979370, 26597, 559, 14, 125, "Input",ExpressionUUID->"536edd49-4e0c-451a-baba-71938cbf2c54",
 CellID->749606646],
Cell[979932, 26613, 173, 3, 45, "Output",ExpressionUUID->"5692295d-400e-4a38-8f5b-cc0daeb3cece",
 CellID->1265393935]
}, Open  ]],
Cell[980120, 26619, 187, 2, 38, "ItemNumbered",ExpressionUUID->"d047d900-77ec-4afb-806f-f03c5b08783f",
 CellID->945309304],
Cell[980310, 26623, 693, 13, 163, "Text",ExpressionUUID->"48777e08-cb6d-432d-bb67-ed07196a7785",
 CellID->729451822],
Cell[981006, 26638, 477, 8, 104, "Text",ExpressionUUID->"b19a910c-7ded-45e9-82ca-501bcceda4f5",
 CellID->69177756],
Cell[CellGroupData[{
Cell[981508, 26650, 551, 14, 78, "Input",ExpressionUUID->"9e4a4204-3b68-43e9-b6e0-aba3e3fe520e",
 CellID->1730392016],
Cell[982062, 26666, 612, 11, 32, "Message",ExpressionUUID->"ac6fa740-4581-4f05-8617-4119aab5bd65",
 CellID->1760868291],
Cell[982677, 26679, 327, 9, 45, "Output",ExpressionUUID->"35d5545c-75da-48af-b176-6422eec062d5",
 CellID->441227530]
}, Open  ]],
Cell[983019, 26691, 162, 2, 45, "Text",ExpressionUUID->"6ec4992d-ebbe-49d9-ba7e-2bcc62023d74",
 CellID->450063619],
Cell[983184, 26695, 572, 14, 54, "Input",ExpressionUUID->"874d2154-c7da-4dc0-84cb-d0a12ea790da",
 CellID->2076549447],
Cell[983759, 26711, 164, 2, 45, "Text",ExpressionUUID->"b55de759-92ce-4cc1-8618-e61a0e578d65",
 CellID->1834435371],
Cell[CellGroupData[{
Cell[983948, 26717, 456, 11, 54, "Input",ExpressionUUID->"2af9c24d-fdd4-42de-8ca8-78a0505e049c",
 CellID->1716657815],
Cell[984407, 26730, 448, 13, 45, "Output",ExpressionUUID->"07e20bc4-925c-4a30-b459-77f76e087312",
 CellID->547977483]
}, Open  ]],
Cell[984870, 26746, 572, 9, 134, "Text",ExpressionUUID->"f42d7ad5-1edf-40b6-8459-2ed0e3043648",
 CellID->1447678445],
Cell[985445, 26757, 408, 7, 104, "Text",ExpressionUUID->"5c9dce4b-e681-4f98-a5e9-f8634ebcd731",
 CellID->820156422],
Cell[985856, 26766, 673, 19, 78, "Input",ExpressionUUID->"3697377a-874d-4603-8e9a-41b0587a854e",
 CellID->1064369427],
Cell[986532, 26787, 429, 7, 104, "Text",ExpressionUUID->"2d0df11f-f49f-40e9-9092-85c0fc1034e1",
 CellID->1678766591],
Cell[986964, 26796, 278, 6, 31, "Input",ExpressionUUID->"057156e2-b33a-47a7-be87-a0576c0505f4",
 CellID->925198732],
Cell[CellGroupData[{
Cell[987267, 26806, 353, 9, 31, "Input",ExpressionUUID->"296cbe47-8e0c-4fd3-ae37-b69c0bbcd722",
 CellID->850866593],
Cell[987623, 26817, 450, 13, 45, "Output",ExpressionUUID->"b421b440-aa01-4426-8950-cae9df34c6c0",
 CellID->507737147]
}, Open  ]],
Cell[CellGroupData[{
Cell[988110, 26835, 357, 9, 31, "Input",ExpressionUUID->"3bbe8da4-61f9-4a04-9e39-75dce27b6a19",
 CellID->589487816],
Cell[988470, 26846, 545, 17, 45, "Output",ExpressionUUID->"191fb8fc-12f6-4ff7-b35a-ca285b0fff1a",
 CellID->703278712]
}, Open  ]],
Cell[989030, 26866, 301, 6, 75, "Text",ExpressionUUID->"3c03c8ab-737a-4974-8c44-fdcc93617f6c",
 CellID->255319496],
Cell[989334, 26874, 447, 7, 134, "Text",ExpressionUUID->"a6a32c14-4d9a-41e7-a200-f10e0c86e01a",
 CellID->482442566],
Cell[989784, 26883, 322, 5, 75, "Text",ExpressionUUID->"36681b67-3e2e-4039-9614-aba34d5cb4b1",
 CellID->1887609315],
Cell[990109, 26890, 733, 11, 222, "Text",ExpressionUUID->"56719e6e-9d41-4340-a99d-9000c5e1505f",
 CellID->35510872]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[990891, 26907, 175, 2, 68, "Subsection",ExpressionUUID->"124069d5-3ddc-4166-807a-223e852f5ff9",
 CellID->1893493009],
Cell[991069, 26911, 738, 13, 163, "Text",ExpressionUUID->"cb2d5102-98d7-45e8-b039-129c69fd6131",
 CellID->2031688563],
Cell[991810, 26926, 788, 19, 163, "Text",ExpressionUUID->"6f8e6898-7f58-415d-8a86-a43b1819996c",
 CellID->1892002975],
Cell[CellGroupData[{
Cell[992623, 26949, 165, 2, 66, "Subsubsection",ExpressionUUID->"5a59983e-9d04-4466-bd58-4440ed488c76",
 CellID->103839508],
Cell[992791, 26953, 714, 14, 193, "Text",ExpressionUUID->"3b647f4e-51c5-43bc-862d-a07419320751",
 CellID->1473889592],
Cell[993508, 26969, 326, 6, 75, "Text",ExpressionUUID->"f07011fc-b990-4c10-8f29-fdff4ed816d4",
 CellID->425557258],
Cell[993837, 26977, 449, 11, 54, "Input",ExpressionUUID->"15526fb0-61a2-4571-9fd6-40f43d7fa5bd",
 CellID->123580241],
Cell[994289, 26990, 163, 2, 45, "Text",ExpressionUUID->"f1ca5c4c-c6d9-4092-88fd-47e6136261a4",
 CellID->805693218],
Cell[CellGroupData[{
Cell[994477, 26996, 396, 10, 31, "Input",ExpressionUUID->"1f7e9d46-3949-4be8-a387-db6926050b14",
 CellID->629890514],
Cell[994876, 27008, 225, 5, 45, "Output",ExpressionUUID->"0df8788d-c1a7-4e0c-b35b-6418343cd465",
 CellID->2120150406]
}, Open  ]],
Cell[995116, 27016, 874, 14, 252, "Text",ExpressionUUID->"a31e187d-1c13-4e48-96ae-082d64afab8c",
 CellID->171718971],
Cell[995993, 27032, 566, 14, 54, "Input",ExpressionUUID->"19ba4828-eff1-4b60-b168-cb479f0bf462",
 CellID->2056910105],
Cell[996562, 27048, 164, 2, 45, "Text",ExpressionUUID->"0929d7df-b64e-440a-a516-5b8af8a21f90",
 CellID->807478933],
Cell[CellGroupData[{
Cell[996751, 27054, 478, 12, 31, "Input",ExpressionUUID->"2f52aa12-4986-4ffb-ab31-3c396c74f4f2",
 CellID->1933085226],
Cell[997232, 27068, 497, 12, 45, "Output",ExpressionUUID->"0ae13c9e-82f1-4b9f-b80e-026e27049cf6",
 CellID->1565207721]
}, Open  ]],
Cell[997744, 27083, 298, 5, 75, "Text",ExpressionUUID->"7448bc79-1dee-4001-aed0-2fe515c6b607",
 CellID->1059498259]
}, Open  ]],
Cell[CellGroupData[{
Cell[998079, 27093, 165, 2, 66, "Subsubsection",ExpressionUUID->"84c7064f-ff97-4854-a65a-4924d8d7abcf",
 CellID->1139015612],
Cell[998247, 27097, 634, 11, 163, "Text",ExpressionUUID->"0c4e43e0-af97-4036-846e-f3ebee9201a5",
 CellID->766161526],
Cell[998884, 27110, 326, 6, 75, "Text",ExpressionUUID->"bb373c0f-9e8c-4de1-b6cd-3b6de9b1799a",
 CellID->1937232308],
Cell[999213, 27118, 211, 2, 38, "ItemNumbered",ExpressionUUID->"286eac7b-c2fe-492f-95b0-b40e75f622a2",
 CellID->1962372648],
Cell[999427, 27122, 226, 3, 45, "Text",ExpressionUUID->"ba1fe1dc-295e-4e18-84e2-f81eae893bb7",
 CellID->543244310],
Cell[999656, 27127, 424, 7, 104, "Text",ExpressionUUID->"88df31d1-3488-4b22-9467-a1d2e34280c6",
 CellID->1907327353],
Cell[1000083, 27136, 660, 18, 101, "Input",ExpressionUUID->"e8470219-f699-47f8-b96a-8ed227522318",
 CellID->160316800],
Cell[1000746, 27156, 246, 5, 75, "Text",ExpressionUUID->"39257aaa-4f67-4979-b774-ebcfd0f47f24",
 CellID->1465646732],
Cell[CellGroupData[{
Cell[1001017, 27165, 261, 5, 31, "Input",ExpressionUUID->"743e4d44-ee09-4693-a29d-8b3006502059",
 CellID->701239205],
Cell[1001281, 27172, 386, 8, 28, "Print",ExpressionUUID->"cbcfcc0f-6d0f-4d93-829d-f182dcebc441",
 CellID->257526558],
Cell[1001670, 27182, 367, 8, 45, "Output",ExpressionUUID->"45b09dc6-d7a4-4c61-8d4f-a2550e91aed3",
 CellID->1069311601]
}, Open  ]],
Cell[1002052, 27193, 255, 5, 75, "Text",ExpressionUUID->"a123b44a-a796-4447-8520-07244a3abac3",
 CellID->1859559276],
Cell[CellGroupData[{
Cell[1002332, 27202, 257, 6, 31, "Input",ExpressionUUID->"d8832562-6921-4053-baf5-df5dca74f68f",
 CellID->1283236941],
Cell[1002592, 27210, 386, 8, 28, "Print",ExpressionUUID->"1079d230-7071-471c-a9d1-9c8ff2af5d91",
 CellID->3892930]
}, Open  ]],
Cell[1002993, 27221, 403, 7, 75, "Text",ExpressionUUID->"c8100ab9-332c-4fe4-92d9-01a8c3918e6d",
 CellID->1003965100],
Cell[1003399, 27230, 1339, 37, 195, "Input",ExpressionUUID->"60ab47ff-b8b8-419e-b80a-5a2aee6cc856",
 CellID->1594555138],
Cell[1004741, 27269, 312, 5, 75, "Text",ExpressionUUID->"c10a2242-9e4e-4db0-bdc9-980bc029d0b6",
 CellID->1808681414],
Cell[CellGroupData[{
Cell[1005078, 27278, 261, 5, 31, "Input",ExpressionUUID->"70fa14f3-08e2-4c50-8b1c-7bb5bcb08c97",
 CellID->1231878828],
Cell[1005342, 27285, 328, 7, 28, "Print",ExpressionUUID->"51fc514b-2bee-46e1-8bcf-99dc290ecf78",
 CellID->1049684086],
Cell[1005673, 27294, 366, 8, 45, "Output",ExpressionUUID->"ff6b3619-c63f-47bb-9453-9399f0a20b70",
 CellID->462273297]
}, Open  ]],
Cell[1006054, 27305, 446, 8, 104, "Text",ExpressionUUID->"d43d5339-4264-44d5-8a50-7c00feed3b21",
 CellID->1978951480],
Cell[CellGroupData[{
Cell[1006525, 27317, 316, 7, 31, "Input",ExpressionUUID->"81aa892b-487d-46e8-bdba-3462681c25c3",
 CellID->799089861],
Cell[1006844, 27326, 266, 5, 28, "Print",ExpressionUUID->"273f5edd-f737-4556-aef6-04a6ec592c1f",
 CellID->1935710702],
Cell[1007113, 27333, 369, 8, 45, "Output",ExpressionUUID->"e107e08c-6189-45c8-aa66-67f921fe3bfc",
 CellID->1260000111]
}, Open  ]],
Cell[1007497, 27344, 235, 4, 45, "Text",ExpressionUUID->"8537ad92-dc68-466c-a721-0e862c627fbc",
 CellID->485622510],
Cell[1007735, 27350, 416, 8, 105, "Text",ExpressionUUID->"2a8861b5-5d88-4a8e-bb2b-cb95e0135819",
 CellID->287141639],
Cell[1008154, 27360, 468, 7, 134, "Text",ExpressionUUID->"104cfe1a-d819-4e02-91ff-71eacca76b02",
 CellID->1031961314],
Cell[1008625, 27369, 563, 9, 134, "Text",ExpressionUUID->"81619ea2-4382-441e-9044-ae3fa0104a39",
 CellID->807479854],
Cell[1009191, 27380, 402, 7, 75, "Text",ExpressionUUID->"f47f2163-af48-4f89-a856-08e2418d4a17",
 CellID->1735521531],
Cell[CellGroupData[{
Cell[1009618, 27391, 288, 6, 31, "Input",ExpressionUUID->"d379f309-0d45-4e48-82bf-e461ba8f0d47",
 CellID->1304966428],
Cell[1009909, 27399, 845, 15, 91, "Output",ExpressionUUID->"8b517af3-9983-43fb-98be-50b848cdee0a",
 CellID->637690881]
}, Open  ]],
Cell[1010769, 27417, 521, 8, 163, "Text",ExpressionUUID->"47d7feb7-44c6-4b10-b678-208905207437",
 CellID->1727238437],
Cell[1011293, 27427, 1028, 16, 340, "Text",ExpressionUUID->"6be8d404-9824-44f7-b7bd-27e191e63337",
 CellID->1632350730],
Cell[1012324, 27445, 452, 7, 104, "Text",ExpressionUUID->"9cd2135e-1cdf-4e41-ba1c-a3c129f560b6",
 CellID->255716432],
Cell[1012779, 27454, 154, 2, 38, "ItemNumbered",ExpressionUUID->"c1490da1-1400-48b9-8687-31a90f912cde",
 CellID->2130141224],
Cell[1012936, 27458, 525, 8, 163, "Text",ExpressionUUID->"4c895ab7-9bd7-49fc-81e6-1152b07cd1f5",
 CellID->583672631],
Cell[1013464, 27468, 177, 2, 38, "ItemNumbered",ExpressionUUID->"fc7b2e72-df76-4224-bea0-f0d2ec90c302",
 CellID->785411484],
Cell[1013644, 27472, 562, 9, 163, "Text",ExpressionUUID->"e716d42d-b57b-48c2-ac69-5fdcae6d54c3",
 CellID->1976317126],
Cell[1014209, 27483, 724, 11, 222, "Text",ExpressionUUID->"f48b0011-ceaa-4104-be94-1668ebd89f4d",
 CellID->1288035659],
Cell[1014936, 27496, 1920, 53, 312, "Input",ExpressionUUID->"0089906b-15df-4eb4-b91b-69f7b91e0228",
 CellID->1606515786],
Cell[1016859, 27551, 170, 2, 45, "Text",ExpressionUUID->"f236337a-69eb-4e0e-a48d-308653d9cadb",
 CellID->1809091476],
Cell[CellGroupData[{
Cell[1017054, 27557, 264, 5, 31, "Input",ExpressionUUID->"6ba23798-e45c-4405-a7e7-4d9a602de6ed",
 CellID->1284613140],
Cell[1017321, 27564, 540, 12, 28, "Print",ExpressionUUID->"4a109f06-3120-431f-92e6-a69cdb796c18",
 CellID->135079271],
Cell[1017864, 27578, 307, 7, 45, "Output",ExpressionUUID->"36411a8d-e090-4877-84e9-912d26c91edf",
 CellID->387092818]
}, Open  ]],
Cell[CellGroupData[{
Cell[1018208, 27590, 321, 7, 31, "Input",ExpressionUUID->"9f3a7044-d09a-4e9f-9fd3-07cf0e21d505",
 CellID->184308231],
Cell[1018532, 27599, 454, 9, 28, "Print",ExpressionUUID->"070253fd-f506-4113-8794-3a243c236ab9",
 CellID->1954209620],
Cell[1018989, 27610, 245, 5, 45, "Output",ExpressionUUID->"1dc4a9ee-4bb4-4f7d-9c1f-33d015a50ed6",
 CellID->786186122]
}, Open  ]],
Cell[CellGroupData[{
Cell[1019271, 27620, 371, 8, 31, "Input",ExpressionUUID->"c6e9a87f-94e3-439d-ba25-3bdb223dffc9",
 CellID->1195575977],
Cell[1019645, 27630, 246, 5, 45, "Output",ExpressionUUID->"9fe86546-13fb-4522-a938-3f2734b217a1",
 CellID->1300085824]
}, Open  ]],
Cell[1019906, 27638, 916, 13, 281, "Text",ExpressionUUID->"e85600e0-3141-4575-9aec-5bd553f9aa24",
 CellID->385956230],
Cell[1020825, 27653, 159, 2, 38, "ItemNumbered",ExpressionUUID->"63ff2522-96fd-433e-8b09-21a36e7fda36",
 CellID->1395672107],
Cell[1020987, 27657, 1078, 16, 311, "Text",ExpressionUUID->"99a4ee0a-18fa-41ab-9efb-12e8ca561a37",
 CellID->97226168],
Cell[1022068, 27675, 194, 2, 38, "ItemNumbered",ExpressionUUID->"be73fccb-dafa-44d2-a5b8-86cabebc7577",
 CellID->889870181],
Cell[1022265, 27679, 607, 9, 134, "Text",ExpressionUUID->"f913eb3b-2fa5-4956-9f7c-75a398ef2173",
 CellID->1774374545],
Cell[CellGroupData[{
Cell[1022897, 27692, 459, 11, 54, "Input",ExpressionUUID->"200c82dc-8d97-418b-9758-69ab956879b3",
 CellID->1018175122],
Cell[1023359, 27705, 302, 7, 45, "Output",ExpressionUUID->"a42d6df0-8333-4676-b39d-d96d21e038ef",
 CellID->1729072078]
}, Open  ]],
Cell[1023676, 27715, 421, 7, 104, "Text",ExpressionUUID->"7cce2e88-65d0-49cc-8787-38472821a0ca",
 CellID->765703742],
Cell[CellGroupData[{
Cell[1024122, 27726, 309, 8, 31, "Input",ExpressionUUID->"1f9aa726-86e3-4458-a8b6-e431f95915a2",
 CellID->1452527662],
Cell[1024434, 27736, 302, 7, 45, "Output",ExpressionUUID->"279cceec-3a5c-4c33-a705-b942d0ecfbcc",
 CellID->91715422]
}, Open  ]],
Cell[1024751, 27746, 383, 6, 104, "Text",ExpressionUUID->"bf247494-8565-4119-a832-a03fa3708d75",
 CellID->2127218786],
Cell[CellGroupData[{
Cell[1025159, 27756, 390, 9, 54, "Input",ExpressionUUID->"a84f5f06-095e-4f8c-889e-6e927e27e4e7",
 CellID->1627623953],
Cell[1025552, 27767, 309, 8, 45, "Output",ExpressionUUID->"ef9e217e-e28c-4965-9907-1e8277aaecdb",
 CellID->1783670848]
}, Open  ]],
Cell[1025876, 27778, 232, 4, 45, "Text",ExpressionUUID->"ec9b6760-fbec-4199-a8e1-345ffe29a44f",
 CellID->1192314957],
Cell[CellGroupData[{
Cell[1026133, 27786, 293, 6, 31, "Input",ExpressionUUID->"ec4ae2ba-5095-4600-8246-35a9522d6a20",
 CellID->459119909],
Cell[1026429, 27794, 412, 8, 32, "Message",ExpressionUUID->"0d0aeb50-d20a-421e-af37-52ea0738aba0",
 CellID->1542794144],
Cell[1026844, 27804, 275, 6, 45, "Output",ExpressionUUID->"4bd557ac-3b3b-4889-b37b-de111a3e30a4",
 CellID->1023624330]
}, Open  ]],
Cell[1027134, 27813, 249, 5, 45, "Text",ExpressionUUID->"c281149b-b111-4175-8660-caed86ad9c73",
 CellID->1452396913],
Cell[1027386, 27820, 831, 12, 252, "Text",ExpressionUUID->"23b47612-ae3c-4410-b6e5-48cacd554b88",
 CellID->864226110],
Cell[1028220, 27834, 987, 14, 281, "Text",ExpressionUUID->"193b4847-6444-4f58-ba08-fb11269c06c7",
 CellID->1081421755],
Cell[1029210, 27850, 885, 13, 252, "Text",ExpressionUUID->"ee6040fe-8d66-4a9c-8e3c-731649a67bb9",
 CellID->783877448],
Cell[1030098, 27865, 472, 7, 134, "Text",ExpressionUUID->"2da42291-8a69-4ae8-955d-47ae0e66dab7",
 CellID->1709354917],
Cell[1030573, 27874, 1354, 20, 429, "Text",ExpressionUUID->"0c7baac0-c4a4-4089-bfa7-f57588fccf29",
 CellID->95798786],
Cell[1031930, 27896, 373, 7, 75, "Text",ExpressionUUID->"05864cd2-288f-4156-9a90-fbe6211cca78",
 CellID->468127010],
Cell[1032306, 27905, 564, 15, 78, "Input",ExpressionUUID->"f392f838-6546-4956-968e-386162795f0d",
 CellID->470830510],
Cell[1032873, 27922, 168, 2, 45, "Text",ExpressionUUID->"cca8768d-8457-4c9e-b98c-d200952e3974",
 CellID->1380295544],
Cell[CellGroupData[{
Cell[1033066, 27928, 226, 4, 31, "Input",ExpressionUUID->"4d904228-f3d0-4b9d-9648-50e00428583e",
 CellID->1109096680],
Cell[1033295, 27934, 306, 7, 45, "Output",ExpressionUUID->"7396bf03-3433-4176-9e3a-cc6b9bdb3a50",
 CellID->1714149669]
}, Open  ]],
Cell[CellGroupData[{
Cell[1033638, 27946, 310, 7, 31, "Input",ExpressionUUID->"2db5a1fd-aab0-4c60-8585-d7f9d37d9e89",
 CellID->14174549],
Cell[1033951, 27955, 430, 9, 32, "Message",ExpressionUUID->"0f0e520f-7480-494a-aedf-416e7336e93b",
 CellID->943377095],
Cell[1034384, 27966, 235, 5, 45, "Output",ExpressionUUID->"71f9c5b5-cc10-44db-9fd4-3b22f57f6377",
 CellID->467069864]
}, Open  ]],
Cell[CellGroupData[{
Cell[1034656, 27976, 226, 4, 31, "Input",ExpressionUUID->"ed53920d-a3b5-4b85-b4ca-dda7982752e5",
 CellID->1690606650],
Cell[1034885, 27982, 306, 7, 45, "Output",ExpressionUUID->"1b7744f5-3cf5-4e5d-8bcc-636daa129772",
 CellID->1582605766]
}, Open  ]],
Cell[1035206, 27992, 446, 7, 134, "Text",ExpressionUUID->"a1c82a68-34d4-4bf8-a227-c94c522ce19a",
 CellID->122657420],
Cell[1035655, 28001, 249, 5, 45, "Text",ExpressionUUID->"58285084-3fef-4562-9037-49d813b1c647",
 CellID->1721217062],
Cell[CellGroupData[{
Cell[1035929, 28010, 306, 6, 54, "Input",ExpressionUUID->"24ec23f6-f8d3-48c2-a6bb-b46e80ed0c82",
 CellID->536353443],
Cell[1036238, 28018, 309, 8, 45, "Output",ExpressionUUID->"2948769f-571a-4550-a2f8-b2af13c57c2b",
 CellID->1702816662]
}, Open  ]],
Cell[1036562, 28029, 207, 2, 45, "Text",ExpressionUUID->"3f71385d-a505-47f4-8737-17e64ca4cff5",
 CellID->1872558312],
Cell[CellGroupData[{
Cell[1036794, 28035, 308, 6, 54, "Input",ExpressionUUID->"f20e17ce-bdfc-4e6c-9fd2-088c49d7c798",
 CellID->1137266522],
Cell[1037105, 28043, 187, 4, 45, "Output",ExpressionUUID->"45c550a9-f275-430d-8861-181f85efe4ad",
 CellID->1983131595]
}, Open  ]],
Cell[1037307, 28050, 232, 5, 45, "Text",ExpressionUUID->"4dacbf82-fc72-4cbd-9b04-ceeb2758540f",
 CellID->1546515725],
Cell[1037542, 28057, 311, 5, 75, "Text",ExpressionUUID->"c48301b2-5a1b-497f-94a9-6cfb489a8ffd",
 CellID->1615536414]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1037902, 28068, 149, 2, 68, "Subsection",ExpressionUUID->"09deae97-de45-4a71-aec8-0ea926474c54",
 CellID->1207535444],
Cell[1038054, 28072, 656, 13, 163, "Text",ExpressionUUID->"c65a9476-a092-4225-9867-53bb2f482529",
 CellID->876680529],
Cell[1038713, 28087, 479, 8, 134, "Text",ExpressionUUID->"d5bf2377-9c7b-4f4d-8ed4-3aa1b8017fba",
 CellID->222378549],
Cell[1039195, 28097, 476, 8, 134, "Text",ExpressionUUID->"e68b830c-da5b-4aef-bfea-d7f162e4221a",
 CellID->451952335],
Cell[1039674, 28107, 355, 6, 104, "Text",ExpressionUUID->"918ba643-f3d9-427c-8303-e61a6e068591",
 CellID->2061432338],
Cell[1040032, 28115, 482, 8, 134, "Text",ExpressionUUID->"4824ccf0-bb04-4ddf-a7e7-f5762404fc25",
 CellID->1664223593],
Cell[1040517, 28125, 486, 9, 134, "Text",ExpressionUUID->"57697d31-6cdb-46f3-a98a-38ec9190678f",
 CellID->169145008],
Cell[1041006, 28136, 719, 11, 222, "Text",ExpressionUUID->"01356f4e-67a3-4fd3-9b08-efa324f43a72",
 CellID->693934285],
Cell[1041728, 28149, 357, 6, 104, "Text",ExpressionUUID->"19e0001e-0d82-4724-9a74-1ac4fa938606",
 CellID->1649847309]
}, Open  ]]
}, Open  ]]
}
]
*)

